///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM    19/Aug/2013  09:22:53 /
// Copyright 1999-2011 IAR Systems AB.                                        /
//                                                                            /
//    Cpu mode     =  thumb                                                   /
//    Endian       =  little                                                  /
//    Source file  =  F:\k60程序\0815\src\main.c                              /
//    Command line =  F:\k60程序\0815\src\main.c -D IAR -D TWR_K60N512 -lCN   /
//                    F:\k60程序\0815\bin\Flash\List\ -lB                     /
//                    F:\k60程序\0815\bin\Flash\List\ -o                      /
//                    F:\k60程序\0815\bin\Flash\Obj\ --no_cse --no_unroll     /
//                    --no_inline --no_code_motion --no_tbaa --no_clustering  /
//                    --no_scheduling --debug --endian=little                 /
//                    --cpu=Cortex-M4 -e --fpu=None --dlib_config             /
//                    E:\学习程序\arm\INC\c\DLib_Config_Normal.h -I           /
//                    F:\k60程序\0815\src\Sources\H\ -I                       /
//                    F:\k60程序\0815\src\Sources\H\Component_H\ -I           /
//                    F:\k60程序\0815\src\Sources\H\Frame_H\ -Ol              /
//                    --use_c++_inline                                        /
//    List file    =  F:\k60程序\0815\bin\Flash\List\main.s                   /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME main

        #define SHT_PROGBITS 0x1

        EXTERN LCD_CLS
        EXTERN LCD_CLS2
        EXTERN LCD_Init
        EXTERN LCD_P6x8Str
        EXTERN LCD_P6x8Str_1
        EXTERN LCD_P6x8Str_3
        EXTERN LCD_P6x8Str_5
        EXTERN LCD_P6x8Str_FuHao_3
        EXTERN LCD_PutPixel
        EXTERN __aeabi_memclr4
        EXTERN __aeabi_memcpy4
        EXTERN disable_irq
        EXTERN enable_irq
        EXTERN gpio_Get
        EXTERN gpio_ctrl
        EXTERN gpio_init
        EXTERN uart_send1

        PUBLIC BW
        PUBLIC BW2
        PUBLIC BW3
        PUBLIC BW4
        PUBLIC BW_filter
        PUBLIC CH451_GetKeyValue
        PUBLIC CH451_WriteCommand
        PUBLIC CH451_ini
        PUBLIC Car_Speed
        PUBLIC DMA0_Init
        PUBLIC DMA_CHO_ISR
        PUBLIC D_High
        PUBLIC D_Low
        PUBLIC D_Mid
        PUBLIC D_piancha_high
        PUBLIC D_piancha_low
        PUBLIC D_piancha_mid
        PUBLIC Delay
        PUBLIC Duo_Ji_PD
        PUBLIC E
        PUBLIC END_0
        PUBLIC END_Line
        PUBLIC END_Line_2
        PUBLIC Ec
        PUBLIC Ec_old
        PUBLIC Ec_old_old
        PUBLIC FTM2_QUAD_Init
        PUBLIC GetKeyValue
        PUBLIC H_High
        PUBLIC H_Low
        PUBLIC H_Mid
        PUBLIC High_Wu
        PUBLIC High_You
        PUBLIC IO_Init
        PUBLIC JIANPAN_ini
        PUBLIC Judage_left_hang
        PUBLIC Judage_left_lie
        PUBLIC Judage_right_hang
        PUBLIC Judage_right_lie
        PUBLIC Judge_slope
        PUBLIC Judge_startline2
        PUBLIC KeyCode
        PUBLIC KeyValue
        PUBLIC LCD_P1
        PUBLIC LCD_P2
        PUBLIC LCD_P3
        PUBLIC LPTMR_INTERRUPT
        PUBLIC LianJie
        PUBLIC LianJie_center
        PUBLIC Mid_Wu
        PUBLIC Motor
        PUBLIC Motor_control
        PUBLIC P_High
        PUBLIC P_Low
        PUBLIC P_Mid
        PUBLIC P_timer
        PUBLIC SCI
        PUBLIC SCI_center
        PUBLIC Servo
        PUBLIC Servo_D_zhidao
        PUBLIC Servo_Left
        PUBLIC Servo_Middle
        PUBLIC Servo_P_zhidao
        PUBLIC Servo_Right
        PUBLIC Servo_value
        PUBLIC Servo_value_old
        PUBLIC Start_Detection
        PUBLIC Start_Detection_2
        PUBLIC Start_Detection_3
        PUBLIC Start_Detection_4
        PUBLIC Start_Line
        PUBLIC T_High
        PUBLIC T_Low
        PUBLIC T_Mid
        PUBLIC T_P1
        PUBLIC T_P2
        PUBLIC T_P28
        PUBLIC T_P4
        PUBLIC UART0_Init
        PUBLIC Very_straight
        PUBLIC X_LineBend
        PUBLIC Yu_Zhi
        PUBLIC abs
        PUBLIC bianma
        PUBLIC bianyan
        PUBLIC bianyan2
        PUBLIC bitdata
        PUBLIC bitnum
        PUBLIC black_max_1
        PUBLIC black_max_2
        PUBLIC black_max_3
        PUBLIC black_max_a1
        PUBLIC black_max_a2
        PUBLIC black_max_a3
        PUBLIC black_max_b1
        PUBLIC black_max_b2
        PUBLIC black_max_b3
        PUBLIC black_max_c1
        PUBLIC black_max_c2
        PUBLIC black_max_c3
        PUBLIC black_max_d1
        PUBLIC black_max_d2
        PUBLIC black_max_d3
        PUBLIC car_speed
        PUBLIC center
        PUBLIC center_filter
        PUBLIC choose_PD
        PUBLIC `data`
        PUBLIC data_deal
        PUBLIC data_table
        PUBLIC deal_flag
        PUBLIC delays
        PUBLIC disable_pit_interrupt
        PUBLIC enable_pit_interrupt
        PUBLIC endline
        PUBLIC endline_F
        PUBLIC find_bianyan
        PUBLIC find_center_max
        PUBLIC find_center_min
        PUBLIC finish
        PUBLIC get_counter_value
        PUBLIC get_irkey
        PUBLIC get_speed
        PUBLIC `high`
        PUBLIC high_0
        PUBLIC high_now
        PUBLIC high_now_0
        PUBLIC high_old
        PUBLIC hw_FTM0_init
        PUBLIC hw_FTM1_init
        PUBLIC hw_pit_init
        PUBLIC i_old
        PUBLIC imagerow
        PUBLIC ir_deal
        PUBLIC irkey
        PUBLIC irq_count
        PUBLIC irq_flag
        PUBLIC judage_shizi
        PUBLIC judage_xuxian
        PUBLIC judge_locus_0
        PUBLIC judge_small_S
        PUBLIC left_ceshi
        PUBLIC limit
        PUBLIC line
        PUBLIC line_max
        PUBLIC line_min
        PUBLIC `low`
        PUBLIC low_0
        PUBLIC low_now
        PUBLIC low_now_0
        PUBLIC low_old
        PUBLIC lptmr_32khz_input
        PUBLIC lptmr_clear_registers
        PUBLIC lptmr_external_clk_input
        PUBLIC lptmr_internal_ref_input
        PUBLIC lptmr_interrupt
        PUBLIC lptmr_isr_example
        PUBLIC lptmr_lpo_input
        PUBLIC lptmr_prescale
        PUBLIC lptmr_pulse_counter
        PUBLIC lptmr_time_counter
        PUBLIC m
        PUBLIC m_zhi
        PUBLIC main
        PUBLIC max
        PUBLIC mid
        PUBLIC mid_0
        PUBLIC mid_now
        PUBLIC mid_now_0
        PUBLIC mid_old
        PUBLIC min
        PUBLIC mo_hu
        PUBLIC motor_fuzzy
        PUBLIC pit0_isr
        PUBLIC pit1_isr
        PUBLIC pit2_isr
        PUBLIC pllinit180M
        PUBLIC point
        PUBLIC porta_isr
        PUBLIC portb_isr
        PUBLIC portc_isr
        PUBLIC position_Save
        PUBLIC position_ceshi
        PUBLIC position_diff
        PUBLIC position_now
        PUBLIC position_now_D
        PUBLIC position_now_P
        PUBLIC position_now_low
        PUBLIC position_now_low_P
        PUBLIC position_old
        PUBLIC position_old_ceshi
        PUBLIC position_old_old
        PUBLIC position_old_old_old
        PUBLIC print_d
        PUBLIC print_d1
        PUBLIC print_dall
        PUBLIC print_fall
        PUBLIC print_hell
        PUBLIC print_t
        PUBLIC print_t1
        PUBLIC print_tall
        PUBLIC pulse
        PUBLIC pulse_old
        PUBLIC pulse_old_old
        PUBLIC ramp_flag
        PUBLIC receive_flag
        PUBLIC right_ceshi
        PUBLIC row
        PUBLIC row_F
        PUBLIC s_old
        PUBLIC sai_dao_lei_xing
        PUBLIC see_distance
        PUBLIC servo
        PUBLIC servo_d
        PUBLIC set_speed
        PUBLIC slope_flag
        PUBLIC speed_Very_straight
        PUBLIC speed_b
        PUBLIC speed_control
        PUBLIC speed_cut_timer
        PUBLIC speed_fuzzy
        PUBLIC speed_m
        PUBLIC speed_ms
        PUBLIC speed_now
        PUBLIC speed_s
        PUBLIC speed_top
        PUBLIC stages3
        PUBLIC stages_D
        PUBLIC stages_P
        PUBLIC stages_low_P
        PUBLIC start_18_25_2
        PUBLIC start_25_35_2
        PUBLIC start_35_45_2
        PUBLIC start_45_55_2
        PUBLIC start_line2
        PUBLIC start_startline
        PUBLIC start_xian
        PUBLIC startflag
        PUBLIC startline
        PUBLIC startline_F
        PUBLIC `sub`
        PUBLIC sub_e
        PUBLIC subjection_k
        PUBLIC threshold
        PUBLIC time_m
        PUBLIC timer
        PUBLIC topline
        PUBLIC video
        PUBLIC video2
        PUBLIC weizhi
        PUBLIC weizhi_old
        PUBLIC weizhi_old_old
        PUBLIC xiaoS_flag
        PUBLIC xie_shizi
        PUBLIC xie_shizi_flag_1
        PUBLIC xie_shizi_flag_2
        PUBLIC xie_shizi_flag_3
        PUBLIC xu1
        PUBLIC xu2
        PUBLIC xu3
        PUBLIC xu4
        PUBLIC xu_xian2
        PUBLIC xu_xian_bu
        PUBLIC xu_xian_cai
        PUBLIC xu_xian_find
        PUBLIC zhidao_Wu
        PUBLIC zhidao_flag

// F:\k60程序\0815\src\main.c
//    1 
//    2 
//    3 //使用B0~B7采集数字摄像头OV7620 8位灰度输入
//    4 //A24引脚设置为GPIO模式，下降沿中断,场中断
//    5 //B10引脚设置为GPIO模式，上升沿中断,行中断
//    6 //B11引脚设置为GPIO模式，像素同步脉冲pclk，4分频后，上升沿触发DMA请求
//    7 //共采集H行，每行V个点，dma传送到video数组
//    8 //本代码仅供个人学习使用，请勿用于其他用途
//    9 //舵机5V电压250Hz    电机10KHz  3.3V   摄像头5V供电
//   10   
//   11 /********************************************************/
//   12         //给某个引脚设置高低电平的方法
//   13         //PORTD_PCR10=PORT_PCR_MUX(1);                 选择GPIO模式
//   14         //GPIOD_PDDR=GPIO_PDDR_PDD(GPIO_PIN(10));      选择输出模式
//   15         //GPIOD_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(10));  高电平
//   16         //GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(14));  低电平
//   17         /********************************************************/
//   18 #include <stdio.h>
//   19 #include "includes.h"
//   20 #include "MK60N512VMD100.h"
//   21 #include "uart.h"
//   22 #include "keyboard.h"

        SECTION `.data`:DATA:REORDER:NOROOT(2)
// __absolute uint8 KeyCode[16]
KeyCode:
        DATA
        DC8 64, 65, 66, 67, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91

        SECTION `.data`:DATA:REORDER:NOROOT(0)
// __absolute uint8 KeyValue
KeyValue:
        DATA
        DC8 50

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
// __absolute uint8 GetKeyValue
GetKeyValue:
        DS8 1

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void Delay(unsigned int)
Delay:
        MOVS     R1,#+0
        B.N      ??Delay_0
??Delay_1:
        ADDS     R1,R1,#+1
??Delay_0:
        CMP      R1,R0, LSL #+1
        BCC.N    ??Delay_1
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void CH451_WriteCommand(uint32)
CH451_WriteCommand:
        PUSH     {R3-R5,LR}
        MOVS     R4,R0
        MOVS     R5,#+12
        MOVS     R2,#+0
        MOVS     R1,#+2
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R0,#+0
        MOVS     R5,R0
        B.N      ??CH451_WriteCommand_0
??CH451_WriteCommand_1:
        ANDS     R2,R4,#0x1
        MOVS     R1,#+1
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R2,#+0
        MOVS     R1,#+0
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        LSRS     R4,R4,#+1
        MOVS     R2,#+1
        MOVS     R1,#+0
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        ADDS     R5,R5,#+1
??CH451_WriteCommand_0:
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R5,#+12
        BCC.N    ??CH451_WriteCommand_1
        MOVS     R2,#+1
        MOVS     R1,#+2
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void CH451_GetKeyValue(void)
CH451_GetKeyValue:
        PUSH     {R3-R5,LR}
        MOVS     R5,#+7
        LDR.W    R0,??DataTable21_1
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        MOVS     R2,#+0
        MOVS     R1,#+2
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R4,#+0
        B.N      ??CH451_GetKeyValue_0
??CH451_GetKeyValue_1:
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        ANDS     R2,R5,#0x1
        MOVS     R1,#+1
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R2,#+0
        MOVS     R1,#+0
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        LSRS     R5,R5,#+1
        MOVS     R2,#+1
        MOVS     R1,#+0
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        ADDS     R4,R4,#+1
??CH451_GetKeyValue_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+4
        BCC.N    ??CH451_GetKeyValue_1
        MOVS     R2,#+1
        MOVS     R1,#+2
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R4,#+0
        B.N      ??CH451_GetKeyValue_2
??CH451_GetKeyValue_3:
        LDR.W    R0,??DataTable21_1
        LDRB     R0,[R0, #+0]
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable21_1
        STRB     R0,[R1, #+0]
        MOVS     R1,#+3
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_Get
        LDR.W    R1,??DataTable21_1
        LDRB     R1,[R1, #+0]
        ORRS     R0,R0,R1
        LDR.W    R1,??DataTable21_1
        STRB     R0,[R1, #+0]
        MOVS     R2,#+1
        MOVS     R1,#+0
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R2,#+0
        MOVS     R1,#+0
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        ADDS     R4,R4,#+1
??CH451_GetKeyValue_2:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+7
        BCC.N    ??CH451_GetKeyValue_3
        MOVS     R4,#+0
        B.N      ??CH451_GetKeyValue_4
??CH451_GetKeyValue_5:
        ADDS     R4,R4,#+1
??CH451_GetKeyValue_4:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+16
        BCS.N    ??CH451_GetKeyValue_6
        LDR.W    R0,??DataTable21_1
        LDRB     R0,[R0, #+0]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.W    R1,??DataTable21_2
        LDRB     R1,[R4, R1]
        CMP      R0,R1
        BNE.N    ??CH451_GetKeyValue_5
        LDR.W    R0,??DataTable21_3
        STRB     R4,[R0, #+0]
??CH451_GetKeyValue_6:
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void CH451_ini(void)
CH451_ini:
        PUSH     {R7,LR}
        MOVS     R2,#+1
        MOVS     R1,#+1
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R2,#+0
        MOVS     R1,#+1
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R2,#+1
        MOVS     R1,#+1
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_ctrl
        MOVW     R0,#+513
        BL       CH451_WriteCommand
        MOVW     R0,#+1027
        BL       CH451_WriteCommand
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void JIANPAN_ini(void)
JIANPAN_ini:
        PUSH     {R7,LR}
        LDR.W    R0,??DataTable21_4  ;; 0x40049004
        MOV      R1,#+256
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable21_5  ;; 0x40049008
        MOV      R1,#+256
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable21_6  ;; 0x4004900c
        MOV      R1,#+256
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable21_7  ;; 0x40049010
        MOV      R1,#+256
        STR      R1,[R0, #+0]
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+0
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_init
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+1
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_init
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+2
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_init
        MOVS     R3,#+1
        MOVS     R2,#+0
        MOVS     R1,#+3
        LDR.W    R0,??DataTable21  ;; 0x400ff000
        BL       gpio_init
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_d(int)
print_d:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0x800
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0x900
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_d1(int)
print_d1:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0xA00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0xB00
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_dall(int)
print_dall:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        MOVS     R0,#+100
        SDIV     R0,R4,R0
        MOVS     R1,#+10
        SDIV     R2,R0,R1
        MLS      R0,R1,R2,R0
        STR      R0,[SP, #+8]
        MOV      R0,#+1000
        SDIV     R0,R4,R0
        STR      R0,[SP, #+12]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0x800
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0x900
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+8]
        ORRS     R0,R0,#0xA00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+12]
        ORRS     R0,R0,#0xB00
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_t(int)
print_t:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0xC00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0xD00
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_tall(int)
print_tall:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        MOVS     R0,#+100
        SDIV     R0,R4,R0
        MOVS     R1,#+10
        SDIV     R2,R0,R1
        MLS      R0,R1,R2,R0
        STR      R0,[SP, #+8]
        MOV      R0,#+1000
        SDIV     R0,R4,R0
        STR      R0,[SP, #+12]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0xC00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0xD00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+8]
        ORRS     R0,R0,#0xE00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+12]
        ORRS     R0,R0,#0xF00
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_t1(int)
print_t1:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0xE00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0xF00
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_hell()
print_hell:
        PUSH     {R7,LR}
        MOVW     R0,#+3128
        BL       CH451_WriteCommand
        MOVW     R0,#+3384
        BL       CH451_WriteCommand
        MOVW     R0,#+3598
        BL       CH451_WriteCommand
        MOVW     R0,#+3959
        BL       CH451_WriteCommand
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_fall(int)
print_fall:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        MOVS     R0,#+100
        SDIV     R0,R4,R0
        MOVS     R1,#+10
        SDIV     R2,R0,R1
        MLS      R0,R1,R2,R0
        STR      R0,[SP, #+8]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0x800
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0x900
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+8]
        ORRS     R0,R0,#0xA00
        BL       CH451_WriteCommand
        MOVW     R0,#+2834
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return
//   23 #include "IR.h"

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 irq_flag
irq_flag:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 irq_count
irq_count:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 timer
timer:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 startflag
startflag:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 bitnum
bitnum:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
// __absolute int16 bitdata[33]
bitdata:
        DS8 68

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 receive_flag
receive_flag:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
// __absolute int16 data[4]
`data`:
        DS8 8

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 deal_flag
deal_flag:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 irkey
irkey:
        DS8 2

        SECTION `.data`:DATA:REORDER:NOROOT(2)
// __absolute int16 bianma[10]
bianma:
        DATA
        DC16 22, 12, 24, 94, 8, 28, 90, 66, 82, 74

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void get_irkey()
get_irkey:
        PUSH     {R7,LR}
        LDR.W    R0,??DataTable23
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??get_irkey_0
        LDR.W    R0,??DataTable23
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        BL       data_deal
??get_irkey_0:
        LDR.W    R0,??DataTable24
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??get_irkey_1
        MOVS     R0,#+0
        B.N      ??get_irkey_2
??get_irkey_3:
        LDR.W    R1,??DataTable23_1
        LDRSH    R1,[R1, #+4]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R2,??DataTable23_2
        LDRSH    R2,[R2, R0, LSL #+1]
        CMP      R1,R2
        BNE.N    ??get_irkey_4
        LDR.W    R1,??DataTable24_1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        STRH     R0,[R1, #+0]
??get_irkey_4:
        ADDS     R0,R0,#+1
??get_irkey_2:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+10
        BCC.N    ??get_irkey_3
??get_irkey_1:
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void data_deal(void)
data_deal:
        PUSH     {R4}
        MOVS     R0,#+0
        MOVS     R1,#+0
        MOVS     R3,#+0
        MOVS     R2,#+1
        MOVS     R4,#+0
        MOVS     R1,R4
        B.N      ??data_deal_0
??data_deal_1:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        LSRS     R3,R3,#+1
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        LDR.W    R4,??DataTable23_3
        LDRSH    R4,[R4, R2, LSL #+1]
        CMP      R4,#+6
        BLT.N    ??data_deal_2
        ORRS     R3,R3,#0x80
??data_deal_2:
        ADDS     R2,R2,#+1
        ADDS     R0,R0,#+1
??data_deal_3:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+8
        BLT.N    ??data_deal_1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.W    R0,??DataTable23_1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        STRH     R3,[R0, R1, LSL #+1]
        ADDS     R1,R1,#+1
??data_deal_0:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+4
        BGE.N    ??data_deal_4
        MOVS     R0,#+0
        B.N      ??data_deal_3
??data_deal_4:
        LDR.W    R0,??DataTable24
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
        POP      {R4}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void ir_deal(void)
ir_deal:
        LDR.W    R0,??DataTable23_4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??ir_deal_0
        LDR.W    R0,??DataTable25
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+26
        BLT.N    ??ir_deal_1
        LDR.W    R0,??DataTable23_5
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
??ir_deal_1:
        LDR.W    R0,??DataTable23_5
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable23_3
        LDR.W    R2,??DataTable25
        LDRH     R2,[R2, #+0]
        STRH     R2,[R1, R0, LSL #+1]
        LDR.W    R0,??DataTable25
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable23_5
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable23_5
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable23_5
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+33
        BNE.N    ??ir_deal_2
        LDR.W    R0,??DataTable23_5
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable23
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
        B.N      ??ir_deal_2
??ir_deal_0:
        LDR.W    R0,??DataTable23_4
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable25
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
??ir_deal_2:
        BX       LR               ;; return
//   24 #include "LQ12864.h" 
//   25 #include "lptmr.h"

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
// __absolute char LPTMR_INTERRUPT
LPTMR_INTERRUPT:
        DS8 1

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_interrupt(void)
lptmr_interrupt:
        PUSH     {R4,LR}
        MOVW     R4,#+5000
        LDR.W    R0,??DataTable24_2
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        BL       lptmr_clear_registers
        MOVS     R0,#+85
        BL       enable_irq
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable25_1  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_3  ;; 0x40040004
        MOVS     R1,#+5
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        MOVS     R1,#+64
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_interrupt_0:
        LDR.W    R0,??DataTable24_2
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??lptmr_interrupt_0
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+1
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
        BL       lptmr_clear_registers
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_isr_example(void)
lptmr_isr_example:
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x80
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_2
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_time_counter()
lptmr_time_counter:
        PUSH     {R4,LR}
        MOVW     R4,#+5000
        BL       lptmr_clear_registers
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable25_1  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_3  ;; 0x40040004
        MOVS     R1,#+5
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_time_counter_0:
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_time_counter_0
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_prescale()
lptmr_prescale:
        PUSH     {R4,LR}
        MOVS     R4,#+250
        BL       lptmr_clear_registers
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable25_1  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_3  ;; 0x40040004
        MOVS     R1,#+33
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_prescale_0:
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_prescale_0
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_internal_ref_input()
lptmr_internal_ref_input:
        PUSH     {R4,LR}
        MOVW     R4,#+15625
        BL       lptmr_clear_registers
        LDR.W    R0,??DataTable24_5  ;; 0x40064000
        LDRB     R0,[R0, #+0]
        ORRS     R0,R0,#0x2
        LDR.W    R1,??DataTable24_5  ;; 0x40064000
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable24_6  ;; 0x40064001
        LDRB     R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_6  ;; 0x40064001
        STRB     R0,[R1, #+0]
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable25_1  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_3  ;; 0x40040004
        MOVS     R1,#+64
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_internal_ref_input_0:
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_internal_ref_input_0
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_external_clk_input()
lptmr_external_clk_input:
        PUSH     {R7,LR}
        BL       lptmr_clear_registers
        MOVW     R0,#+7630
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable25_1  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_3  ;; 0x40040004
        MOVS     R1,#+123
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_external_clk_input_0:
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_external_clk_input_0
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_lpo_input()
lptmr_lpo_input:
        PUSH     {R4,LR}
        MOV      R4,#+4000
        BL       lptmr_clear_registers
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable25_1  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_3  ;; 0x40040004
        MOVS     R1,#+5
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_lpo_input_0:
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_lpo_input_0
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_32khz_input()
lptmr_32khz_input:
        PUSH     {R4,LR}
        MOV      R4,#+32768
        BL       lptmr_clear_registers
        LDR.W    R0,??DataTable25_2  ;; 0x4004803c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x20000000
        LDR.W    R1,??DataTable25_2  ;; 0x4004803c
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable25_3  ;; 0x4003d010
        LDR      R0,[R0, #+0]
        MOV      R1,#+256
        ORRS     R0,R1,R0
        LDR.W    R1,??DataTable25_3  ;; 0x4003d010
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable25_4  ;; 0x40047000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x80000
        LDR.W    R1,??DataTable25_4  ;; 0x40047000
        STR      R0,[R1, #+0]
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable25_1  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_3  ;; 0x40040004
        MOVS     R1,#+10
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_32khz_input_0:
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_32khz_input_0
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_pulse_counter(char)
lptmr_pulse_counter:
        PUSH     {R3-R5,LR}
        MOVS     R4,R0
        MOV      R5,#+1000
        BL       lptmr_clear_registers
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BNE.N    ??lptmr_pulse_counter_0
        LDR.W    R0,??DataTable25_5  ;; 0x40048038
        LDR      R0,[R0, #+0]
        MOV      R1,#+512
        ORRS     R0,R1,R0
        LDR.W    R1,??DataTable25_5  ;; 0x40048038
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable25_6  ;; 0x4004904c
        MOV      R1,#+1536
        STR      R1,[R0, #+0]
??lptmr_pulse_counter_1:
        LDR.W    R0,??DataTable24_3  ;; 0x40040004
        MOVS     R1,#+5
        STR      R1,[R0, #+0]
        UXTH     R0,R5            ;; ZeroExt  R0,R5,#+16,#+16
        LDR.W    R1,??DataTable25_1  ;; 0x40040008
        STR      R0,[R1, #+0]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LSLS     R0,R4,#+4
        ANDS     R0,R0,#0x30
        ORRS     R0,R0,#0x2
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_4  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_pulse_counter_2:
        POP      {R0,R4,R5,PC}    ;; return
??lptmr_pulse_counter_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+2
        BNE.N    ??lptmr_pulse_counter_3
        LDR.W    R0,??DataTable25_5  ;; 0x40048038
        LDR      R0,[R0, #+0]
        MOV      R1,#+512
        ORRS     R0,R1,R0
        LDR.W    R1,??DataTable25_5  ;; 0x40048038
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable29  ;; 0x4004b014
        MOV      R1,#+1024
        STR      R1,[R0, #+0]
        B.N      ??lptmr_pulse_counter_1
??lptmr_pulse_counter_3:
        B.N      ??lptmr_pulse_counter_2

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp uint16 get_counter_value()
get_counter_value:
        LDR.W    R0,??DataTable29_1  ;; 0x4004000c
        MOVS     R1,#+1
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable29_1  ;; 0x4004000c
        LDR      R0,[R0, #+0]
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_clear_registers()
lptmr_clear_registers:
        LDR.W    R0,??DataTable24_4  ;; 0x40040000
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_3  ;; 0x40040004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable25_1  ;; 0x40040008
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        BX       LR               ;; return
//   26 #define READword(address)     ((unsigned int)(*(volatile unsigned int *)(address)))
//   27 #define FLEXNVM_startline_ADDR 0X10000000
//   28 #define FLEXRAM_startline_ADDR 0X14000000
//   29 #define PIT0 0
//   30 #define PIT1 1
//   31 #define PIT2 2
//   32 #define PIT3 3
//   33 #define GPIO_PIN_MASK      0x1Fu    //0x1f=31,限制位数为0--31有效
//   34 #define GPIO_PIN(x)        (((1)<<(x & GPIO_PIN_MASK)))  //把当前位置1                
//   35 #define endlineROW  169        //OV7620，每场240行
//   36 #define  H 55
//   37 #define  V 160
//   38 #define  video_Middle  80
//   39 #define windage 40
//   40 //#define black_max 150   //150
//   41 #define shi_zi_jiao_cha_number 9      //用来判断十字交叉的行数的，大于这个值就认为是十字交叉
//   42 //int16 Servo_Middle= 12385;    //中间12305 11625  250Hz  37.27%
//   43 //int16 Servo_Left=   10475;   //最左10475  250Hz  44%
//   44 //int16 Servo_Right=  14375;   //最右15575   250Hz  30.53%

        SECTION `.data`:DATA:REORDER:NOROOT(1)
//   45 int16 Servo_Middle= 11385;//中间12305;    //11385中间12305 11625  250Hz  37.27%
Servo_Middle:
        DATA
        DC16 11385

        SECTION `.data`:DATA:REORDER:NOROOT(1)
//   46 int16 Servo_Left=   9205;   //最左10475  250Hz  44%
Servo_Left:
        DATA
        DC16 9205

        SECTION `.data`:DATA:REORDER:NOROOT(1)
//   47 int16 Servo_Right=  13675;   //最右15575   250Hz  30.53%
Servo_Right:
        DATA
        DC16 13675
//   48 
//   49 #define  unclear  -100
//   50 #define  ok        1
//   51 #define  fail      0
//   52 #define  position_mid   79           //中心位置
//   53 /*****************************阈值设定*******************************/

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   54 unsigned char black_max_a1 = 115;
black_max_a1:
        DATA
        DC8 115

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   55 unsigned char black_max_a2 = 130;
black_max_a2:
        DATA
        DC8 130

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   56 unsigned char black_max_a3 = 115;
black_max_a3:
        DATA
        DC8 115

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   57 unsigned char black_max_b1 = 118;
black_max_b1:
        DATA
        DC8 118

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   58 unsigned char black_max_b2 = 135;
black_max_b2:
        DATA
        DC8 135

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   59 unsigned char black_max_b3 = 118;
black_max_b3:
        DATA
        DC8 118

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   60 unsigned char black_max_c1 = 120;
black_max_c1:
        DATA
        DC8 120

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   61 unsigned char black_max_c2 = 140;
black_max_c2:
        DATA
        DC8 140

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   62 unsigned char black_max_c3 = 120;
black_max_c3:
        DATA
        DC8 120

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   63 unsigned char black_max_d1 = 130;
black_max_d1:
        DATA
        DC8 130

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   64 unsigned char black_max_d2 = 140;
black_max_d2:
        DATA
        DC8 140

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   65 unsigned char black_max_d3 = 130;
black_max_d3:
        DATA
        DC8 130
//   66 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   67 unsigned char black_max_1 = 0;
black_max_1:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   68 unsigned char black_max_2 = 0;
black_max_2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   69 unsigned char black_max_3 = 0;
black_max_3:
        DS8 1
//   70 /*****************************END********************************/

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   71 volatile int P_timer=0;
P_timer:
        DS8 4
//   72 

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   73 unsigned int row=0;//摄像头行计数，最大240
row:
        DS8 4

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   74 volatile uint8 video[H][V];//存放数据数组
video:
        DS8 8800

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   75 volatile uint8 bianyan[2][H];//存放两边黑线
bianyan:
        DS8 112

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   76 volatile uint8 bianyan2[2][H];
bianyan2:
        DS8 112

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   77 volatile uint8 center[H];//存放中心线
center:
        DS8 56

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   78 volatile uint8 BW[101];//这个需要清零，用于起始线检测25-35
BW:
        DS8 104

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   79 volatile uint8 BW2[121];//这个需要清零，用于起始线检测35-45
BW2:
        DS8 124

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   80 volatile uint8 BW3[81];//18-25起始线检测
BW3:
        DS8 84

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   81 volatile uint8 BW4[141];//45-55起始线检测
BW4:
        DS8 144

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   82 volatile uint8 start_xian=0;//这个需要清零
start_xian:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   83 volatile uint8 Very_straight=0;//这个需要清零
Very_straight:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   84 volatile uint8 ramp_flag=0;//这个需要清零
ramp_flag:
        DS8 1
//   85 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   86 volatile uint8 END_Line_2=0;
END_Line_2:
        DS8 1
//   87 

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   88 int16 position_Save[20];
position_Save:
        DS8 40

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   89 uint8 video2[V];
video2:
        DS8 160

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//   90 int16 position_ceshi=0,position_old_ceshi=0;
position_ceshi:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
position_old_ceshi:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//   91 uint16 left_ceshi=0,right_ceshi=0;
left_ceshi:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
right_ceshi:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//   92 uint16 see_distance=0;
see_distance:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//   93  int16 position_now_P=0,position_now_low_P=0,position_now_D=0;
position_now_P:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
position_now_low_P:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
position_now_D:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//   94  uint16 slope_flag=0;
slope_flag:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   95 volatile uint8 m_zhi=0;
m_zhi:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   96 uint8 zhidao_flag=0;
zhidao_flag:
        DS8 1

        SECTION `.data`:DATA:REORDER:NOROOT(1)
//   97  uint16 speed_cut_timer=100,start_startline=20;
speed_cut_timer:
        DATA
        DC16 100

        SECTION `.data`:DATA:REORDER:NOROOT(1)
start_startline:
        DATA
        DC16 20

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//   98  int16 i_old=0;
i_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//   99  int16 xiaoS_flag=0;
xiaoS_flag:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  100  uint8 m=0;
m:
        DS8 1
//  101 

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  102 unsigned int imagerow=0;//采集行计数，最大H
imagerow:
        DS8 4

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "Mid_Wu">`:
        DATA
        DC8 "Mid_Wu"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "High_Wu">`:
        DATA
        DC8 "High_Wu"

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "High_You">`:
        DATA
        DC8 "High_You"
        DC8 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 "OK"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant {1, 2, 3, 3, 4}>`:
        DATA
        DC8 1, 2, 3, 3, 4, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant {-1}>`:
        DATA
        DC16 -1
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "speed">`:
        DATA
        DC8 "speed"
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "speed_cut_timer">`:
        DATA
        DC8 "speed_cut_timer"

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "start_startline">`:
        DATA
        DC8 "start_startline"

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "TJorFC">`:
        DATA
        DC8 "TJorFC"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 "FC"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 "TJ"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "sai_dao_number">`:
        DATA
        DC8 "sai_dao_number"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "LCDgo_on">`:
        DATA
        DC8 "LCDgo_on"
        DC8 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "low_0">`:
        DATA
        DC8 "low_0"
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "mid_0">`:
        DATA
        DC8 "mid_0"
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "high_0">`:
        DATA
        DC8 "high_0"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "position_now">`:
        DATA
        DC8 "position_now"
        DC8 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "position_diff">`:
        DATA
        DC8 "position_diff"
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "p_low">`:
        DATA
        DC8 "p_low"
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "see_distance">`:
        DATA
        DC8 "see_distance"
        DC8 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 "P_D"

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//  103 unsigned int const data_table[H]={ 1,   3,   5,   7,   9,    //2 
data_table:
        DATA
        DC32 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 34, 37
        DC32 40, 43, 46, 49, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 88
        DC32 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144
        DC32 148, 152, 156, 160, 164, 168
//  104                                    11,  13,  15,  17,  19,    //2
//  105                                    21,  23,  25,  27,  29,    //2
//  106                                    31,  34,  37,  40,  43,    //3
//  107                                    46,  49,  52,  55,  58,    //3
//  108                                    61,  64,  67,  70,  73,    //3
//  109                                    76,  79,  82,  85,  88,    //3
//  110                                    92,  96, 100, 104, 108,    //4
//  111                                    112, 116, 120, 124, 128,    //4
//  112                                    132, 136, 140, 144, 148,    //4
//  113                                    152, 156, 160, 164, 168     //4
//  114                                        
//  115                                        
//  116                                        
//  117                                        
//  118                                        
//  119    
//  120                                    };//需采集数据的行，2cm一行实际测得

        SECTION `.data`:DATA:REORDER:NOROOT(2)
//  121 unsigned char mo_hu[31]={70,71,72,74,75,
mo_hu:
        DATA
        DC8 70, 71, 72, 74, 75, 77, 81, 83, 85, 87, 90, 93, 95, 95, 95, 95, 95
        DC8 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 0
//  122                          77,81,83,85,87,
//  123                          90,93,95,95,95,
//  124                          95,95,95,95,95,
//  125                          95,95,95,95,95,
//  126                          95,95,95,95,95,95};
//  127 

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  128 uint8 row_F[H];//该行采集完成标志
row_F:
        DS8 56

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  129 char startline;//起始行
startline:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  130 char endline;//结束行
endline:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  131 char startline_F;//发现起始行
startline_F:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  132 char endline_F;//发现结束行
endline_F:
        DS8 1
//  133 
//  134 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  135 uint8 T_P4=0,T_P1=0,T_P2=0,T_P28=0;//用来控制小灯变化的P4闪烁为脉冲计数运行标志，P1为边沿函数的执行标志
T_P4:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
T_P1:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
T_P2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
T_P28:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  136 uint8 LCD_P1=0,LCD_P2=0,LCD_P3=0;
LCD_P1:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
LCD_P2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
LCD_P3:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  137 volatile uint16 pulse=0,pulse_old=0,pulse_old_old=0;
pulse:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
pulse_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
pulse_old_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  138 volatile uint8 finish=0;
finish:
        DS8 1
//  139 
//  140 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  141 volatile uint8 xu_xian2=0;//这个需要清零
xu_xian2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  142 volatile uint8 xu1=0,xu2=0,xu3=0,xu4=0;//这个需要清零
xu1:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
xu2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
xu3:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
xu4:
        DS8 1
//  143 
//  144 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  145 volatile uint8 sai_dao_lei_xing=0;
sai_dao_lei_xing:
        DS8 1
//  146 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  147 volatile int16 low_0=0,mid_0=0,high_0=0;
low_0:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
mid_0:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
high_0:
        DS8 2
//  148 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  149 volatile int16 low=0,mid=0,high=0;
`low`:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
mid:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
`high`:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  150 volatile int16 topline=0;
topline:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  151 volatile int16 low_old=0,mid_old=0,high_old=0;
low_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
mid_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
high_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  152 volatile int16 position_now=0,position_diff=0,position_now_low=0;
position_now:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
position_diff:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
position_now_low:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  153 volatile int16 Servo_value=0,Servo_value_old=12305;//这里Servo_value_old的初始值要设置的和Servo_Middle一样，是用来限定的
Servo_value:
        DS8 2

        SECTION `.data`:DATA:REORDER:NOROOT(1)
Servo_value_old:
        DATA
        DC16 12305

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  154 volatile int16 low_now=0,mid_now=0,high_now=0;
low_now:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
mid_now:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
high_now:
        DS8 2
//  155 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  156 volatile int16 low_now_0=0,mid_now_0=0,high_now_0=0;
low_now_0:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
mid_now_0:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
high_now_0:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  157 volatile int16 END_0=0;
END_0:
        DS8 2
//  158 

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  159 volatile uint8 car_speed=4;
car_speed:
        DATA
        DC8 4

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  160 volatile int16 speed_Very_straight,speed_top,speed_b,speed_m,speed_s,speed_ms;
speed_Very_straight:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_top:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_b:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_m:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_s:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_ms:
        DS8 2
//  161 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  162 volatile int16 time_m=0,speed_now=0;
time_m:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_now:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  163 volatile int16 s_old=0;
s_old:
        DS8 2
//  164 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  165 volatile int16 END_Line=0;
END_Line:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  166 volatile int16 xie_shizi_flag_1=0,xie_shizi_flag_2=0,xie_shizi_flag_3=0;
xie_shizi_flag_1:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
xie_shizi_flag_2:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
xie_shizi_flag_3:
        DS8 2
//  167 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  168 volatile int16 Judage_right_hang=0,Judage_right_lie=0;
Judage_right_hang:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
Judage_right_lie:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  169 volatile int16 Judage_left_hang=0,Judage_left_lie=0;
Judage_left_hang:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
Judage_left_lie:
        DS8 2

        SECTION `.data`:DATA:REORDER:NOROOT(1)
//  170 int16 position_old=76,position_old_old=76,position_old_old_old=76;
position_old:
        DATA
        DC16 76

        SECTION `.data`:DATA:REORDER:NOROOT(1)
position_old_old:
        DATA
        DC16 76

        SECTION `.data`:DATA:REORDER:NOROOT(1)
position_old_old_old:
        DATA
        DC16 76

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  171 int16 weizhi=0,weizhi_old=0,weizhi_old_old=0;
weizhi:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
weizhi_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
weizhi_old_old:
        DS8 2
//  172 
//  173 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  174 uint8 start_line2=0;//注意这个需要清零
start_line2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  175 uint8 start_18_25_2=0,start_25_35_2=0,start_35_45_2=0,start_45_55_2=0;
start_18_25_2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
start_25_35_2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
start_35_45_2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
start_45_55_2:
        DS8 1
//  176 ////////////模糊控制///////////////
//  177 
//  178 #define MP_S      510//110  260  360
//  179 #define MP_M      540//180  320  400
//  180 #define MP_B      580//240  360  440
//  181 
//  182 #define MI_S      6//6 4
//  183 #define MI_M      9//10 8 
//  184 #define MI_B      12//15  10
//  185 
//  186 #define  motor_p      70//   45 50 55 60 65
//  187 
//  188 
//  189 
//  190 
//  191 //////////////////////舵机参数////////////////////////////

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  192 uint8 Servo_P_zhidao=25;
Servo_P_zhidao:
        DATA
        DC8 25

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  193 uint8 Servo_D_zhidao=110;
Servo_D_zhidao:
        DATA
        DC8 110

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  194 uint8 P_High=27;//24 6 27  29
P_High:
        DATA
        DC8 27

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  195 uint8 D_High=8;//10 8 18  15
D_High:
        DATA
        DC8 8

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  196 uint8  D_piancha_high=10;
D_piancha_high:
        DATA
        DC8 10

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  197 uint8 H_High=15;//20
H_High:
        DATA
        DC8 15

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  198 uint8 T_High=30;//25
T_High:
        DATA
        DC8 30
//  199 

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  200 uint8 P_Mid=40;//41 42
P_Mid:
        DATA
        DC8 40

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  201 uint8 D_Mid=22;//25 26
D_Mid:
        DATA
        DC8 22

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  202 uint8 D_piancha_mid=20;
D_piancha_mid:
        DATA
        DC8 20

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  203 uint8 H_Mid=15;
H_Mid:
        DATA
        DC8 15

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  204 uint8 T_Mid=45;
T_Mid:
        DATA
        DC8 45
//  205 
//  206 

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  207 uint8 P_Low=43;//43
P_Low:
        DATA
        DC8 43

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  208 uint8 D_Low=30;//32 30
D_Low:
        DATA
        DC8 30

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  209 uint8 D_piancha_low=26;
D_piancha_low:
        DATA
        DC8 26

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  210 uint8 H_Low=24;
H_Low:
        DATA
        DC8 24

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  211 uint8 T_Low=45;
T_Low:
        DATA
        DC8 45
//  212 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  213 volatile int16 E=0,Ec=0,Ec_old=0,Ec_old_old=0;
E:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
Ec:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
Ec_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
Ec_old_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  214 uint8 servo_d=0;
servo_d:
        DS8 1
//  215 ///////////////////////////////////////////////////////////
//  216 /******************在这里加入键盘控制舵机PD参数头文件*******************/
//  217 #include "keyboard_PD.h"

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void High_You(void)
High_You:
        PUSH     {R4,LR}
        MOVS     R4,#+0
        B.N      ??High_You_0
??High_You_1:
        LDR.W    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_2:
        LDR.W    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??High_You_1
        LDR.W    R0,??DataTable25_7
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable25_7
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable25_7
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
??High_You_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??High_You_3
        BL       CH451_GetKeyValue
        LDR.W    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??High_You_2
        CMP      R0,#+2
        BEQ.N    ??High_You_4
        CMP      R0,#+5
        BEQ.N    ??High_You_5
        CMP      R0,#+6
        BEQ.N    ??High_You_6
        CMP      R0,#+9
        BEQ.N    ??High_You_7
        CMP      R0,#+10
        BEQ.N    ??High_You_8
        B.N      ??High_You_0
??High_You_9:
        LDR.W    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_7:
        LDR.W    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+9
        BEQ.N    ??High_You_9
        LDR.W    R0,??DataTable26_1
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable26_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable26_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??High_You_0
??High_You_10:
        LDR.W    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_5:
        LDR.W    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??High_You_10
        LDR.W    R0,??DataTable25_7
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable25_7
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable25_7
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        B.N      ??High_You_0
??High_You_11:
        LDR.W    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_8:
        LDR.W    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??High_You_11
        LDR.W    R0,??DataTable26_1
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable26_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable26_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??High_You_0
??High_You_12:
        LDR.W    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_4:
        LDR.W    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??High_You_12
        B.N      ??High_You_0
??High_You_13:
        LDR.W    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_6:
        LDR.W    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BEQ.N    ??High_You_13
        MOVS     R4,#+1
        B.N      ??High_You_0
??High_You_3:
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void High_Wu(void)
High_Wu:
        PUSH     {R4,LR}
        MOVS     R4,#+0
        B.N      ??High_Wu_0
??High_Wu_1:
        LDR.W    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_2:
        LDR.W    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??High_Wu_1
        LDR.W    R0,??DataTable27
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable27
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable27
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
??High_Wu_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??High_Wu_3
        BL       CH451_GetKeyValue
        LDR.W    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??High_Wu_2
        CMP      R0,#+2
        BEQ.N    ??High_Wu_4
        CMP      R0,#+5
        BEQ.N    ??High_Wu_5
        CMP      R0,#+6
        BEQ.N    ??High_Wu_6
        CMP      R0,#+9
        BEQ.N    ??High_Wu_7
        CMP      R0,#+10
        BEQ.N    ??High_Wu_8
        B.N      ??High_Wu_0
??High_Wu_9:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_7:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+9
        BEQ.N    ??High_Wu_9
        LDR.W    R0,??DataTable27_1
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable27_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable27_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??High_Wu_0
??High_Wu_10:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_5:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??High_Wu_10
        LDR.W    R0,??DataTable27
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable27
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable27
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        B.N      ??High_Wu_0
??High_Wu_11:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_8:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??High_Wu_11
        LDR.W    R0,??DataTable27_1
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable27_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable27_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??High_Wu_0
??High_Wu_12:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_4:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??High_Wu_12
        B.N      ??High_Wu_0
??High_Wu_13:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_6:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BEQ.N    ??High_Wu_13
        MOVS     R4,#+1
        B.N      ??High_Wu_0
??High_Wu_3:
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void zhidao_Wu(void)
zhidao_Wu:
        PUSH     {R4,LR}
        MOVS     R4,#+0
        B.N      ??zhidao_Wu_0
??zhidao_Wu_1:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??zhidao_Wu_2:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??zhidao_Wu_1
        LDR.W    R0,??DataTable27_2
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable27_2
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable27_2
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
??zhidao_Wu_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??zhidao_Wu_3
        BL       CH451_GetKeyValue
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??zhidao_Wu_2
        CMP      R0,#+2
        BEQ.N    ??zhidao_Wu_4
        CMP      R0,#+5
        BEQ.N    ??zhidao_Wu_5
        CMP      R0,#+6
        BEQ.N    ??zhidao_Wu_6
        CMP      R0,#+9
        BEQ.N    ??zhidao_Wu_7
        CMP      R0,#+10
        BEQ.N    ??zhidao_Wu_8
        B.N      ??zhidao_Wu_0
??zhidao_Wu_9:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??zhidao_Wu_7:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+9
        BEQ.N    ??zhidao_Wu_9
        LDR.W    R0,??DataTable28
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable28
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable28
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??zhidao_Wu_0
??zhidao_Wu_10:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??zhidao_Wu_5:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??zhidao_Wu_10
        LDR.W    R0,??DataTable27_2
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable27_2
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable27_2
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        B.N      ??zhidao_Wu_0
??zhidao_Wu_11:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??zhidao_Wu_8:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??zhidao_Wu_11
        LDR.W    R0,??DataTable28
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable28
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable28
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??zhidao_Wu_0
??zhidao_Wu_12:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??zhidao_Wu_4:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??zhidao_Wu_12
        B.N      ??zhidao_Wu_0
??zhidao_Wu_13:
        LDR.N    R0,??DataTable21_3
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??zhidao_Wu_6:
        LDR.N    R0,??DataTable21_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BEQ.N    ??zhidao_Wu_13
        MOVS     R4,#+1
        B.N      ??zhidao_Wu_0
??zhidao_Wu_3:
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void Mid_Wu(void)
Mid_Wu:
        PUSH     {R4,LR}
        MOVS     R4,#+0
        B.N      ??Mid_Wu_0
??Mid_Wu_1:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_2:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Mid_Wu_1
        LDR.W    R0,??DataTable30
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable30
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable30
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
??Mid_Wu_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??Mid_Wu_3
        BL       CH451_GetKeyValue
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Mid_Wu_2
        CMP      R0,#+2
        BEQ.N    ??Mid_Wu_4
        CMP      R0,#+5
        BEQ.N    ??Mid_Wu_5
        CMP      R0,#+6
        BEQ.N    ??Mid_Wu_6
        CMP      R0,#+9
        BEQ.N    ??Mid_Wu_7
        CMP      R0,#+10
        BEQ.N    ??Mid_Wu_8
        B.N      ??Mid_Wu_0
??Mid_Wu_9:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_7:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+9
        BEQ.N    ??Mid_Wu_9
        LDR.W    R0,??DataTable30_1
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable30_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable30_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??Mid_Wu_0
??Mid_Wu_10:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_5:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??Mid_Wu_10
        LDR.W    R0,??DataTable30
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable30
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable30
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        B.N      ??Mid_Wu_0
??Mid_Wu_11:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_8:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??Mid_Wu_11
        LDR.W    R0,??DataTable30_1
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable30_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable30_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??Mid_Wu_0
??Mid_Wu_12:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_4:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??Mid_Wu_12
        B.N      ??Mid_Wu_0
??Mid_Wu_13:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_6:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BEQ.N    ??Mid_Wu_13
        MOVS     R4,#+1
        B.N      ??Mid_Wu_0
??Mid_Wu_3:
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21:
        DC32     0x400ff000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_1:
        DC32     GetKeyValue

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_2:
        DC32     KeyCode

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_3:
        DC32     KeyValue

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_4:
        DC32     0x40049004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_5:
        DC32     0x40049008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_6:
        DC32     0x4004900c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_7:
        DC32     0x40049010

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void Duo_Ji_PD(void)
Duo_Ji_PD:
        PUSH     {R3-R5,LR}
        MOVS     R5,#+0
        MOVS     R4,#+0
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,R4
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_1:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_2:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Duo_Ji_PD_1
        ADDS     R4,R4,#+1
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,R4
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
??Duo_Ji_PD_0:
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R5,#+0
        BNE.W    ??Duo_Ji_PD_3
        BL       CH451_GetKeyValue
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Duo_Ji_PD_2
        CMP      R0,#+2
        BEQ.N    ??Duo_Ji_PD_4
        CMP      R0,#+5
        BEQ.N    ??Duo_Ji_PD_5
        CMP      R0,#+6
        BEQ.N    ??Duo_Ji_PD_6
        CMP      R0,#+9
        BEQ.N    ??Duo_Ji_PD_7
        CMP      R0,#+10
        BEQ.N    ??Duo_Ji_PD_8
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_6:
        ADR.N    R2,??DataTable22  ;; 0x4F, 0x4B, 0x00, 0x00
        MOVS     R1,#+2
        MOVS     R0,#+110
        BL       LCD_P6x8Str
        B.N      ??Duo_Ji_PD_9
??Duo_Ji_PD_10:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_7:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+9
        BEQ.N    ??Duo_Ji_PD_10
        ADDS     R4,R4,#+2
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,R4
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_11:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_5:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??Duo_Ji_PD_11
        SUBS     R4,R4,#+1
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,R4
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_12:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_8:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??Duo_Ji_PD_12
        SUBS     R4,R4,#+2
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,R4
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_13:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_4:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??Duo_Ji_PD_13
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??Duo_Ji_PD_14
        MOVS     R0,#+3
        BL       LCD_CLS2
        LDR.W    R2,??DataTable33
        MOVS     R1,#+3
        MOVS     R0,#+0
        BL       LCD_P6x8Str
        LDR.W    R0,??DataTable27_2
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        LDR.W    R0,??DataTable28
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        BL       zhidao_Wu
??Duo_Ji_PD_14:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BNE.N    ??Duo_Ji_PD_15
        MOVS     R0,#+3
        BL       LCD_CLS2
        LDR.W    R2,??DataTable33
        MOVS     R1,#+3
        MOVS     R0,#+0
        BL       LCD_P6x8Str
        LDR.W    R0,??DataTable30
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        LDR.W    R0,??DataTable30_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        BL       Mid_Wu
??Duo_Ji_PD_15:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+2
        BNE.N    ??Duo_Ji_PD_16
        MOVS     R0,#+3
        BL       LCD_CLS2
        LDR.W    R2,??DataTable35
        MOVS     R1,#+3
        MOVS     R0,#+0
        BL       LCD_P6x8Str
        LDR.W    R0,??DataTable27
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        LDR.W    R0,??DataTable27_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        BL       High_Wu
??Duo_Ji_PD_16:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+3
        BNE.N    ??Duo_Ji_PD_17
        MOVS     R0,#+3
        BL       LCD_CLS2
        LDR.W    R2,??DataTable36
        MOVS     R1,#+3
        MOVS     R0,#+0
        BL       LCD_P6x8Str
        LDR.W    R0,??DataTable25_7
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        LDR.W    R0,??DataTable26_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        BL       High_You
??Duo_Ji_PD_17:
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_18:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_9:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BEQ.N    ??Duo_Ji_PD_18
        MOVS     R5,#+1
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_3:
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable22:
        DC8      0x4F, 0x4B, 0x00, 0x00

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void Car_Speed(void)
Car_Speed:
        PUSH     {R4,LR}
        MOVS     R4,#+0
        B.N      ??Car_Speed_0
??Car_Speed_1:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Car_Speed_2:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Car_Speed_1
        LDR.W    R0,??DataTable37_1
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable37_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable37_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+0
        MOVS     R0,#+36
        BL       LCD_P6x8Str_3
??Car_Speed_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.W    ??Car_Speed_3
        BL       CH451_GetKeyValue
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Car_Speed_2
        CMP      R0,#+2
        BEQ.N    ??Car_Speed_4
        CMP      R0,#+5
        BEQ.N    ??Car_Speed_5
        CMP      R0,#+6
        BEQ.N    ??Car_Speed_6
        CMP      R0,#+9
        BEQ.N    ??Car_Speed_7
        CMP      R0,#+10
        BEQ.N    ??Car_Speed_8
        B.N      ??Car_Speed_0
??Car_Speed_9:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Car_Speed_5:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??Car_Speed_9
        LDR.W    R0,??DataTable37_1
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable37_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable37_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+0
        MOVS     R0,#+36
        BL       LCD_P6x8Str_3
        B.N      ??Car_Speed_0
??Car_Speed_10:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Car_Speed_6:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BEQ.N    ??Car_Speed_10
        LDR.W    R0,??DataTable39
        LDRH     R0,[R0, #+0]
        SUBS     R0,R0,#+10
        LDR.W    R1,??DataTable39
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable39
        LDRSH    R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+1
        MOVS     R0,#+100
        BL       LCD_P6x8Str_3
        B.N      ??Car_Speed_0
??Car_Speed_11:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Car_Speed_7:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+9
        BEQ.N    ??Car_Speed_11
        LDR.W    R0,??DataTable39
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+10
        LDR.W    R1,??DataTable39
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable39
        LDRSH    R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+1
        MOVS     R0,#+100
        BL       LCD_P6x8Str_3
        B.N      ??Car_Speed_0
??Car_Speed_12:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Car_Speed_8:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??Car_Speed_12
        LDR.W    R0,??DataTable40
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+10
        LDR.W    R1,??DataTable40
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable40
        LDRSH    R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+7
        MOVS     R0,#+100
        BL       LCD_P6x8Str_3
        B.N      ??Car_Speed_0
??Car_Speed_13:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Car_Speed_4:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??Car_Speed_13
        ADR.N    R2,??DataTable26  ;; 0x4F, 0x4B, 0x00, 0x00
        MOVS     R1,#+0
        MOVS     R0,#+60
        BL       LCD_P6x8Str
        MOVS     R4,#+1
        B.N      ??Car_Speed_0
??Car_Speed_3:
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable23:
        DC32     receive_flag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable23_1:
        DC32     `data`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable23_2:
        DC32     bianma

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable23_3:
        DC32     bitdata

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable23_4:
        DC32     startflag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable23_5:
        DC32     bitnum
//  218 /***********************系统、总线频率设置**********************/
//  219 
//  220 
//  221 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  222 void pllinit180M(void)
//  223 {
//  224 	uint32_t temp_reg;
//  225         //使能IO端口时钟    
//  226     SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
//  227                               | SIM_SCGC5_PORTB_MASK
//  228                               | SIM_SCGC5_PORTC_MASK
//  229                               | SIM_SCGC5_PORTD_MASK
//  230                               | SIM_SCGC5_PORTE_MASK );
pllinit180M:
        LDR.N    R0,??DataTable25_5  ;; 0x40048038
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x3E00
        LDR.N    R1,??DataTable25_5  ;; 0x40048038
        STR      R0,[R1, #+0]
//  231     //这里处在默认的FEI模式
//  232     //首先移动到FBE模式
//  233     MCG_C2 = 0;  
        LDR.N    R0,??DataTable24_6  ;; 0x40064001
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
//  234     //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
//  235     //初始化晶振后释放锁定状态的振荡器和GPIO
//  236     SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
        LDR.W    R0,??DataTable42  ;; 0x40048034
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x10000000
        LDR.W    R1,??DataTable42  ;; 0x40048034
        STR      R0,[R1, #+0]
//  237     LLWU_CS |= LLWU_CS_ACKISO_MASK;
        LDR.W    R0,??DataTable42_1  ;; 0x4007c008
        LDRB     R0,[R0, #+0]
        ORRS     R0,R0,#0x80
        LDR.W    R1,??DataTable42_1  ;; 0x4007c008
        STRB     R0,[R1, #+0]
//  238     
//  239     //选择外部晶振，参考分频器，清IREFS来启动外部晶振
//  240     //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
//  241     MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
        LDR.N    R0,??DataTable24_5  ;; 0x40064000
        MOVS     R1,#+152
        STRB     R1,[R0, #+0]
//  242     
//  243     //等待晶振稳定	    
//  244     //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
//  245     while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
??pllinit180M_0:
        LDR.W    R0,??DataTable49  ;; 0x40064006
        LDRB     R0,[R0, #+0]
        LSLS     R0,R0,#+27
        BMI.N    ??pllinit180M_0
//  246     while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
??pllinit180M_1:
        LDR.W    R0,??DataTable49  ;; 0x40064006
        LDRB     R0,[R0, #+0]
        UBFX     R0,R0,#+2,#+2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+2
        BNE.N    ??pllinit180M_1
//  247     //进入FBE模式,
//  248     MCG_C5 = MCG_C5_PRDIV(0x0e);//分频在2~4MHz之间，分频后频率=晶振频率/(PRDIV+1) 3.3MHz                
        LDR.W    R0,??DataTable42_2  ;; 0x40064004
        MOVS     R1,#+14
        STRB     R1,[R0, #+0]
//  249     MCG_C6 = 0x0;//确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
        LDR.W    R0,??DataTable42_3  ;; 0x40064005
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
//  250     temp_reg = FMC_PFAPR;//保存FMC_PFAPR当前的值
        LDR.W    R0,??DataTable42_4  ;; 0x4001f000
        LDR      R0,[R0, #+0]
//  251     FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
//  252                      | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
//  253                      | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK; //通过M&PFD置位M0PFD来禁止预取功能   
        LDR.W    R1,??DataTable42_4  ;; 0x4001f000
        LDR      R1,[R1, #+0]
        ORRS     R1,R1,#0xFF0000
        LDR.W    R2,??DataTable42_4  ;; 0x4001f000
        STR      R1,[R2, #+0]
//  254     ///设置系统分频器
//  255     //MCG=PLL, core = MCG, bus = MCG/3, FlexBus = MCG/3, Flash clock= MCG/8
//  256     SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(2) 
//  257                  | SIM_CLKDIV1_OUTDIV3(2) | SIM_CLKDIV1_OUTDIV4(7);       
        LDR.W    R1,??DataTable42_5  ;; 0x40048044
        LDR.W    R2,??DataTable42_6  ;; 0x2270000
        STR      R2,[R1, #+0]
//  258     FMC_PFAPR = temp_reg;//从新存FMC_PFAPR的原始值 
        LDR.W    R1,??DataTable42_4  ;; 0x4001f000
        STR      R0,[R1, #+0]
//  259     //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
//  260     MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(30);  //VDIV = 31 (x55)
        LDR.W    R0,??DataTable42_3  ;; 0x40064005
        MOVS     R1,#+94
        STRB     R1,[R0, #+0]
//  261                                                   //VDIV = 26 (x50)
//  262     while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
??pllinit180M_2:
        LDR.W    R0,??DataTable49  ;; 0x40064006
        LDRB     R0,[R0, #+0]
        LSLS     R0,R0,#+26
        BPL.N    ??pllinit180M_2
//  263     while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
??pllinit180M_3:
        LDR.W    R0,??DataTable49  ;; 0x40064006
        LDRB     R0,[R0, #+0]
        LSLS     R0,R0,#+25
        BPL.N    ??pllinit180M_3
//  264     //进入PBE模式    
//  265     //通过清零CLKS位来进入PEE模式
//  266     // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
//  267     MCG_C1 &= ~MCG_C1_CLKS_MASK;
        LDR.N    R0,??DataTable24_5  ;; 0x40064000
        LDRB     R0,[R0, #+0]
        ANDS     R0,R0,#0x3F
        LDR.N    R1,??DataTable24_5  ;; 0x40064000
        STRB     R0,[R1, #+0]
//  268     //等待时钟状态位更新
//  269     while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
??pllinit180M_4:
        LDR.W    R0,??DataTable49  ;; 0x40064006
        LDRB     R0,[R0, #+0]
        UBFX     R0,R0,#+2,#+2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+3
        BNE.N    ??pllinit180M_4
//  270 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24:
        DC32     deal_flag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_1:
        DC32     irkey

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_2:
        DC32     LPTMR_INTERRUPT

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_3:
        DC32     0x40040004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_4:
        DC32     0x40040000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_5:
        DC32     0x40064000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_6:
        DC32     0x40064001
//  271 /***********************系统、总线频率设置END**********************/
//  272 
//  273 /************************舵机控制输出PWM模块***********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  274 void hw_FTM1_init(void)
//  275     {      	
//  276       //SIM_SOPT4|=SIM_SOPT4_FTM1FLT0_MASK;        
//  277       /* Turn on all port clocks */
//  278       SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
hw_FTM1_init:
        LDR.N    R0,??DataTable25_5  ;; 0x40048038
        LDR      R0,[R0, #+0]
        MOV      R1,#+512
        ORRS     R0,R1,R0
        LDR.N    R1,??DataTable25_5  ;; 0x40048038
        STR      R0,[R1, #+0]
//  279         
//  280       /* Enable the function on PTA8 */
//  281       PORTA_PCR8 = PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK;; // FTM is alt3 function for this pin         
        LDR.W    R0,??DataTable44  ;; 0x40049020
        MOV      R1,#+832
        STR      R1,[R0, #+0]
//  282     
//  283       SIM_SCGC6|=SIM_SCGC6_FTM1_MASK;         //使能FTM1时钟      
        LDR.N    R0,??DataTable25_2  ;; 0x4004803c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x2000000
        LDR.N    R1,??DataTable25_2  ;; 0x4004803c
        STR      R0,[R1, #+0]
//  284       
//  285       //change MSnB = 1  
//  286       FTM1_C0SC |= FTM_CnSC_ELSB_MASK;
        LDR.W    R0,??DataTable44_1  ;; 0x4003900c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x8
        LDR.W    R1,??DataTable44_1  ;; 0x4003900c
        STR      R0,[R1, #+0]
//  287       FTM1_C0SC &= ~FTM_CnSC_ELSA_MASK;
        LDR.W    R0,??DataTable44_1  ;; 0x4003900c
        LDR      R0,[R0, #+0]
        BICS     R0,R0,#0x4
        LDR.W    R1,??DataTable44_1  ;; 0x4003900c
        STR      R0,[R1, #+0]
//  288       FTM1_C0SC |= FTM_CnSC_MSB_MASK;     
        LDR.W    R0,??DataTable44_1  ;; 0x4003900c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x20
        LDR.W    R1,??DataTable44_1  ;; 0x4003900c
        STR      R0,[R1, #+0]
//  289       
//  290       //FTM1_SC = FTM_SC_PS(0) | FTM_SC_CLKS(1);
//  291       //FTM1_SC=0X0F;     
//  292       FTM1_SC = 0xB; //not enable the interrupt mask向上计数模式
        LDR.W    R0,??DataTable44_2  ;; 0x40039000
        MOVS     R1,#+11
        STR      R1,[R0, #+0]
//  293       //FTM1_SC=0X1F;       //BIT5  0 FTM counter operates in up counting mode.
//  294                             //1 FTM counter operates in up-down counting mode.      
//  295       //BIT43 FTM1_SC|=FTM1_SC_CLKS_MASK;
//  296                             //00 No clock selected (This in effect disables the FTM counter.)
//  297                             //01 System clock
//  298                             //10 Fixed frequency clock
//  299                             //11 External clock
//  300       //BIT210 FTM1_SC|=FTM1_SC_PS_MASK; 
//  301                             //100M          MOD=2000;     MOD=4000;   MOD=1000; 
//  302                             //000 Divide by 1---12KHZ     6K          24k
//  303                             //001 Divide by 2--- 6KHZ
//  304                             //010 Divide by 4--- 3K
//  305                             //011 Divide by 8--- 1.5K
//  306                             //100 Divide by 16---750
//  307                             //101 Divide by 32---375
//  308                             //110 Divide by 64---187.5HZ
//  309                             //111 Divide by 128--93.75hz             
//  310       
//  311       FTM1_MODE |= FTM_MODE_WPDIS_MASK;      
        LDR.W    R0,??DataTable44_3  ;; 0x40039054
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x4
        LDR.W    R1,??DataTable44_3  ;; 0x40039054
        STR      R0,[R1, #+0]
//  312        //BIT1   Initialize the Channels Output
//  313       //FTMEN is bit 0, need to set to zero so DECAPEN can be set to 0
//  314       FTM1_MODE &= ~1;
        LDR.W    R0,??DataTable44_3  ;; 0x40039054
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+1
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable44_3  ;; 0x40039054
        STR      R0,[R1, #+0]
//  315        //BIT0   FTM Enable
//  316        //0 Only the TPM-compatible registers (first set of registers) can be used without any restriction. Do not use the FTM-specific registers.
//  317        //1 All registers including the FTM-specific registers (second set of registers) are available for use with no restrictions.
//  318       
//  319       FTM1_OUTMASK=0xFE;   //0 Channel output is not masked. It continues to operate normally.
        LDR.W    R0,??DataTable45  ;; 0x40039060
        MOVS     R1,#+254
        STR      R1,[R0, #+0]
//  320                            //1 Channel output is masked. It is forced to its inactive state.
//  321       
//  322       FTM1_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
        LDR.W    R0,??DataTable45_1  ;; 0x40039064
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  323       FTM1_OUTINIT=0;
        LDR.W    R0,??DataTable45_2  ;; 0x4003905c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  324       FTM1_EXTTRIG=0;      //FTM External Trigger (FTMx_EXTTRIG)
        LDR.W    R0,??DataTable45_3  ;; 0x4003906c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  325       FTM1_POL=0;          //Channels Polarity (FTMx_POL)
        LDR.W    R0,??DataTable45_4  ;; 0x40039070
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  326                            //0 The channel polarity is active high.
//  327                            //1 The channel polarity is active low.     
//  328       //Set Edge Aligned PWM
//  329       FTM1_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
        LDR.W    R0,??DataTable45_5  ;; 0x40039080
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+1
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable45_5  ;; 0x40039080
        STR      R0,[R1, #+0]
//  330       //QUADEN is Bit 1, Set Quadrature Decoder Mode (QUADEN) Enable to 0,   (disabled)
//  331       //FTM0_SC = 0x16; //Center Aligned PWM Select = 0, sets FTM Counter to operate in up counting mode,
//  332       //it is field 5 of FTMx_SC (status control) - also setting the pre-scale bits here
//  333       
//  334       FTM1_INVCTRL=0;     //反转控制
        LDR.W    R0,??DataTable45_6  ;; 0x40039090
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  335       FTM1_SWOCTRL=0;     //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
        LDR.W    R0,??DataTable45_7  ;; 0x40039094
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  336       FTM1_PWMLOAD=0;     //FTM PWM Load
        LDR.W    R0,??DataTable45_8  ;; 0x40039098
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  337                           //BIT9: 0 Loading updated values is disabled.
//  338                           //1 Loading updated values is enabled.
//  339       FTM1_CNTIN=0;        //Counter Initial Value      
        LDR.W    R0,??DataTable46  ;; 0x4003904c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  340       FTM1_MOD=30000;       //Modulo value,The EPWM period is determined by (MOD - CNTIN + 0x0001) 
        LDR.W    R0,??DataTable46_1  ;; 0x40039008
        MOVW     R1,#+30000
        STR      R1,[R0, #+0]
//  341                            //采用龙丘时钟初始化函数，可以得到4分频的频率，系统60M频率时，PWM频率是15M,以此类推
//  342                            //PMW频率=X系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD
//  343       FTM1_C0V=Servo_Middle;        //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).
        LDR.W    R0,??DataTable46_2  ;; 0x40039010
        LDR.W    R1,??DataTable46_3
        LDRSH    R1,[R1, #+0]
        STR      R1,[R0, #+0]
//  344       FTM1_CNT=0;          //只有低16位可用
        LDR.W    R0,??DataTable51  ;; 0x40039004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  345 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25:
        DC32     timer

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_1:
        DC32     0x40040008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_2:
        DC32     0x4004803c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_3:
        DC32     0x4003d010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_4:
        DC32     0x40047000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_5:
        DC32     0x40048038

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_6:
        DC32     0x4004904c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_7:
        DC32     P_High
//  346 /************************舵机控制输出PWM模块END***********************/
//  347 
//  348 /*********************电机正反转  C1口C3口输出PWM波*************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  349 void hw_FTM0_init(void)
//  350     {      	
//  351       
//  352       SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK | SIM_SCGC5_PORTD_MASK;
hw_FTM0_init:
        LDR.W    R0,??DataTable46_4  ;; 0x40048038
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1800
        LDR.W    R1,??DataTable46_4  ;; 0x40048038
        STR      R0,[R1, #+0]
//  353         
//  354       
//  355       PORTC_PCR1 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; // FTM is alt4 function for this pin         
        LDR.W    R0,??DataTable46_5  ;; 0x4004b004
        MOV      R1,#+1088
        STR      R1,[R0, #+0]
//  356       PORTC_PCR4 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;
        LDR.W    R0,??DataTable46_6  ;; 0x4004b010
        MOV      R1,#+1088
        STR      R1,[R0, #+0]
//  357       PORTC_PCR2 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;
        LDR.W    R0,??DataTable47  ;; 0x4004b008
        MOV      R1,#+1088
        STR      R1,[R0, #+0]
//  358       
//  359       SIM_SCGC6|=SIM_SCGC6_FTM0_MASK;         //使能FTM0时钟      
        LDR.W    R0,??DataTable47_1  ;; 0x4004803c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable47_1  ;; 0x4004803c
        STR      R0,[R1, #+0]
//  360       
//  361       //C0口 
//  362       FTM0_C0SC |= FTM_CnSC_ELSB_MASK;
        LDR.W    R0,??DataTable47_2  ;; 0x4003800c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x8
        LDR.W    R1,??DataTable47_2  ;; 0x4003800c
        STR      R0,[R1, #+0]
//  363       FTM0_C0SC &= ~FTM_CnSC_ELSA_MASK;
        LDR.W    R0,??DataTable47_2  ;; 0x4003800c
        LDR      R0,[R0, #+0]
        BICS     R0,R0,#0x4
        LDR.W    R1,??DataTable47_2  ;; 0x4003800c
        STR      R0,[R1, #+0]
//  364       FTM0_C0SC |= FTM_CnSC_MSB_MASK;    
        LDR.W    R0,??DataTable47_2  ;; 0x4003800c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x20
        LDR.W    R1,??DataTable47_2  ;; 0x4003800c
        STR      R0,[R1, #+0]
//  365       //C3口
//  366       FTM0_C3SC |= FTM_CnSC_ELSB_MASK;
        LDR.W    R0,??DataTable47_3  ;; 0x40038024
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x8
        LDR.W    R1,??DataTable47_3  ;; 0x40038024
        STR      R0,[R1, #+0]
//  367       FTM0_C3SC &= ~FTM_CnSC_ELSA_MASK;
        LDR.W    R0,??DataTable47_3  ;; 0x40038024
        LDR      R0,[R0, #+0]
        BICS     R0,R0,#0x4
        LDR.W    R1,??DataTable47_3  ;; 0x40038024
        STR      R0,[R1, #+0]
//  368       FTM0_C3SC |= FTM_CnSC_MSB_MASK;
        LDR.W    R0,??DataTable47_3  ;; 0x40038024
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x20
        LDR.W    R1,??DataTable47_3  ;; 0x40038024
        STR      R0,[R1, #+0]
//  369       //C1口 电机控制长期高电压
//  370       FTM0_C1SC |= FTM_CnSC_ELSB_MASK;
        LDR.W    R0,??DataTable47_4  ;; 0x40038014
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x8
        LDR.W    R1,??DataTable47_4  ;; 0x40038014
        STR      R0,[R1, #+0]
//  371       FTM0_C1SC &= ~FTM_CnSC_ELSA_MASK;
        LDR.W    R0,??DataTable47_4  ;; 0x40038014
        LDR      R0,[R0, #+0]
        BICS     R0,R0,#0x4
        LDR.W    R1,??DataTable47_4  ;; 0x40038014
        STR      R0,[R1, #+0]
//  372       FTM0_C1SC |= FTM_CnSC_MSB_MASK;    
        LDR.W    R0,??DataTable47_4  ;; 0x40038014
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x20
        LDR.W    R1,??DataTable47_4  ;; 0x40038014
        STR      R0,[R1, #+0]
//  373       
//  374       
//  375       FTM0_SC = 0xC; //not enable the interrupt mask向上计数模式
        LDR.W    R0,??DataTable48  ;; 0x40038000
        MOVS     R1,#+12
        STR      R1,[R0, #+0]
//  376       FTM0_MODE |= FTM_MODE_WPDIS_MASK;      
        LDR.W    R0,??DataTable48_1  ;; 0x40038054
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x4
        LDR.W    R1,??DataTable48_1  ;; 0x40038054
        STR      R0,[R1, #+0]
//  377        //BIT1   Initialize the Channels Output
//  378       //FTMEN is bit 0, need to set to zero so DECAPEN can be set to 0
//  379       FTM0_MODE &= ~1;
        LDR.W    R0,??DataTable48_1  ;; 0x40038054
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+1
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable48_1  ;; 0x40038054
        STR      R0,[R1, #+0]
//  380        //BIT0   FTM Enable
//  381        //0 Only the TPM-compatible registers (first set of registers) can be used without any restriction. Do not use the FTM-specific registers.
//  382        //1 All registers including the FTM-specific registers (second set of registers) are available for use with no restrictions.
//  383       
//  384       FTM0_OUTMASK=0xf4;   //0 Channel output is not masked. It continues to operate normally.
        LDR.W    R0,??DataTable48_2  ;; 0x40038060
        MOVS     R1,#+244
        STR      R1,[R0, #+0]
//  385                            //1 Channel output is masked. It is forced to its inactive state.
//  386       
//  387       FTM0_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
        LDR.W    R0,??DataTable48_3  ;; 0x40038064
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  388       FTM0_OUTINIT=0;
        LDR.W    R0,??DataTable48_4  ;; 0x4003805c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  389       FTM0_EXTTRIG=0;      //FTM External Trigger (FTMx_EXTTRIG)
        LDR.W    R0,??DataTable48_5  ;; 0x4003806c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  390       FTM0_POL=0;          //Channels Polarity (FTMx_POL)
        LDR.W    R0,??DataTable48_6  ;; 0x40038070
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  391                            //0 The channel polarity is active high.
//  392                            //1 The channel polarity is active low.     
//  393       //Set Edge Aligned PWM
//  394       FTM0_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
        LDR.W    R0,??DataTable48_7  ;; 0x40038080
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+1
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable48_7  ;; 0x40038080
        STR      R0,[R1, #+0]
//  395       //QUADEN is Bit 1, Set Quadrature Decoder Mode (QUADEN) Enable to 0,   (disabled)
//  396       //FTM0_SC = 0x16; //Center Aligned PWM Select = 0, sets FTM Counter to operate in up counting mode,
//  397       //it is field 5 of FTMx_SC (status control) - also setting the pre-scale bits here
//  398       
//  399       FTM0_INVCTRL=0;     //反转控制
        LDR.W    R0,??DataTable49_1  ;; 0x40038090
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  400       FTM0_SWOCTRL=0;     //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
        LDR.W    R0,??DataTable49_2  ;; 0x40038094
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  401       FTM0_PWMLOAD=0;     //FTM PWM Load
        LDR.W    R0,??DataTable49_3  ;; 0x40038098
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  402                           //BIT9: 0 Loading updated values is disabled.
//  403                           //1 Loading updated values is enabled.
//  404       FTM0_CNTIN=0;        //Counter Initial Value      
        LDR.W    R0,??DataTable49_4  ;; 0x4003804c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  405       FTM0_MOD=375;       //375为10K 
        LDR.W    R0,??DataTable49_5  ;; 0x40038008
        MOVW     R1,#+375
        STR      R1,[R0, #+0]
//  406                            //采用龙丘时钟初始化函数，可以得到4分频的频率，系统60M频率时，PWM频率是15M,以此类推
//  407                            //PMW频率=X系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD
//  408       FTM0_C0V=0;        //反转
        LDR.W    R0,??DataTable49_6  ;; 0x40038010
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  409       FTM0_C1V=375;        //持续高电平
        LDR.W    R0,??DataTable49_7  ;; 0x40038018
        MOVW     R1,#+375
        STR      R1,[R0, #+0]
//  410       FTM0_C3V=0;           //正转
        LDR.W    R0,??DataTable49_8  ;; 0x40038028
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  411       
//  412       FTM0_CNT=0;          //只有低16位可用
        LDR.W    R0,??DataTable53  ;; 0x40038004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  413 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable26:
        DC8      0x4F, 0x4B, 0x00, 0x00

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable26_1:
        DC32     D_High
//  414 /*********************电机正反转  C1口C3口输出PWM波END*************/
//  415 
//  416 /****************FTM正交分解，用于测脉冲数的   A10口*************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  417 void FTM2_QUAD_Init(void)  
//  418 {  
//  419   PORTA_PCR10    =  PORT_PCR_MUX(6);             // 设置引脚A10引脚为FTM2_PHA功能  
FTM2_QUAD_Init:
        LDR.W    R0,??DataTable49_9  ;; 0x40049028
        MOV      R1,#+1536
        STR      R1,[R0, #+0]
//  420   PORTA_PCR11    =  PORT_PCR_MUX(6);             // 设置引脚A11引脚为FTM2_PHB功能  
        LDR.W    R0,??DataTable49_10  ;; 0x4004902c
        MOV      R1,#+1536
        STR      R1,[R0, #+0]
//  421   PORT_PCR_REG(PORTA_BASE_PTR, 10) |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ; //开弱上拉
        LDR.W    R0,??DataTable49_9  ;; 0x40049028
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x3
        LDR.W    R1,??DataTable49_9  ;; 0x40049028
        STR      R0,[R1, #+0]
//  422   PORT_PCR_REG(PORTA_BASE_PTR, 11) |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ; //开弱上拉
        LDR.W    R0,??DataTable49_10  ;; 0x4004902c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x3
        LDR.W    R1,??DataTable49_10  ;; 0x4004902c
        STR      R0,[R1, #+0]
//  423   SIM_SCGC3     |=  SIM_SCGC3_FTM2_MASK;                // 使能FTM2时钟  
        LDR.W    R0,??DataTable50  ;; 0x40048030
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable50  ;; 0x40048030
        STR      R0,[R1, #+0]
//  424   FTM2_MODE     |=  FTM_MODE_WPDIS_MASK;                // 写保护禁止  
        LDR.W    R0,??DataTable50_1  ;; 0x400b8054
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x4
        LDR.W    R1,??DataTable50_1  ;; 0x400b8054
        STR      R0,[R1, #+0]
//  425   FTM2_QDCTRL   |=  FTM_QDCTRL_QUADMODE_MASK;          // AB相同时确定方向和计数值  
        LDR.W    R0,??DataTable50_2  ;; 0x400b8080
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x8
        LDR.W    R1,??DataTable50_2  ;; 0x400b8080
        STR      R0,[R1, #+0]
//  426   FTM2_CNTIN     =  0;                                 // FTM0计数器初始值为0  
        LDR.W    R0,??DataTable50_3  ;; 0x400b804c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  427   FTM2_MOD       =  65535;                                 // 结束值  
        LDR.W    R0,??DataTable50_4  ;; 0x400b8008
        MOVW     R1,#+65535
        STR      R1,[R0, #+0]
//  428   FTM2_QDCTRL   |=  FTM_QDCTRL_QUADEN_MASK;             // 启用FTM2正交解码模式  
        LDR.W    R0,??DataTable50_2  ;; 0x400b8080
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable50_2  ;; 0x400b8080
        STR      R0,[R1, #+0]
//  429   FTM2_MODE     |=  FTM_MODE_FTMEN_MASK;                // FTM2EN=1    
        LDR.W    R0,??DataTable50_1  ;; 0x400b8054
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable50_1  ;; 0x400b8054
        STR      R0,[R1, #+0]
//  430   FTM2_CNT       =  0;  
        LDR.W    R0,??DataTable54  ;; 0x400b8004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  431 }  
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable27:
        DC32     P_Mid

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable27_1:
        DC32     D_Mid

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable27_2:
        DC32     Servo_P_zhidao
//  432 /****************FTM正交分解，用于测脉冲数的   A10口END*************/
//  433 
//  434 
//  435 /**************************IO口初始化***********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  436 void IO_Init()
//  437 {
//  438 	/* 打开各个端口的时钟源 */
//  439 	SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK | SIM_SCGC5_PORTB_MASK | 
//  440 	SIM_SCGC5_PORTC_MASK | SIM_SCGC5_PORTD_MASK | SIM_SCGC5_PORTE_MASK;
IO_Init:
        LDR.W    R0,??DataTable46_4  ;; 0x40048038
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x3E00
        LDR.W    R1,??DataTable46_4  ;; 0x40048038
        STR      R0,[R1, #+0]
//  441 	PORTA_PCR14=PORT_PCR_MUX(1);//A14引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_1  ;; 0x40049038
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  442 	PORTA_PCR15=PORT_PCR_MUX(1);//A15引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_2  ;; 0x4004903c
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  443 	PORTA_PCR16=PORT_PCR_MUX(1);//A16引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_3  ;; 0x40049040
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  444 	PORTA_PCR17=PORT_PCR_MUX(1);//A17引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_4  ;; 0x40049044
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  445 	
//  446 	//B0~B7设为GPIO输入模式，连接ov7260的8位灰度输入
//  447 	PORTB_PCR0=PORT_PCR_MUX(1);//B0引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_5  ;; 0x4004a000
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  448 	PORTB_PCR1=PORT_PCR_MUX(1);//B1引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_6  ;; 0x4004a004
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  449 	PORTB_PCR2=PORT_PCR_MUX(1);//B2引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_7  ;; 0x4004a008
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  450 	PORTB_PCR3=PORT_PCR_MUX(1);//B3引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_8  ;; 0x4004a00c
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  451 	PORTB_PCR4=PORT_PCR_MUX(1);//B4引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_9  ;; 0x4004a010
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  452 	PORTB_PCR5=PORT_PCR_MUX(1);//B5引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_10  ;; 0x4004a014
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  453 	PORTB_PCR6=PORT_PCR_MUX(1);//B6引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_11  ;; 0x4004a018
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  454 	PORTB_PCR7=PORT_PCR_MUX(1);//B7引脚设置为GPIO模式
        LDR.W    R0,??DataTable51_12  ;; 0x4004a01c
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  455 	GPIOB_PDDR&=0XFFFFFF00;//B0~B7设置为输入，数字摄像头8位灰度输入
        LDR.W    R0,??DataTable51_13  ;; 0x400ff054
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+8
        LSLS     R0,R0,#+8
        LDR.W    R1,??DataTable51_13  ;; 0x400ff054
        STR      R0,[R1, #+0]
//  456 	
//  457 	PORTA_PCR24=PORT_PCR_MUX(1)|PORT_PCR_IRQC(10);//A24引脚设置为GPIO模式，下降沿中断,场中断
        LDR.W    R0,??DataTable51_14  ;; 0x40049060
        LDR.W    R1,??DataTable51_15  ;; 0xa0100
        STR      R1,[R0, #+0]
//  458 	
//  459 	PORTB_PCR10=PORT_PCR_MUX(1)|PORT_PCR_IRQC(9);//B10引脚设置为GPIO模式，上升沿中断,行中断
        LDR.W    R0,??DataTable51_16  ;; 0x4004a028
        LDR.W    R1,??DataTable51_17  ;; 0x90100
        STR      R1,[R0, #+0]
//  460 	
//  461 	PORTB_PCR11=PORT_PCR_MUX(1)|PORT_PCR_IRQC(1);//B11引脚设置为GPIO模式，上升沿触发DMA请求
        LDR.W    R0,??DataTable51_18  ;; 0x4004a02c
        LDR.W    R1,??DataTable51_19  ;; 0x10100
        STR      R1,[R0, #+0]
//  462 	
//  463         PORTC_PCR9=PORT_PCR_MUX(1)|PORT_PCR_IRQC(10);//C9引脚设置为GPIO模式，下降沿中断,红外遥控停车中断
        LDR.W    R0,??DataTable52  ;; 0x4004b024
        LDR.W    R1,??DataTable51_15  ;; 0xa0100
        STR      R1,[R0, #+0]
//  464         
//  465         
//  466         
//  467 	GPIOA_PDDR=GPIO_PDDR_PDD(GPIO_PIN(14)|GPIO_PIN(16)|GPIO_PIN(17)|GPIO_PIN(26)|GPIO_PIN(28)); //A14为输出模式  P4灯闪烁证明进入PIT中断给脉冲计时
        LDR.W    R0,??DataTable52_1  ;; 0x400ff014
        LDR.W    R1,??DataTable52_2  ;; 0x14034000
        STR      R1,[R0, #+0]
//  468         
//  469         PORTA_PCR28=PORT_PCR_MUX(1);//A17引脚设置为GPIO模式
        LDR.W    R0,??DataTable52_3  ;; 0x40049070
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  470         PORTA_PCR26=PORT_PCR_MUX(1);//A17引脚设置为GPIO模式
        LDR.W    R0,??DataTable54_1  ;; 0x40049068
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  471 	//PORTC_PCR8=PORT_PCR_MUX(1);//C8引脚设置为GPIO模式，液晶命令/数据选择引脚
//  472 	//PORTC_PCR10=PORT_PCR_MUX(1);//C10引脚设置为GPIO模式，液晶复位引脚
//  473 	//GPIOC_PDDR|=0X00000500;//C8,C10设置为输出
//  474 	//GPIOA_PDDR|=0X0003E000;//A14~A17设置为输出
//  475 	//GPIOA_PCOR|=0X0003E000;//初始低电平输出
//  476 	//PORTD_PCR2 = PORT_PCR_MUX(1)|PORT_PCR_IRQC(0x9);//IRQ|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
//  477 	//PORTD_PCR2 = PORT_PCR_MUX(1)|PORT_PCR_IRQC(0x1);//DMA|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
//  478 	//D2口GPIO功能，上升沿中断，PE启用拉电阻，PS上拉电阻
//  479 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable28:
        DC32     Servo_D_zhidao
//  480 /**************************IO口初始化END***********************/
//  481 
//  482 
//  483 /********************中心线发送**********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  484 void SCI_center(void)
//  485 {
SCI_center:
        PUSH     {R4,LR}
//  486   uint8 a=0;
        MOVS     R4,#+0
//  487   //uart_send1(UART0,0xff);
//  488   //uart_send1(UART0,0xff);
//  489   for(a=0;a<H;a++)
        MOVS     R0,#+0
        MOVS     R4,R0
        B.N      ??SCI_center_0
//  490   {
//  491     uart_send1(UART0,center[a]);
??SCI_center_1:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.W    R0,??DataTable52_4
        LDRB     R1,[R4, R0]
        LDR.W    R0,??DataTable53_1  ;; 0x4006a000
        BL       uart_send1
//  492   }
        ADDS     R4,R4,#+1
??SCI_center_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+55
        BCC.N    ??SCI_center_1
//  493 }
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable29:
        DC32     0x4004b014

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable29_1:
        DC32     0x4004000c
//  494 /********************中心线发送**********************/
//  495 /******************与上位机相连，用于看图像的*****************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  496 void SCI(void)
//  497 {
SCI:
        PUSH     {R3-R5,LR}
//  498   volatile uint8 *uc_FramePoint;
//  499   uint8 a=0;
        MOVS     R4,#+0
//  500   uint16 b=0;   
        MOVS     R5,#+0
//  501   //uart_send1(UART0,0x00);
//  502   //uart_send1(UART0,0xFF);
//  503   uart_send1(UART0,0x01);
        MOVS     R1,#+1
        LDR.W    R0,??DataTable53_1  ;; 0x4006a000
        BL       uart_send1
//  504   //uart_send1(UART0,0x00);
//  505   for(a=0;a<H;a++)
        MOVS     R0,#+0
        MOVS     R4,R0
        B.N      ??SCI_0
//  506   {
//  507     for(b=0;b<V;b++)
//  508     {
//  509       uc_FramePoint=video[a]+b;
??SCI_1:
        UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R1,??DataTable53_2
        MLA      R0,R0,R4,R1
        ADDS     R0,R5,R0
//  510       uart_send1(UART0,*uc_FramePoint);
        LDRB     R1,[R0, #+0]
        LDR.W    R0,??DataTable53_1  ;; 0x4006a000
        BL       uart_send1
//  511     }
        ADDS     R5,R5,#+1
??SCI_2:
        UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
        CMP      R5,#+160
        BCC.N    ??SCI_1
        ADDS     R4,R4,#+1
??SCI_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+55
        BCS.N    ??SCI_3
        MOVS     R5,#+0
        B.N      ??SCI_2
//  512   }
//  513   uart_send1(UART0,0x01);
??SCI_3:
        MOVS     R1,#+1
        LDR.W    R0,??DataTable53_1  ;; 0x4006a000
        BL       uart_send1
//  514   PORTA_PCR24|=PORT_PCR_ISF_MASK;//清除中断标志
        LDR.W    R0,??DataTable51_14  ;; 0x40049060
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable51_14  ;; 0x40049060
        STR      R0,[R1, #+0]
//  515 }
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable30:
        DC32     P_Low

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable30_1:
        DC32     D_Low
//  516 /******************与上位机相连，用于看图像的END*****************/
//  517 
//  518 /********************串口模块波特率的设置*********************/
//  519 //UART0初始化，使用PTD6为UART0_RX,PTD7为UART0_TX   D6接RXD  D7接TXD
//  520 //波特率：115200

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  521 void UART0_Init(void)
//  522 {
UART0_Init:
        PUSH     {R4}
//  523 	unsigned long uartclk_khz=180000;//时钟180MHz
        LDR.W    R0,??DataTable54_2  ;; 0x2bf20
//  524 	unsigned long baud=115200;//波特率256000
        MOVS     R1,#+115200
//  525 	unsigned short sbr,brfa;
//  526 	PORTD_PCR6|=PORT_PCR_MUX(3);//将D6引脚设置为模式3，即UART0_RX
        LDR.W    R2,??DataTable54_3  ;; 0x4004c018
        LDR      R2,[R2, #+0]
        MOV      R3,#+768
        ORRS     R2,R3,R2
        LDR.W    R3,??DataTable54_3  ;; 0x4004c018
        STR      R2,[R3, #+0]
//  527 	PORTD_PCR7|=PORT_PCR_MUX(3);//将D7引脚设置为模式3，即UART0_TX
        LDR.W    R2,??DataTable54_4  ;; 0x4004c01c
        LDR      R2,[R2, #+0]
        MOV      R3,#+768
        ORRS     R2,R3,R2
        LDR.W    R3,??DataTable54_4  ;; 0x4004c01c
        STR      R2,[R3, #+0]
//  528 	SIM_SCGC4|=SIM_SCGC4_UART0_MASK;//开启UART0时钟
        LDR.W    R2,??DataTable42  ;; 0x40048034
        LDR      R2,[R2, #+0]
        ORRS     R2,R2,#0x400
        LDR.W    R3,??DataTable42  ;; 0x40048034
        STR      R2,[R3, #+0]
//  529 	sbr=(unsigned short)((uartclk_khz*1000)/(baud*16));//计算并设置波特率
        MOV      R2,#+1000
        MUL      R2,R2,R0
        LSLS     R3,R1,#+4
        UDIV     R2,R2,R3
//  530 	
//  531 	UART0_BDH=(unsigned char)((sbr&0x1F00)>>8);
        UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
        ASRS     R3,R2,#+8
        ANDS     R3,R3,#0x1F
        LDR.W    R4,??DataTable53_1  ;; 0x4006a000
        STRB     R3,[R4, #+0]
//  532 	UART0_BDL=(unsigned char)(sbr&0x00FF);
        LDR.W    R3,??DataTable54_5  ;; 0x4006a001
        STRB     R2,[R3, #+0]
//  533 	brfa = (((uartclk_khz*32000)/(baud*16))-(sbr*32));
        MOV      R3,#+32000
        MULS     R0,R3,R0
        LSLS     R1,R1,#+4
        UDIV     R0,R0,R1
        UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
        SUBS     R0,R0,R2, LSL #+5
//  534 	UART0_C4 = (unsigned char)(brfa & 0x001F);
        ANDS     R0,R0,#0x1F
        LDR.W    R1,??DataTable54_6  ;; 0x4006a00a
        STRB     R0,[R1, #+0]
//  535 	UART0_C2|=(UART_C2_TE_MASK|UART_C2_RE_MASK);
        LDR.W    R0,??DataTable54_7  ;; 0x4006a003
        LDRB     R0,[R0, #+0]
        ORRS     R0,R0,#0xC
        LDR.W    R1,??DataTable54_7  ;; 0x4006a003
        STRB     R0,[R1, #+0]
//  536 	UART0_C1=0;	
        LDR.W    R0,??DataTable54_8  ;; 0x4006a002
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
//  537 }
        POP      {R4}
        BX       LR               ;; return
//  538 /********************串口模块波特率的设置END*********************/
//  539 
//  540 /****************************DMA初始化*****************************/
//  541 //DMA初始化 使用PLCK经过4分频后与B11相连用于DMA外部中断

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  542 void DMA0_Init(void)
//  543 {
//  544 	SIM_SCGC6|=SIM_SCGC6_DMAMUX_MASK;//打开DMA多路复用器时钟
DMA0_Init:
        LDR.W    R0,??DataTable47_1  ;; 0x4004803c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x2
        LDR.W    R1,??DataTable47_1  ;; 0x4004803c
        STR      R0,[R1, #+0]
//  545 	SIM_SCGC7|=SIM_SCGC7_DMA_MASK;//打开DMA模块时钟
        LDR.W    R0,??DataTable54_9  ;; 0x40048040
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x2
        LDR.W    R1,??DataTable54_9  ;; 0x40048040
        STR      R0,[R1, #+0]
//  546 	DMAMUX_CHCFG0=DMAMUX_CHCFG_SOURCE(50);//DMA通道0对应50号DMA请求，即PORTB	
        LDR.W    R0,??DataTable54_10  ;; 0x40021000
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
//  547 	
//  548 	DMA_TCD0_CITER_ELINKNO=DMA_CITER_ELINKNO_CITER(V);//当前主循环次数,采集点数
        LDR.W    R0,??DataTable54_11  ;; 0x40009016
        MOVS     R1,#+160
        STRH     R1,[R0, #+0]
//  549 	DMA_TCD0_BITER_ELINKNO=DMA_BITER_ELINKNO_BITER(V);//起始主循环次数，采集点数
        LDR.W    R0,??DataTable54_12  ;; 0x4000901e
        MOVS     R1,#+160
        STRH     R1,[R0, #+0]
//  550 	DMA_TCD0_SADDR=(uint32)&GPIOB_PDIR;//设置源地址GPIO口，PORTB
        LDR.W    R0,??DataTable54_13  ;; 0x40009000
        LDR.W    R1,??DataTable54_14  ;; 0x400ff050
        STR      R1,[R0, #+0]
//  551 	DMA_TCD0_SOFF=0;//每次传送源地址不变
        LDR.W    R0,??DataTable54_15  ;; 0x40009004
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
//  552 	//DMA_TCD1_NBYTES_MLOFFYES=DMA_NBYTES_MLOFFYES_NBYTES(1)+DMA_NBYTES_MLOFFNO_SMLOE_MASK+DMA_NBYTES_MLOFFYES_MLOFF(-4);//传送4字节
//  553 	DMA_TCD0_NBYTES_MLNO=DMA_NBYTES_MLNO_NBYTES(1);//每次读取一字节
        LDR.W    R0,??DataTable54_16  ;; 0x40009008
        MOVS     R1,#+1
        STR      R1,[R0, #+0]
//  554 	DMA_TCD0_SLAST=0;//主循环结束后源地址0回写tcd
        LDR.W    R0,??DataTable54_17  ;; 0x4000900c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  555 	DMA_TCD0_DLASTSGA=0;//主循环结束后目的地址0回写tcd
        LDR.W    R0,??DataTable54_18  ;; 0x40009018
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  556 	DMA_TCD0_DADDR=(uint32)video;//设置目的地址，video数组第一个元素
        LDR.W    R0,??DataTable54_19  ;; 0x40009010
        LDR.W    R1,??DataTable53_2
        STR      R1,[R0, #+0]
//  557 	DMA_TCD0_DOFF=1;//每次写目的地址加1
        LDR.W    R0,??DataTable54_20  ;; 0x40009014
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
//  558 	DMA_TCD0_ATTR=DMA_ATTR_SSIZE(0)+DMA_ATTR_DSIZE(0);//源数据宽度8bit，目的数据宽度8bit
        LDR.W    R0,??DataTable54_21  ;; 0x40009006
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
//  559 	DMA_TCD0_CSR=DMA_CSR_DREQ_MASK;//DMA通道0主循环结束后停止硬件请求
        LDR.W    R0,??DataTable54_22  ;; 0x4000901c
        MOVS     R1,#+8
        STRH     R1,[R0, #+0]
//  560 	DMA_TCD0_CSR|=DMA_CSR_INTMAJOR_MASK;//使能DMA0中断
        LDR.W    R0,??DataTable54_22  ;; 0x4000901c
        LDRH     R0,[R0, #+0]
        ORRS     R0,R0,#0x2
        LDR.W    R1,??DataTable54_22  ;; 0x4000901c
        STRH     R0,[R1, #+0]
//  561 	DMAMUX_CHCFG0|=DMAMUX_CHCFG_ENBL_MASK;//DMA通道0使能
        LDR.W    R0,??DataTable54_10  ;; 0x40021000
        LDRB     R0,[R0, #+0]
        ORRS     R0,R0,#0x80
        LDR.W    R1,??DataTable54_10  ;; 0x40021000
        STRB     R0,[R1, #+0]
//  562 	
//  563 	//DMA_TCD1_CSR|=DMA_CSR_INTMAJOR_MASK;//使能DMA中断
//  564 	//DMA_TCD0_CSR|=DMA_CSR_startline_MASK;
//  565 }
        BX       LR               ;; return
//  566 /****************************DMA初始化END*****************************/
//  567 
//  568 //==========================================================================
//  569 //函数名称: hw_pit_init                                                         
//  570 //函数返回: 无                                          
//  571 //参数说明: pitno:表示pit通道号。  
//  572 //			timeout:表示定时溢出开始递减的值          
//  573 //功能概要: 设置相关寄存器的值        
//  574 //==========================================================================

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  575     void hw_pit_init(uint8 pitno,uint32 timeout)
//  576     {
//  577       SIM_SCGC6|=SIM_SCGC6_PIT_MASK;              //使能PIT时钟
hw_pit_init:
        LDR.W    R2,??DataTable47_1  ;; 0x4004803c
        LDR      R2,[R2, #+0]
        ORRS     R2,R2,#0x800000
        LDR.W    R3,??DataTable47_1  ;; 0x4004803c
        STR      R2,[R3, #+0]
//  578       PIT_MCR&=~(PIT_MCR_MDIS_MASK);              //调试模式下禁止
        LDR.W    R2,??DataTable54_23  ;; 0x40037000
        LDR      R2,[R2, #+0]
        BICS     R2,R2,#0x2
        LDR.W    R3,??DataTable54_23  ;; 0x40037000
        STR      R2,[R3, #+0]
//  579       PIT_MCR|=PIT_MCR_FRZ_MASK;                  //使能PIT模块时钟
        LDR.W    R2,??DataTable54_23  ;; 0x40037000
        LDR      R2,[R2, #+0]
        ORRS     R2,R2,#0x1
        LDR.W    R3,??DataTable54_23  ;; 0x40037000
        STR      R2,[R3, #+0]
//  580       PIT_LDVAL(pitno)=timeout;                   //设置周期
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LSLS     R2,R0,#+4
        LDR.W    R3,??DataTable54_24  ;; 0x40037100
        STR      R1,[R2, R3]
//  581       PIT_TCTRL(pitno)|=PIT_TCTRL_TEN_MASK;       //使能pit模块运行
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R1,??DataTable54_24  ;; 0x40037100
        ADDS     R1,R1,R0, LSL #+4
        LDR      R1,[R1, #+8]
        ORRS     R1,R1,#0x1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R2,??DataTable54_24  ;; 0x40037100
        ADDS     R2,R2,R0, LSL #+4
        STR      R1,[R2, #+8]
//  582       PIT_TCTRL(pitno)&=~(PIT_TCTRL_TIE_MASK);    //关pit中断
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R1,??DataTable54_24  ;; 0x40037100
        ADDS     R1,R1,R0, LSL #+4
        LDR      R1,[R1, #+8]
        BICS     R1,R1,#0x2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R2,??DataTable54_24  ;; 0x40037100
        ADDS     R0,R2,R0, LSL #+4
        STR      R1,[R0, #+8]
//  583     }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable33:
        DC32     `?<Constant "Mid_Wu">`
//  584     
//  585 //==========================================================================
//  586 //函数名: enable_pit_interrupt                                                     
//  587 //函数返回: 无                                              
//  588 //参数说明: pitno: 表示pit通道号      
//  589 //功能概要: 开接收引脚的IRQ中断                                                                                                     
//  590 //==========================================================================

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  591     void enable_pit_interrupt(uint8 pitno)
//  592     {
enable_pit_interrupt:
        PUSH     {R7,LR}
//  593       PIT_TCTRL(pitno)|=(PIT_TCTRL_TIE_MASK); //开pit中断
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R1,??DataTable54_24  ;; 0x40037100
        ADDS     R1,R1,R0, LSL #+4
        LDR      R1,[R1, #+8]
        ORRS     R1,R1,#0x2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R2,??DataTable54_24  ;; 0x40037100
        ADDS     R2,R2,R0, LSL #+4
        STR      R1,[R2, #+8]
//  594       switch(pitno)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.N    ??enable_pit_interrupt_0
        CMP      R0,#+2
        BEQ.N    ??enable_pit_interrupt_1
        BCC.N    ??enable_pit_interrupt_2
        CMP      R0,#+3
        BEQ.N    ??enable_pit_interrupt_3
        B.N      ??enable_pit_interrupt_4
//  595       {
//  596       case 0:
//  597         enable_irq(68);			      //开接收引脚的IRQ中断
??enable_pit_interrupt_0:
        MOVS     R0,#+68
        BL       enable_irq
//  598         break;
        B.N      ??enable_pit_interrupt_4
//  599       case 1:
//  600         enable_irq(69);			      //开接收引脚的IRQ中断
??enable_pit_interrupt_2:
        MOVS     R0,#+69
        BL       enable_irq
//  601         break;
        B.N      ??enable_pit_interrupt_4
//  602       case 2:
//  603         enable_irq(70);			      //开接收引脚的IRQ中断
??enable_pit_interrupt_1:
        MOVS     R0,#+70
        BL       enable_irq
//  604         break;
        B.N      ??enable_pit_interrupt_4
//  605       case 3:
//  606         enable_irq(71);			      //开接收引脚的IRQ中断
??enable_pit_interrupt_3:
        MOVS     R0,#+71
        BL       enable_irq
//  607         break;
//  608       }
//  609     }
??enable_pit_interrupt_4:
        POP      {R0,PC}          ;; return
//  610 
//  611 //==========================================================================
//  612 //函数名: disable_pit_interrupt                                                     
//  613 //函数返回: 无                                              
//  614 //参数说明: pitno: 表示pit通道号      
//  615 //功能概要: 开接收引脚的IRQ中断                                                                                                     
//  616 //==========================================================================

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  617     void disable_pit_interrupt(uint8 pitno)
//  618     {
disable_pit_interrupt:
        PUSH     {R7,LR}
//  619       PIT_TCTRL(pitno)&=~(PIT_TCTRL_TIE_MASK);//关pit中断
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R1,??DataTable54_24  ;; 0x40037100
        ADDS     R1,R1,R0, LSL #+4
        LDR      R1,[R1, #+8]
        BICS     R1,R1,#0x2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R2,??DataTable54_24  ;; 0x40037100
        ADDS     R2,R2,R0, LSL #+4
        STR      R1,[R2, #+8]
//  620       switch(pitno)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.N    ??disable_pit_interrupt_0
        CMP      R0,#+2
        BEQ.N    ??disable_pit_interrupt_1
        BCC.N    ??disable_pit_interrupt_2
        CMP      R0,#+3
        BEQ.N    ??disable_pit_interrupt_3
        B.N      ??disable_pit_interrupt_4
//  621       {
//  622       case 0:
//  623         disable_irq(68);	              //关接收引脚的IRQ中断
??disable_pit_interrupt_0:
        MOVS     R0,#+68
        BL       disable_irq
//  624         break;
        B.N      ??disable_pit_interrupt_4
//  625       case 1:
//  626         disable_irq(69);		      //关接收引脚的IRQ中断
??disable_pit_interrupt_2:
        MOVS     R0,#+69
        BL       disable_irq
//  627         break;
        B.N      ??disable_pit_interrupt_4
//  628       case 2:
//  629         disable_irq(70);		      //关接收引脚的IRQ中断
??disable_pit_interrupt_1:
        MOVS     R0,#+70
        BL       disable_irq
//  630         break;
        B.N      ??disable_pit_interrupt_4
//  631       case 3:
//  632         disable_irq(71);		      //关接收引脚的IRQ中断
??disable_pit_interrupt_3:
        MOVS     R0,#+71
        BL       disable_irq
//  633         break;
//  634       }
//  635     }
??disable_pit_interrupt_4:
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable35:
        DC32     `?<Constant "High_Wu">`
//  636 
//  637 //*************************中断区*****************************//
//  638 //DMA外部中断   B11口

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//  639 void DMA_CHO_ISR(void)
//  640 {
//  641         DisableInterrupts;
DMA_CHO_ISR:
        CPSID i         
//  642         //DMA_INT&=~(DMA_INT_INT0_MASK);
//  643 	DMA_INT|=DMA_INT_INT0_MASK;//清除通道0中断
        LDR.W    R0,??DataTable54_25  ;; 0x40008024
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable54_25  ;; 0x40008024
        STR      R0,[R1, #+0]
//  644 	//putstr("DMA complete！");
//  645 	//GPIOA_PTOR|=0X0003E000;//A14~A17设置为输出
//  646 	row_F[imagerow]=1;//采集完成标志
        LDR.W    R0,??DataTable55
        LDR      R0,[R0, #+0]
        LDR.W    R1,??DataTable54_26
        MOVS     R2,#+1
        STRB     R2,[R0, R1]
//  647 	imagerow++;	
        LDR.W    R0,??DataTable55
        LDR      R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable55
        STR      R0,[R1, #+0]
//  648         EnableInterrupts;
        CPSIE i         
//  649 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable36:
        DC32     `?<Constant "High_You">`
//  650 
//  651 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//  652 void porta_isr(void)//场中断，A24，下降沿中断
//  653 { 
porta_isr:
        PUSH     {R7,LR}
//  654   DisableInterrupts;
        CPSID i         
//  655   //PORTA_ISFR = 0xFFFFFFFF;  //Clear Port A ISR flags
//  656   PORTA_PCR24|=PORT_PCR_ISF_MASK;//清除中断标志
        LDR.W    R0,??DataTable51_14  ;; 0x40049060
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable51_14  ;; 0x40049060
        STR      R0,[R1, #+0]
//  657   DMA0_Init();
        BL       DMA0_Init
//  658   enable_irq(0);//使能DMA通道0完成中断
        MOVS     R0,#+0
        BL       enable_irq
//  659   row=0;//初始化行
        LDR.W    R0,??DataTable55_1
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  660   imagerow=0;//初始化采集行
        LDR.W    R0,??DataTable55
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  661   enable_irq (88);//使能B口中断 ，B10行中断
        MOVS     R0,#+88
        BL       enable_irq
//  662   EnableInterrupts;
        CPSIE i         
//  663 }
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable37:
        DC32     KeyValue

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable37_1:
        DC32     car_speed
//  664 
//  665 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//  666 void portb_isr(void)//行中断，B10，上升沿中断
//  667 {
portb_isr:
        PUSH     {R7,LR}
//  668   DisableInterrupts;
        CPSID i         
//  669   PORTB_PCR10|=PORT_PCR_ISF_MASK;//清除中断标志位
        LDR.W    R0,??DataTable51_16  ;; 0x4004a028
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable51_16  ;; 0x4004a028
        STR      R0,[R1, #+0]
//  670   row++; //行计数
        LDR.W    R0,??DataTable55_1
        LDR      R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable55_1
        STR      R0,[R1, #+0]
//  671   //DMA_ERQ=0x1;//使能通道0硬件DMA请求    查看整场图像的时候用的
//  672   if(row==data_table[imagerow])//如果当前行数据应该采集
        LDR.W    R0,??DataTable55_1
        LDR      R0,[R0, #+0]
        LDR.W    R1,??DataTable55
        LDR      R1,[R1, #+0]
        LDR.W    R2,??DataTable55_2
        LDR      R1,[R2, R1, LSL #+2]
        CMP      R0,R1
        BNE.N    ??portb_isr_0
//  673   {
//  674     DMA_ERQ|=DMA_ERQ_ERQ0_MASK;//使能通道0硬件DMA请求  
        LDR.W    R0,??DataTable55_3  ;; 0x4000800c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable55_3  ;; 0x4000800c
        STR      R0,[R1, #+0]
        B.N      ??portb_isr_1
//  675   } 
//  676    else if(row>=endlineROW) //一场完成，关闭行中断
??portb_isr_0:
        LDR.W    R0,??DataTable55_1
        LDR      R0,[R0, #+0]
        CMP      R0,#+169
        BCC.N    ??portb_isr_1
//  677   {  
//  678     //
//  679     DMA_ERQ=0x00;
        LDR.W    R0,??DataTable55_3  ;; 0x4000800c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  680     disable_irq(0);
        MOVS     R0,#+0
        BL       disable_irq
//  681     disable_irq(88);
        MOVS     R0,#+88
        BL       disable_irq
//  682    // SCI();
//  683     finish=1;
        LDR.W    R0,??DataTable55_4
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
//  684     GPIOA_PDOR=GPIOA_PDOR^(GPIO_PDOR_PDO(GPIO_PIN(28)));//对引脚某位进行取反操作
        LDR.W    R0,??DataTable55_5  ;; 0x400ff000
        LDR      R0,[R0, #+0]
        EORS     R0,R0,#0x10000000
        LDR.W    R1,??DataTable55_5  ;; 0x400ff000
        STR      R0,[R1, #+0]
//  685   }
//  686   EnableInterrupts;
??portb_isr_1:
        CPSIE i         
//  687 }
        POP      {R0,PC}          ;; return
//  688 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  689 void pit1_isr(void)
//  690 {
pit1_isr:
        PUSH     {R7,LR}
//  691   PIT_TFLG(1)|=PIT_TFLG_TIF_MASK;
        LDR.W    R0,??DataTable55_6  ;; 0x4003711c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable55_6  ;; 0x4003711c
        STR      R0,[R1, #+0]
//  692   enable_pit_interrupt(1);
        MOVS     R0,#+1
        BL       enable_pit_interrupt
//  693   timer++;
        LDR.W    R0,??DataTable56
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable56
        STRH     R0,[R1, #+0]
//  694 }
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable39:
        DC32     speed_cut_timer
//  695   
//  696 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//  697 void portc_isr(void)
//  698 {
portc_isr:
        PUSH     {R7,LR}
//  699   DisableInterrupts;
        CPSID i         
//  700   
//  701   PORTC_PCR9|=PORT_PCR_ISF_MASK;//清除中断标志位
        LDR.W    R0,??DataTable52  ;; 0x4004b024
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable52  ;; 0x4004b024
        STR      R0,[R1, #+0]
//  702   //light_change(Light_Run_PORT,Light_Run3);
//  703   ir_deal();
        BL       ir_deal
//  704   EnableInterrupts;
        CPSIE i         
//  705 }
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable40:
        DC32     start_startline
//  706 
//  707 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  708 void pit0_isr(void)
//  709 {  
pit0_isr:
        PUSH     {R7,LR}
//  710   pulse_old_old=pulse_old;
        LDR.W    R0,??DataTable55_7
        LDR.W    R1,??DataTable55_8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
//  711   pulse_old=pulse;
        LDR.W    R0,??DataTable55_8
        LDR.W    R1,??DataTable55_9
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
//  712   pulse=FTM2_CNT;
        LDR.W    R0,??DataTable55_9
        LDR.W    R1,??DataTable54  ;; 0x400b8004
        LDR      R1,[R1, #+0]
        STRH     R1,[R0, #+0]
//  713   FTM2_CNT=0;
        LDR.W    R0,??DataTable54  ;; 0x400b8004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  714   pulse=(pulse_old_old+pulse_old+pulse)/3;
        LDR.W    R0,??DataTable55_7
        LDRH     R0,[R0, #+0]
        LDR.W    R1,??DataTable55_8
        LDRH     R1,[R1, #+0]
        UXTAH    R0,R1,R0
        LDR.W    R1,??DataTable55_9
        LDRH     R1,[R1, #+0]
        UXTAH    R0,R0,R1
        MOVS     R1,#+3
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable55_9
        STRH     R0,[R1, #+0]
//  715   //if(pulse==0)FTM0_C1V=0;     //如果电机没转那么电机就关掉
//  716   
//  717   PIT_TFLG(0)|=PIT_TFLG_TIF_MASK;       //清标志
        LDR.W    R0,??DataTable56_1  ;; 0x4003710c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable56_1  ;; 0x4003710c
        STR      R0,[R1, #+0]
//  718   
//  719   enable_pit_interrupt(0);
        MOVS     R0,#+0
        BL       enable_pit_interrupt
//  720   
//  721 }
        POP      {R0,PC}          ;; return
//  722 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  723 void pit2_isr(void)
//  724 {
pit2_isr:
        PUSH     {R7,LR}
//  725   P_timer++;
        LDR.W    R0,??DataTable56_2
        LDR      R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable56_2
        STR      R0,[R1, #+0]
//  726   PIT_TFLG(2)|=PIT_TFLG_TIF_MASK;
        LDR.W    R0,??DataTable56_3  ;; 0x4003712c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable56_3  ;; 0x4003712c
        STR      R0,[R1, #+0]
//  727   enable_pit_interrupt(2);
        MOVS     R0,#+2
        BL       enable_pit_interrupt
//  728   
//  729 }
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable42:
        DC32     0x40048034

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable42_1:
        DC32     0x4007c008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable42_2:
        DC32     0x40064004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable42_3:
        DC32     0x40064005

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable42_4:
        DC32     0x4001f000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable42_5:
        DC32     0x40048044

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable42_6:
        DC32     0x2270000
//  730 
//  731 /******************************************************************/
//  732 //***********************中断区结束*********************************
//  733 
//  734 /*****************延时函数1s*****************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  735 void delays(int s)
//  736 {
delays:
        PUSH     {R4}
//  737   int m=0,i=0,j=0;
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
//  738   for(m=0;m<s;m++)
        MOVS     R4,#+0
        MOVS     R1,R4
        B.N      ??delays_0
??delays_1:
        ADDS     R1,R1,#+1
??delays_0:
        CMP      R1,R0
        BGE.N    ??delays_2
//  739   {
//  740     for(i=0;i<20000;i++)
        MOVS     R2,#+0
        B.N      ??delays_3
//  741     {
//  742       for(j=0;j<1000;j++);
??delays_4:
        ADDS     R3,R3,#+1
??delays_5:
        MOV      R4,#+1000
        CMP      R3,R4
        BLT.N    ??delays_4
        ADDS     R2,R2,#+1
??delays_3:
        MOVW     R3,#+20000
        CMP      R2,R3
        BGE.N    ??delays_1
        MOVS     R3,#+0
        B.N      ??delays_5
//  743     }
//  744   }
//  745 }
??delays_2:
        POP      {R4}
        BX       LR               ;; return
//  746 
//  747 
//  748 /************************取绝对值************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  749 int16 abs(int16 a)
//  750 {
//  751   if(a>=0)return a;
abs:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BMI.N    ??abs_0
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        B.N      ??abs_1
//  752   
//  753   else return -a;
??abs_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        RSBS     R0,R0,#+0
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
??abs_1:
        BX       LR               ;; return
//  754   
//  755 }
//  756 
//  757 /******************************************************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  758 int16 limit(int16 value,int16 top,int16 bottom)
//  759 {
//  760   if(value>top) value=top;
limit:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BGE.N    ??limit_0
        MOVS     R0,R1
//  761   if(value<bottom) value=bottom;
??limit_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R0,R2
        BGE.N    ??limit_1
        MOVS     R0,R2
//  762   return value;
??limit_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BX       LR               ;; return
//  763 }
//  764 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  765 int16 max(int16 value1,int16 value2){
//  766   if(value1>value2)
max:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BGE.N    ??max_0
//  767     return value1;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        B.N      ??max_1
//  768   else 
//  769     return value2;
??max_0:
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
??max_1:
        BX       LR               ;; return
//  770 }
//  771 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  772 int16 min(int16 value1,int16 value2){
//  773   if(value1<value2)
min:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R0,R1
        BGE.N    ??min_0
//  774     return value1;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        B.N      ??min_1
//  775   else 
//  776     return value2;
??min_0:
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
??min_1:
        BX       LR               ;; return
//  777 }
//  778 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  779 void set_speed(int16 speed_low)
//  780 {
set_speed:
        PUSH     {R4,LR}
        MOVS     R4,R0
//  781   //int16 i=0; 
//  782   //uart_send1(UART0,0x23);
//  783   //speed_low=65;
//  784   FTM0_C0V=limit(188+speed_low/2,375,0);
        MOVS     R2,#+0
        MOVW     R1,#+375
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R0,#+2
        SDIV     R0,R4,R0
        ADDS     R0,R0,#+188
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       limit
        LDR.N    R1,??DataTable49_6  ;; 0x40038010
        STR      R0,[R1, #+0]
//  785   FTM0_C3V=limit(188-speed_low/2,375,0);
        MOVS     R2,#+0
        MOVW     R1,#+375
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R0,#+2
        SDIV     R0,R4,R0
        RSBS     R0,R0,#+188
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       limit
        LDR.N    R1,??DataTable49_8  ;; 0x40038028
        STR      R0,[R1, #+0]
//  786 }
        POP      {R4,PC}          ;; return
//  787 /************************取绝对值END************************/
//  788 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  789 int16 subjection_k(int16 *f,int16 i)
//  790 {
subjection_k:
        PUSH     {R4,LR}
        MOVS     R4,R0
//  791   int16 value;
//  792   
//  793   if(i>1)
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+2
        BLT.N    ??subjection_k_0
//  794    value=subjection_k(f+1,i-1);
        SUBS     R1,R1,#+1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R0,R4,#+2
        BL       subjection_k
        B.N      ??subjection_k_1
//  795   else
//  796    value=*f; 
??subjection_k_0:
        LDRSH    R0,[R4, #+0]
//  797    value=max(value,*(f+1));
??subjection_k_1:
        LDRSH    R1,[R4, #+2]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       max
//  798   return value;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        POP      {R4,PC}          ;; return
//  799 }
//  800 
//  801 /*************************结构体区***************************/
//  802 
//  803 /*******************point结构体*********************/
//  804 struct point_position{
//  805   volatile byte x;
//  806   volatile byte y;
//  807   volatile byte i;//
//  808   volatile byte j;//

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  809 }point;
point:
        DS8 4
//  810 /*******************point结构体END*********************/
//  811 struct PID_proportion{
//  812   volatile int16 P;
//  813   volatile int16 I;
//  814   volatile int16 D;

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  815 }Servo,Motor;
Servo:
        DS8 8

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
Motor:
        DS8 8
//  816 
//  817 struct range{
//  818   int16 head;
//  819   int16 tail;

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  820 }servo;
servo:
        DS8 4
//  821 
//  822 struct membership_grade{
//  823   int16 s;
//  824   int16 m;
//  825   int16 b;

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  826 }sub;
`sub`:
        DS8 8
//  827 /*************************结构体区END***************************/
//  828 
//  829 /************************读取速度************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  830 void get_speed(void)
//  831 {
//  832   pulse=FTM2_CNT;
get_speed:
        LDR.W    R0,??DataTable55_9
        LDR.W    R1,??DataTable55_10  ;; 0x400b8004
        LDR      R1,[R1, #+0]
        STRH     R1,[R0, #+0]
//  833   FTM2_CNT=0;
        LDR.W    R0,??DataTable55_10  ;; 0x400b8004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  834   //if(pulse==0)FTM0_C1V=0;     //如果电机没转那么电机就关掉
//  835   
//  836 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44:
        DC32     0x40049020

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_1:
        DC32     0x4003900c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_2:
        DC32     0x40039000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_3:
        DC32     0x40039054
//  837 /************************读取速度END************************/
//  838 
//  839 
//  840 /***************************找出中心线的最大值的坐标*************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  841 void find_center_max(void)
//  842 {
//  843 	uint8 Judage_flag_1=V-1;
find_center_max:
        MOVS     R0,#+159
//  844 	uint8 i=0;
        MOVS     R1,#+0
//  845     for(Judage_flag_1=159;Judage_flag_1>10;Judage_flag_1--)
        MOVS     R2,#+159
        MOVS     R0,R2
        B.N      ??find_center_max_0
//  846 	{
//  847 		for(i=53;i>0;i--)
//  848 		{
//  849 			if(center[i]==Judage_flag_1)
??find_center_max_1:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable52_4
        LDRB     R2,[R1, R2]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R2,R0
        BNE.N    ??find_center_max_2
//  850 			{
//  851 				if(center[i-1]>Judage_flag_1-10||center[i+1]>Judage_flag_1-10)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        SUBS     R2,R0,#+10
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable52_4
        ADDS     R3,R1,R3
        LDRB     R3,[R3, #-1]
        CMP      R2,R3
        BLT.N    ??find_center_max_3
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        SUBS     R2,R0,#+10
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable52_4
        ADDS     R3,R1,R3
        LDRB     R3,[R3, #+1]
        CMP      R2,R3
        BGE.N    ??find_center_max_2
//  852 				{
//  853 					Judage_right_hang=i;
??find_center_max_3:
        LDR.W    R2,??DataTable57
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        STRH     R1,[R2, #+0]
//  854 					Judage_right_lie=Judage_flag_1;
        LDR.W    R2,??DataTable57_1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        STRH     R0,[R2, #+0]
//  855 					//return ok;
//  856 				   
//  857 				}
//  858 			}
//  859 		}
??find_center_max_2:
        SUBS     R1,R1,#+1
??find_center_max_4:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+1
        BCS.N    ??find_center_max_1
        SUBS     R0,R0,#+1
??find_center_max_0:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+11
        BCC.N    ??find_center_max_5
        MOVS     R1,#+53
        B.N      ??find_center_max_4
//  860 	}
//  861 	//return fail;
//  862 }
??find_center_max_5:
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45:
        DC32     0x40039060

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_1:
        DC32     0x40039064

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_2:
        DC32     0x4003905c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_3:
        DC32     0x4003906c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_4:
        DC32     0x40039070

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_5:
        DC32     0x40039080

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_6:
        DC32     0x40039090

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_7:
        DC32     0x40039094

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_8:
        DC32     0x40039098
//  863 	/***************************找出中心线的最大值的坐标END*************************/
//  864     /*************************找出中心线最小值的坐标*************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  865 void find_center_min(void)
//  866 {
//  867 	uint8 Judage_flag_0=1;
find_center_min:
        MOVS     R0,#+1
//  868 	uint8 i=0;
        MOVS     R1,#+0
//  869     for(Judage_flag_0=1;Judage_flag_0<V-11;Judage_flag_0++)
        MOVS     R2,#+1
        MOVS     R0,R2
        B.N      ??find_center_min_0
//  870 	{
//  871 		for(i=53;i>0;i--)
//  872 		{
//  873 			if(center[i]==Judage_flag_0)
??find_center_min_1:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable52_4
        LDRB     R2,[R1, R2]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R2,R0
        BNE.N    ??find_center_min_2
//  874 			{
//  875 				if(center[i-1]<Judage_flag_0+10||center[i+1]<Judage_flag_0+10)
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable52_4
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #-1]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        ADDS     R3,R0,#+10
        CMP      R2,R3
        BLT.N    ??find_center_min_3
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable52_4
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #+1]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        ADDS     R3,R0,#+10
        CMP      R2,R3
        BGE.N    ??find_center_min_2
//  876 				{
//  877 					Judage_left_hang=i;
??find_center_min_3:
        LDR.W    R2,??DataTable57_2
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        STRH     R1,[R2, #+0]
//  878 					Judage_left_lie=Judage_flag_0;
        LDR.W    R2,??DataTable57_3
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        STRH     R0,[R2, #+0]
//  879 					//return ok;
//  880 				   
//  881 				}
//  882 			}
//  883 		}
??find_center_min_2:
        SUBS     R1,R1,#+1
??find_center_min_4:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+1
        BCS.N    ??find_center_min_1
        ADDS     R0,R0,#+1
??find_center_min_0:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+149
        BCS.N    ??find_center_min_5
        MOVS     R1,#+53
        B.N      ??find_center_min_4
//  884 	}
//  885 	//return fail;
//  886 }
??find_center_min_5:
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46:
        DC32     0x4003904c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_1:
        DC32     0x40039008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_2:
        DC32     0x40039010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_3:
        DC32     Servo_Middle

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_4:
        DC32     0x40048038

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_5:
        DC32     0x4004b004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_6:
        DC32     0x4004b010
//  887 
//  888 
//  889 
//  890     /*************************找出中心线最小值的坐标END*************************/
//  891 
//  892 
//  893 
//  894 /******************两断点之间的补线连接算法******************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  895 void LianJie(char i,int16 m,int16 n)
//  896 {
LianJie:
        PUSH     {R3-R7,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
//  897   if(m-n>1)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R5,R6
        CMP      R0,#+2
        BLT.N    ??LianJie_0
//  898   {
//  899     bianyan[i][(m+n)/2]=(bianyan[i][m]+bianyan[i][n])/2;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTAH    R0,R6,R5
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R1,#+55
        LDR.W    R2,??DataTable57_4
        MLA      R1,R1,R4,R2
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,#+55
        LDR.W    R3,??DataTable57_4
        MLA      R2,R2,R4,R3
        LDRB     R2,[R5, R2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R3,#+55
        LDR.W    R7,??DataTable57_4
        MLA      R3,R3,R4,R7
        LDRB     R3,[R6, R3]
        UXTAB    R2,R3,R2
        MOVS     R3,#+2
        SDIV     R2,R2,R3
        STRB     R2,[R0, R1]
//  900     LianJie(i,(m+n)/2,n);
        MOVS     R2,R6
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTAH    R0,R6,R5
        MOVS     R1,#+2
        SDIV     R1,R0,R1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       LianJie
//  901     LianJie(i,m,(m+n)/2);
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R6
        MOVS     R1,#+2
        SDIV     R2,R0,R1
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,R5
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       LianJie
//  902   }
//  903 }
??LianJie_0:
        POP      {R0,R4-R7,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable47:
        DC32     0x4004b008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable47_1:
        DC32     0x4004803c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable47_2:
        DC32     0x4003800c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable47_3:
        DC32     0x40038024

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable47_4:
        DC32     0x40038014
//  904 /******************两断点之间的补线连接算法end******************/
//  905 /****************起始线的检测函数****************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  906 void Start_Detection(unsigned char a,unsigned char h1,unsigned char h2,unsigned char r1,unsigned char r2)
//  907 {
Start_Detection:
        PUSH     {R3-R7,LR}
        LDR      R4,[SP, #+24]
//  908 	unsigned char i=0,m=0,n=0;
        MOVS     R5,#+0
        MOVS     R7,#+0
        MOVS     R6,#+0
//  909 	for(i=h1;i>h2;i--)
        MOVS     R5,R1
        B.N      ??Start_Detection_0
//  910 	{
//  911 		if(video[i][r1]==0)m++;
??Start_Detection_1:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable53_2
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+0
        BNE.N    ??Start_Detection_2
        ADDS     R7,R7,#+1
//  912 		if(video[i][r1]==1)n++;
??Start_Detection_2:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable53_2
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+1
        BNE.N    ??Start_Detection_3
        ADDS     R6,R6,#+1
//  913 	}
??Start_Detection_3:
        SUBS     R5,R5,#+1
??Start_Detection_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R2,R5
        BCC.N    ??Start_Detection_1
//  914 	if(m>0)BW[a]=0;
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+1
        BCC.N    ??Start_Detection_4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable57_5
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
//  915 	if(m==0) BW[a]=1;
??Start_Detection_4:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+0
        BNE.N    ??Start_Detection_5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable57_5
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
//  916     if(r1<r2)Start_Detection(a+1,h1,h2,r1+1,r2);
??Start_Detection_5:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R3,R4
        BCS.N    ??Start_Detection_6
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        STR      R4,[SP, #+0]
        ADDS     R3,R3,#+1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        ADDS     R0,R0,#+1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       Start_Detection
//  917 }
??Start_Detection_6:
        POP      {R0,R4-R7,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48:
        DC32     0x40038000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_1:
        DC32     0x40038054

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_2:
        DC32     0x40038060

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_3:
        DC32     0x40038064

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_4:
        DC32     0x4003805c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_5:
        DC32     0x4003806c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_6:
        DC32     0x40038070

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_7:
        DC32     0x40038080
//  918 
//  919 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  920 void Start_Detection_2(unsigned char a,unsigned char h1,unsigned char h2,unsigned char r1,unsigned char r2)
//  921 {
Start_Detection_2:
        PUSH     {R3-R7,LR}
        LDR      R4,[SP, #+24]
//  922 	unsigned char i=0,m=0,n=0;
        MOVS     R5,#+0
        MOVS     R7,#+0
        MOVS     R6,#+0
//  923 	
//  924     for(i=h1;i>h2;i--)
        MOVS     R5,R1
        B.N      ??Start_Detection_2_0
//  925 	{
//  926 		if(video[i][r1]==0)m++;
??Start_Detection_2_1:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable53_2
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+0
        BNE.N    ??Start_Detection_2_2
        ADDS     R7,R7,#+1
//  927 		if(video[i][r1]==1)n++;
??Start_Detection_2_2:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable53_2
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+1
        BNE.N    ??Start_Detection_2_3
        ADDS     R6,R6,#+1
//  928 	}
??Start_Detection_2_3:
        SUBS     R5,R5,#+1
??Start_Detection_2_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R2,R5
        BCC.N    ??Start_Detection_2_1
//  929 	if(m>0)BW2[a]=0;
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+1
        BCC.N    ??Start_Detection_2_4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable57_6
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
//  930 	if(m==0) BW2[a]=1;
??Start_Detection_2_4:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+0
        BNE.N    ??Start_Detection_2_5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable57_6
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
//  931 	if(r1<r2)Start_Detection_2(a+1,h1,h2,r1+1,r2);
??Start_Detection_2_5:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R3,R4
        BCS.N    ??Start_Detection_2_6
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        STR      R4,[SP, #+0]
        ADDS     R3,R3,#+1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        ADDS     R0,R0,#+1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       Start_Detection_2
//  932 
//  933 }
??Start_Detection_2_6:
        POP      {R0,R4-R7,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49:
        DC32     0x40064006

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_1:
        DC32     0x40038090

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_2:
        DC32     0x40038094

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_3:
        DC32     0x40038098

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_4:
        DC32     0x4003804c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_5:
        DC32     0x40038008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_6:
        DC32     0x40038010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_7:
        DC32     0x40038018

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_8:
        DC32     0x40038028

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_9:
        DC32     0x40049028

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_10:
        DC32     0x4004902c
//  934 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  935 void Start_Detection_3(unsigned char a,unsigned char h1,unsigned char h2,unsigned char r1,unsigned char r2)
//  936 {
Start_Detection_3:
        PUSH     {R3-R7,LR}
        LDR      R4,[SP, #+24]
//  937 	unsigned char i=0,m=0,n=0;
        MOVS     R5,#+0
        MOVS     R7,#+0
        MOVS     R6,#+0
//  938 	
//  939     for(i=h1;i>h2;i--)
        MOVS     R5,R1
        B.N      ??Start_Detection_3_0
//  940 	{
//  941 		if(video[i][r1]==0)m++;
??Start_Detection_3_1:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable53_2
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+0
        BNE.N    ??Start_Detection_3_2
        ADDS     R7,R7,#+1
//  942 		if(video[i][r1]==1)n++;
??Start_Detection_3_2:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable53_2
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+1
        BNE.N    ??Start_Detection_3_3
        ADDS     R6,R6,#+1
//  943 	}
??Start_Detection_3_3:
        SUBS     R5,R5,#+1
??Start_Detection_3_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R2,R5
        BCC.N    ??Start_Detection_3_1
//  944 	if(m>0)BW3[a]=0;
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+1
        BCC.N    ??Start_Detection_3_4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable57_7
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
//  945 	if(m==0) BW3[a]=1;
??Start_Detection_3_4:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+0
        BNE.N    ??Start_Detection_3_5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable57_7
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
//  946 	if(r1<r2)Start_Detection_3(a+1,h1,h2,r1+1,r2);
??Start_Detection_3_5:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R3,R4
        BCS.N    ??Start_Detection_3_6
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        STR      R4,[SP, #+0]
        ADDS     R3,R3,#+1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        ADDS     R0,R0,#+1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       Start_Detection_3
//  947 
//  948 }
??Start_Detection_3_6:
        POP      {R0,R4-R7,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable50:
        DC32     0x40048030

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable50_1:
        DC32     0x400b8054

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable50_2:
        DC32     0x400b8080

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable50_3:
        DC32     0x400b804c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable50_4:
        DC32     0x400b8008
//  949 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  950 void Start_Detection_4(unsigned char a,unsigned char h1,unsigned char h2,unsigned char r1,unsigned char r2)
//  951 {
Start_Detection_4:
        PUSH     {R3-R7,LR}
        LDR      R4,[SP, #+24]
//  952 	unsigned char i=0,m=0,n=0;
        MOVS     R5,#+0
        MOVS     R7,#+0
        MOVS     R6,#+0
//  953 	
//  954     for(i=h1;i>h2;i--)
        MOVS     R5,R1
        B.N      ??Start_Detection_4_0
//  955 	{
//  956 		if(video[i][r1]==0)m++;
??Start_Detection_4_1:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable53_2
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+0
        BNE.N    ??Start_Detection_4_2
        ADDS     R7,R7,#+1
//  957 		if(video[i][r1]==1)n++;
??Start_Detection_4_2:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable53_2
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+1
        BNE.N    ??Start_Detection_4_3
        ADDS     R6,R6,#+1
//  958 	}
??Start_Detection_4_3:
        SUBS     R5,R5,#+1
??Start_Detection_4_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R2,R5
        BCC.N    ??Start_Detection_4_1
//  959 	if(m>0)BW4[a]=0;
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+1
        BCC.N    ??Start_Detection_4_4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable57_8
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
//  960 	if(m==0) BW4[a]=1;
??Start_Detection_4_4:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+0
        BNE.N    ??Start_Detection_4_5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable57_8
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
//  961 	if(r1<r2)Start_Detection_4(a+1,h1,h2,r1+1,r2);
??Start_Detection_4_5:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R3,R4
        BCS.N    ??Start_Detection_4_6
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        STR      R4,[SP, #+0]
        ADDS     R3,R3,#+1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        ADDS     R0,R0,#+1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       Start_Detection_4
//  962 
//  963 }
??Start_Detection_4_6:
        POP      {R0,R4-R7,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51:
        DC32     0x40039004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_1:
        DC32     0x40049038

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_2:
        DC32     0x4004903c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_3:
        DC32     0x40049040

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_4:
        DC32     0x40049044

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_5:
        DC32     0x4004a000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_6:
        DC32     0x4004a004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_7:
        DC32     0x4004a008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_8:
        DC32     0x4004a00c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_9:
        DC32     0x4004a010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_10:
        DC32     0x4004a014

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_11:
        DC32     0x4004a018

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_12:
        DC32     0x4004a01c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_13:
        DC32     0x400ff054

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_14:
        DC32     0x40049060

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_15:
        DC32     0xa0100

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_16:
        DC32     0x4004a028

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_17:
        DC32     0x90100

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_18:
        DC32     0x4004a02c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_19:
        DC32     0x10100
//  964 
//  965 /*********************************
//  966 *name:BW_filter(char n)
//  967 *function:起始线检测后的滤波
//  968 *method:1，对单独出现的一个点滤波去除
//  969 *       2，对单独出现的两个点要看其左右的情况，如果出现左右连续黑色或者白色
//  970            点数大于1的话可以把其滤去，否则不滤。
//  971 *explain:n表示要滤波的BW数组号
//  972 *note:2号滤波可能不用。
//  973 *date:2013.5.3
//  974 **********************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  975 void BW_filter(char n)
//  976 {
//  977   volatile uint8 *p;
//  978   switch(n)
BW_filter:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.N    ??BW_filter_0
        CMP      R0,#+2
        BEQ.N    ??BW_filter_1
        CMP      R0,#+3
        BEQ.N    ??BW_filter_2
        CMP      R0,#+4
        BEQ.N    ??BW_filter_3
        B.N      ??BW_filter_4
//  979   {
//  980   case 0:
//  981     {
//  982       p=BW;
??BW_filter_0:
        LDR.W    R0,??DataTable57_5
//  983       if(*p==0)
        LDRB     R1,[R0, #+0]
        CMP      R1,#+0
        BNE.N    ??BW_filter_1
//  984       {
//  985         p+=2;
        ADDS     R0,R0,#+2
        B.N      ??BW_filter_5
//  986         while(p<&BW[99])
//  987         {
//  988           if(*(p-1)!=*p&&*(p+1)!=*p)*p=*(p-1);
??BW_filter_6:
        LDRB     R1,[R0, #-1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_7
        LDRB     R1,[R0, #+1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_7
        LDRB     R1,[R0, #-1]
        STRB     R1,[R0, #+0]
//  989           p++;
??BW_filter_7:
        ADDS     R0,R0,#+1
//  990         }
??BW_filter_5:
        LDR.W    R1,??DataTable57_9
        CMP      R0,R1
        BCC.N    ??BW_filter_6
//  991         /*p=&BW[3];
//  992         while(p<&BW[99])
//  993         {
//  994                 if(*(p-1)==*p&&*p!=*(p-2)&&*p!=*(p-3)&&*p!=*(p+1)&&*p!=*(p+2)){*p=*(p-2);*(p-1)=*p;}
//  995                 p++;
//  996         }*/
//  997       }
//  998     }
//  999   case 2:
// 1000     {
// 1001       p=BW2;
??BW_filter_1:
        LDR.W    R0,??DataTable57_6
// 1002       if(*p==0)
        LDRB     R1,[R0, #+0]
        CMP      R1,#+0
        BNE.N    ??BW_filter_2
// 1003       {
// 1004         p+=2;
        ADDS     R0,R0,#+2
        B.N      ??BW_filter_8
// 1005         while(p<&BW2[119])
// 1006         {
// 1007           if(*(p-1)!=*p&&*(p+1)!=*p)*p=*(p-1);
??BW_filter_9:
        LDRB     R1,[R0, #-1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_10
        LDRB     R1,[R0, #+1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_10
        LDRB     R1,[R0, #-1]
        STRB     R1,[R0, #+0]
// 1008           p++;
??BW_filter_10:
        ADDS     R0,R0,#+1
// 1009         }
??BW_filter_8:
        LDR.W    R1,??DataTable58
        CMP      R0,R1
        BCC.N    ??BW_filter_9
// 1010         /*p=&BW2[3];
// 1011         while(p<&BW2[119])
// 1012         {
// 1013                 if(*(p-1)==*p&&*p!=*(p-2)&&*p!=*(p-3)&&*p!=*(p+1)&&*p!=*(p+2)){*p=*(p-2);*(p-1)=*p;}
// 1014                 p++;
// 1015         }*/
// 1016       }
// 1017     }
// 1018   case 3:
// 1019     {
// 1020       p=BW3;
??BW_filter_2:
        LDR.W    R0,??DataTable57_7
// 1021       if(*p==0)
        LDRB     R1,[R0, #+0]
        CMP      R1,#+0
        BNE.N    ??BW_filter_3
// 1022       {
// 1023         p+=2;
        ADDS     R0,R0,#+2
        B.N      ??BW_filter_11
// 1024         while(p<&BW3[79])
// 1025         {
// 1026           if(*(p-1)!=*p&&*(p+1)!=*p)*p=*(p-1);
??BW_filter_12:
        LDRB     R1,[R0, #-1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_13
        LDRB     R1,[R0, #+1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_13
        LDRB     R1,[R0, #-1]
        STRB     R1,[R0, #+0]
// 1027           p++;
??BW_filter_13:
        ADDS     R0,R0,#+1
// 1028         }
??BW_filter_11:
        LDR.W    R1,??DataTable58_1
        CMP      R0,R1
        BCC.N    ??BW_filter_12
// 1029         /*p=&BW3[3];
// 1030         while(p<&BW3[79])
// 1031         {
// 1032                 if(*(p-1)==*p&&*p!=*(p-2)&&*p!=*(p-3)&&*p!=*(p+1)&&*p!=*(p+2)){*p=*(p-2);*(p-1)=*p;}
// 1033                 p++;
// 1034         }*/
// 1035       }
// 1036     }
// 1037   case 4:
// 1038     {
// 1039       p=BW4;
??BW_filter_3:
        LDR.W    R0,??DataTable57_8
// 1040       if(*p==0)
        LDRB     R1,[R0, #+0]
        CMP      R1,#+0
        BNE.N    ??BW_filter_4
// 1041       {
// 1042         p+=2;
        ADDS     R0,R0,#+2
        B.N      ??BW_filter_14
// 1043         while(p<&BW4[139])
// 1044         {
// 1045                 if(*(p-1)!=*p&&*(p+1)!=*p)*p=*(p-1);
??BW_filter_15:
        LDRB     R1,[R0, #-1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_16
        LDRB     R1,[R0, #+1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_16
        LDRB     R1,[R0, #-1]
        STRB     R1,[R0, #+0]
// 1046                 p++;
??BW_filter_16:
        ADDS     R0,R0,#+1
// 1047         }
??BW_filter_14:
        LDR.W    R1,??DataTable58_2
        CMP      R0,R1
        BCC.N    ??BW_filter_15
// 1048         /*p=&BW4[3];
// 1049         while(p<&BW4[139])
// 1050         {
// 1051                 if(*(p-1)==*p&&*p!=*(p-2)&&*p!=*(p-3)&&*p!=*(p+1)&&*p!=*(p+2)){*p=*(p-2);*(p-1)=*p;}
// 1052                 p++;
// 1053         }*/
// 1054         }
// 1055      }
// 1056   }
// 1057 }
??BW_filter_4:
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52:
        DC32     0x4004b024

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_1:
        DC32     0x400ff014

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_2:
        DC32     0x14034000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_3:
        DC32     0x40049070

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_4:
        DC32     center
// 1058 /****************起始线的检测函数END****************/
// 1059 /*******************中心线两点的连接******************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1060 void LianJie_center(int16 m,int16 n)
// 1061 {
LianJie_center:
        PUSH     {R3-R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
// 1062 	if(m-n>1)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SUBS     R0,R4,R5
        CMP      R0,#+2
        BLT.N    ??LianJie_center_0
// 1063 	{
// 1064 		center[(m+n)/2]=(center[m]+center[n])/2;
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable58_3
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R2,??DataTable58_3
        LDRB     R2,[R4, R2]
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        LDR.W    R3,??DataTable58_3
        LDRB     R3,[R5, R3]
        ADDS     R2,R3,R2
        MOVS     R3,#+2
        SDIV     R2,R2,R3
        STRB     R2,[R0, R1]
// 1065 		LianJie_center((m+n)/2,n);
        MOVS     R1,R5
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R2,#+2
        SDIV     R0,R0,R2
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 1066 		LianJie_center(m,(m+n)/2);
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SXTAH    R0,R4,R5
        MOVS     R1,#+2
        SDIV     R1,R0,R1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 1067 	}
// 1068 }
??LianJie_center_0:
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable53:
        DC32     0x40038004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable53_1:
        DC32     0x4006a000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable53_2:
        DC32     video
// 1069 /*******************中心线两点的连接END******************/
// 1070 
// 1071 /*************加权平均法对中心线的滤波平滑处理*************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1072 void center_filter(void)
// 1073 {
center_filter:
        PUSH     {R2-R5}
// 1074   char code_coe[5]={1,2,3,3,4};
        ADD      R0,SP,#+0
        LDR.W    R1,??DataTable58_4
        LDM      R1!,{R2,R3}
        STM      R0!,{R2,R3}
        SUBS     R1,R1,#+8
        SUBS     R0,R0,#+8
// 1075   char code_coe_sum=13;
        MOVS     R0,#+13
// 1076   int16 i=0,j=0,center_sum=0;
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
// 1077   for(i=52;i>1;i--)
        MOVS     R4,#+52
        MOVS     R1,R4
        B.N      ??center_filter_0
// 1078   {
// 1079     if(center[i-2]>0)
// 1080     {
// 1081       center_sum=0;
// 1082       for(j=0;j<5;j++)center_sum+=center[j+i-2]*code_coe[j];
??center_filter_1:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTAH    R4,R1,R2
        LDR.W    R5,??DataTable58_3
        ADDS     R4,R4,R5
        LDRB     R4,[R4, #-2]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        ADD      R5,SP,#+0
        LDRB     R5,[R2, R5]
        MULS     R4,R5,R4
        SXTAH    R3,R4,R3
        ADDS     R2,R2,#+1
??center_filter_2:
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R2,#+5
        BLT.N    ??center_filter_1
// 1083       center[i]=(int)(center_sum/code_coe_sum);
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        SDIV     R2,R3,R0
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.W    R3,??DataTable58_3
        STRB     R2,[R1, R3]
??center_filter_3:
        SUBS     R1,R1,#+1
??center_filter_0:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+2
        BLT.N    ??center_filter_4
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.W    R2,??DataTable58_3
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #-2]
        CMP      R2,#+1
        BCC.N    ??center_filter_3
        MOVS     R3,#+0
        MOVS     R2,#+0
        B.N      ??center_filter_2
// 1084     }
// 1085   }  
// 1086 }
??center_filter_4:
        POP      {R0,R1,R4,R5}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54:
        DC32     0x400b8004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_1:
        DC32     0x40049068

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_2:
        DC32     0x2bf20

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_3:
        DC32     0x4004c018

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_4:
        DC32     0x4004c01c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_5:
        DC32     0x4006a001

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_6:
        DC32     0x4006a00a

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_7:
        DC32     0x4006a003

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_8:
        DC32     0x4006a002

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_9:
        DC32     0x40048040

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_10:
        DC32     0x40021000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_11:
        DC32     0x40009016

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_12:
        DC32     0x4000901e

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_13:
        DC32     0x40009000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_14:
        DC32     0x400ff050

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_15:
        DC32     0x40009004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_16:
        DC32     0x40009008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_17:
        DC32     0x4000900c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_18:
        DC32     0x40009018

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_19:
        DC32     0x40009010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_20:
        DC32     0x40009014

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_21:
        DC32     0x40009006

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_22:
        DC32     0x4000901c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_23:
        DC32     0x40037000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_24:
        DC32     0x40037100

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_25:
        DC32     0x40008024

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_26:
        DC32     row_F
// 1087 /*************加权平均法对中心线的滤波平滑处理*END************/
// 1088 /*************起始线防抖判断与处理*************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1089 void Start_Line(void)
// 1090 {
Start_Line:
        PUSH     {R4-R8,LR}
        SUB      SP,SP,#+168
// 1091   int16 i=0,j=0,k=0;
        MOVS     R7,#+0
        MOVS     R8,#+0
        MOVS     R4,#+0
// 1092   uint8 num_b1=0,num_b2=0;
        MOVS     R5,#+0
        MOVS     R6,#+0
// 1093   uint8 bianyan3[2][55]={0};//注意这个需要清零
        ADD      R0,SP,#+56
        MOVS     R1,#+112
        BL       __aeabi_memclr4
// 1094   uint8 center3[55]={0};//注意这个需要清零
        ADD      R0,SP,#+0
        MOVS     R1,#+56
        BL       __aeabi_memclr4
// 1095   if(xu_xian2==0)
        LDR.W    R0,??DataTable58_5
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??Start_Line_0
// 1096   {
// 1097     if(END_Line_2>5&&END_Line_2<35)
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BCC.W    ??Start_Line_0
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        CMP      R0,#+35
        BCS.W    ??Start_Line_0
// 1098     {
// 1099       for(i=54;i>35;i--)
        MOVS     R7,#+54
        B.N      ??Start_Line_1
// 1100       {
// 1101         if(bianyan[0][i]!=bianyan2[0][i])num_b1++;
??Start_Line_2:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable57_4
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable58_7
        LDRB     R1,[R7, R1]
        CMP      R0,R1
        BEQ.N    ??Start_Line_3
        ADDS     R5,R5,#+1
// 1102         if(bianyan[0][i]!=bianyan2[0][i])num_b2++;
??Start_Line_3:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable57_4
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable58_7
        LDRB     R1,[R7, R1]
        CMP      R0,R1
        BEQ.N    ??Start_Line_4
        ADDS     R6,R6,#+1
// 1103       }
??Start_Line_4:
        SUBS     R7,R7,#+1
??Start_Line_1:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+36
        BGE.N    ??Start_Line_2
// 1104                   
// 1105       if(num_b1==0&&num_b2==0)
        ORRS     R0,R6,R5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BNE.W    ??Start_Line_0
// 1106       {
// 1107               
// 1108         if(abs(center[35]-center[54])<15)
        LDR.W    R0,??DataTable58_3
        LDRB     R0,[R0, #+35]
        LDR.W    R1,??DataTable58_3
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        CMP      R0,#+15
        BGE.W    ??Start_Line_0
// 1109         {
// 1110           for(k=END_Line_2;k<30;k++)
        LDR.W    R0,??DataTable58_6
        LDRB     R4,[R0, #+0]
        B.N      ??Start_Line_5
??Start_Line_6:
        ADDS     R4,R4,#+1
??Start_Line_5:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+30
        BGE.N    ??Start_Line_7
// 1111           {
// 1112                   if(center[k])break;
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable58_3
        LDRB     R0,[R4, R0]
        CMP      R0,#+0
        BEQ.N    ??Start_Line_6
// 1113           }
// 1114           for(j=center[k];j>30;j--)
??Start_Line_7:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable58_3
        LDRB     R8,[R4, R0]
        B.N      ??Start_Line_8
??Start_Line_9:
        SUBS     R8,R8,#+1
??Start_Line_8:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+31
        BLT.N    ??Start_Line_10
// 1115           {
// 1116             if(video[END_Line_2][j]==0&&video[END_Line_2][j-1]==0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        MOVS     R1,#+160
        LDR.W    R2,??DataTable58_8
        MLA      R0,R1,R0,R2
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??Start_Line_9
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        MOVS     R1,#+160
        LDR.W    R2,??DataTable58_8
        MLA      R0,R1,R0,R2
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??Start_Line_9
// 1117             {
// 1118                     bianyan3[0][END_Line_2]=j;
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        ADD      R1,SP,#+56
        STRB     R8,[R0, R1]
// 1119                     break;
// 1120             }
// 1121           }
// 1122           for(j=center[k];j<130;j++)
??Start_Line_10:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable58_3
        LDRB     R8,[R4, R0]
        B.N      ??Start_Line_11
??Start_Line_12:
        ADDS     R8,R8,#+1
??Start_Line_11:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+130
        BGE.N    ??Start_Line_13
// 1123           {
// 1124             if(video[END_Line_2][j]==0&&video[END_Line_2][j+1]==0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        MOVS     R1,#+160
        LDR.W    R2,??DataTable58_8
        MLA      R0,R1,R0,R2
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??Start_Line_12
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        MOVS     R1,#+160
        LDR.W    R2,??DataTable58_8
        MLA      R0,R1,R0,R2
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??Start_Line_12
// 1125             {
// 1126                     bianyan3[1][END_Line_2]=j;
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        ADD      R1,SP,#+56
        ADDS     R0,R0,R1
        STRB     R8,[R0, #+55]
// 1127                     break;
// 1128             }
// 1129           }
// 1130           if(bianyan3[1][END_Line_2]-bianyan3[0][END_Line_2]>20)
??Start_Line_13:
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        ADD      R1,SP,#+56
        ADDS     R0,R0,R1
        LDRB     R0,[R0, #+55]
        LDR.W    R1,??DataTable58_6
        LDRB     R1,[R1, #+0]
        ADD      R2,SP,#+56
        LDRB     R1,[R1, R2]
        SUBS     R0,R0,R1
        CMP      R0,#+21
        BLT.N    ??Start_Line_14
// 1131           {
// 1132                   center3[END_Line_2]=(bianyan3[1][END_Line_2]+bianyan3[0][END_Line_2])/2;
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        ADD      R1,SP,#+56
        ADDS     R0,R0,R1
        LDRB     R0,[R0, #+55]
        LDR.W    R1,??DataTable58_6
        LDRB     R1,[R1, #+0]
        ADD      R2,SP,#+56
        LDRB     R1,[R1, R2]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable58_6
        LDRB     R1,[R1, #+0]
        ADD      R2,SP,#+0
        STRB     R0,[R1, R2]
// 1133           }
// 1134           if(center3[END_Line_2]>30&&center[END_Line_2]<130)
??Start_Line_14:
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        ADD      R1,SP,#+0
        LDRB     R0,[R0, R1]
        CMP      R0,#+31
        BCC.W    ??Start_Line_0
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        LDR.W    R1,??DataTable58_3
        LDRB     R0,[R0, R1]
        CMP      R0,#+130
        BCS.N    ??Start_Line_0
// 1135           {
// 1136             for(i=END_Line_2-1;i>=0;i--)
        LDR.W    R0,??DataTable58_6
        LDRB     R0,[R0, #+0]
        SUBS     R7,R0,#+1
        B.N      ??Start_Line_15
// 1137             {
// 1138               for(j=center3[i+1];j>10;j--)
// 1139               {
// 1140                 if(video[i][j]==0&&video[i][j-1]==0)
// 1141                 {
// 1142                         bianyan3[0][i]=j;
// 1143                         break;
// 1144                 }
// 1145               }
// 1146               for(j=center3[i+1];j<150;j++)
??Start_Line_16:
        ADDS     R8,R8,#+1
??Start_Line_17:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+150
        BGE.N    ??Start_Line_18
// 1147               {
// 1148                 if(video[i][j]==0&&video[i][j+1]==0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable58_8
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??Start_Line_16
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable58_8
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??Start_Line_16
// 1149                 {
// 1150                         bianyan3[1][i]=j;
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+56
        ADDS     R0,R7,R0
        STRB     R8,[R0, #+55]
// 1151                         break;
// 1152                 }
// 1153               }
// 1154               center3[i]=(bianyan3[1][i]+bianyan3[0][i])/2;
??Start_Line_18:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+56
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+56
        LDRB     R1,[R7, R1]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        STRB     R0,[R7, R1]
        SUBS     R7,R7,#+1
??Start_Line_15:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BMI.N    ??Start_Line_19
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        ADDS     R0,R7,R0
        LDRB     R8,[R0, #+1]
        B.N      ??Start_Line_20
??Start_Line_21:
        SUBS     R8,R8,#+1
??Start_Line_20:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+11
        BLT.N    ??Start_Line_22
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable58_8
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??Start_Line_21
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable58_8
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??Start_Line_21
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+56
        STRB     R8,[R7, R0]
??Start_Line_22:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        ADDS     R0,R7,R0
        LDRB     R8,[R0, #+1]
        B.N      ??Start_Line_17
// 1155               //if((bianyan3[1][i]-bianyan3[0][i])<5)break;
// 1156             }
// 1157             if(i==-1)start_line2=1;
??Start_Line_19:
        MOVS     R0,#-1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,R0
        BNE.N    ??Start_Line_0
        LDR.W    R0,??DataTable58_9
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 1158             /*if(i==-1)
// 1159             {
// 1160                     for(i=END_Line_2;i>=0;i--)center3[i]=(bianyan3[1][i]+bianyan3[0][i])/2;
// 1161   
// 1162             }*/
// 1163     
// 1164           }
// 1165         }
// 1166       }
// 1167     }
// 1168   }
// 1169 	
// 1170   if(start_line2==1)
??Start_Line_0:
        LDR.W    R0,??DataTable58_9
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??Start_Line_23
// 1171   {
// 1172     for(i=END_Line_2;i>=0;i--)center[i]=center3[i];
        LDR.W    R0,??DataTable58_6
        LDRB     R7,[R0, #+0]
        B.N      ??Start_Line_24
??Start_Line_25:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable58_3
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        LDRB     R1,[R7, R1]
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??Start_Line_24:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??Start_Line_25
// 1173     LianJie_center(k,END_Line_2);
        LDR.W    R0,??DataTable58_6
        LDRB     R1,[R0, #+0]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 1174   }
// 1175 }
??Start_Line_23:
        ADD      SP,SP,#+168
        POP      {R4-R8,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55:
        DC32     imagerow

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_1:
        DC32     row

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_2:
        DC32     data_table

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_3:
        DC32     0x4000800c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_4:
        DC32     finish

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_5:
        DC32     0x400ff000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_6:
        DC32     0x4003711c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_7:
        DC32     pulse_old_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_8:
        DC32     pulse_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_9:
        DC32     pulse

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_10:
        DC32     0x400b8004
// 1176 /*************起始线防抖判断与处理*END************/
// 1177 /******************虚线找断点算法*****************/
// 1178 //虚线找断点算法只能用于先找进出的断点

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1179 void xu_xian_find(char a,int i,int h)
// 1180 {
xu_xian_find:
        PUSH     {R3-R9,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
// 1181 	int16 f1=0,f2=0;
        MOVS     R7,#+0
        MOVS     R8,#+0
// 1182 	int16 m=0;
        MOVS     R9,#+0
// 1183 	if(a==0)
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??xu_xian_find_0
// 1184 	{
// 1185 		for(m=i;m>h;m--)
        MOV      R9,R5
        B.N      ??xu_xian_find_1
??xu_xian_find_2:
        SUBS     R9,R9,#+1
??xu_xian_find_1:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R6,R9
        BGE.N    ??xu_xian_find_3
// 1186 		{
// 1187 			if((!(bianyan2[a][m]==bianyan[a][m]))||bianyan2[a][m]<2)
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable58_7
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R1,#+55
        LDR.W    R2,??DataTable58_10
        MLA      R1,R1,R4,R2
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BNE.N    ??xu_xian_find_4
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable58_7
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        CMP      R0,#+2
        BCS.N    ??xu_xian_find_2
// 1188 			{
// 1189 				f1=m+1;
??xu_xian_find_4:
        ADDS     R7,R9,#+1
// 1190 				break;
        B.N      ??xu_xian_find_3
// 1191 			}
// 1192 		}
// 1193 		for(;m>h;m--)
??xu_xian_find_5:
        SUBS     R9,R9,#+1
??xu_xian_find_3:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R6,R9
        BGE.N    ??xu_xian_find_6
// 1194 		{
// 1195 			if(bianyan[a][m]>2)
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable58_10
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        CMP      R0,#+3
        BCC.N    ??xu_xian_find_5
// 1196 			{
// 1197 				if(bianyan2[a][m]==bianyan[a][m])
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable58_7
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R1,#+55
        LDR.W    R2,??DataTable58_10
        MLA      R1,R1,R4,R2
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BNE.N    ??xu_xian_find_5
// 1198 				{
// 1199 					f2=m;
        MOV      R8,R9
// 1200 					break;
// 1201 				}
// 1202 			}
// 1203 		}
// 1204 		
// 1205 		if(!(m==h))
??xu_xian_find_6:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,R6
        BEQ.N    ??xu_xian_find_0
// 1206 		{
// 1207 			LianJie(a,f1,f2);
        MOV      R2,R8
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,R7
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       LianJie
// 1208 			xu_xian_find(a,m,h);
        MOVS     R2,R6
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOV      R1,R9
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       xu_xian_find
// 1209 		}
// 1210 	}
// 1211 	if(a==1)
??xu_xian_find_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BNE.N    ??xu_xian_find_7
// 1212 	{
// 1213 		for(m=i;m>h;m--)
        MOV      R9,R5
        B.N      ??xu_xian_find_8
??xu_xian_find_9:
        SUBS     R9,R9,#+1
??xu_xian_find_8:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R6,R9
        BGE.N    ??xu_xian_find_10
// 1214 		{
// 1215 			if((!(bianyan2[a][m]==bianyan[a][m]))||bianyan2[a][m]>=V-3)
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable58_7
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R1,#+55
        LDR.W    R2,??DataTable58_10
        MLA      R1,R1,R4,R2
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BNE.N    ??xu_xian_find_11
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable58_7
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        CMP      R0,#+157
        BCC.N    ??xu_xian_find_9
// 1216 			{
// 1217 				f1=m+1;
??xu_xian_find_11:
        ADDS     R7,R9,#+1
// 1218 				break;
        B.N      ??xu_xian_find_10
// 1219 			}
// 1220 		}
// 1221 	
// 1222 		for(;m>h;m--)
??xu_xian_find_12:
        SUBS     R9,R9,#+1
??xu_xian_find_10:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R6,R9
        BGE.N    ??xu_xian_find_13
// 1223 		{
// 1224 			if(bianyan[a][m]<V-3)
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable58_10
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        CMP      R0,#+157
        BCS.N    ??xu_xian_find_12
// 1225 			{
// 1226 				if(bianyan2[a][m]==bianyan[a][m])
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable58_7
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R1,#+55
        LDR.W    R2,??DataTable58_10
        MLA      R1,R1,R4,R2
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BNE.N    ??xu_xian_find_12
// 1227 				{
// 1228 					f2=m;
        MOV      R8,R9
// 1229 					break;
// 1230 				}
// 1231 			}
// 1232 		}
// 1233 		
// 1234 		if(!(m==h))
??xu_xian_find_13:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,R6
        BEQ.N    ??xu_xian_find_7
// 1235 		{
// 1236 			LianJie(a,f1,f2);
        MOV      R2,R8
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,R7
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       LianJie
// 1237 			xu_xian_find(a,m,h);
        MOVS     R2,R6
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOV      R1,R9
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       xu_xian_find
// 1238 		}
// 1239 	}
// 1240 
// 1241 }
??xu_xian_find_7:
        POP      {R0,R4-R9,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable56:
        DC32     timer

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable56_1:
        DC32     0x4003710c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable56_2:
        DC32     P_timer

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable56_3:
        DC32     0x4003712c
// 1242 /******************虚线找断点算法END*****************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1243 void sub_e(uint8 value,uint8 S_end,uint8 M_start,uint8 M_end,uint8 B_start){
sub_e:
        PUSH     {R4-R6}
        LDR      R4,[SP, #+12]
// 1244   if(value<=M_start){
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R2,R0
        BCC.N    ??sub_e_0
// 1245     sub.s=100;
        LDR.W    R5,??DataTable62
        MOVS     R6,#+100
        STRH     R6,[R5, #+0]
// 1246     sub.m=0;
        LDR.W    R5,??DataTable62
        MOVS     R6,#+0
        STRH     R6,[R5, #+2]
// 1247     sub.b=0;
        LDR.W    R5,??DataTable62
        MOVS     R6,#+0
        STRH     R6,[R5, #+4]
// 1248   }
// 1249   if(value<S_end&&value>M_start){
??sub_e_0:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R0,R1
        BCS.N    ??sub_e_1
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R2,R0
        BCS.N    ??sub_e_1
// 1250     sub.s=100*(S_end-value)/(S_end-M_start);
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        SUBS     R5,R1,R0
        MOVS     R6,#+100
        MULS     R5,R6,R5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        SUBS     R6,R1,R2
        SDIV     R5,R5,R6
        LDR.W    R6,??DataTable62
        STRH     R5,[R6, #+0]
// 1251     sub.m=100*(value-M_start)/(S_end-M_start);
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        SUBS     R5,R0,R2
        MOVS     R6,#+100
        MULS     R5,R6,R5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        SUBS     R2,R1,R2
        SDIV     R2,R5,R2
        LDR.W    R5,??DataTable62
        STRH     R2,[R5, #+2]
// 1252     sub.b=0;
        LDR.W    R2,??DataTable62
        MOVS     R5,#+0
        STRH     R5,[R2, #+4]
// 1253   }
// 1254   if(value>=S_end&&value<=B_start){
??sub_e_1:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R0,R1
        BCC.N    ??sub_e_2
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R4,R0
        BCC.N    ??sub_e_2
// 1255     sub.s=0;
        LDR.W    R1,??DataTable62
        MOVS     R2,#+0
        STRH     R2,[R1, #+0]
// 1256     sub.m=100;
        LDR.W    R1,??DataTable62
        MOVS     R2,#+100
        STRH     R2,[R1, #+2]
// 1257     sub.b=0;
        LDR.W    R1,??DataTable62
        MOVS     R2,#+0
        STRH     R2,[R1, #+4]
// 1258   }
// 1259   if(value<M_end&&value>B_start){
??sub_e_2:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R0,R3
        BCS.N    ??sub_e_3
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R4,R0
        BCS.N    ??sub_e_3
// 1260     sub.s=0;
        LDR.W    R1,??DataTable62
        MOVS     R2,#+0
        STRH     R2,[R1, #+0]
// 1261     sub.m=100*(M_end-value)/(M_end-B_start);
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        SUBS     R1,R3,R0
        MOVS     R2,#+100
        MULS     R1,R2,R1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        SUBS     R2,R3,R4
        SDIV     R1,R1,R2
        LDR.W    R2,??DataTable62
        STRH     R1,[R2, #+2]
// 1262     sub.b=100*(value-B_start)/(M_end-B_start);
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        SUBS     R1,R0,R4
        MOVS     R2,#+100
        MULS     R1,R2,R1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        SUBS     R2,R3,R4
        SDIV     R1,R1,R2
        LDR.W    R2,??DataTable62
        STRH     R1,[R2, #+4]
// 1263   }
// 1264   if(value>=M_end){
??sub_e_3:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R0,R3
        BCC.N    ??sub_e_4
// 1265     sub.s=0;
        LDR.W    R0,??DataTable62
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
// 1266     sub.m=0;
        LDR.W    R0,??DataTable62
        MOVS     R1,#+0
        STRH     R1,[R0, #+2]
// 1267     sub.b=100;
        LDR.W    R0,??DataTable62
        MOVS     R1,#+100
        STRH     R1,[R0, #+4]
// 1268   }
// 1269 }
??sub_e_4:
        POP      {R4-R6}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57:
        DC32     Judage_right_hang

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_1:
        DC32     Judage_right_lie

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_2:
        DC32     Judage_left_hang

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_3:
        DC32     Judage_left_lie

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_4:
        DC32     bianyan

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_5:
        DC32     BW

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_6:
        DC32     BW2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_7:
        DC32     BW3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_8:
        DC32     BW4

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_9:
        DC32     BW+0x63
// 1270 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1271 int16 motor_fuzzy(int16 e,int16 ec,int16 S_end,int16 M_start,int16 M_end,int16 B_start,int16 Sc_end,int16 Mc_start,int16 Mc_end,int16 Bc_start)
// 1272 {
motor_fuzzy:
        PUSH     {R2-R11,LR}
        SUB      SP,SP,#+84
        MOVS     R4,R0
        MOVS     R5,R1
        LDRSH    R6,[SP, #+128]
        LDRSH    R7,[SP, #+132]
        LDRSH    R8,[SP, #+136]
        LDRSH    R9,[SP, #+140]
        LDRSH    R10,[SP, #+144]
        LDRSH    R11,[SP, #+148]
// 1273   volatile int16 ib=0,im=0,is=0,iz=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+18]
        MOVS     R0,#+0
        STRH     R0,[SP, #+6]
        MOVS     R0,#+0
        STRH     R0,[SP, #+4]
        MOVS     R0,#+0
        STRH     R0,[SP, #+16]
// 1274   volatile int16 Se=0,Me=0,Be=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+14]
        MOVS     R0,#+0
        STRH     R0,[SP, #+12]
        MOVS     R0,#+0
        STRH     R0,[SP, #+10]
// 1275   volatile int16 Sc=0,Mc=0,Bc=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+8]
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 1276   int16 vb[6]={0};
        ADD      R0,SP,#+60
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        STM      R0!,{R1-R3}
        SUBS     R0,R0,#+12
// 1277   int16 vm[6]={0};
        ADD      R0,SP,#+48
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        STM      R0!,{R1-R3}
        SUBS     R0,R0,#+12
// 1278   int16 vs[6]={0};
        ADD      R0,SP,#+36
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        STM      R0!,{R1-R3}
        SUBS     R0,R0,#+12
// 1279   int16 vz[6]={0};
        ADD      R0,SP,#+72
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        STM      R0!,{R1-R3}
        SUBS     R0,R0,#+12
// 1280   volatile long Ks=0,Km=0,Kb=0,Kz=0;
        MOVS     R0,#+0
        STR      R0,[SP, #+28]
        MOVS     R0,#+0
        STR      R0,[SP, #+24]
        MOVS     R0,#+0
        STR      R0,[SP, #+20]
        MOVS     R0,#+0
        STR      R0,[SP, #+32]
// 1281   int16 *f;
// 1282   Motor.P=0;
        LDR.W    R0,??DataTable62_1
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
// 1283   Motor.I=0;
        LDR.W    R0,??DataTable62_1
        MOVS     R1,#+0
        STRH     R1,[R0, #+2]
// 1284 
// 1285   e=abs(e);
        MOVS     R0,R4
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R4,R0
// 1286   ec=abs(ec);
        MOVS     R0,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R5,R0
// 1287   
// 1288   sub_e(e,S_end,M_start,M_end,B_start);
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        STR      R7,[SP, #+0]
        MOVS     R3,R6
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        LDRH     R2,[SP, #+88]
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        LDRH     R1,[SP, #+84]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       sub_e
// 1289  
// 1290   Se=sub.s;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+0]
        STRH     R0,[SP, #+14]
// 1291   Me=sub.m;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+2]
        STRH     R0,[SP, #+12]
// 1292   Be=sub.b;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+4]
        STRH     R0,[SP, #+10]
// 1293 
// 1294   sub_e(ec,Sc_end,Mc_start,Mc_end,Bc_start);
        UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
        STR      R11,[SP, #+0]
        MOV      R3,R10
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        MOV      R2,R9
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOV      R1,R8
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        MOVS     R0,R5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       sub_e
// 1295  
// 1296   Sc=sub.s;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+0]
        STRH     R0,[SP, #+8]
// 1297   Mc=sub.m;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+2]
        STRH     R0,[SP, #+2]
// 1298   Bc=sub.b;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+4]
        STRH     R0,[SP, #+0]
// 1299 
// 1300 
// 1301   if(Se&&Sc)  {vm[im]=min(Se,Sc);im++;}  //P建表
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_0
        LDRSH    R0,[SP, #+8]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_0
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+8]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1302   if(Se&&Mc)  {vs[is]=min(Se,Mc);is++;}  
??motor_fuzzy_0:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_1
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_1
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1303   if(Se&&Bc)  {vs[is]=min(Se,Bc);is++;}
??motor_fuzzy_1:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_2
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_2
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1304   if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
??motor_fuzzy_2:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_3
        LDRSH    R0,[SP, #+8]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_3
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+8]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1305   if(Me&&Mc)  {vm[im]=min(Me,Mc);im++;}
??motor_fuzzy_3:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_4
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_4
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1306   if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
??motor_fuzzy_4:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_5
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_5
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1307   //if(Be&&Sc)  {vb[ib]=min(Be,Sc);ib++;}
// 1308   if(Be&&Sc)  {vs[is]=min(Be,Sc);is++;}
??motor_fuzzy_5:
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_6
        LDRSH    R0,[SP, #+8]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_6
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+8]
        LDRSH    R0,[SP, #+10]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1309   
// 1310   if(Be&&Mc)  {vb[ib]=min(Be,Mc);ib++;} 
??motor_fuzzy_6:
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_7
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_7
        LDRSH    R4,[SP, #+18]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+10]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+60
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+18]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+18]
// 1311   if(Be&&Bc)  {vm[im]=min(Be,Bc);im++;}
??motor_fuzzy_7:
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_8
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_8
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+10]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1312 
// 1313 
// 1314   if(vs[0]){
??motor_fuzzy_8:
        LDRSH    R0,[SP, #+36]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_9
// 1315   f=&vs[0];
        ADD      R0,SP,#+36
// 1316   Ks=subjection_k(f,is);
        LDRSH    R1,[SP, #+4]
        BL       subjection_k
        STR      R0,[SP, #+28]
// 1317   }
// 1318   if(vm[0]){
??motor_fuzzy_9:
        LDRSH    R0,[SP, #+48]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_10
// 1319   f=&vm[0];
        ADD      R0,SP,#+48
// 1320   Km=subjection_k(f,im);
        LDRSH    R1,[SP, #+6]
        BL       subjection_k
        STR      R0,[SP, #+24]
// 1321   }
// 1322   if(vb[0]){
??motor_fuzzy_10:
        LDRSH    R0,[SP, #+60]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_11
// 1323   f=&vb[0];
        ADD      R0,SP,#+60
// 1324   Kb=subjection_k(f,ib);
        LDRSH    R1,[SP, #+18]
        BL       subjection_k
        STR      R0,[SP, #+20]
// 1325   }
// 1326 
// 1327   Motor.P=(MP_B*Kb+MP_M*Km+MP_S*Ks)/(Kb+Km+Ks);
??motor_fuzzy_11:
        LDR      R0,[SP, #+20]
        MOV      R1,#+580
        LDR      R2,[SP, #+24]
        MOV      R3,#+540
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR      R1,[SP, #+28]
        MOV      R2,#+510
        MLA      R0,R2,R1,R0
        LDR      R1,[SP, #+20]
        LDR      R2,[SP, #+24]
        ADDS     R1,R2,R1
        LDR      R2,[SP, #+28]
        ADDS     R1,R2,R1
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable62_1
        STRH     R0,[R1, #+0]
// 1328 
// 1329   
// 1330   for(is=0;is<6;is++){
        MOVS     R0,#+0
        STRH     R0,[SP, #+4]
        B.N      ??motor_fuzzy_12
// 1331     vs[is]=0;
??motor_fuzzy_13:
        LDRSH    R0,[SP, #+4]
        ADD      R1,SP,#+36
        MOVS     R2,#+0
        STRH     R2,[R1, R0, LSL #+1]
// 1332     vm[is]=0;
        LDRSH    R0,[SP, #+4]
        ADD      R1,SP,#+48
        MOVS     R2,#+0
        STRH     R2,[R1, R0, LSL #+1]
// 1333     vb[is]=0;
        LDRSH    R0,[SP, #+4]
        ADD      R1,SP,#+60
        MOVS     R2,#+0
        STRH     R2,[R1, R0, LSL #+1]
// 1334   }
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
??motor_fuzzy_12:
        LDRSH    R0,[SP, #+4]
        CMP      R0,#+6
        BLT.N    ??motor_fuzzy_13
// 1335   is=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+4]
// 1336   im=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+6]
// 1337   ib=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+18]
// 1338   Ks=0;Km=0;Kb=0;Kz=0;
        MOVS     R0,#+0
        STR      R0,[SP, #+28]
        MOVS     R0,#+0
        STR      R0,[SP, #+24]
        MOVS     R0,#+0
        STR      R0,[SP, #+20]
        MOVS     R0,#+0
        STR      R0,[SP, #+32]
// 1339   ///////////////////////////////////////I参数
// 1340   if(Se&&Sc)  {vb[ib]=min(Se,Sc);ib++;}  //建表
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_14
        LDRSH    R0,[SP, #+8]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_14
        LDRSH    R4,[SP, #+18]
        LDRSH    R1,[SP, #+8]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+60
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+18]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+18]
// 1341   if(Se&&Mc)  {vb[ib]=min(Se,Mc);ib++;}
??motor_fuzzy_14:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_15
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_15
        LDRSH    R4,[SP, #+18]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+60
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+18]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+18]
// 1342   if(Se&&Bc)  {vm[im]=min(Se,Bc);im++;}
??motor_fuzzy_15:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_16
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_16
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1343   if(Me&&Sc)  {vz[iz]=min(Me,Sc);iz++;}
??motor_fuzzy_16:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_17
        LDRSH    R0,[SP, #+8]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_17
        LDRSH    R4,[SP, #+16]
        LDRSH    R1,[SP, #+8]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+72
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+16]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+16]
// 1344   if(Me&&Mc)  {vs[is]=min(Me,Mc);is++;}
??motor_fuzzy_17:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_18
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_18
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1345   if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
??motor_fuzzy_18:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_19
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_19
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1346   if(Be&&Sc)  {vz[iz]=min(Be,Sc);iz++;}
??motor_fuzzy_19:
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_20
        LDRSH    R0,[SP, #+8]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_20
        LDRSH    R4,[SP, #+16]
        LDRSH    R1,[SP, #+8]
        LDRSH    R0,[SP, #+10]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+72
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+16]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+16]
// 1347   if(Be&&Mc)  {vz[iz]=min(Be,Mc);iz++;} 
??motor_fuzzy_20:
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_21
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_21
        LDRSH    R4,[SP, #+16]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+10]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+72
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+16]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+16]
// 1348   if(Be&&Bc)  {vz[iz]=min(Be,Bc);iz++;}
??motor_fuzzy_21:
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_22
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_22
        LDRSH    R4,[SP, #+16]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+10]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+72
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+16]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+16]
// 1349 
// 1350   if(vz[0]){
??motor_fuzzy_22:
        LDRSH    R0,[SP, #+72]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_23
// 1351   f=&vz[0];
        ADD      R0,SP,#+72
// 1352   Kz=subjection_k(f,iz);
        LDRSH    R1,[SP, #+16]
        BL       subjection_k
        STR      R0,[SP, #+32]
// 1353   }
// 1354   if(vs[0]){
??motor_fuzzy_23:
        LDRSH    R0,[SP, #+36]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_24
// 1355   f=&vs[0];
        ADD      R0,SP,#+36
// 1356   Ks=subjection_k(f,is);
        LDRSH    R1,[SP, #+4]
        BL       subjection_k
        STR      R0,[SP, #+28]
// 1357   }
// 1358   if(vm[0]){
??motor_fuzzy_24:
        LDRSH    R0,[SP, #+48]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_25
// 1359   f=&vm[0];
        ADD      R0,SP,#+48
// 1360   Km=subjection_k(f,im);
        LDRSH    R1,[SP, #+6]
        BL       subjection_k
        STR      R0,[SP, #+24]
// 1361   }
// 1362   if(vb[0]){
??motor_fuzzy_25:
        LDRSH    R0,[SP, #+60]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_26
// 1363   f=&vb[0];
        ADD      R0,SP,#+60
// 1364   Kb=subjection_k(f,ib);
        LDRSH    R1,[SP, #+18]
        BL       subjection_k
        STR      R0,[SP, #+20]
// 1365   }
// 1366   
// 1367   Motor.I=(MI_B*Kb+MI_M*Km+MI_S*Ks)/(Kb+Km+Ks+Kz);
??motor_fuzzy_26:
        LDR      R0,[SP, #+20]
        MOVS     R1,#+12
        LDR      R2,[SP, #+24]
        MOVS     R3,#+9
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR      R1,[SP, #+28]
        MOVS     R2,#+6
        MLA      R0,R2,R1,R0
        LDR      R1,[SP, #+20]
        LDR      R2,[SP, #+24]
        ADDS     R1,R2,R1
        LDR      R2,[SP, #+28]
        ADDS     R1,R2,R1
        LDR      R2,[SP, #+32]
        ADDS     R1,R2,R1
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable62_1
        STRH     R0,[R1, #+2]
// 1368 }
        ADD      SP,SP,#+92
        POP      {R4-R11,PC}      ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58:
        DC32     BW2+0x77

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_1:
        DC32     BW3+0x4F

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_2:
        DC32     BW4+0x8B

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_3:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_4:
        DC32     `?<Constant {1, 2, 3, 3, 4}>`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_5:
        DC32     xu_xian2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_6:
        DC32     END_Line_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_7:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_8:
        DC32     video

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_9:
        DC32     start_line2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_10:
        DC32     bianyan
// 1369 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1370 int16 speed_fuzzy(int16 e,int16 ec,int16 s_end,int16 m_start,int16 b_start,int16 m_end,int16 sc_end,int16 mc_start,int16 bc_start,int16 mc_end)
// 1371 {
speed_fuzzy:
        PUSH     {R0,R2,R4-R11,LR}
        SUB      SP,SP,#+84
        MOVS     R5,R1
        MOVS     R4,R3
        LDRSH    R10,[SP, #+128]
        LDRSH    R11,[SP, #+132]
        LDRSH    R6,[SP, #+136]
        LDRSH    R7,[SP, #+140]
        LDRSH    R8,[SP, #+144]
        LDRSH    R9,[SP, #+148]
// 1372   volatile int16 ib=0,im=0,is=0,exspeed=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+6]
        MOVS     R0,#+0
        STRH     R0,[SP, #+8]
        MOVS     R0,#+0
        STRH     R0,[SP, #+4]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 1373   volatile int16 Se=0,Me=0,Be=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+16]
        MOVS     R0,#+0
        STRH     R0,[SP, #+14]
        MOVS     R0,#+0
        STRH     R0,[SP, #+12]
// 1374   volatile int16 Sc=0,Mc=0,Bc=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+10]
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 1375   int16 vb[8]={0};
        ADD      R0,SP,#+48
        MOVS     R1,#+16
        BL       __aeabi_memclr4
// 1376   int16 vm[8]={0};
        ADD      R0,SP,#+64
        MOVS     R1,#+16
        BL       __aeabi_memclr4
// 1377   int16 vs[8]={0};
        ADD      R0,SP,#+32
        MOVS     R1,#+16
        BL       __aeabi_memclr4
// 1378   volatile long Ks=0,Km=0,Kb=0;
        MOVS     R0,#+0
        STR      R0,[SP, #+28]
        MOVS     R0,#+0
        STR      R0,[SP, #+24]
        MOVS     R0,#+0
        STR      R0,[SP, #+20]
// 1379   int16 *f;
// 1380   
// 1381   sub_e(e,s_end,m_start,b_start,m_end); //变化差
        UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
        STR      R11,[SP, #+0]
        MOV      R3,R10
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        MOVS     R2,R4
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        LDRH     R1,[SP, #+88]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDRH     R0,[SP, #+84]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       sub_e
// 1382   Se=sub.s;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+0]
        STRH     R0,[SP, #+16]
// 1383   Me=sub.m;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+2]
        STRH     R0,[SP, #+14]
// 1384   Be=sub.b;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+4]
        STRH     R0,[SP, #+12]
// 1385   
// 1386   sub_e(abs(ec),sc_end,mc_start,bc_start,mc_end);  //变化率
        MOVS     R0,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
        STR      R9,[SP, #+0]
        MOV      R3,R8
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        MOVS     R2,R7
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R1,R6
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       sub_e
// 1387   Sc=sub.s;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+0]
        STRH     R0,[SP, #+10]
// 1388   Mc=sub.m;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+2]
        STRH     R0,[SP, #+2]
// 1389   Bc=sub.b;
        LDR.W    R0,??DataTable62
        LDRH     R0,[R0, #+4]
        STRH     R0,[SP, #+0]
// 1390   
// 1391   
// 1392   if(ec<0){                             //看到的点数在增加
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BPL.W    ??speed_fuzzy_0
// 1393   
// 1394   if(Se&&Sc)  {vs[is]=min(Se,Sc);is++;}  //建表
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_1
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_1
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1395   if(Se&&Mc)  {vm[im]=min(Se,Mc);im++;}  //b
??speed_fuzzy_1:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_2
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_2
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+64
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1396   if(Se&&Bc)  {vb[ib]=min(Se,Bc);ib++;}
??speed_fuzzy_2:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_3
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_3
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1397   if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
??speed_fuzzy_3:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_4
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_4
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+64
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1398   if(Me&&Mc)  {vb[ib]=min(Me,Mc);ib++;}
??speed_fuzzy_4:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_5
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_5
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1399   if(Me&&Bc)  {vb[ib]=min(Me,Bc);ib++;}
??speed_fuzzy_5:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_6
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_6
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1400   if(Be&&Sc)  {vb[ib]=min(Be,Sc);ib++;}
??speed_fuzzy_6:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_7
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_7
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1401   if(Be&&Mc)  {vb[ib]=min(Be,Mc);ib++;} 
??speed_fuzzy_7:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_8
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_8
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1402 //  if(Be&&Bc)  {vb[ib]=min(Be,Bc);ib++;}
// 1403   if(Be&&Bc)  {vm[im]=min(Be,Bc);im++;} 
??speed_fuzzy_8:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_9
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_9
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+64
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1404     if(vs[0]){
??speed_fuzzy_9:
        LDRSH    R0,[SP, #+32]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_10
// 1405     f=&vs[0];
        ADD      R0,SP,#+32
// 1406     Ks=subjection_k(f,is);
        LDRSH    R1,[SP, #+4]
        BL       subjection_k
        STR      R0,[SP, #+28]
// 1407     }
// 1408     if(vm[0]){
??speed_fuzzy_10:
        LDRSH    R0,[SP, #+64]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_11
// 1409     f=&vm[0];
        ADD      R0,SP,#+64
// 1410     Km=subjection_k(f,im);
        LDRSH    R1,[SP, #+8]
        BL       subjection_k
        STR      R0,[SP, #+24]
// 1411     }
// 1412     if(vb[0]){
??speed_fuzzy_11:
        LDRSH    R0,[SP, #+48]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_12
// 1413     f=&vb[0];
        ADD      R0,SP,#+48
// 1414     Kb=subjection_k(f,ib);
        LDRSH    R1,[SP, #+6]
        BL       subjection_k
        STR      R0,[SP, #+20]
// 1415     }
// 1416     
// 1417     exspeed=(speed_b*Kb+speed_m*Km+speed_s*Ks)/(Kb+Km+Ks);
??speed_fuzzy_12:
        LDR.W    R0,??DataTable63
        LDRSH    R0,[R0, #+0]
        LDR      R1,[SP, #+20]
        LDR.W    R2,??DataTable63_1
        LDRSH    R2,[R2, #+0]
        LDR      R3,[SP, #+24]
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR.W    R1,??DataTable63_2
        LDRSH    R1,[R1, #+0]
        LDR      R2,[SP, #+28]
        MLA      R0,R2,R1,R0
        LDR      R1,[SP, #+20]
        LDR      R2,[SP, #+24]
        ADDS     R1,R2,R1
        LDR      R2,[SP, #+28]
        ADDS     R1,R2,R1
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+0]
        B.N      ??speed_fuzzy_13
// 1418   }else{
// 1419    
// 1420   if(Se&&Sc)  {vs[is]=min(Se,Sc);is++;}  //建表 4.10
??speed_fuzzy_0:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_14
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_14
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1421   if(Se&&Mc)  {vs[is]=min(Se,Mc);is++;}
??speed_fuzzy_14:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_15
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_15
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1422   if(Se&&Bc)  {vs[is]=min(Se,Bc);is++;}
??speed_fuzzy_15:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_16
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_16
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1423   if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
??speed_fuzzy_16:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_17
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_17
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+64
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1424   if(Me&&Mc)  {vs[is]=min(Me,Mc);is++;}
??speed_fuzzy_17:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_18
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_18
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1425   if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
??speed_fuzzy_18:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_19
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_19
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1426   if(Be&&Sc)  {vb[ib]=min(Be,Sc);ib++;}
??speed_fuzzy_19:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_20
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_20
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1427   if(Be&&Mc)  {vm[im]=min(Be,Mc);im++;}
??speed_fuzzy_20:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_21
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_21
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+64
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1428   if(Be&&Bc)  {vs[is]=min(Be,Bc);is++;}
??speed_fuzzy_21:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_22
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_22
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1429 
// 1430     if(vs[0]){
??speed_fuzzy_22:
        LDRSH    R0,[SP, #+32]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_23
// 1431     f=&vs[0];
        ADD      R0,SP,#+32
// 1432     Ks=subjection_k(f,is);
        LDRSH    R1,[SP, #+4]
        BL       subjection_k
        STR      R0,[SP, #+28]
// 1433     }
// 1434     if(vm[0]){
??speed_fuzzy_23:
        LDRSH    R0,[SP, #+64]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_24
// 1435     f=&vm[0];
        ADD      R0,SP,#+64
// 1436     Km=subjection_k(f,im);
        LDRSH    R1,[SP, #+8]
        BL       subjection_k
        STR      R0,[SP, #+24]
// 1437     }
// 1438     if(vb[0]){
??speed_fuzzy_24:
        LDRSH    R0,[SP, #+48]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_25
// 1439     f=&vb[0];
        ADD      R0,SP,#+48
// 1440     Kb=subjection_k(f,ib);
        LDRSH    R1,[SP, #+6]
        BL       subjection_k
        STR      R0,[SP, #+20]
// 1441     }
// 1442     
// 1443 
// 1444     exspeed=(speed_b*Kb+speed_m*Km+speed_s*Ks)/(Kb+Km+Ks);
??speed_fuzzy_25:
        LDR.W    R0,??DataTable63
        LDRSH    R0,[R0, #+0]
        LDR      R1,[SP, #+20]
        LDR.W    R2,??DataTable63_1
        LDRSH    R2,[R2, #+0]
        LDR      R3,[SP, #+24]
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR.W    R1,??DataTable63_2
        LDRSH    R1,[R1, #+0]
        LDR      R2,[SP, #+28]
        MLA      R0,R2,R1,R0
        LDR      R1,[SP, #+20]
        LDR      R2,[SP, #+24]
        ADDS     R1,R2,R1
        LDR      R2,[SP, #+28]
        ADDS     R1,R2,R1
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+0]
// 1445   }
// 1446   
// 1447   return exspeed;
??speed_fuzzy_13:
        LDRSH    R0,[SP, #+0]
        ADD      SP,SP,#+92
        POP      {R4-R11,PC}      ;; return
// 1448 }
// 1449 
// 1450 
// 1451 /*****找到莫连续几行的中心线的最大最小值******/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1452 int16 line_min(uint8 *head,uint8 *tail){
line_min:
        PUSH     {R4}
// 1453   uint8 *p=NULL;
        MOVS     R2,#+0
// 1454   point.x=*head;
        LDR.W    R3,??DataTable63_3
        LDRB     R4,[R0, #+0]
        STRB     R4,[R3, #+0]
// 1455   point.y=0;
        LDR.W    R3,??DataTable63_3
        MOVS     R4,#+0
        STRB     R4,[R3, #+1]
// 1456   for(p=head+1;p<=tail;p++){
        ADDS     R3,R0,#+1
        MOVS     R2,R3
        B.N      ??line_min_0
// 1457     if(*p<point.x){
??line_min_1:
        LDRB     R3,[R2, #+0]
        LDR.W    R4,??DataTable63_3
        LDRB     R4,[R4, #+0]
        CMP      R3,R4
        BCS.N    ??line_min_2
// 1458       point.x=*p;
        LDR.W    R3,??DataTable63_3
        LDRB     R4,[R2, #+0]
        STRB     R4,[R3, #+0]
// 1459 
// 1460 
// 1461 
// 1462        point.y=p-head;
        SUBS     R3,R2,R0
        LDR.N    R4,??DataTable63_3
        STRB     R3,[R4, #+1]
// 1463     }  
// 1464   }
??line_min_2:
        ADDS     R2,R2,#+1
??line_min_0:
        CMP      R1,R2
        BCS.N    ??line_min_1
// 1465   return point.x;
        LDR.N    R0,??DataTable63_3
        LDRB     R0,[R0, #+0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        POP      {R4}
        BX       LR               ;; return
// 1466 }                                                                       
// 1467     
// 1468   
// 1469 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1470 int16 line_max(uint8 *head,uint8 *tail){
line_max:
        PUSH     {R4}
// 1471   uint8 *p=NULL;
        MOVS     R2,#+0
// 1472   
// 1473   point.x=*head;
        LDR.N    R3,??DataTable63_3
        LDRB     R4,[R0, #+0]
        STRB     R4,[R3, #+0]
// 1474   point.y=0;
        LDR.N    R3,??DataTable63_3
        MOVS     R4,#+0
        STRB     R4,[R3, #+1]
// 1475   for(p=head+1;p<=tail;p++){
        ADDS     R3,R0,#+1
        MOVS     R2,R3
        B.N      ??line_max_0
// 1476     if(*p>point.x){
??line_max_1:
        LDR.N    R3,??DataTable63_3
        LDRB     R3,[R3, #+0]
        LDRB     R4,[R2, #+0]
        CMP      R3,R4
        BCS.N    ??line_max_2
// 1477       point.x=*p;
        LDR.N    R3,??DataTable63_3
        LDRB     R4,[R2, #+0]
        STRB     R4,[R3, #+0]
// 1478       point.y=p-head;
        SUBS     R3,R2,R0
        LDR.N    R4,??DataTable63_3
        STRB     R3,[R4, #+1]
// 1479     }
// 1480   }
??line_max_2:
        ADDS     R2,R2,#+1
??line_max_0:
        CMP      R1,R2
        BCS.N    ??line_max_1
// 1481   return point.x;
        LDR.N    R0,??DataTable63_3
        LDRB     R0,[R0, #+0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        POP      {R4}
        BX       LR               ;; return
// 1482 }
// 1483 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1484 int16 line(int16 value,int16 lenth){
line:
        PUSH     {R4,R5}
// 1485   static int16 line[30]={0},i=0;               //30
// 1486   int16 sum=0,j=0,k=0;
        MOVS     R2,#+0
        MOVS     R3,#+0
        MOVS     R4,#+0
// 1487   
// 1488   if(i==30) i=0;                                   
        LDR.N    R5,??DataTable63_4
        LDRSH    R5,[R5, #+0]
        CMP      R5,#+30
        BNE.N    ??line_1
        LDR.N    R3,??DataTable63_4
        MOVS     R4,#+0
        STRH     R4,[R3, #+0]
// 1489   line[i]=value;
??line_1:
        LDR.N    R3,??DataTable63_4
        LDRSH    R3,[R3, #+0]
        LDR.N    R4,??DataTable63_5
        STRH     R0,[R4, R3, LSL #+1]
// 1490   k=i++;
        LDR.N    R0,??DataTable63_4
        LDRSH    R4,[R0, #+0]
        LDR.N    R0,??DataTable63_4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R3,??DataTable63_4
        STRH     R0,[R3, #+0]
// 1491   for(j=0;j<lenth;j++){
        MOVS     R3,#+0
        B.N      ??line_2
// 1492     if(k<0) k=29;
??line_3:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??line_4
        MOVS     R4,#+29
// 1493     sum+=line[k];
??line_4:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??DataTable63_5
        LDRH     R0,[R0, R4, LSL #+1]
        ADDS     R2,R0,R2
// 1494     k--;
        SUBS     R4,R4,#+1
// 1495   }
        ADDS     R3,R3,#+1
??line_2:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R3,R1
        BLT.N    ??line_3
// 1496   return sum;
        MOVS     R0,R2
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        POP      {R4,R5}
        BX       LR               ;; return
// 1497 }

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable62:
        DC32     `sub`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable62_1:
        DC32     Motor

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
??line:
        DS8 60

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
??i:
        DS8 2
// 1498 
// 1499 /*******找到莫连续几行的中心线的最大最小值END********/
// 1500 
// 1501 /******************************************************
// 1502 *function name:int16 stages(int16 value,int16 parameter)
// 1503 *Description:  求出位置值
// 1504 *Imput:        value:算出的当场中心
// 1505                parameter：视场中心
// 1506 *Output:       位置值
// 1507 *Date:         2013.5.6
// 1508 *Name:         潘杰
// 1509 *******************************************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1510 int16 stages_P(int16 value,int16 parameter)
// 1511 {
// 1512   //if(!value) return unclear;
// 1513   if(value<=parameter)
stages_P:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BLT.N    ??stages_P_0
// 1514   {
// 1515     if(value>=(parameter-5)){NULL;return(0);}
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+5
        CMP      R0,R2
        BLT.N    ??stages_P_1
        MOVS     R0,#+0
        B.N      ??stages_P_2
// 1516     else if(value>=(parameter-10)){NULL;return(-1);}  
??stages_P_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+10
        CMP      R0,R2
        BLT.N    ??stages_P_3
        MOVS     R0,#-1
        B.N      ??stages_P_2
// 1517     else if(value>=(parameter-15)){NULL;return(-2);}    
??stages_P_3:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+15
        CMP      R0,R2
        BLT.N    ??stages_P_4
        MVNS     R0,#+1
        B.N      ??stages_P_2
// 1518     else if(value>=(parameter-20)){NULL;return(-3);}
??stages_P_4:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+20
        CMP      R0,R2
        BLT.N    ??stages_P_5
        MVNS     R0,#+2
        B.N      ??stages_P_2
// 1519     else if(value>=(parameter-25)){NULL;return(-4);}
??stages_P_5:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+25
        CMP      R0,R2
        BLT.N    ??stages_P_6
        MVNS     R0,#+3
        B.N      ??stages_P_2
// 1520     else if(value>=(parameter-30)){NULL;return(-5);}
??stages_P_6:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R1,R1,#+30
        CMP      R0,R1
        BLT.N    ??stages_P_7
        MVNS     R0,#+4
        B.N      ??stages_P_2
// 1521     else {NULL;return(-6);}
??stages_P_7:
        MVNS     R0,#+5
        B.N      ??stages_P_2
// 1522   }
// 1523   else
// 1524   {
// 1525     if(value<=(parameter+5)){NULL;return(0);}
??stages_P_0:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_P_8
        MOVS     R0,#+0
        B.N      ??stages_P_2
// 1526     else if(value<=(parameter+10)){NULL;return(1);}  
??stages_P_8:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+10
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_P_9
        MOVS     R0,#+1
        B.N      ??stages_P_2
// 1527     else if(value<=(parameter+15)){NULL;return(2);}    
??stages_P_9:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+15
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_P_10
        MOVS     R0,#+2
        B.N      ??stages_P_2
// 1528     else if(value<=(parameter+20)){NULL;return(3);}
??stages_P_10:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+20
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_P_11
        MOVS     R0,#+3
        B.N      ??stages_P_2
// 1529     else if(value<=(parameter+25)){NULL;return(4);}
??stages_P_11:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+25
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_P_12
        MOVS     R0,#+4
        B.N      ??stages_P_2
// 1530     else if(value<=(parameter+30)){NULL;return(5);}
??stages_P_12:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R1,R1,#+30
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BLT.N    ??stages_P_13
        MOVS     R0,#+5
        B.N      ??stages_P_2
// 1531     else {NULL;return(6);}
??stages_P_13:
        MOVS     R0,#+6
??stages_P_2:
        BX       LR               ;; return
// 1532   }
// 1533 }
// 1534 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1535 int16 stages_low_P(int16 value,int16 parameter)
// 1536 {
// 1537   //if(!value) return unclear;
// 1538   if(value<=parameter)
stages_low_P:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BLT.N    ??stages_low_P_0
// 1539   {
// 1540     if(value>=(parameter-5)){NULL;return(0);}
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+5
        CMP      R0,R2
        BLT.N    ??stages_low_P_1
        MOVS     R0,#+0
        B.N      ??stages_low_P_2
// 1541     else if(value>=(parameter-13)){NULL;return(-1);}  
??stages_low_P_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+13
        CMP      R0,R2
        BLT.N    ??stages_low_P_3
        MOVS     R0,#-1
        B.N      ??stages_low_P_2
// 1542     else if(value>=(parameter-23)){NULL;return(-2);}    
??stages_low_P_3:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R1,R1,#+23
        CMP      R0,R1
        BLT.N    ??stages_low_P_4
        MVNS     R0,#+1
        B.N      ??stages_low_P_2
// 1543     else {NULL;return(-3);}
??stages_low_P_4:
        MVNS     R0,#+2
        B.N      ??stages_low_P_2
// 1544   }
// 1545   else
// 1546   {
// 1547     if(value<=(parameter+5)){NULL;return(0);}
??stages_low_P_0:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_low_P_5
        MOVS     R0,#+0
        B.N      ??stages_low_P_2
// 1548     else if(value<=(parameter+13)){NULL;return(1);}  
??stages_low_P_5:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+13
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_low_P_6
        MOVS     R0,#+1
        B.N      ??stages_low_P_2
// 1549     else if(value<=(parameter+23)){NULL;return(2);}    
??stages_low_P_6:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R1,R1,#+23
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BLT.N    ??stages_low_P_7
        MOVS     R0,#+2
        B.N      ??stages_low_P_2
// 1550     else {NULL;return(3);}
??stages_low_P_7:
        MOVS     R0,#+3
??stages_low_P_2:
        BX       LR               ;; return
// 1551   }
// 1552 }
// 1553 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1554 int16 stages_D(int16 value)
// 1555 {
// 1556   if(value<=0)
stages_D:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+1
        BGE.N    ??stages_D_0
// 1557   {
// 1558     if(value>=-5){NULL;return(0);}
        MVNS     R1,#+4
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_1
        MOVS     R0,#+0
        B.N      ??stages_D_2
// 1559     else if(value>=-10){NULL;return(-1);}  
??stages_D_1:
        MVNS     R1,#+9
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_3
        MOVS     R0,#-1
        B.N      ??stages_D_2
// 1560     else if(value>=-15){NULL;return(-2);}    
??stages_D_3:
        MVNS     R1,#+14
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_4
        MVNS     R0,#+1
        B.N      ??stages_D_2
// 1561     else if(value>=-20){NULL;return(-3);}
??stages_D_4:
        MVNS     R1,#+19
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_5
        MVNS     R0,#+2
        B.N      ??stages_D_2
// 1562     else if(value>=-25){NULL;return(-4);}
??stages_D_5:
        MVNS     R1,#+24
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_6
        MVNS     R0,#+3
        B.N      ??stages_D_2
// 1563     else if(value>=-30){NULL;return(-5);}
??stages_D_6:
        MVNS     R1,#+29
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_7
        MVNS     R0,#+4
        B.N      ??stages_D_2
// 1564     else {NULL;return(-6);}
??stages_D_7:
        MVNS     R0,#+5
        B.N      ??stages_D_2
// 1565   }
// 1566   else
// 1567   {
// 1568     if(value<=5){NULL;return(0);}
??stages_D_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+6
        BGE.N    ??stages_D_8
        MOVS     R0,#+0
        B.N      ??stages_D_2
// 1569     else if(value<=10){NULL;return(1);}  
??stages_D_8:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+11
        BGE.N    ??stages_D_9
        MOVS     R0,#+1
        B.N      ??stages_D_2
// 1570     else if(value<=15){NULL;return(2);}    
??stages_D_9:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+16
        BGE.N    ??stages_D_10
        MOVS     R0,#+2
        B.N      ??stages_D_2
// 1571     else if(value<=20){NULL;return(3);}
??stages_D_10:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+21
        BGE.N    ??stages_D_11
        MOVS     R0,#+3
        B.N      ??stages_D_2
// 1572     else if(value<=25){NULL;return(4);}
??stages_D_11:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+26
        BGE.N    ??stages_D_12
        MOVS     R0,#+4
        B.N      ??stages_D_2
// 1573     else if(value<=30){NULL;return(5);}
??stages_D_12:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+31
        BGE.N    ??stages_D_13
        MOVS     R0,#+5
        B.N      ??stages_D_2
// 1574     else {NULL;return(6);}
??stages_D_13:
        MOVS     R0,#+6
??stages_D_2:
        BX       LR               ;; return
// 1575   }
// 1576 }
// 1577 
// 1578 
// 1579 
// 1580 /***********************************
// 1581 *name:judge_small_S
// 1582 *fuction:区别直道与小S，确定小S参数，使小S能够直走
// 1583 *time:2013.6.22
// 1584 *way:1，首先小S被认定为很直的直道20
// 1585      2，通过54~25行的中心值的最大与最小进行比较，如果最大值减去最小值大于某个数则认为是小S
// 1586 ***********************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1587 uint16 judge_small_S(void)
// 1588 {
judge_small_S:
        PUSH     {R4}
// 1589   uint8 i=0,center_max=0,center_min=0,center_chazhi=0;
        MOVS     R0,#+0
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
// 1590   center_max=center[54];
        LDR.N    R4,??DataTable63_6
        LDRB     R4,[R4, #+54]
        MOVS     R1,R4
// 1591   center_min=center[54];
        LDR.N    R4,??DataTable63_6
        LDRB     R4,[R4, #+54]
        MOVS     R2,R4
// 1592   for(i=53;i>=20;i--)
        MOVS     R4,#+53
        MOVS     R0,R4
        B.N      ??judge_small_S_0
// 1593   {
// 1594   if(center_max<center[i])center_max=center[i];
??judge_small_S_1:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.N    R3,??DataTable63_6
        LDRB     R3,[R0, R3]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,R3
        BCS.N    ??judge_small_S_2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.N    R1,??DataTable63_6
        LDRB     R1,[R0, R1]
// 1595           if(center_min>center[i])center_min=center[i];
??judge_small_S_2:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.N    R3,??DataTable63_6
        LDRB     R3,[R0, R3]
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        CMP      R3,R2
        BCS.N    ??judge_small_S_3
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.N    R2,??DataTable63_6
        LDRB     R2,[R0, R2]
// 1596   }
??judge_small_S_3:
        SUBS     R0,R0,#+1
??judge_small_S_0:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+20
        BCS.N    ??judge_small_S_1
// 1597   center_chazhi=center_max-center_min;
        SUBS     R3,R1,R2
// 1598   if(center_chazhi>9)return 1;
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+10
        BCC.N    ??judge_small_S_4
        MOVS     R0,#+1
        B.N      ??judge_small_S_5
// 1599   else return 0;
??judge_small_S_4:
        MOVS     R0,#+0
??judge_small_S_5:
        POP      {R4}
        BX       LR               ;; return
// 1600 }

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63:
        DC32     speed_b

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_1:
        DC32     speed_m

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_2:
        DC32     speed_s

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_3:
        DC32     point

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_4:
        DC32     ??i

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_5:
        DC32     ??line

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_6:
        DC32     center
// 1601 
// 1602 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
// 1603 int16 choose_PD(m)
// 1604 {
choose_PD:
        PUSH     {R3-R11,LR}
// 1605   int16 i=0,num=0;
        MOVS     R0,#+0
        MOVS     R1,#+0
// 1606   uint8 track_form=0;//j=0,
        MOVS     R4,#+0
// 1607   int16 buff1=0;//,buff2=0,buff3=0
        MOVS     R2,#+0
        STRH     R2,[SP, #+0]
// 1608   //int8 position_now_P=0,position_now_low_P=0,position_now_D=0;
// 1609   int16 line_head=0,line_end=54,line_mid=0;//line_head=30
        MOVS     R2,#+0
        MOVS     R3,#+54
        MOVS     R11,#+0
// 1610   int16 line_mid_d=0,line_end_d=0;
        MOVS     R9,#+0
        MOVS     R8,#+0
// 1611   int16 head=0,end=0;
        MOVS     R5,#+0
        MOVS     R6,#+0
// 1612   int16 position_now_sum=0;
        MOVS     R7,#+0
// 1613   //int16 xiaoS_flag=0;
// 1614   int16 piancha_weizhi=0,piancha_num=0;
        MOVS     LR,#+0
        MOVS     R12,#+0
// 1615  int16 position_diff_zhi=0;
        MOVS     R10,#+0
        B.N      ??choose_PD_0
// 1616   
// 1617   
// 1618   while(!center[i]&&i<H)i++;
??choose_PD_1:
        ADDS     R0,R0,#+1
??choose_PD_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    LR,??choose_PD_2
        LDRB     LR,[R0, LR]
        CMP      LR,#+0
        BNE.N    ??choose_PD_3
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+55
        BLT.N    ??choose_PD_1
// 1619   topline=i;
??choose_PD_3:
        LDR.W    LR,??choose_PD_2+0x4
        STRH     R0,[LR, #+0]
// 1620 
// 1621   if(i<8)
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+8
        BGE.N    ??choose_PD_4
// 1622   {
// 1623     track_form=3;
        MOVS     R4,#+3
// 1624     Servo.P=P_High;
        LDR.W    LR,??choose_PD_2+0x8
        LDR.W    R8,??choose_PD_2+0xC
        LDRB     R8,[R8, #+0]
        STRH     R8,[LR, #+0]
// 1625     Servo.D=D_High;
        LDR.W    LR,??choose_PD_2+0x8
        LDR.W    R8,??choose_PD_2+0x10
        LDRB     R8,[R8, #+0]
        STRH     R8,[LR, #+4]
// 1626     servo_d=D_piancha_high;
        LDR.W    LR,??choose_PD_2+0x14
        LDR.W    R8,??choose_PD_2+0x18
        LDRB     R8,[R8, #+0]
        STRB     R8,[LR, #+0]
// 1627     servo.head=H_High;
        LDR.W    LR,??choose_PD_2+0x1C
        LDR.W    R8,??choose_PD_2+0x20
        LDRB     R8,[R8, #+0]
        STRH     R8,[LR, #+0]
// 1628     servo.tail=T_High;
        LDR.W    LR,??choose_PD_2+0x1C
        LDR.W    R8,??choose_PD_2+0x24
        LDRB     R8,[R8, #+0]
        STRH     R8,[LR, #+2]
// 1629     see_distance=3;
        LDR.W    LR,??choose_PD_2+0x28
        MOVS     R8,#+3
        STRH     R8,[LR, #+0]
// 1630   }
// 1631   if(i>=8&&i<22)
??choose_PD_4:
        SUBS     LR,R0,#+8
        UXTH     LR,LR            ;; ZeroExt  LR,LR,#+16,#+16
        CMP      LR,#+14
        BCS.N    ??choose_PD_5
// 1632   {
// 1633     track_form=2;
        MOVS     R4,#+2
// 1634     Servo.P=P_Mid;
        LDR.W    LR,??choose_PD_2+0x8
        LDR.W    R8,??choose_PD_2+0x2C
        LDRB     R8,[R8, #+0]
        STRH     R8,[LR, #+0]
// 1635     Servo.D=D_Mid;
        LDR.W    LR,??choose_PD_2+0x8
        LDR.W    R8,??choose_PD_2+0x30
        LDRB     R8,[R8, #+0]
        STRH     R8,[LR, #+4]
// 1636     servo_d=D_piancha_mid;
        LDR.W    LR,??choose_PD_2+0x14
        LDR.W    R8,??choose_PD_2+0x34
        LDRB     R8,[R8, #+0]
        STRB     R8,[LR, #+0]
// 1637     servo.head=H_Mid;
        LDR.W    LR,??choose_PD_2+0x1C
        LDR.W    R8,??choose_PD_2+0x38
        LDRB     R8,[R8, #+0]
        STRH     R8,[LR, #+0]
// 1638     servo.tail=T_Mid;
        LDR.W    LR,??choose_PD_2+0x1C
        LDR.W    R8,??choose_PD_2+0x3C
        LDRB     R8,[R8, #+0]
        STRH     R8,[LR, #+2]
// 1639     see_distance=2;
        LDR.W    LR,??choose_PD_2+0x28
        MOVS     R8,#+2
        STRH     R8,[LR, #+0]
// 1640   }
// 1641   if(i>=22)
??choose_PD_5:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+22
        BLT.N    ??choose_PD_6
// 1642   {
// 1643     track_form=1;
        MOVS     R4,#+1
// 1644     Servo.P=P_Low;
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    LR,??choose_PD_2+0x40
        LDRB     LR,[LR, #+0]
        STRH     LR,[R0, #+0]
// 1645     Servo.D=D_Low;
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    LR,??choose_PD_2+0x44
        LDRB     LR,[LR, #+0]
        STRH     LR,[R0, #+4]
// 1646     servo_d=D_piancha_low;
        LDR.W    R0,??choose_PD_2+0x14
        LDR.W    LR,??choose_PD_2+0x48
        LDRB     LR,[LR, #+0]
        STRB     LR,[R0, #+0]
// 1647     servo.head=H_Low;
        LDR.W    R0,??choose_PD_2+0x1C
        LDR.W    LR,??choose_PD_2+0x4C
        LDRB     LR,[LR, #+0]
        STRH     LR,[R0, #+0]
// 1648     servo.tail=T_Low;
        LDR.W    R0,??choose_PD_2+0x1C
        LDR.W    LR,??choose_PD_2+0x50
        LDRB     LR,[LR, #+0]
        STRH     LR,[R0, #+2]
// 1649     see_distance=1;
        LDR.W    R0,??choose_PD_2+0x28
        MOVS     LR,#+1
        STRH     LR,[R0, #+0]
// 1650   }
// 1651   
// 1652   for(i=servo.head;i<servo.tail;i++)
??choose_PD_6:
        LDR.W    R0,??choose_PD_2+0x1C
        LDRSH    R0,[R0, #+0]
        B.N      ??choose_PD_7
// 1653   {
// 1654     if(center[i])
??choose_PD_8:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    LR,??choose_PD_2
        LDRB     LR,[R0, LR]
        CMP      LR,#+0
        BEQ.N    ??choose_PD_9
// 1655     {
// 1656       num++;
        ADDS     R1,R1,#+1
// 1657       position_now_sum+=center[i];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    LR,??choose_PD_2
        LDRB     LR,[R0, LR]
        ADDS     R7,R7,LR
// 1658     }  
// 1659   }
??choose_PD_9:
        ADDS     R0,R0,#+1
??choose_PD_7:
        LDR.W    LR,??choose_PD_2+0x1C
        LDRSH    LR,[LR, #+2]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,LR
        BLT.N    ??choose_PD_8
// 1660  position_old_old_old=position_old_old;
        LDR.W    R0,??choose_PD_2+0x54
        LDR.W    LR,??choose_PD_2+0x58
        LDRH     LR,[LR, #+0]
        STRH     LR,[R0, #+0]
// 1661  position_old_old=position_old;
        LDR.W    R0,??choose_PD_2+0x58
        LDR.W    LR,??choose_PD_2+0x5C
        LDRH     LR,[LR, #+0]
        STRH     LR,[R0, #+0]
// 1662  position_old=position_now;
        LDR.W    R0,??choose_PD_2+0x5C
        LDR.W    LR,??choose_PD_2+0x60
        LDRH     LR,[LR, #+0]
        STRH     LR,[R0, #+0]
// 1663  if(num)
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+0
        BEQ.N    ??choose_PD_10
// 1664   position_now=position_now_sum/num;   //算出当场的中心位置
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SDIV     R0,R7,R1
        LDR.W    R1,??choose_PD_2+0x60
        STRH     R0,[R1, #+0]
// 1665   num=0;
??choose_PD_10:
        MOVS     R1,#+0
// 1666   
// 1667   weizhi_old=weizhi;
        LDR.W    R0,??choose_PD_2+0x64
        LDR.W    R7,??choose_PD_2+0x68
        LDRH     R7,[R7, #+0]
        STRH     R7,[R0, #+0]
// 1668   piancha_weizhi=0;
        MOVS     LR,#+0
// 1669   for(i=35;i<=45;i++){
        MOVS     R0,#+35
        B.N      ??choose_PD_11
// 1670     if(center[i]){
??choose_PD_12:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??choose_PD_2
        LDRB     R7,[R0, R7]
        CMP      R7,#+0
        BEQ.N    ??choose_PD_13
// 1671       piancha_weizhi+=center[i];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??choose_PD_2
        LDRB     R7,[R0, R7]
        ADDS     LR,LR,R7
// 1672       piancha_num++;
        ADDS     R12,R12,#+1
// 1673     }
// 1674   }
??choose_PD_13:
        ADDS     R0,R0,#+1
??choose_PD_11:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+46
        BLT.N    ??choose_PD_12
// 1675   
// 1676   
// 1677   if(piancha_num)
        SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
        CMP      R12,#+0
        BEQ.N    ??choose_PD_14
// 1678     piancha_weizhi=piancha_weizhi/piancha_num;
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
        SDIV     LR,LR,R12
// 1679   weizhi=piancha_weizhi;
??choose_PD_14:
        LDR.W    R0,??choose_PD_2+0x68
        STRH     LR,[R0, #+0]
// 1680   for(i=50;i<55;i++)
        MOVS     R0,#+50
        B.N      ??choose_PD_15
// 1681   {
// 1682     if(center[i])
??choose_PD_16:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??choose_PD_2
        LDRB     R7,[R0, R7]
        CMP      R7,#+0
        BEQ.N    ??choose_PD_17
// 1683     {
// 1684       num++;
        ADDS     R1,R1,#+1
// 1685       position_now_low+=center[i];
        LDR.W    R7,??choose_PD_2+0x6C
        LDRH     R7,[R7, #+0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R12,??choose_PD_2
        LDRB     R12,[R0, R12]
        ADDS     R7,R7,R12
        LDR.W    R12,??choose_PD_2+0x6C
        STRH     R7,[R12, #+0]
// 1686     }  
// 1687   }
??choose_PD_17:
        ADDS     R0,R0,#+1
??choose_PD_15:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+55
        BLT.N    ??choose_PD_16
// 1688   position_now_low=position_now_low/num;
        LDR.W    R0,??choose_PD_2+0x6C
        LDRSH    R0,[R0, #+0]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SDIV     R0,R0,R1
        LDR.W    R1,??choose_PD_2+0x6C
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_18
// 1689   
// 1690   while(center[line_head]==0) line_head++;
??choose_PD_19:
        ADDS     R2,R2,#+1
??choose_PD_18:
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        LDR.W    R0,??choose_PD_2
        LDRB     R0,[R2, R0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_19
// 1691   while(center[line_end]==0)  line_end--;
??choose_PD_20:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        LDR.W    R0,??choose_PD_2
        LDRB     R0,[R3, R0]
        CMP      R0,#+0
        BNE.N    ??choose_PD_21
        SUBS     R3,R3,#+1
        B.N      ??choose_PD_20
// 1692   line_end_d=(line_head+2*line_end)/3;
??choose_PD_21:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        LSLS     R0,R3,#+1
        SXTAH    R0,R0,R2
        MOVS     R1,#+3
        SDIV     R8,R0,R1
// 1693   line_mid_d=(line_end+2*line_head)/3;
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        LSLS     R0,R2,#+1
        SXTAH    R0,R0,R3
        MOVS     R1,#+3
        SDIV     R9,R0,R1
// 1694   for(i=line_head;i<line_mid_d;i++)head+=center[i];
        MOVS     R0,R2
        B.N      ??choose_PD_22
??choose_PD_23:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??choose_PD_2
        LDRB     R1,[R0, R1]
        ADDS     R5,R5,R1
        ADDS     R0,R0,#+1
??choose_PD_22:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R0,R9
        BLT.N    ??choose_PD_23
// 1695   head=head/(line_mid_d-line_head);
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        SUBS     R0,R9,R2
        SDIV     R5,R5,R0
// 1696   for(i=line_mid_d;i<=line_end_d;i++)end+=center[i];
        MOV      R0,R9
        B.N      ??choose_PD_24
??choose_PD_25:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??choose_PD_2
        LDRB     R1,[R0, R1]
        ADDS     R6,R6,R1
        ADDS     R0,R0,#+1
??choose_PD_24:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R8,R0
        BGE.N    ??choose_PD_25
// 1697   end=end/(line_end_d-line_mid_d+1);
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SUBS     R0,R8,R9
        ADDS     R0,R0,#+1
        SDIV     R6,R6,R0
// 1698   position_diff=end-head;
        SUBS     R0,R6,R5
        LDR.W    R1,??choose_PD_26
        STRH     R0,[R1, #+0]
// 1699   
// 1700   position_now_low_P=stages_low_P(position_now_low,video_Middle);
        MOVS     R1,#+80
        LDR.W    R0,??choose_PD_2+0x6C
        LDRSH    R0,[R0, #+0]
        BL       stages_low_P
        LDR.W    R1,??choose_PD_26+0x4
        STRH     R0,[R1, #+0]
// 1701   position_now_P=stages_P(position_now,video_Middle);
        MOVS     R1,#+80
        LDR.W    R0,??choose_PD_2+0x60
        LDRSH    R0,[R0, #+0]
        BL       stages_P
        LDR.W    R1,??choose_PD_26+0x8
        STRH     R0,[R1, #+0]
// 1702   position_now_D=stages_D(position_diff);
        LDR.W    R0,??choose_PD_26
        LDRSH    R0,[R0, #+0]
        BL       stages_D
        LDR.W    R1,??choose_PD_26+0xC
        STRH     R0,[R1, #+0]
// 1703   switch(position_now_P)                       //p=-6              
        LDR.W    R0,??choose_PD_26+0x8
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_27
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_28
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_29
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_30
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_31
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_32
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_33
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_34
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_35
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_36
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_37
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_38
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_39
        B.W      ??choose_PD_40
// 1704   {
// 1705   case -6:                                      //p=-6  D=-6
// 1706     {
// 1707       switch(position_now_D)
??choose_PD_34:
        LDR.W    R0,??choose_PD_26+0xC
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_41
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_42
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_43
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_44
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_45
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_46
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_47
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_48
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_49
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_50
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_51
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_52
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_53
        B.N      ??choose_PD_54
// 1708       {
// 1709       case -6:
// 1710         {
// 1711           switch(track_form)
??choose_PD_48:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_55
        BCC.N    ??choose_PD_56
        CMP      R4,#+3
        BEQ.N    ??choose_PD_57
        BCC.N    ??choose_PD_58
        B.N      ??choose_PD_56
// 1712           {
// 1713           case 1:Servo.P+=6;Servo.D+=0;break;
??choose_PD_55:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_56
// 1714           case 2:Servo.P+=6;Servo.D+=0;break;
??choose_PD_58:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_56
// 1715           case 3:Servo.P+=6;Servo.D+=0;break;
??choose_PD_57:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 1716           }
// 1717         }break;
??choose_PD_56:
        B.N      ??choose_PD_54
// 1718       case -5:                               //p=-6  D=-5
// 1719         {
// 1720           switch(track_form)
??choose_PD_49:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_59
        BCC.N    ??choose_PD_60
        CMP      R4,#+3
        BEQ.N    ??choose_PD_61
        BCC.N    ??choose_PD_62
        B.N      ??choose_PD_60
// 1721           {
// 1722           case 1:Servo.P+=6;Servo.D+=0;break;
??choose_PD_59:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_60
// 1723           case 2:Servo.P+=6;Servo.D+=0;break;
??choose_PD_62:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_60
// 1724           case 3:Servo.P+=6;Servo.D+=0;break;
??choose_PD_61:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 1725           }
// 1726         }break;
??choose_PD_60:
        B.N      ??choose_PD_54
// 1727       case -4:                             //p=-6  D=-4
// 1728         {
// 1729           switch(track_form)
??choose_PD_50:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_63
        BCC.N    ??choose_PD_64
        CMP      R4,#+3
        BEQ.N    ??choose_PD_65
        BCC.N    ??choose_PD_66
        B.N      ??choose_PD_64
// 1730           {
// 1731           case 1:Servo.P+=5;Servo.D-=1;break;
??choose_PD_63:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_64
// 1732           case 2:Servo.P+=5;Servo.D-=1;break;
??choose_PD_66:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_64
// 1733           case 3:Servo.P+=5;Servo.D-=1;break;
??choose_PD_65:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 1734           }
// 1735         }break;
??choose_PD_64:
        B.N      ??choose_PD_54
// 1736       case -3:                               //p=-6  D=-3
// 1737         {
// 1738           switch(track_form)
??choose_PD_51:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_67
        BCC.N    ??choose_PD_68
        CMP      R4,#+3
        BEQ.N    ??choose_PD_69
        BCC.N    ??choose_PD_70
        B.N      ??choose_PD_68
// 1739           {
// 1740           case 1:Servo.P+=5;Servo.D-=2;break;
??choose_PD_67:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_68
// 1741           case 2:Servo.P+=5;Servo.D-=2;break;
??choose_PD_70:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_68
// 1742           case 3:Servo.P+=5;Servo.D-=2;break;
??choose_PD_69:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 1743           }
// 1744         }break;
??choose_PD_68:
        B.N      ??choose_PD_54
// 1745       case -2:                                  //p=-6  D=-2
// 1746         {
// 1747           switch(track_form)
??choose_PD_52:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_71
        BCC.N    ??choose_PD_72
        CMP      R4,#+3
        BEQ.N    ??choose_PD_73
        BCC.N    ??choose_PD_74
        B.N      ??choose_PD_72
// 1748           {
// 1749           case 1:Servo.P+=5;Servo.D-=3;break;
??choose_PD_71:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_72
// 1750           case 2:Servo.P+=5;Servo.D-=3;break;
??choose_PD_74:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_72
// 1751           case 3:Servo.P+=5;Servo.D-=3;break;
??choose_PD_73:
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 1752           }
// 1753         }break;
??choose_PD_72:
        B.N      ??choose_PD_54
// 1754       case -1:                                //p=-6  D=-1
// 1755         {
// 1756           switch(track_form)
??choose_PD_53:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_75
        BCC.N    ??choose_PD_76
        CMP      R4,#+3
        BEQ.N    ??choose_PD_77
        BCC.N    ??choose_PD_78
        B.N      ??choose_PD_76
// 1757           {
// 1758           case 1:Servo.P+=5;Servo.D-=4;break;
??choose_PD_75:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_76
// 1759           case 2:Servo.P+=5;Servo.D-=4;break;
??choose_PD_78:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_76
// 1760           case 3:Servo.P+=5;Servo.D-=4;break;
??choose_PD_77:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 1761           }
// 1762         }break;
??choose_PD_76:
        B.N      ??choose_PD_54
// 1763       case 0:Servo.P+=5;break;                 //p=-6  D=0
??choose_PD_41:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_54
// 1764       case 1:                                  //p=-6  D=1
// 1765         {
// 1766           switch(track_form)
??choose_PD_42:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_79
        BCC.N    ??choose_PD_80
        CMP      R4,#+3
        BEQ.N    ??choose_PD_81
        BCC.N    ??choose_PD_82
        B.N      ??choose_PD_80
// 1767           {
// 1768           case 1:Servo.P+=5;Servo.D+=1;break;
??choose_PD_79:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_80
// 1769           case 2:Servo.P+=5;Servo.D+=1;break;
??choose_PD_82:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_80
// 1770           case 3:Servo.P+=5;Servo.D+=1;break;
??choose_PD_81:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 1771           }
// 1772         }break;
??choose_PD_80:
        B.N      ??choose_PD_54
// 1773       case 2:                                 //p=-6  D=2
// 1774         {
// 1775           switch(track_form)
??choose_PD_43:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_83
        BCC.N    ??choose_PD_84
        CMP      R4,#+3
        BEQ.N    ??choose_PD_85
        BCC.N    ??choose_PD_86
        B.N      ??choose_PD_84
// 1776           {
// 1777           case 1:Servo.P+=5;Servo.D+=1;break;
??choose_PD_83:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_84
// 1778           case 2:Servo.P+=5;Servo.D+=1;break;
??choose_PD_86:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_84
// 1779           case 3:Servo.P+=5;Servo.D+=1;break;
??choose_PD_85:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 1780           }
// 1781         }break;
??choose_PD_84:
        B.N      ??choose_PD_54
// 1782       case 3:                                  //p=-6  D=3
// 1783         {
// 1784           switch(track_form)
??choose_PD_44:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_87
        BCC.N    ??choose_PD_88
        CMP      R4,#+3
        BEQ.N    ??choose_PD_89
        BCC.N    ??choose_PD_90
        B.N      ??choose_PD_88
// 1785           {
// 1786           case 1:Servo.P+=5;Servo.D+=2;break;
??choose_PD_87:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_88
// 1787           case 2:Servo.P+=5;Servo.D+=2;break;
??choose_PD_90:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_88
// 1788           case 3:Servo.P+=5;Servo.D+=2;break;
??choose_PD_89:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 1789           }
// 1790         }break;
??choose_PD_88:
        B.N      ??choose_PD_54
// 1791       case 4:                                //p=-6  D=4
// 1792         {
// 1793           switch(track_form)
??choose_PD_45:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_91
        BCC.N    ??choose_PD_92
        CMP      R4,#+3
        BEQ.N    ??choose_PD_93
        BCC.N    ??choose_PD_94
        B.N      ??choose_PD_92
// 1794           {
// 1795           case 1:Servo.P+=5;Servo.D+=2;break;
??choose_PD_91:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_92
// 1796           case 2:Servo.P+=5;Servo.D+=2;break;
??choose_PD_94:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_92
// 1797           case 3:Servo.P+=5;Servo.D+=2;break;
??choose_PD_93:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 1798           }
// 1799         }break;
??choose_PD_92:
        B.N      ??choose_PD_54
// 1800       case 5:                                 //p=-6  D=5
// 1801         {
// 1802           switch(track_form)
??choose_PD_46:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_95
        BCC.N    ??choose_PD_96
        CMP      R4,#+3
        BEQ.N    ??choose_PD_97
        BCC.N    ??choose_PD_98
        B.N      ??choose_PD_96
// 1803           {
// 1804           case 1:Servo.P+=5;Servo.D+=3;break;
??choose_PD_95:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_96
// 1805           case 2:Servo.P+=4;Servo.D+=2;break;
??choose_PD_98:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_96
// 1806           case 3:Servo.P+=4;Servo.D+=2;break;
??choose_PD_97:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 1807           }
// 1808         }break;
??choose_PD_96:
        B.N      ??choose_PD_54
// 1809       case 6:                                 //p=-6  D=6
// 1810         {
// 1811           switch(track_form)
??choose_PD_47:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_99
        BCC.N    ??choose_PD_100
        CMP      R4,#+3
        BEQ.N    ??choose_PD_101
        BCC.N    ??choose_PD_102
        B.N      ??choose_PD_100
// 1812           {
// 1813           case 1:Servo.P+=5;Servo.D+=3;break;
??choose_PD_99:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_100
// 1814           case 2:Servo.P+=4;Servo.D+=2;break;
??choose_PD_102:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_100
// 1815           case 3:Servo.P+=4;Servo.D+=2;break;
??choose_PD_101:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 1816           }
// 1817         }break;
// 1818       }
// 1819     }break;
??choose_PD_100:
??choose_PD_54:
        B.W      ??choose_PD_40
// 1820   case -5:                                   //P=-5  D=-6
// 1821     {
// 1822       switch(position_now_D)
??choose_PD_35:
        LDR.W    R0,??choose_PD_26+0xC
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_103
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_104
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_105
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_106
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_107
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_108
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_109
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_110
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_111
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_112
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_113
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_114
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_115
        B.N      ??choose_PD_116
        DATA
??choose_PD_2:
        DC32     center
        DC32     topline
        DC32     Servo
        DC32     P_High
        DC32     D_High
        DC32     servo_d
        DC32     D_piancha_high
        DC32     servo
        DC32     H_High
        DC32     T_High
        DC32     see_distance
        DC32     P_Mid
        DC32     D_Mid
        DC32     D_piancha_mid
        DC32     H_Mid
        DC32     T_Mid
        DC32     P_Low
        DC32     D_Low
        DC32     D_piancha_low
        DC32     H_Low
        DC32     T_Low
        DC32     position_old_old_old
        DC32     position_old_old
        DC32     position_old
        DC32     position_now
        DC32     weizhi_old
        DC32     weizhi
        DC32     position_now_low
        THUMB
// 1823       {
// 1824       case -6:
// 1825         {
// 1826           switch(track_form)
??choose_PD_110:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_117
        BCC.N    ??choose_PD_118
        CMP      R4,#+3
        BEQ.N    ??choose_PD_119
        BCC.N    ??choose_PD_120
        B.N      ??choose_PD_118
// 1827           {
// 1828           case 1:Servo.P+=4;Servo.D+=1;break;
??choose_PD_117:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_118
// 1829           case 2:Servo.P+=4;Servo.D+=1;break;
??choose_PD_120:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_118
// 1830           case 3:Servo.P+=4;Servo.D+=1;break;
??choose_PD_119:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1831           }
// 1832         }break;
??choose_PD_118:
        B.N      ??choose_PD_116
// 1833       case -5:                                //P=-5  D=-5
// 1834         {
// 1835           switch(track_form)
??choose_PD_111:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_122
        BCC.N    ??choose_PD_123
        CMP      R4,#+3
        BEQ.N    ??choose_PD_124
        BCC.N    ??choose_PD_125
        B.N      ??choose_PD_123
// 1836           {
// 1837           case 1:Servo.P+=4;Servo.D+=0;break;
??choose_PD_122:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDR.W    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_123
// 1838           case 2:Servo.P+=4;Servo.D+=0;break;
??choose_PD_125:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDR.W    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_123
// 1839           case 3:Servo.P+=4;Servo.D+=0;break;
??choose_PD_124:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDR.W    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 1840           }
// 1841         }break;
??choose_PD_123:
        B.N      ??choose_PD_116
// 1842       case -4:                                    //P=-5  D=-4
// 1843         {
// 1844           switch(track_form)
??choose_PD_112:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_126
        BCC.N    ??choose_PD_127
        CMP      R4,#+3
        BEQ.N    ??choose_PD_128
        BCC.N    ??choose_PD_129
        B.N      ??choose_PD_127
// 1845           {
// 1846           case 1:Servo.P+=4;Servo.D-=1;break;
??choose_PD_126:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_127
// 1847           case 2:Servo.P+=4;Servo.D-=1;break;
??choose_PD_129:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_127
// 1848           case 3:Servo.P+=4;Servo.D-=1;break;
??choose_PD_128:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1849           }
// 1850         }break;
??choose_PD_127:
        B.N      ??choose_PD_116
// 1851       case -3:                                  //P=-5  D=-3
// 1852         {
// 1853           switch(track_form)
??choose_PD_113:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_130
        BCC.N    ??choose_PD_131
        CMP      R4,#+3
        BEQ.N    ??choose_PD_132
        BCC.N    ??choose_PD_133
        B.N      ??choose_PD_131
// 1854           {
// 1855           case 1:Servo.P+=4;Servo.D-=2;break;
??choose_PD_130:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_131
// 1856           case 2:Servo.P+=4;Servo.D-=2;break;
??choose_PD_133:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_131
// 1857           case 3:Servo.P+=4;Servo.D-=2;break;
??choose_PD_132:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1858           }
// 1859         }break;
??choose_PD_131:
        B.N      ??choose_PD_116
// 1860       case -2:                                 //P=-5  D=-2
// 1861         {
// 1862           switch(track_form)
??choose_PD_114:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_134
        BCC.N    ??choose_PD_135
        CMP      R4,#+3
        BEQ.N    ??choose_PD_136
        BCC.N    ??choose_PD_137
        B.N      ??choose_PD_135
// 1863           {
// 1864           case 1:Servo.P+=4;Servo.D-=3;break;
??choose_PD_134:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_135
// 1865           case 2:Servo.P+=4;Servo.D-=3;break;
??choose_PD_137:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_135
// 1866           case 3:Servo.P+=4;Servo.D-=3;break;
??choose_PD_136:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1867           }
// 1868         }break;
??choose_PD_135:
        B.N      ??choose_PD_116
// 1869       case -1:                                 //P=-5  D=-1
// 1870         {
// 1871           switch(track_form)
??choose_PD_115:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_138
        BCC.N    ??choose_PD_139
        CMP      R4,#+3
        BEQ.N    ??choose_PD_140
        BCC.N    ??choose_PD_141
        B.N      ??choose_PD_139
// 1872           {
// 1873           case 1:Servo.P+=4;Servo.D-=4;break;
??choose_PD_138:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_139
// 1874           case 2:Servo.P+=4;Servo.D-=4;break;
??choose_PD_141:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_139
// 1875           case 3:Servo.P+=4;Servo.D-=4;break;
??choose_PD_140:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1876           }
// 1877         }break;
??choose_PD_139:
        B.N      ??choose_PD_116
// 1878       case 0:Servo.P+=4;break;                //P=-5  D=-0
??choose_PD_103:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_116
// 1879       case 1:                                 //P=-5  D=1
// 1880         {
// 1881           switch(track_form)
??choose_PD_104:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_142
        BCC.N    ??choose_PD_143
        CMP      R4,#+3
        BEQ.N    ??choose_PD_144
        BCC.N    ??choose_PD_145
        B.N      ??choose_PD_143
// 1882           {
// 1883           case 1:Servo.P+=4;Servo.D+=1;break;
??choose_PD_142:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_143
// 1884           case 2:Servo.P+=4;Servo.D+=1;break;
??choose_PD_145:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_143
// 1885           case 3:Servo.P+=4;Servo.D+=1;break;
??choose_PD_144:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1886           }
// 1887         }break;
??choose_PD_143:
        B.N      ??choose_PD_116
// 1888       case 2:                               //P=-5  D=2
// 1889         {
// 1890           switch(track_form)
??choose_PD_105:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_146
        BCC.N    ??choose_PD_147
        CMP      R4,#+3
        BEQ.N    ??choose_PD_148
        BCC.N    ??choose_PD_149
        B.N      ??choose_PD_147
// 1891           {
// 1892           case 1:Servo.P+=4;Servo.D+=1;break;
??choose_PD_146:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_147
// 1893           case 2:Servo.P+=4;Servo.D+=1;break;
??choose_PD_149:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_147
// 1894           case 3:Servo.P+=4;Servo.D+=1;break;
??choose_PD_148:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1895           }
// 1896         }break;
??choose_PD_147:
        B.N      ??choose_PD_116
// 1897       case 3:                                //P=-5  D=3
// 1898         {
// 1899           switch(track_form)
??choose_PD_106:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_150
        BCC.N    ??choose_PD_151
        CMP      R4,#+3
        BEQ.N    ??choose_PD_152
        BCC.N    ??choose_PD_153
        B.N      ??choose_PD_151
// 1900           {
// 1901           case 1:Servo.P+=4;Servo.D+=2;break;
??choose_PD_150:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_151
// 1902           case 2:Servo.P+=4;Servo.D+=2;break;
??choose_PD_153:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_151
// 1903           case 3:Servo.P+=4;Servo.D+=2;break;
??choose_PD_152:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1904           }
// 1905         }break;
??choose_PD_151:
        B.N      ??choose_PD_116
// 1906       case 4:                                 //P=-5  D=4
// 1907         {
// 1908           switch(track_form)
??choose_PD_107:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_154
        BCC.N    ??choose_PD_155
        CMP      R4,#+3
        BEQ.N    ??choose_PD_156
        BCC.N    ??choose_PD_157
        B.N      ??choose_PD_155
// 1909           {
// 1910           case 1:Servo.P+=4;Servo.D+=2;break;
??choose_PD_154:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_155
// 1911           case 2:Servo.P+=4;Servo.D+=2;break;
??choose_PD_157:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_155
// 1912           case 3:Servo.P+=4;Servo.D+=2;break;
??choose_PD_156:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1913           }
// 1914         }break;
??choose_PD_155:
        B.N      ??choose_PD_116
// 1915       case 5:                                 //P=-5  D=5
// 1916         {
// 1917           switch(track_form)
??choose_PD_108:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_158
        BCC.N    ??choose_PD_159
        CMP      R4,#+3
        BEQ.N    ??choose_PD_160
        BCC.N    ??choose_PD_161
        B.N      ??choose_PD_159
// 1918           {
// 1919           case 1:Servo.P+=4;Servo.D+=2;break;
??choose_PD_158:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_159
// 1920           case 2:Servo.P+=3;Servo.D+=1;break;
??choose_PD_161:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_159
// 1921           case 3:Servo.P+=3;Servo.D+=1;break;
??choose_PD_160:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1922           }
// 1923         }break;
??choose_PD_159:
        B.N      ??choose_PD_116
// 1924       case 6:                                  //P=-5  D=6
// 1925         {
// 1926           switch(track_form)
??choose_PD_109:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_162
        BCC.N    ??choose_PD_163
        CMP      R4,#+3
        BEQ.N    ??choose_PD_164
        BCC.N    ??choose_PD_165
        B.N      ??choose_PD_163
// 1927           {
// 1928           case 1:Servo.P+=4;Servo.D+=2;break;
??choose_PD_162:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_163
// 1929           case 2:Servo.P+=3;Servo.D+=1;break;
??choose_PD_165:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_163
// 1930           case 3:Servo.P+=3;Servo.D+=1;break;
??choose_PD_164:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1931           }
// 1932         }break;
// 1933       }
// 1934     }break;
??choose_PD_163:
??choose_PD_116:
        B.W      ??choose_PD_40
// 1935   case -4:                                     //P=-4  D=-6
// 1936     {
// 1937       switch(position_now_D)
??choose_PD_36:
        LDR.N    R0,??choose_PD_26+0xC
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_166
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_167
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_168
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_169
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_170
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_171
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_172
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_173
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_174
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_175
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_176
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_177
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_178
        B.N      ??choose_PD_179
// 1938       {
// 1939       case -6:
// 1940         {
// 1941           switch(track_form)
??choose_PD_173:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_180
        BCC.N    ??choose_PD_181
        CMP      R4,#+3
        BEQ.N    ??choose_PD_182
        BCC.N    ??choose_PD_183
        B.N      ??choose_PD_181
// 1942           {
// 1943           case 1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_180:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_181
// 1944           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_183:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_181
// 1945           case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_182:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1946           }
// 1947         }break;
??choose_PD_181:
        B.N      ??choose_PD_179
// 1948       case -5:                                   //P=-4  D=-5
// 1949         { 
// 1950           switch(track_form)
??choose_PD_174:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_184
        BCC.N    ??choose_PD_185
        CMP      R4,#+3
        BEQ.N    ??choose_PD_186
        BCC.N    ??choose_PD_187
        B.N      ??choose_PD_185
// 1951           {
// 1952           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_184:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_185
// 1953           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_187:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_185
// 1954           case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_186:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1955           }
// 1956         }break;
??choose_PD_185:
        B.N      ??choose_PD_179
// 1957       case -4:                                //P=-4  D=-4
// 1958         {
// 1959           switch(track_form)
??choose_PD_175:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_188
        BCC.N    ??choose_PD_189
        CMP      R4,#+3
        BEQ.N    ??choose_PD_190
        BCC.N    ??choose_PD_191
        B.N      ??choose_PD_189
// 1960           {
// 1961           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_188:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_189
        Nop      
        DATA
??choose_PD_26:
        DC32     position_diff
        DC32     position_now_low_P
        DC32     position_now_P
        DC32     position_now_D
        THUMB
// 1962           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_191:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_189
// 1963           case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_190:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1964           }
// 1965         }break;
??choose_PD_189:
        B.N      ??choose_PD_179
// 1966       case -3:                                 //P=-4  D=-3
// 1967         {
// 1968           switch(track_form)
??choose_PD_176:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_192
        BCC.N    ??choose_PD_193
        CMP      R4,#+3
        BEQ.N    ??choose_PD_194
        BCC.N    ??choose_PD_195
        B.N      ??choose_PD_193
// 1969           {
// 1970           case 1:Servo.P+=2;Servo.D-=0;break;
??choose_PD_192:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDR.W    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_193
// 1971           case 2:Servo.P+=2;Servo.D-=0;break;
??choose_PD_195:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDR.W    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_193
// 1972           case 3:Servo.P+=2;Servo.D-=0;break;
??choose_PD_194:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDR.W    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 1973           }
// 1974         }break;
??choose_PD_193:
        B.N      ??choose_PD_179
// 1975       case -2:                                //P=-4  D=-2
// 1976         {
// 1977           switch(track_form)
??choose_PD_177:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_196
        BCC.N    ??choose_PD_197
        CMP      R4,#+3
        BEQ.N    ??choose_PD_198
        BCC.N    ??choose_PD_199
        B.N      ??choose_PD_197
// 1978           {
// 1979           case 1:Servo.P+=2;Servo.D-=1;break;
??choose_PD_196:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_197
// 1980           case 2:Servo.P+=2;Servo.D-=1;break;
??choose_PD_199:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_197
// 1981           case 3:Servo.P+=2;Servo.D-=1;break;
??choose_PD_198:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1982           }
// 1983         }break;
??choose_PD_197:
        B.N      ??choose_PD_179
// 1984       case -1:                                    //P=-4  D=-1
// 1985         {
// 1986           switch(track_form)
??choose_PD_178:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_200
        BCC.N    ??choose_PD_201
        CMP      R4,#+3
        BEQ.N    ??choose_PD_202
        BCC.N    ??choose_PD_203
        B.N      ??choose_PD_201
// 1987           {
// 1988           case 1:Servo.P+=2;Servo.D-=2;break;
??choose_PD_200:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_201
// 1989           case 2:Servo.P+=2;Servo.D-=2;break;
??choose_PD_203:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_201
// 1990           case 3:Servo.P+=2;Servo.D-=2;break;
??choose_PD_202:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 1991           }
// 1992         }break;
??choose_PD_201:
        B.N      ??choose_PD_179
// 1993       case 0:Servo.P+=2;break;                      //P=-4  D=0
??choose_PD_166:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_179
// 1994       case 1:                                        //P=-4  D=1
// 1995         {
// 1996           switch(track_form)
??choose_PD_167:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_204
        BCC.N    ??choose_PD_205
        CMP      R4,#+3
        BEQ.N    ??choose_PD_206
        BCC.N    ??choose_PD_207
        B.N      ??choose_PD_205
// 1997           {
// 1998           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_204:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_205
// 1999           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_207:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_205
// 2000           case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_206:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 2001           }
// 2002         }break;
??choose_PD_205:
        B.N      ??choose_PD_179
// 2003       case 2:                                        //P=-4  D=2
// 2004         {
// 2005           switch(track_form)
??choose_PD_168:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_208
        BCC.N    ??choose_PD_209
        CMP      R4,#+3
        BEQ.N    ??choose_PD_210
        BCC.N    ??choose_PD_211
        B.N      ??choose_PD_209
// 2006           {
// 2007           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_208:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_209
// 2008           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_211:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_209
// 2009           case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_210:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 2010           }
// 2011         }break;
??choose_PD_209:
        B.N      ??choose_PD_179
// 2012       case 3:                                     //P=-4  D=3
// 2013         {
// 2014           switch(track_form)
??choose_PD_169:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_212
        BCC.N    ??choose_PD_213
        CMP      R4,#+3
        BEQ.N    ??choose_PD_214
        BCC.N    ??choose_PD_215
        B.N      ??choose_PD_213
// 2015           {
// 2016           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_212:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_213
// 2017           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_215:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_213
// 2018           case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_214:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 2019           }
// 2020         }break;
??choose_PD_213:
        B.N      ??choose_PD_179
// 2021       case 4:                                   //P=-4  D=4
// 2022         {
// 2023           switch(track_form)
??choose_PD_170:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_216
        BCC.N    ??choose_PD_217
        CMP      R4,#+3
        BEQ.N    ??choose_PD_218
        BCC.N    ??choose_PD_219
        B.N      ??choose_PD_217
// 2024           {
// 2025           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_216:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_217
// 2026           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_219:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_217
// 2027           case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_218:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 2028           }
// 2029         }break;
??choose_PD_217:
        B.N      ??choose_PD_179
// 2030       case 5:                                   //P=-4  D=5
// 2031         {
// 2032           switch(track_form)
??choose_PD_171:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_220
        BCC.N    ??choose_PD_221
        CMP      R4,#+3
        BEQ.N    ??choose_PD_222
        BCC.N    ??choose_PD_223
        B.N      ??choose_PD_221
// 2033           {
// 2034           case 1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_220:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_221
// 2035           case 2:Servo.P+=2;Servo.D+=3;break;
??choose_PD_223:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_221
// 2036           case 3:Servo.P+=2;Servo.D+=3;break;
??choose_PD_222:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 2037           }
// 2038         }break;
??choose_PD_221:
        B.N      ??choose_PD_179
// 2039       case 6:                                   //P=-4  D=6
// 2040         {
// 2041           switch(track_form)
??choose_PD_172:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_224
        BCC.N    ??choose_PD_225
        CMP      R4,#+3
        BEQ.N    ??choose_PD_226
        BCC.N    ??choose_PD_227
        B.N      ??choose_PD_225
// 2042           {
// 2043           case 1:Servo.P+=2;Servo.D+=4;break;
??choose_PD_224:
        LDR.W    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_225
// 2044           case 2:Servo.P+=2;Servo.D+=4;break;
??choose_PD_227:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_225
// 2045           case 3:Servo.P+=2;Servo.D+=4;break;
??choose_PD_226:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
// 2046           }
// 2047         }break;
// 2048       }
// 2049     }break;
??choose_PD_225:
??choose_PD_179:
        B.W      ??choose_PD_40
// 2050   case -3:                                      //P=-3  D=-6
// 2051     {
// 2052       switch(position_now_D)
??choose_PD_37:
        LDR.W    R0,??choose_PD_228
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_229
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_230
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_231
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_232
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_233
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_234
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_235
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_236
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_237
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_238
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_239
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_240
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_241
        B.W      ??choose_PD_242
// 2053       {
// 2054       case -6:
// 2055         {
// 2056           switch(track_form)
??choose_PD_236:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_243
        BCC.N    ??choose_PD_244
        CMP      R4,#+3
        BEQ.N    ??choose_PD_245
        BCC.N    ??choose_PD_246
        B.N      ??choose_PD_244
// 2057           {
// 2058           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_243:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_244
// 2059           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_246:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_244
// 2060           case 3:
// 2061             {
// 2062               switch(position_now_low_P)
??choose_PD_245:
        LDR.W    R0,??choose_PD_228+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_247
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_248
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_249
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_250
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_251
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_252
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_253
        B.N      ??choose_PD_254
// 2063               {
// 2064               case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_250:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_254
// 2065               case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_249:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_254
// 2066               case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_248:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_254
// 2067               case 0:Servo.P+=2;Servo.D+=0;break;
??choose_PD_247:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDR.N    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_254
// 2068               case -1:Servo.P+=2;Servo.D+=0;break;
??choose_PD_253:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDR.N    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_254
// 2069               case -2:Servo.P+=2;Servo.D+=0;break;
??choose_PD_252:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDR.N    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_254
// 2070               case -3:Servo.P+=2;Servo.D+=0;break;
??choose_PD_251:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDR.N    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 2071               }
// 2072             }break;
// 2073           }
// 2074         }break;
??choose_PD_254:
??choose_PD_244:
        B.W      ??choose_PD_242
// 2075       case -5:                                      //P=-3  D=-5
// 2076         {
// 2077           switch(track_form)
??choose_PD_237:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_255
        BCC.N    ??choose_PD_256
        CMP      R4,#+3
        BEQ.N    ??choose_PD_257
        BCC.N    ??choose_PD_258
        B.N      ??choose_PD_256
// 2078           {
// 2079           case 1:Servo.P+=2;Servo.D+=0;break;
??choose_PD_255:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDR.N    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_256
// 2080           case 2:Servo.P+=2;Servo.D+=0;break;
??choose_PD_258:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDR.N    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_256
// 2081           case 3:
// 2082             {
// 2083               switch(position_now_low_P)
??choose_PD_257:
        LDR.W    R0,??choose_PD_228+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_259
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_260
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_261
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_262
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_263
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_264
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_265
        B.N      ??choose_PD_266
// 2084               {
// 2085               case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_262:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_266
// 2086               case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_261:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_266
// 2087               case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_260:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_266
// 2088               case 0:Servo.P+=2;Servo.D+=0;break;
??choose_PD_259:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDR.N    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_266
// 2089               case -1:Servo.P+=2;Servo.D+=0;break;
??choose_PD_265:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDR.N    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_266
// 2090               case -2:Servo.P+=2;Servo.D+=0;break;
??choose_PD_264:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDR.N    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_266
// 2091               case -3:Servo.P+=2;Servo.D+=0;break;
??choose_PD_263:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDR.N    R1,??choose_PD_121
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 2092               }
// 2093             }break;
// 2094           }
// 2095         }break;
??choose_PD_266:
??choose_PD_256:
        B.W      ??choose_PD_242
// 2096       case -4:                                         //P=-3  D=-4
// 2097         {
// 2098           switch(track_form)
??choose_PD_238:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_267
        BCC.W    ??choose_PD_268
        CMP      R4,#+3
        BEQ.N    ??choose_PD_269
        BCC.N    ??choose_PD_270
        B.N      ??choose_PD_268
// 2099           {
// 2100           case 1:Servo.P+=2;Servo.D-=1;break;
??choose_PD_267:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_268
// 2101           case 2:Servo.P+=2;Servo.D-=1;break;
??choose_PD_270:
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_121
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_121
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_268
        Nop      
        DATA
??choose_PD_121:
        DC32     Servo
        THUMB
// 2102           case 3:
// 2103             {
// 2104               switch(position_now_low_P)
??choose_PD_269:
        LDR.W    R0,??choose_PD_228+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_271
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_272
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_273
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_274
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_275
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_276
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_277
        B.N      ??choose_PD_278
// 2105               {
// 2106               case 3:Servo.P+=2;Servo.D-=1;break;
??choose_PD_274:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_278
// 2107               case 2:Servo.P+=2;Servo.D-=1;break;
??choose_PD_273:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_278
// 2108               case 1:Servo.P+=2;Servo.D-=1;break;
??choose_PD_272:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_278
// 2109               case 0:Servo.P+=2;Servo.D-=0;break;
??choose_PD_271:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDR.W    R1,??choose_PD_279
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_278
// 2110               case -1:Servo.P+=2;Servo.D-=2;break;
??choose_PD_277:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_278
// 2111               case -2:Servo.P+=2;Servo.D-=2;break;
??choose_PD_276:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_278
// 2112               case -3:Servo.P+=2;Servo.D-=2;break;
??choose_PD_275:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
// 2113               }
// 2114             }break;
// 2115           }
// 2116         }break;
??choose_PD_278:
??choose_PD_268:
        B.W      ??choose_PD_242
// 2117       case -3:                                       //P=-3  D=-3
// 2118         {
// 2119           switch(track_form)
??choose_PD_239:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_280
        BCC.W    ??choose_PD_281
        CMP      R4,#+3
        BEQ.N    ??choose_PD_282
        BCC.N    ??choose_PD_283
        B.N      ??choose_PD_281
// 2120           {
// 2121           case 1:Servo.P+=2;Servo.D-=2;break;
??choose_PD_280:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_281
// 2122           case 2:Servo.P+=2;Servo.D-=2;break;
??choose_PD_283:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_281
// 2123           case 3:
// 2124             {
// 2125               switch(position_now_low_P)
??choose_PD_282:
        LDR.W    R0,??choose_PD_228+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_284
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_285
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_286
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_287
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_288
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_289
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_290
        B.N      ??choose_PD_291
// 2126               {
// 2127               case 3:Servo.P+=2;Servo.D-=2;break;
??choose_PD_287:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_291
// 2128               case 2:Servo.P+=2;Servo.D-=2;break;
??choose_PD_286:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_291
// 2129               case 1:Servo.P+=2;Servo.D-=2;break;
??choose_PD_285:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_291
// 2130               case 0:Servo.P+=2;Servo.D-=2;break;
??choose_PD_284:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_291
// 2131               case -1:Servo.P+=2;Servo.D-=3;break;
??choose_PD_290:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_291
// 2132               case -2:Servo.P+=2;Servo.D-=3;break;
??choose_PD_289:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_291
// 2133               case -3:Servo.P+=2;Servo.D-=3;break;
??choose_PD_288:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
// 2134               }
// 2135             }break;
// 2136           }
// 2137         }break;
??choose_PD_291:
??choose_PD_281:
        B.W      ??choose_PD_242
// 2138       case -2:                                        //P=-3  D=-2
// 2139         {
// 2140           switch(track_form)
??choose_PD_240:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_292
        BCC.W    ??choose_PD_293
        CMP      R4,#+3
        BEQ.N    ??choose_PD_294
        BCC.N    ??choose_PD_295
        B.N      ??choose_PD_293
// 2141           {
// 2142           case 1:Servo.P+=2;Servo.D-=3;break;
??choose_PD_292:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_293
// 2143           case 2:Servo.P+=2;Servo.D-=3;break;
??choose_PD_295:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_293
// 2144           case 3:
// 2145             {
// 2146               switch(position_now_low_P)
??choose_PD_294:
        LDR.W    R0,??choose_PD_228+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_296
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_297
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_298
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_299
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_300
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_301
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_302
        B.N      ??choose_PD_303
// 2147               {
// 2148               case 3:Servo.P+=2;Servo.D-=3;break;
??choose_PD_299:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_303
// 2149               case 2:Servo.P+=2;Servo.D-=3;break;
??choose_PD_298:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_303
// 2150               case 1:Servo.P+=2;Servo.D-=3;break;
??choose_PD_297:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_303
// 2151               case 0:Servo.P+=2;Servo.D-=3;break;
??choose_PD_296:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_303
// 2152               case -1:Servo.P+=2;Servo.D-=4;break;
??choose_PD_302:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_303
// 2153               case -2:Servo.P+=2;Servo.D-=4;break;
??choose_PD_301:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_303
// 2154               case -3:Servo.P+=2;Servo.D-=4;break;
??choose_PD_300:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
// 2155               }
// 2156             }break;
// 2157           }
// 2158         }break;
??choose_PD_303:
??choose_PD_293:
        B.W      ??choose_PD_242
// 2159       case -1:                                        //P=-3  D=-1
// 2160         {
// 2161           switch(track_form)
??choose_PD_241:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_304
        BCC.W    ??choose_PD_305
        CMP      R4,#+3
        BEQ.N    ??choose_PD_306
        BCC.N    ??choose_PD_307
        B.N      ??choose_PD_305
// 2162           {
// 2163           case 1:Servo.P+=2;Servo.D-=4;break;
??choose_PD_304:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_305
// 2164           case 2:Servo.P+=2;Servo.D-=4;break;
??choose_PD_307:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_305
// 2165           case 3:
// 2166             {
// 2167               switch(position_now_low_P)
??choose_PD_306:
        LDR.W    R0,??choose_PD_228+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_308
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_309
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_310
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_311
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_312
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_313
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_314
        B.N      ??choose_PD_315
// 2168               {
// 2169               case 3:Servo.P+=2;Servo.D-=3;break;
??choose_PD_311:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_315
// 2170               case 2:Servo.P+=2;Servo.D-=3;break;
??choose_PD_310:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_315
// 2171               case 1:Servo.P+=2;Servo.D-=3;break;
??choose_PD_309:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_315
// 2172               case 0:Servo.P+=2;Servo.D-=3;break;
??choose_PD_308:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_315
// 2173               case -1:Servo.P+=2;Servo.D-=4;break;
??choose_PD_314:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_315
// 2174               case -2:Servo.P+=2;Servo.D-=4;break;
??choose_PD_313:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_315
// 2175               case -3:Servo.P+=2;Servo.D-=4;break;
??choose_PD_312:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
// 2176               }
// 2177             }break;
// 2178           }
// 2179         }break;
??choose_PD_315:
??choose_PD_305:
        B.N      ??choose_PD_242
// 2180       case 0:Servo.P+=2;break;                         //P=-3  D=0
??choose_PD_229:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_242
// 2181       case 1:                                            //P=-3  D=1
// 2182         {
// 2183           switch(track_form)
??choose_PD_230:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_316
        BCC.W    ??choose_PD_317
        CMP      R4,#+3
        BEQ.N    ??choose_PD_318
        BCC.N    ??choose_PD_319
        B.N      ??choose_PD_317
// 2184           {
// 2185           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_316:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_317
// 2186           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_319:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_317
// 2187           case 3:
// 2188             {
// 2189               switch(position_now_low_P)
??choose_PD_318:
        LDR.N    R0,??choose_PD_228+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_320
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_321
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_322
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_323
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_324
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_325
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_326
        B.N      ??choose_PD_327
// 2190               {
// 2191               case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_323:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_327
// 2192               case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_322:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_327
// 2193               case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_321:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_327
// 2194               case 0:Servo.P+=2;Servo.D+=1;break;
??choose_PD_320:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_327
// 2195               case -1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_326:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_327
// 2196               case -2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_325:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_327
// 2197               case -3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_324:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
// 2198               }
// 2199             }break;
// 2200           }
// 2201         }break;
??choose_PD_327:
??choose_PD_317:
        B.N      ??choose_PD_242
// 2202       case 2:                                                //P=-3  D=2
// 2203         {
// 2204           switch(track_form)
??choose_PD_231:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_328
        BCC.W    ??choose_PD_329
        CMP      R4,#+3
        BEQ.N    ??choose_PD_330
        BCC.N    ??choose_PD_331
        B.N      ??choose_PD_329
// 2205           {
// 2206           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_328:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_329
// 2207           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_331:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_329
// 2208           case 3:
// 2209             {
// 2210               switch(position_now_low_P)
??choose_PD_330:
        LDR.N    R0,??choose_PD_228+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_332
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_333
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_334
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_335
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_336
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_337
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_338
        B.N      ??choose_PD_339
// 2211               {
// 2212               case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_335:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_339
// 2213               case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_334:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_339
// 2214               case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_333:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_339
// 2215               case 0:Servo.P+=2;Servo.D+=1;break;
??choose_PD_332:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_339
// 2216               case -1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_338:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_339
// 2217               case -2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_337:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_339
        DATA
??choose_PD_228:
        DC32     position_now_D
        DC32     position_now_low_P
        THUMB
// 2218               case -3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_336:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
// 2219               }
// 2220             }break;
// 2221           }
// 2222         }break;
??choose_PD_339:
??choose_PD_329:
        B.N      ??choose_PD_242
// 2223       case 3:                                              //P=-3  D=3
// 2224         {
// 2225           switch(track_form)
??choose_PD_232:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_340
        BCC.W    ??choose_PD_341
        CMP      R4,#+3
        BEQ.N    ??choose_PD_342
        BCC.N    ??choose_PD_343
        B.N      ??choose_PD_341
// 2226           {
// 2227           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_340:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_341
// 2228           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_343:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_341
// 2229           case 3:
// 2230             {
// 2231               switch(position_now_low_P)
??choose_PD_342:
        LDR.W    R0,??choose_PD_344
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_345
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_346
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_347
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_348
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_349
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_350
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_351
        B.N      ??choose_PD_352
// 2232               {
// 2233               case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_348:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_352
// 2234               case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_347:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_352
// 2235               case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_346:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_352
// 2236               case 0:Servo.P+=2;Servo.D+=2;break;
??choose_PD_345:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_352
// 2237               case -1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_351:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_352
// 2238               case -2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_350:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_352
// 2239               case -3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_349:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
// 2240               }
// 2241             }break;
// 2242           }
// 2243         }break;
??choose_PD_352:
??choose_PD_341:
        B.N      ??choose_PD_242
// 2244       case 4:                                            //P=-3  D=4
// 2245         {
// 2246           switch(track_form)
??choose_PD_233:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_353
        BCC.W    ??choose_PD_354
        CMP      R4,#+3
        BEQ.N    ??choose_PD_355
        BCC.N    ??choose_PD_356
        B.N      ??choose_PD_354
// 2247           {
// 2248           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_353:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_354
// 2249           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_356:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_354
// 2250           case 3:
// 2251             {
// 2252               switch(position_now_low_P)
??choose_PD_355:
        LDR.W    R0,??choose_PD_344
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_357
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_358
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_359
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_360
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_361
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_362
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_363
        B.N      ??choose_PD_364
// 2253               {
// 2254               case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_360:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_364
// 2255               case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_359:
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_364
// 2256               case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_358:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_364
// 2257               case 0:Servo.P+=2;Servo.D+=1;break;
??choose_PD_357:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_364
// 2258               case -1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_363:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_364
// 2259               case -2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_362:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_364
// 2260               case -3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_361:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
// 2261               }
// 2262             }break;
// 2263           }
// 2264         }break;
??choose_PD_364:
??choose_PD_354:
        B.N      ??choose_PD_242
// 2265       case 5:                                               //P=-3  D=5
// 2266         {
// 2267           switch(track_form)
??choose_PD_234:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_365
        BCC.N    ??choose_PD_366
        CMP      R4,#+3
        BEQ.N    ??choose_PD_367
        BCC.N    ??choose_PD_368
        B.N      ??choose_PD_366
// 2268           {
// 2269           case 1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_365:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_366
// 2270           case 2:Servo.P+=2;Servo.D+=3;break;
??choose_PD_368:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_366
// 2271           case 3:
// 2272             {
// 2273               switch(position_now_low_P)
??choose_PD_367:
        LDR.W    R0,??choose_PD_344
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_369
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_370
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_371
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_372
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_373
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_374
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_375
        B.N      ??choose_PD_376
// 2274               {
// 2275               case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_372:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_376
// 2276               case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_371:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_376
// 2277               case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_370:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_376
// 2278               case 0:Servo.P+=2;Servo.D+=1;break;
??choose_PD_369:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_376
// 2279               case -1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_375:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_376
// 2280               case -2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_374:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_376
// 2281               case -3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_373:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
// 2282               }
// 2283             }break;
// 2284           }
// 2285         }break;
??choose_PD_376:
??choose_PD_366:
        B.N      ??choose_PD_242
// 2286       case 6:                                            //P=-3  D=6
// 2287         {
// 2288           switch(track_form)
??choose_PD_235:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_377
        BCC.N    ??choose_PD_378
        CMP      R4,#+3
        BEQ.N    ??choose_PD_379
        BCC.N    ??choose_PD_380
        B.N      ??choose_PD_378
// 2289           {
// 2290           case 1:Servo.P+=2;Servo.D+=4;break;
??choose_PD_377:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_378
// 2291           case 2:Servo.P+=2;Servo.D+=4;break;
??choose_PD_380:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_378
// 2292           case 3:
// 2293             {
// 2294               switch(position_now_low_P)
??choose_PD_379:
        LDR.W    R0,??choose_PD_344
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_381
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_382
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_383
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_384
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_385
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_386
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_387
        B.N      ??choose_PD_388
// 2295               {
// 2296               case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_384:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_388
// 2297               case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_383:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_388
// 2298               case 1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_382:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_388
// 2299               case 0:Servo.P+=2;Servo.D+=3;break;
??choose_PD_381:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_388
// 2300               case -1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_387:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_388
// 2301               case -2:Servo.P+=2;Servo.D+=3;break;
??choose_PD_386:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_388
// 2302               case -3:Servo.P+=2;Servo.D+=3;break;
??choose_PD_385:
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_279
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_279
        STRH     R0,[R1, #+4]
// 2303               }
// 2304             }break;
// 2305           }
// 2306         }break;
// 2307       }
// 2308     }break;
??choose_PD_388:
??choose_PD_378:
??choose_PD_242:
        B.W      ??choose_PD_40
// 2309   case -2:                                             //P=-2  D=-6                                          
// 2310     {
// 2311       switch(position_now_D)
??choose_PD_38:
        LDR.W    R0,??choose_PD_389
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_390
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_391
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_392
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_393
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_394
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_395
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_396
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_397
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_398
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_399
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_400
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_401
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_402
        B.W      ??choose_PD_403
        DATA
??choose_PD_279:
        DC32     Servo
        THUMB
// 2312       {
// 2313       case -6:
// 2314         {
// 2315           switch(track_form)
??choose_PD_397:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_404
        BCC.W    ??choose_PD_405
        CMP      R4,#+3
        BEQ.N    ??choose_PD_406
        BCC.N    ??choose_PD_407
        B.N      ??choose_PD_405
// 2316           {
// 2317           case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_404:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_405
// 2318           case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_407:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_405
// 2319           case 3:
// 2320             {
// 2321               switch(position_now_low_P)
??choose_PD_406:
        LDR.W    R0,??choose_PD_344
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_408
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_409
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_410
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_411
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_412
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_413
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_414
        B.N      ??choose_PD_415
// 2322               {
// 2323               case 3:Servo.P+=1;Servo.D+=4;break;
??choose_PD_411:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_415
// 2324               case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_410:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_415
// 2325               case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_409:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_415
// 2326               case 0:Servo.P+=1;Servo.D+=4;break;
??choose_PD_408:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_415
// 2327               case -1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_414:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_415
// 2328               case -2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_413:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_415
// 2329               case -3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_412:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
// 2330               }
// 2331             }break;
// 2332           }
// 2333         }break;
??choose_PD_415:
??choose_PD_405:
        B.W      ??choose_PD_403
// 2334       case -5:                                //P=-2  D=-5
// 2335         {
// 2336           switch(track_form)
??choose_PD_398:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_416
        BCC.W    ??choose_PD_417
        CMP      R4,#+3
        BEQ.N    ??choose_PD_418
        BCC.N    ??choose_PD_419
        B.N      ??choose_PD_417
// 2337           {
// 2338           case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_416:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_417
// 2339           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_419:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_417
// 2340           case 3:
// 2341             {
// 2342               switch(position_now_low_P)
??choose_PD_418:
        LDR.W    R0,??choose_PD_344
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_420
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_421
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_422
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_423
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_424
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_425
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_426
        B.N      ??choose_PD_427
// 2343               {
// 2344               case 3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_423:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_427
// 2345               case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_422:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_427
// 2346               case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_421:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_427
// 2347               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_420:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_427
// 2348               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_426:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_427
// 2349               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_425:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_427
// 2350               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_424:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
// 2351               }
// 2352             }break;
// 2353           }
// 2354         }break;
??choose_PD_427:
??choose_PD_417:
        B.W      ??choose_PD_403
// 2355       case -4:                                   //P=-2  D=-4    
// 2356         {
// 2357           switch(track_form)
??choose_PD_399:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_428
        BCC.W    ??choose_PD_429
        CMP      R4,#+3
        BEQ.N    ??choose_PD_430
        BCC.N    ??choose_PD_431
        B.N      ??choose_PD_429
// 2358           {
// 2359           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_428:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_429
// 2360           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_431:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_429
// 2361           case 3:
// 2362             {
// 2363               switch(position_now_low_P)
??choose_PD_430:
        LDR.W    R0,??choose_PD_344
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_432
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_433
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_434
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_435
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_436
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_437
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_438
        B.N      ??choose_PD_439
// 2364               {
// 2365               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_435:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_439
// 2366               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_434:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_439
// 2367               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_433:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_439
// 2368               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_432:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_439
// 2369               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_438:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_439
// 2370               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_437:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_439
// 2371               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_436:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
// 2372               }
// 2373             }break;
// 2374           }
// 2375         }break;
??choose_PD_439:
??choose_PD_429:
        B.W      ??choose_PD_403
// 2376       case -3:                                 //P=-2  D=-3
// 2377         {
// 2378           switch(track_form)
??choose_PD_400:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_440
        BCC.W    ??choose_PD_441
        CMP      R4,#+3
        BEQ.N    ??choose_PD_442
        BCC.N    ??choose_PD_443
        B.N      ??choose_PD_441
// 2379           {
// 2380           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_440:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_441
// 2381           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_443:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_441
// 2382           case 3:
// 2383             {
// 2384               switch(position_now_low_P)
??choose_PD_442:
        LDR.N    R0,??choose_PD_344
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_444
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_445
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_446
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_447
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_448
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_449
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_450
        B.N      ??choose_PD_451
// 2385               {
// 2386               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_447:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_451
// 2387               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_446:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_451
// 2388               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_445:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_451
// 2389               case 0:Servo.P+=1;Servo.D+=0;break;
??choose_PD_444:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDR.W    R1,??choose_PD_389+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_451
// 2390               case -1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_450:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDR.W    R1,??choose_PD_389+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_451
// 2391               case -2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_449:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDR.W    R1,??choose_PD_389+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_451
// 2392               case -3:Servo.P+=1;Servo.D+=0;break;
??choose_PD_448:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDR.W    R1,??choose_PD_389+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 2393               }
// 2394             }break;
// 2395           }
// 2396         }break;
??choose_PD_451:
??choose_PD_441:
        B.W      ??choose_PD_403
// 2397       case -2:                                    //P=-2  D=-2
// 2398         {
// 2399           switch(track_form)
??choose_PD_401:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_452
        BCC.N    ??choose_PD_453
        CMP      R4,#+3
        BEQ.N    ??choose_PD_454
        BCC.N    ??choose_PD_455
        B.N      ??choose_PD_453
// 2400           {
// 2401           case 1:Servo.P+=1;Servo.D-=0;break;
??choose_PD_452:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDR.W    R1,??choose_PD_389+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_453
// 2402           case 2:Servo.P+=1;Servo.D-=0;break;
??choose_PD_455:
        LDR.W    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_389+0x4
        LDR.W    R1,??choose_PD_389+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_453
// 2403           case 3:
// 2404             {
// 2405               switch(position_now_low_P)
??choose_PD_454:
        LDR.N    R0,??choose_PD_344
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_456
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_457
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_458
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_459
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_460
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_461
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_462
        B.N      ??choose_PD_463
// 2406               {
// 2407               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_459:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_463
// 2408               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_458:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_463
// 2409               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_457:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_463
// 2410               case 0:Servo.P+=1;Servo.D+=0;break;
??choose_PD_456:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDR.N    R1,??choose_PD_389+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_463
// 2411               case -1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_462:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDR.N    R1,??choose_PD_389+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_463
// 2412               case -2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_461:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDR.N    R1,??choose_PD_389+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_463
// 2413               case -3:Servo.P+=1;Servo.D+=0;break;
??choose_PD_460:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDR.N    R1,??choose_PD_389+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 2414               }
// 2415             }break;
// 2416           }
// 2417         }break;
??choose_PD_463:
??choose_PD_453:
        B.W      ??choose_PD_403
// 2418       case -1:                                    //P=-2  D=-1
// 2419         {
// 2420           switch(track_form)
??choose_PD_402:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_464
        BCC.N    ??choose_PD_465
        CMP      R4,#+3
        BEQ.N    ??choose_PD_466
        BCC.N    ??choose_PD_467
        B.N      ??choose_PD_465
// 2421           {
// 2422           case 1:Servo.P+=1;Servo.D-=1;break;
??choose_PD_464:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_465
// 2423           case 2:Servo.P+=1;Servo.D-=1;break;
??choose_PD_467:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_465
// 2424           case 3:
// 2425             {
// 2426               switch(position_now_low_P)
??choose_PD_466:
        LDR.N    R0,??choose_PD_344
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_468
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_469
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_470
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_471
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_472
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_473
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_474
        B.N      ??choose_PD_475
        Nop      
        DATA
??choose_PD_344:
        DC32     position_now_low_P
        THUMB
// 2427               {
// 2428               case 3:Servo.P+=1;Servo.D-=1;break;
??choose_PD_471:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_475
// 2429               case 2:Servo.P+=1;Servo.D-=1;break;
??choose_PD_470:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_475
// 2430               case 1:Servo.P+=1;Servo.D-=1;break;
??choose_PD_469:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_475
// 2431               case 0:Servo.P+=1;Servo.D-=1;break;
??choose_PD_468:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_475
// 2432               case -1:Servo.P+=1;Servo.D-=1;break;
??choose_PD_474:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_475
// 2433               case -2:Servo.P+=1;Servo.D-=1;break;
??choose_PD_473:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_475
// 2434               case -3:Servo.P+=1;Servo.D-=1;break;
??choose_PD_472:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
// 2435               }
// 2436             }break;
// 2437           }
// 2438         }break;
??choose_PD_475:
??choose_PD_465:
        B.N      ??choose_PD_403
// 2439       case 0:Servo.P+=1;break;                      //P=-2  D=0
??choose_PD_390:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_403
// 2440       case 1:                                       //P=-2  D=1
// 2441         {
// 2442           switch(track_form)
??choose_PD_391:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_476
        BCC.N    ??choose_PD_477
        CMP      R4,#+3
        BEQ.N    ??choose_PD_478
        BCC.N    ??choose_PD_479
        B.N      ??choose_PD_477
// 2443           {
// 2444           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_476:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_477
// 2445           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_479:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_477
// 2446           case 3:
// 2447             {
// 2448               switch(position_now_low_P)
??choose_PD_478:
        LDR.W    R0,??choose_PD_480
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_481
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_482
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_483
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_484
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_485
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_486
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_487
        B.N      ??choose_PD_488
// 2449               {
// 2450               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_484:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_488
// 2451               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_483:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_488
// 2452               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_482:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_488
// 2453               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_481:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_488
// 2454               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_487:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_488
// 2455               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_486:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_488
// 2456               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_485:
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_389+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_389+0x4
        STRH     R0,[R1, #+4]
// 2457               }
// 2458             }break;
// 2459           }
// 2460         }break;
??choose_PD_488:
??choose_PD_477:
        B.N      ??choose_PD_403
        Nop      
        DATA
??choose_PD_389:
        DC32     position_now_D
        DC32     Servo
        THUMB
// 2461       case 2:                                      //P=-2  D=2
// 2462         {
// 2463           switch(track_form)
??choose_PD_392:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_489
        BCC.W    ??choose_PD_490
        CMP      R4,#+3
        BEQ.N    ??choose_PD_491
        BCC.N    ??choose_PD_492
        B.N      ??choose_PD_490
// 2464           {
// 2465           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_489:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_490
// 2466           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_492:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_490
// 2467           case 3:
// 2468             {
// 2469               switch(position_now_low_P)
??choose_PD_491:
        LDR.W    R0,??choose_PD_480
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_494
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_495
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_496
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_497
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_498
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_499
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_500
        B.N      ??choose_PD_501
// 2470               {
// 2471               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_497:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_501
// 2472               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_496:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_501
// 2473               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_495:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_501
// 2474               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_494:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_501
// 2475               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_500:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_501
// 2476               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_499:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_501
// 2477               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_498:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
// 2478               }
// 2479             }break;
// 2480           }
// 2481         }break;
??choose_PD_501:
??choose_PD_490:
        B.N      ??choose_PD_403
// 2482       case 3:                                        //P=-2  D=3
// 2483         {
// 2484           switch(track_form)
??choose_PD_393:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_502
        BCC.W    ??choose_PD_503
        CMP      R4,#+3
        BEQ.N    ??choose_PD_504
        BCC.N    ??choose_PD_505
        B.N      ??choose_PD_503
// 2485           {
// 2486           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_502:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_503
// 2487           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_505:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_503
// 2488           case 3:
// 2489             {
// 2490               switch(position_now_low_P)
??choose_PD_504:
        LDR.W    R0,??choose_PD_480
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_506
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_507
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_508
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_509
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_510
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_511
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_512
        B.N      ??choose_PD_513
// 2491               {
// 2492               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_509:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_513
// 2493               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_508:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_513
// 2494               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_507:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_513
// 2495               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_506:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_513
// 2496               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_512:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_513
// 2497               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_511:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_513
// 2498               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_510:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
// 2499               }
// 2500             }break;
// 2501           }
// 2502         }break;
??choose_PD_513:
??choose_PD_503:
        B.N      ??choose_PD_403
// 2503       case 4:                                       //P=-2  D=4
// 2504         {
// 2505           switch(track_form)
??choose_PD_394:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_514
        BCC.W    ??choose_PD_515
        CMP      R4,#+3
        BEQ.N    ??choose_PD_516
        BCC.N    ??choose_PD_517
        B.N      ??choose_PD_515
// 2506           {
// 2507           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_514:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_515
// 2508           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_517:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_515
// 2509           case 3:
// 2510             {
// 2511               switch(position_now_low_P)
??choose_PD_516:
        LDR.W    R0,??choose_PD_480
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_518
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_519
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_520
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_521
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_522
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_523
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_524
        B.N      ??choose_PD_525
// 2512               {
// 2513               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_521:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_525
// 2514               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_520:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_525
// 2515               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_519:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_525
// 2516               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_518:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_525
// 2517               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_524:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_525
// 2518               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_523:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_525
// 2519               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_522:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
// 2520               }
// 2521             }break;
// 2522           }
// 2523         }break;
??choose_PD_525:
??choose_PD_515:
        B.N      ??choose_PD_403
// 2524       case 5:                                       //P=-2  D=5
// 2525         {
// 2526           switch(track_form)
??choose_PD_395:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_526
        BCC.W    ??choose_PD_527
        CMP      R4,#+3
        BEQ.N    ??choose_PD_528
        BCC.N    ??choose_PD_529
        B.N      ??choose_PD_527
// 2527           {
// 2528           case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_526:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_527
// 2529           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_529:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_527
// 2530           case 3:
// 2531             {
// 2532               switch(position_now_low_P)
??choose_PD_528:
        LDR.N    R0,??choose_PD_480
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_530
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_531
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_532
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_533
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_534
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_535
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_536
        B.N      ??choose_PD_537
// 2533               {
// 2534               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_533:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_537
// 2535               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_532:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_537
// 2536               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_531:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_537
// 2537               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_530:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_537
// 2538               case -1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_536:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_537
// 2539               case -2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_535:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_537
// 2540               case -3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_534:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
// 2541               }
// 2542             }break;
// 2543           }
// 2544         }break;
??choose_PD_537:
??choose_PD_527:
        B.N      ??choose_PD_403
// 2545       case 6:                                        //P=-2  D=6
// 2546         {
// 2547           switch(track_form)
??choose_PD_396:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_538
        BCC.W    ??choose_PD_539
        CMP      R4,#+3
        BEQ.N    ??choose_PD_540
        BCC.N    ??choose_PD_541
        B.N      ??choose_PD_539
// 2548           {
// 2549           case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_538:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_539
// 2550           case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_541:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_539
// 2551           case 3:
// 2552             {
// 2553               switch(position_now_low_P)
??choose_PD_540:
        LDR.N    R0,??choose_PD_480
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_542
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_543
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_544
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_545
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_546
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_547
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_548
        B.N      ??choose_PD_549
// 2554               {
// 2555               case 3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_545:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_549
// 2556               case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_544:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_549
// 2557               case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_543:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_549
// 2558               case 0:Servo.P+=1;Servo.D+=3;break;
??choose_PD_542:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_549
// 2559               case -1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_548:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_549
// 2560               case -2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_547:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_549
// 2561               case -3:Servo.P+=1;Servo.D+=4;break;
??choose_PD_546:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
// 2562               }
// 2563             }break;
// 2564           }
// 2565         }break;
// 2566       }
// 2567     }break;
??choose_PD_549:
??choose_PD_539:
??choose_PD_403:
        B.W      ??choose_PD_40
// 2568    case -1:                                           //P=-1  D=-6
// 2569     {
// 2570       switch(position_now_D)
??choose_PD_39:
        LDR.W    R0,??choose_PD_550
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_551
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_552
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_553
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_554
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_555
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_556
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_557
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_558
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_559
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_560
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_561
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_562
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_563
        B.W      ??choose_PD_564
// 2571       {
// 2572       case -6:
// 2573         {
// 2574           switch(track_form)
??choose_PD_558:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_565
        BCC.W    ??choose_PD_566
        CMP      R4,#+3
        BEQ.N    ??choose_PD_567
        BCC.N    ??choose_PD_568
        B.N      ??choose_PD_566
// 2575           {
// 2576           case 1:Servo.P+=1;Servo.D+=5;break;
??choose_PD_565:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_566
// 2577           case 2:Servo.P+=1;Servo.D+=5;break;
??choose_PD_568:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_566
// 2578           case 3:
// 2579             {
// 2580               switch(position_now_low_P)
??choose_PD_567:
        LDR.N    R0,??choose_PD_480
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_569
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_570
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_571
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_572
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_573
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_574
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_575
        B.N      ??choose_PD_576
// 2581               {
// 2582               case 3:Servo.P+=1;Servo.D+=5;break;
??choose_PD_572:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_576
// 2583               case 2:Servo.P+=1;Servo.D+=5;break;
??choose_PD_571:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_576
        Nop      
        DATA
??choose_PD_480:
        DC32     position_now_low_P
        THUMB
// 2584               case 1:Servo.P+=1;Servo.D+=5;break;
??choose_PD_570:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_576
// 2585               case 0:Servo.P+=1;Servo.D+=6;break;
??choose_PD_569:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_576
// 2586               case -1:Servo.P+=1;Servo.D+=6;break;
??choose_PD_575:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_576
// 2587               case -2:Servo.P+=1;Servo.D+=6;break;
??choose_PD_574:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_576
// 2588               case -3:Servo.P+=1;Servo.D+=6;break;
??choose_PD_573:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
// 2589               }
// 2590             }break;
// 2591           }
// 2592         }break;
??choose_PD_576:
??choose_PD_566:
        B.W      ??choose_PD_564
// 2593       case -5:                                     //P=-1  D=-5
// 2594         {
// 2595           switch(track_form)
??choose_PD_559:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_577
        BCC.W    ??choose_PD_578
        CMP      R4,#+3
        BEQ.N    ??choose_PD_579
        BCC.N    ??choose_PD_580
        B.N      ??choose_PD_578
// 2596           {
// 2597           case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_577:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_578
// 2598           case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_580:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_578
// 2599           case 3:
// 2600             {
// 2601               switch(position_now_low_P)
??choose_PD_579:
        LDR.W    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_582
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_583
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_584
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_585
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_586
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_587
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_588
        B.N      ??choose_PD_589
// 2602               {
// 2603               case 3:Servo.P+=1;Servo.D+=4;break;
??choose_PD_585:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_589
// 2604               case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_584:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_589
// 2605               case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_583:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_589
// 2606               case 0:Servo.P+=1;Servo.D+=3;break;
??choose_PD_582:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_589
// 2607               case -1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_588:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_589
// 2608               case -2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_587:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_589
// 2609               case -3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_586:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
// 2610               }
// 2611             }break;
// 2612           }
// 2613         }break;
??choose_PD_589:
??choose_PD_578:
        B.W      ??choose_PD_564
// 2614       case -4:                                    //P=-1  D=-4
// 2615         {
// 2616           switch(track_form)
??choose_PD_560:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_590
        BCC.W    ??choose_PD_591
        CMP      R4,#+3
        BEQ.N    ??choose_PD_592
        BCC.N    ??choose_PD_593
        B.N      ??choose_PD_591
// 2617           {
// 2618           case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_590:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_591
// 2619           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_593:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_591
// 2620           case 3:
// 2621             {
// 2622               switch(position_now_low_P)
??choose_PD_592:
        LDR.W    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_594
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_595
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_596
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_597
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_598
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_599
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_600
        B.N      ??choose_PD_601
// 2623               {
// 2624               case 3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_597:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_601
// 2625               case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_596:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_601
// 2626               case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_595:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_601
// 2627               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_594:
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_601
// 2628               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_600:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_601
// 2629               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_599:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_601
// 2630               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_598:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
// 2631               }
// 2632             }break;
// 2633           }
// 2634         }break;
??choose_PD_601:
??choose_PD_591:
        B.W      ??choose_PD_564
// 2635       case -3:                                    //P=-1  D=-3
// 2636         {
// 2637           switch(track_form)
??choose_PD_561:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_602
        BCC.N    ??choose_PD_603
        CMP      R4,#+3
        BEQ.N    ??choose_PD_604
        BCC.N    ??choose_PD_605
        B.N      ??choose_PD_603
// 2638           {
// 2639           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_602:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_603
// 2640           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_605:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_603
// 2641           case 3:
// 2642             {
// 2643               switch(position_now_low_P)
??choose_PD_604:
        LDR.W    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_606
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_607
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_608
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_609
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_610
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_611
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_612
        B.N      ??choose_PD_613
// 2644               {
// 2645               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_609:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_613
// 2646               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_608:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_613
// 2647               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_607:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_613
// 2648               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_606:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_613
// 2649               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_612:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_613
// 2650               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_611:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_613
// 2651               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_610:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
// 2652               }
// 2653             }break;
// 2654           }
// 2655         }break;
??choose_PD_613:
??choose_PD_603:
        B.W      ??choose_PD_564
// 2656       case -2:                                    //P=-1  D=-2
// 2657         {
// 2658           switch(track_form)
??choose_PD_562:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_614
        BCC.N    ??choose_PD_615
        CMP      R4,#+3
        BEQ.N    ??choose_PD_616
        BCC.N    ??choose_PD_617
        B.N      ??choose_PD_615
// 2659           {
// 2660           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_614:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_615
// 2661           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_617:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_615
// 2662           case 3:
// 2663             {
// 2664               switch(position_now_low_P)
??choose_PD_616:
        LDR.W    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_618
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_619
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_620
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_621
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_622
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_623
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_624
        B.N      ??choose_PD_625
// 2665               {
// 2666               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_621:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_625
// 2667               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_620:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_625
// 2668               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_619:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_625
// 2669               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_618:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_625
// 2670               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_624:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_625
// 2671               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_623:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_625
// 2672               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_622:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+4]
// 2673               }
// 2674             }break;
// 2675           }
// 2676         }break;
??choose_PD_625:
??choose_PD_615:
        B.W      ??choose_PD_564
// 2677       case -1:                                       //P=-1  D=-1
// 2678         {
// 2679           switch(track_form)
??choose_PD_563:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_626
        BCC.W    ??choose_PD_627
        CMP      R4,#+3
        BEQ.N    ??choose_PD_628
        BCC.N    ??choose_PD_629
        B.N      ??choose_PD_627
// 2680           {
// 2681           case 1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_626:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDR.N    R1,??choose_PD_493
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_627
// 2682           case 2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_629:
        LDR.N    R0,??choose_PD_493
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_493
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_493
        LDR.N    R1,??choose_PD_493
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_627
// 2683           case 3:
// 2684             {
// 2685               switch(position_now_low_P)
??choose_PD_628:
        LDR.W    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_630
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_631
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_632
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_633
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_634
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_635
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_636
        B.N      ??choose_PD_637
        Nop      
        DATA
??choose_PD_493:
        DC32     Servo
        THUMB
// 2686               {
// 2687               case 3:Servo.P+=1;Servo.D+=0;break;
??choose_PD_633:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDR.W    R1,??choose_PD_638
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_637
// 2688               case 2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_632:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDR.W    R1,??choose_PD_638
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_637
// 2689               case 1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_631:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDR.W    R1,??choose_PD_638
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_637
// 2690               case 0:Servo.P+=1;Servo.D+=0;break;
??choose_PD_630:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDR.W    R1,??choose_PD_638
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_637
// 2691               case -1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_636:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDR.W    R1,??choose_PD_638
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_637
// 2692               case -2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_635:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDR.W    R1,??choose_PD_638
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_637
// 2693               case -3:Servo.P+=1;Servo.D+=0;break;
??choose_PD_634:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDR.W    R1,??choose_PD_638
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 2694               }
// 2695             }break;
// 2696           }
// 2697         }break;
??choose_PD_637:
??choose_PD_627:
        B.N      ??choose_PD_564
// 2698       case 0:Servo.P+=6;break;                      //P=-1  D=0
??choose_PD_551:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_564
// 2699       case 1:                                      //P=-1  D=1
// 2700         {
// 2701           switch(track_form)
??choose_PD_552:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_639
        BCC.W    ??choose_PD_640
        CMP      R4,#+3
        BEQ.N    ??choose_PD_641
        BCC.N    ??choose_PD_642
        B.N      ??choose_PD_640
// 2702           {
// 2703           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_639:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_640
        DATA
??choose_PD_550:
        DC32     position_now_D
        THUMB
// 2704           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_642:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_640
// 2705           case 3:
// 2706             {
// 2707               switch(position_now_low_P)
??choose_PD_641:
        LDR.W    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_643
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_644
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_645
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_646
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_647
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_648
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_649
        B.N      ??choose_PD_650
// 2708               {
// 2709               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_646:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_650
// 2710               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_645:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_650
// 2711               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_644:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_650
// 2712               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_643:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_650
// 2713               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_649:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_650
// 2714               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_648:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_650
// 2715               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_647:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
// 2716               }
// 2717             }break;
// 2718           }
// 2719         }break;
??choose_PD_650:
??choose_PD_640:
        B.N      ??choose_PD_564
// 2720       case 2:                                         //P=-1  D=2
// 2721         {
// 2722           switch(track_form)
??choose_PD_553:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_651
        BCC.W    ??choose_PD_652
        CMP      R4,#+3
        BEQ.N    ??choose_PD_653
        BCC.N    ??choose_PD_654
        B.N      ??choose_PD_652
// 2723           {
// 2724           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_651:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_652
// 2725           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_654:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_652
// 2726           case 3:
// 2727             {
// 2728               switch(position_now_low_P)
??choose_PD_653:
        LDR.W    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_655
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_656
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_657
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_658
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_659
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_660
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_661
        B.N      ??choose_PD_662
// 2729               {
// 2730               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_658:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_662
// 2731               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_657:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_662
// 2732               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_656:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_662
// 2733               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_655:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_662
// 2734               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_661:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_662
// 2735               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_660:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_662
// 2736               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_659:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
// 2737               }
// 2738             }break;
// 2739           }
// 2740         }break;
??choose_PD_662:
??choose_PD_652:
        B.N      ??choose_PD_564
// 2741       case 3:                                       //P=-1  D=3
// 2742         {
// 2743           switch(track_form)
??choose_PD_554:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_663
        BCC.W    ??choose_PD_664
        CMP      R4,#+3
        BEQ.N    ??choose_PD_665
        BCC.N    ??choose_PD_666
        B.N      ??choose_PD_664
// 2744           {
// 2745           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_663:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_664
// 2746           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_666:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_664
// 2747           case 3:
// 2748             {
// 2749               switch(position_now_low_P)
??choose_PD_665:
        LDR.W    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_667
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_668
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_669
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_670
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_671
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_672
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_673
        B.N      ??choose_PD_674
// 2750               {
// 2751               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_670:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_674
// 2752               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_669:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_674
// 2753               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_668:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_674
// 2754               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_667:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_674
// 2755               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_673:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_674
// 2756               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_672:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_674
// 2757               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_671:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
// 2758               }
// 2759             }break;
// 2760           }
// 2761         }break;
??choose_PD_674:
??choose_PD_664:
        B.N      ??choose_PD_564
// 2762       case 4:                                    //P=-1  D=4
// 2763         {
// 2764           switch(track_form)
??choose_PD_555:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_675
        BCC.W    ??choose_PD_676
        CMP      R4,#+3
        BEQ.N    ??choose_PD_677
        BCC.N    ??choose_PD_678
        B.N      ??choose_PD_676
// 2765           {
// 2766           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_675:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_676
// 2767           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_678:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_676
// 2768           case 3:
// 2769             {
// 2770               switch(position_now_low_P)
??choose_PD_677:
        LDR.N    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_679
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_680
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_681
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_682
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_683
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_684
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_685
        B.N      ??choose_PD_686
// 2771               {
// 2772               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_682:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_686
// 2773               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_681:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_686
// 2774               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_680:
        LDR.W    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_686
// 2775               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_679:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_686
// 2776               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_685:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_686
// 2777               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_684:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_686
// 2778               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_683:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
// 2779               }
// 2780             }break;
// 2781           }
// 2782         }break;
??choose_PD_686:
??choose_PD_676:
        B.N      ??choose_PD_564
// 2783       case 5:                                       //P=-1  D=5
// 2784         {
// 2785           switch(track_form)
??choose_PD_556:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_687
        BCC.N    ??choose_PD_688
        CMP      R4,#+3
        BEQ.N    ??choose_PD_689
        BCC.N    ??choose_PD_690
        B.N      ??choose_PD_688
// 2786           {
// 2787           case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_687:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_688
// 2788           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_690:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_688
// 2789           case 3:
// 2790             {
// 2791               switch(position_now_low_P)
??choose_PD_689:
        LDR.N    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_691
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_692
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_693
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_694
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_695
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_696
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_697
        B.N      ??choose_PD_698
// 2792               {
// 2793               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_694:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_698
// 2794               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_693:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_698
// 2795               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_692:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_698
// 2796               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_691:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_698
// 2797               case -1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_697:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_698
// 2798               case -2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_696:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_698
// 2799               case -3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_695:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
// 2800               }
// 2801             }break;
// 2802           }
// 2803         }break;
??choose_PD_698:
??choose_PD_688:
        B.N      ??choose_PD_564
// 2804       case 6:                                     //P=-1  D=6
// 2805         {
// 2806           switch(track_form)
??choose_PD_557:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_699
        BCC.N    ??choose_PD_700
        CMP      R4,#+3
        BEQ.N    ??choose_PD_701
        BCC.N    ??choose_PD_702
        B.N      ??choose_PD_700
// 2807           {
// 2808           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_699:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_700
// 2809           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_702:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_700
// 2810           case 3:
// 2811             {
// 2812               switch(position_now_low_P)
??choose_PD_701:
        LDR.N    R0,??choose_PD_581
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_703
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_704
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_705
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_706
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_707
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_708
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_709
        B.N      ??choose_PD_710
// 2813               {
// 2814               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_706:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_710
// 2815               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_705:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_710
// 2816               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_704:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_710
// 2817               case 0:Servo.P+=1;Servo.D+=3;break;
??choose_PD_703:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_710
// 2818               case -1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_709:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_710
        DATA
??choose_PD_581:
        DC32     position_now_low_P
        THUMB
// 2819               case -2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_708:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_710
// 2820               case -3:Servo.P+=1;Servo.D+=4;break;
??choose_PD_707:
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_638
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_638
        STRH     R0,[R1, #+4]
// 2821               }
// 2822             }break;
// 2823           }
// 2824         }break;
// 2825       }
// 2826     }break;
??choose_PD_710:
??choose_PD_700:
??choose_PD_564:
        B.W      ??choose_PD_40
// 2827   case 0:                                        //P=0  D=-6
// 2828     {
// 2829       switch(position_now_D)
??choose_PD_27:
        LDR.W    R0,??choose_PD_711
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_712
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_713
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_714
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_715
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_716
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_717
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_718
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_719
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_720
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_721
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_722
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_723
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_724
        B.W      ??choose_PD_725
        Nop      
        DATA
??choose_PD_638:
        DC32     Servo
        THUMB
// 2830       {
// 2831       case -6:
// 2832         {
// 2833           switch(track_form)
??choose_PD_719:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_726
        BCC.W    ??choose_PD_727
        CMP      R4,#+3
        BEQ.N    ??choose_PD_728
        BCC.N    ??choose_PD_729
        B.N      ??choose_PD_727
// 2834           {
// 2835           case 1:Servo.P+=0;Servo.D+=6;break;
??choose_PD_726:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_727
// 2836           case 2:Servo.P+=0;Servo.D+=6;break;
??choose_PD_729:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_727
// 2837           case 3:
// 2838             {
// 2839               switch(position_now_low_P)
??choose_PD_728:
        LDR.W    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_732
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_733
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_734
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_735
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_736
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_737
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_738
        B.N      ??choose_PD_739
// 2840               {
// 2841               case 3:Servo.P+=0;Servo.D+=6;break;
??choose_PD_735:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_739
// 2842               case 2:Servo.P+=0;Servo.D+=6;break;
??choose_PD_734:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_739
// 2843               case 1:Servo.P+=0;Servo.D+=6;break;
??choose_PD_733:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_739
// 2844               case 0:Servo.P+=0;Servo.D+=5;break;
??choose_PD_732:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_739
// 2845               case -1:Servo.P+=0;Servo.D+=5;break;
??choose_PD_738:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_739
// 2846               case -2:Servo.P+=0;Servo.D+=5;break;
??choose_PD_737:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_739
// 2847               case -3:Servo.P+=0;Servo.D+=5;break;
??choose_PD_736:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 2848               }
// 2849             }break;
// 2850           }
// 2851         }break;
??choose_PD_739:
??choose_PD_727:
        B.W      ??choose_PD_725
// 2852       case -5:                                   //P=0  D=-5
// 2853         {
// 2854           switch(track_form)
??choose_PD_720:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_740
        BCC.W    ??choose_PD_741
        CMP      R4,#+3
        BEQ.N    ??choose_PD_742
        BCC.N    ??choose_PD_743
        B.N      ??choose_PD_741
// 2855           {
// 2856           case 1:Servo.P+=0;Servo.D+=5;break;
??choose_PD_740:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_741
// 2857           case 2:Servo.P+=0;Servo.D+=5;break;
??choose_PD_743:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_741
// 2858           case 3:
// 2859             {
// 2860               switch(position_now_low_P)
??choose_PD_742:
        LDR.W    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_744
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_745
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_746
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_747
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_748
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_749
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_750
        B.N      ??choose_PD_751
// 2861               {
// 2862               case 3:Servo.P+=0;Servo.D+=5;break;
??choose_PD_747:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_751
// 2863               case 2:Servo.P+=0;Servo.D+=5;break;
??choose_PD_746:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_751
// 2864               case 1:Servo.P+=0;Servo.D+=5;break;
??choose_PD_745:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_751
// 2865               case 0:Servo.P+=0;Servo.D+=4;break;
??choose_PD_744:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_751
// 2866               case -1:Servo.P+=0;Servo.D+=4;break;
??choose_PD_750:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_751
// 2867               case -2:Servo.P+=0;Servo.D+=4;break;
??choose_PD_749:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_751
// 2868               case -3:Servo.P+=0;Servo.D+=4;break;
??choose_PD_748:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 2869               }
// 2870             }break;
// 2871           }
// 2872         }break;
??choose_PD_751:
??choose_PD_741:
        B.W      ??choose_PD_725
// 2873       case -4:                                       //P=0  D=-4
// 2874         {
// 2875           switch(track_form)
??choose_PD_721:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_752
        BCC.W    ??choose_PD_753
        CMP      R4,#+3
        BEQ.N    ??choose_PD_754
        BCC.N    ??choose_PD_755
        B.N      ??choose_PD_753
// 2876           {
// 2877           case 1:Servo.P+=0;Servo.D+=4;break;
??choose_PD_752:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_753
// 2878           case 2:Servo.P+=0;Servo.D+=4;break;
??choose_PD_755:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_753
// 2879           case 3:
// 2880             {
// 2881               switch(position_now_low_P)
??choose_PD_754:
        LDR.W    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_756
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_757
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_758
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_759
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_760
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_761
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_762
        B.N      ??choose_PD_763
// 2882               {
// 2883               case 3:Servo.P+=0;Servo.D+=4;break;
??choose_PD_759:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_763
// 2884               case 2:Servo.P+=0;Servo.D+=4;break;
??choose_PD_758:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_763
// 2885               case 1:Servo.P+=0;Servo.D+=4;break;
??choose_PD_757:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_763
// 2886               case 0:Servo.P+=0;Servo.D+=3;break;
??choose_PD_756:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_763
// 2887               case -1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_762:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_763
// 2888               case -2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_761:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_763
// 2889               case -3:Servo.P+=0;Servo.D+=3;break;
??choose_PD_760:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 2890               }
// 2891             }break;
// 2892           }
// 2893         }break;
??choose_PD_763:
??choose_PD_753:
        B.W      ??choose_PD_725
// 2894       case -3:                                     //P=0  D=-3
// 2895         {
// 2896           switch(track_form)
??choose_PD_722:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_764
        BCC.W    ??choose_PD_765
        CMP      R4,#+3
        BEQ.N    ??choose_PD_766
        BCC.N    ??choose_PD_767
        B.N      ??choose_PD_765
// 2897           {
// 2898           case 1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_764:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_765
// 2899           case 2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_767:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_765
// 2900           case 3:
// 2901             {
// 2902               switch(position_now_low_P)
??choose_PD_766:
        LDR.W    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_768
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_769
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_770
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_771
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_772
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_773
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_774
        B.N      ??choose_PD_775
// 2903               {
// 2904               case 3:Servo.P+=0;Servo.D+=3;break;
??choose_PD_771:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_775
// 2905               case 2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_770:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_775
// 2906               case 1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_769:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_775
// 2907               case 0:Servo.P+=0;Servo.D+=2;break;
??choose_PD_768:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_775
// 2908               case -1:Servo.P+=0;Servo.D+=2;break;
??choose_PD_774:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_775
// 2909               case -2:Servo.P+=0;Servo.D+=2;break;
??choose_PD_773:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_775
// 2910               case -3:Servo.P+=0;Servo.D+=2;break;
??choose_PD_772:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 2911               }
// 2912             }break;
// 2913           }
// 2914         }break;
??choose_PD_775:
??choose_PD_765:
        B.W      ??choose_PD_725
// 2915       case -2:                                    //P=0  D=-2
// 2916         {
// 2917           switch(track_form)
??choose_PD_723:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_776
        BCC.W    ??choose_PD_777
        CMP      R4,#+3
        BEQ.N    ??choose_PD_778
        BCC.N    ??choose_PD_779
        B.N      ??choose_PD_777
// 2918           {
// 2919           case 1:Servo.P+=0;Servo.D+=2;break;
??choose_PD_776:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_777
// 2920           case 2:Servo.P+=0;Servo.D+=2;break;
??choose_PD_779:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_777
// 2921           case 3:
// 2922             {
// 2923               switch(position_now_low_P)
??choose_PD_778:
        LDR.W    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_780
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_781
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_782
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_783
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_784
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_785
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_786
        B.N      ??choose_PD_787
// 2924               {
// 2925               case 3:Servo.P+=0;Servo.D+=2;break;
??choose_PD_783:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_787
// 2926               case 2:Servo.P+=0;Servo.D+=2;break;
??choose_PD_782:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_787
// 2927               case 1:Servo.P+=0;Servo.D+=2;break;
??choose_PD_781:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_787
// 2928               case 0:Servo.P+=0;Servo.D+=2;break;
??choose_PD_780:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_787
// 2929               case -1:Servo.P+=0;Servo.D+=2;break;
??choose_PD_786:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_787
// 2930               case -2:Servo.P+=0;Servo.D+=2;break;
??choose_PD_785:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_787
// 2931               case -3:Servo.P+=0;Servo.D+=2;break;
??choose_PD_784:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 2932               }
// 2933             }break;
// 2934           }
// 2935         }break;
??choose_PD_787:
??choose_PD_777:
        B.N      ??choose_PD_725
// 2936       case -1:                                //P=0  D=-1
// 2937         {
// 2938           switch(track_form)
??choose_PD_724:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_788
        BCC.W    ??choose_PD_789
        CMP      R4,#+3
        BEQ.N    ??choose_PD_790
        BCC.N    ??choose_PD_791
        B.N      ??choose_PD_789
// 2939           {
// 2940           case 1:Servo.P+=0;Servo.D+=1;break;
??choose_PD_788:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_789
// 2941           case 2:Servo.P+=0;Servo.D+=1;break;
??choose_PD_791:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_789
// 2942           case 3:
// 2943             {
// 2944               switch(position_now_low_P)
??choose_PD_790:
        LDR.W    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_792
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_793
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_794
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_795
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_796
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_797
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_798
        B.N      ??choose_PD_799
// 2945               {
// 2946               case 3:Servo.P+=0;Servo.D+=3;break;
??choose_PD_795:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_799
        DATA
??choose_PD_711:
        DC32     position_now_D
        THUMB
// 2947               case 2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_794:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_799
// 2948               case 1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_793:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_799
// 2949               case 0:Servo.P+=0;Servo.D+=3;break;
??choose_PD_792:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_799
// 2950               case -1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_798:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_799
// 2951               case -2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_797:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_799
// 2952               case -3:Servo.P+=0;Servo.D+=3;break;
??choose_PD_796:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 2953               }
// 2954             }break;
// 2955           }
// 2956         }break;
??choose_PD_799:
??choose_PD_789:
        B.N      ??choose_PD_725
// 2957       case 0:Servo.P+=6;break;                    //P=0  D=0
??choose_PD_712:
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_725
// 2958       case 1:                                      //P=0  D=1
// 2959         {
// 2960           switch(track_form)
??choose_PD_713:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_800
        BCC.W    ??choose_PD_801
        CMP      R4,#+3
        BEQ.N    ??choose_PD_802
        BCC.N    ??choose_PD_803
        B.N      ??choose_PD_801
// 2961           {
// 2962           case 1:Servo.P+=0;Servo.D+=1;break;
??choose_PD_800:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_801
// 2963           case 2:Servo.P+=0;Servo.D+=1;break;
??choose_PD_803:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_801
// 2964           case 3:
// 2965             {
// 2966               switch(position_now_low_P)
??choose_PD_802:
        LDR.W    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_804
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_805
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_806
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_807
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_808
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_809
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_810
        B.N      ??choose_PD_811
// 2967               {
// 2968               case 3:Servo.P+=0;Servo.D+=3;break;
??choose_PD_807:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_811
// 2969               case 2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_806:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_811
// 2970               case 1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_805:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_811
// 2971               case 0:Servo.P+=0;Servo.D+=3;break;
??choose_PD_804:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_811
// 2972               case -1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_810:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_811
// 2973               case -2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_809:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_811
// 2974               case -3:Servo.P+=0;Servo.D+=3;break;
??choose_PD_808:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 2975               }
// 2976             }break;
// 2977           }
// 2978         }break;
??choose_PD_811:
??choose_PD_801:
        B.N      ??choose_PD_725
// 2979       case 2:                                      //P=0  D=2
// 2980         {
// 2981           switch(track_form)
??choose_PD_714:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_812
        BCC.W    ??choose_PD_813
        CMP      R4,#+3
        BEQ.N    ??choose_PD_814
        BCC.N    ??choose_PD_815
        B.N      ??choose_PD_813
// 2982           {
// 2983           case 1:Servo.P+=0;Servo.D+=2;break;
??choose_PD_812:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_813
// 2984           case 2:Servo.P+=0;Servo.D+=2;break;
??choose_PD_815:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_813
// 2985           case 3:
// 2986             {
// 2987               switch(position_now_low_P)
??choose_PD_814:
        LDR.W    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_816
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_817
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_818
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_819
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_820
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_821
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_822
        B.N      ??choose_PD_823
// 2988               {
// 2989               case 3:Servo.P+=0;Servo.D+=2;break;
??choose_PD_819:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_823
// 2990               case 2:Servo.P+=0;Servo.D+=2;break;
??choose_PD_818:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_823
// 2991               case 1:Servo.P+=0;Servo.D+=2;break;
??choose_PD_817:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_823
// 2992               case 0:Servo.P+=0;Servo.D+=2;break;
??choose_PD_816:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_823
// 2993               case -1:Servo.P+=0;Servo.D+=2;break;
??choose_PD_822:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_823
// 2994               case -2:Servo.P+=0;Servo.D+=2;break;
??choose_PD_821:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_823
// 2995               case -3:Servo.P+=0;Servo.D+=2;break;
??choose_PD_820:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 2996               }
// 2997             }break;
// 2998           }
// 2999         }break;
??choose_PD_823:
??choose_PD_813:
        B.N      ??choose_PD_725
// 3000       case 3:                                  //P=0  D=3
// 3001         {
// 3002           switch(track_form)
??choose_PD_715:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_824
        BCC.N    ??choose_PD_825
        CMP      R4,#+3
        BEQ.N    ??choose_PD_826
        BCC.N    ??choose_PD_827
        B.N      ??choose_PD_825
// 3003           {
// 3004           case 1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_824:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_825
// 3005           case 2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_827:
        LDR.W    R0,??choose_PD_730
        LDR.W    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_825
// 3006           case 3:
// 3007             {
// 3008               switch(position_now_low_P)
??choose_PD_826:
        LDR.W    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_828
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_829
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_830
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_831
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_832
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_833
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_834
        B.N      ??choose_PD_835
// 3009               {
// 3010               case 3:Servo.P+=0;Servo.D+=2;break;
??choose_PD_831:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_835
// 3011               case 2:Servo.P+=0;Servo.D+=2;break;
??choose_PD_830:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_835
// 3012               case 1:Servo.P+=0;Servo.D+=2;break;
??choose_PD_829:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_835
// 3013               case 0:Servo.P+=0;Servo.D+=2;break;
??choose_PD_828:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_835
// 3014               case -1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_834:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_835
// 3015               case -2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_833:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_835
// 3016               case -3:Servo.P+=0;Servo.D+=3;break;
??choose_PD_832:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 3017               }
// 3018             }break;
// 3019           }
// 3020         }break;
??choose_PD_835:
??choose_PD_825:
        B.N      ??choose_PD_725
// 3021       case 4:                                    //P=0  D=4
// 3022         {
// 3023           switch(track_form)
??choose_PD_716:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_836
        BCC.N    ??choose_PD_837
        CMP      R4,#+3
        BEQ.N    ??choose_PD_838
        BCC.N    ??choose_PD_839
        B.N      ??choose_PD_837
// 3024           {
// 3025           case 1:Servo.P+=0;Servo.D+=4;break;
??choose_PD_836:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_837
// 3026           case 2:Servo.P+=0;Servo.D+=4;break;
??choose_PD_839:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_837
// 3027           case 3:
// 3028             {
// 3029               switch(position_now_low_P)
??choose_PD_838:
        LDR.N    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_840
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_841
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_842
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_843
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_844
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_845
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_846
        B.N      ??choose_PD_847
// 3030               {
// 3031               case 3:Servo.P+=0;Servo.D+=3;break;
??choose_PD_843:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_847
// 3032               case 2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_842:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_847
// 3033               case 1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_841:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_847
// 3034               case 0:Servo.P+=0;Servo.D+=3;break;
??choose_PD_840:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_847
// 3035               case -1:Servo.P+=0;Servo.D+=4;break;
??choose_PD_846:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_847
// 3036               case -2:Servo.P+=0;Servo.D+=4;break;
??choose_PD_845:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_847
// 3037               case -3:Servo.P+=0;Servo.D+=4;break;
??choose_PD_844:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 3038               }
// 3039             }break;
// 3040           }
// 3041         }break;
??choose_PD_847:
??choose_PD_837:
        B.N      ??choose_PD_725
// 3042       case 5:                                      //P=0  D=5
// 3043         {
// 3044           switch(track_form)
??choose_PD_717:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_848
        BCC.N    ??choose_PD_849
        CMP      R4,#+3
        BEQ.N    ??choose_PD_850
        BCC.N    ??choose_PD_851
        B.N      ??choose_PD_849
// 3045           {
// 3046           case 1:Servo.P+=0;Servo.D+=5;break;
??choose_PD_848:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_849
// 3047           case 2:Servo.P+=0;Servo.D+=5;break;
??choose_PD_851:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_849
// 3048           case 3:
// 3049             {
// 3050               switch(position_now_low_P)
??choose_PD_850:
        LDR.N    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_852
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_853
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_854
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_855
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_856
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_857
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_858
        B.N      ??choose_PD_859
// 3051               {
// 3052               case 3:Servo.P+=0;Servo.D+=4;break;
??choose_PD_855:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_859
// 3053               case 2:Servo.P+=0;Servo.D+=4;break;
??choose_PD_854:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_859
// 3054               case 1:Servo.P+=0;Servo.D+=4;break;
??choose_PD_853:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_859
// 3055               case 0:Servo.P+=0;Servo.D+=4;break;
??choose_PD_852:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_859
// 3056               case -1:Servo.P+=0;Servo.D+=5;break;
??choose_PD_858:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_859
// 3057               case -2:Servo.P+=0;Servo.D+=5;break;
??choose_PD_857:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_859
// 3058               case -3:Servo.P+=0;Servo.D+=5;break;
??choose_PD_856:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
// 3059               }
// 3060             }break;
// 3061           }
// 3062         }break;
??choose_PD_859:
??choose_PD_849:
        B.N      ??choose_PD_725
// 3063       case 6:                                     //P=0  D=6
// 3064         {
// 3065           switch(track_form)
??choose_PD_718:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_860
        BCC.W    ??choose_PD_861
        CMP      R4,#+3
        BEQ.N    ??choose_PD_862
        BCC.N    ??choose_PD_863
        B.N      ??choose_PD_861
// 3066           {
// 3067           case 1:Servo.P+=0;Servo.D+=6;break;
??choose_PD_860:
        LDR.N    R0,??choose_PD_730
        LDR.N    R1,??choose_PD_730
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_730
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.N    R1,??choose_PD_730
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_861
        DATA
??choose_PD_730:
        DC32     Servo
        THUMB
// 3068           case 2:Servo.P+=0;Servo.D+=4;break;
??choose_PD_863:
        LDR.W    R0,??choose_PD_864
        LDR.W    R1,??choose_PD_864
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_861
// 3069           case 3:
// 3070             {
// 3071               switch(position_now_low_P)
??choose_PD_862:
        LDR.N    R0,??choose_PD_731
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_865
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_866
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_867
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_868
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_869
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_870
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_871
        B.N      ??choose_PD_872
        DATA
??choose_PD_731:
        DC32     position_now_low_P
        THUMB
// 3072               {
// 3073               case 3:Servo.P+=0;Servo.D+=5;break;
??choose_PD_868:
        LDR.W    R0,??choose_PD_864
        LDR.W    R1,??choose_PD_864
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_872
// 3074               case 2:Servo.P+=0;Servo.D+=5;break;
??choose_PD_867:
        LDR.W    R0,??choose_PD_864
        LDR.W    R1,??choose_PD_864
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_872
// 3075               case 1:Servo.P+=0;Servo.D+=5;break;
??choose_PD_866:
        LDR.W    R0,??choose_PD_864
        LDR.W    R1,??choose_PD_864
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_872
// 3076               case 0:Servo.P+=0;Servo.D+=5;break;
??choose_PD_865:
        LDR.W    R0,??choose_PD_864
        LDR.W    R1,??choose_PD_864
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_872
// 3077               case -1:Servo.P+=0;Servo.D+=6;break;
??choose_PD_871:
        LDR.W    R0,??choose_PD_864
        LDR.W    R1,??choose_PD_864
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_872
// 3078               case -2:Servo.P+=0;Servo.D+=6;break;
??choose_PD_870:
        LDR.W    R0,??choose_PD_864
        LDR.W    R1,??choose_PD_864
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_872
// 3079               case -3:Servo.P+=0;Servo.D+=6;break;
??choose_PD_869:
        LDR.W    R0,??choose_PD_864
        LDR.W    R1,??choose_PD_864
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
// 3080               }
// 3081             }break;
// 3082           }
// 3083         }break;
// 3084       }
// 3085     }break;
??choose_PD_872:
??choose_PD_861:
??choose_PD_725:
        B.W      ??choose_PD_40
// 3086   case 1:                                       //P=1  D=6
// 3087     {
// 3088       switch(position_now_D)
??choose_PD_28:
        LDR.W    R0,??choose_PD_873
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_874
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_875
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_876
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_877
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_878
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_879
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_880
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.W    ??choose_PD_881
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_882
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_883
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_884
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_885
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_886
        B.W      ??choose_PD_887
// 3089       {
// 3090       case 6:
// 3091         {
// 3092           switch(track_form)
??choose_PD_880:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_888
        BCC.W    ??choose_PD_889
        CMP      R4,#+3
        BEQ.N    ??choose_PD_890
        BCC.N    ??choose_PD_891
        B.N      ??choose_PD_889
// 3093           {
// 3094           case 1:Servo.P+=1;Servo.D+=5;break;
??choose_PD_888:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_889
// 3095           case 2:Servo.P+=1;Servo.D+=5;break;
??choose_PD_891:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_889
// 3096           case 3:
// 3097             {
// 3098               switch(position_now_low_P)
??choose_PD_890:
        LDR.W    R0,??choose_PD_873+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_892
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_893
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_894
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_895
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_896
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_897
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_898
        B.N      ??choose_PD_899
// 3099               {
// 3100               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_895:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_899
// 3101               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_894:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_899
// 3102               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_893:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_899
// 3103               case 0:Servo.P+=1;Servo.D+=3;break;
??choose_PD_892:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_899
// 3104               case -1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_898:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_899
// 3105               case -2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_897:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_899
// 3106               case -3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_896:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
// 3107               }
// 3108             }break;
// 3109           }
// 3110         }break;
??choose_PD_899:
??choose_PD_889:
        B.W      ??choose_PD_887
// 3111       case 5:                                     //P=1  D=5
// 3112         {
// 3113           switch(track_form)
??choose_PD_879:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_900
        BCC.W    ??choose_PD_901
        CMP      R4,#+3
        BEQ.N    ??choose_PD_902
        BCC.N    ??choose_PD_903
        B.N      ??choose_PD_901
// 3114           {
// 3115           case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_900:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_901
// 3116           case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_903:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_901
// 3117           case 3:
// 3118             {
// 3119               switch(position_now_low_P)
??choose_PD_902:
        LDR.W    R0,??choose_PD_873+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_904
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_905
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_906
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_907
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_908
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_909
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_910
        B.N      ??choose_PD_911
// 3120               {
// 3121               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_907:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_911
// 3122               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_906:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_911
// 3123               case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_905:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_911
// 3124               case 0:Servo.P+=1;Servo.D+=3;break;
??choose_PD_904:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_911
// 3125               case -1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_910:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_911
// 3126               case -2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_909:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_911
// 3127               case -3:Servo.P+=1;Servo.D+=4;break;
??choose_PD_908:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
// 3128               }
// 3129             }break;
// 3130           }
// 3131         }break;
??choose_PD_911:
??choose_PD_901:
        B.W      ??choose_PD_887
// 3132       case 4:                                     //P=1  D=4                                  
// 3133         {
// 3134           switch(track_form)
??choose_PD_878:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_912
        BCC.W    ??choose_PD_913
        CMP      R4,#+3
        BEQ.N    ??choose_PD_914
        BCC.N    ??choose_PD_915
        B.N      ??choose_PD_913
// 3135           {
// 3136           case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_912:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_913
// 3137           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_915:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_913
// 3138           case 3:
// 3139             {
// 3140               switch(position_now_low_P)
??choose_PD_914:
        LDR.W    R0,??choose_PD_873+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_916
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_917
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_918
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_919
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_920
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_921
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_922
        B.N      ??choose_PD_923
// 3141               {
// 3142               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_919:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_923
// 3143               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_918:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_923
// 3144               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_917:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_923
// 3145               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_916:
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_923
// 3146               case -1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_922:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_923
// 3147               case -2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_921:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_923
// 3148               case -3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_920:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
// 3149               }
// 3150             }break;
// 3151           }
// 3152         }break;
??choose_PD_923:
??choose_PD_913:
        B.W      ??choose_PD_887
// 3153       case 3:                                    //P=1  D=3
// 3154         {
// 3155           switch(track_form)
??choose_PD_877:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_924
        BCC.N    ??choose_PD_925
        CMP      R4,#+3
        BEQ.N    ??choose_PD_926
        BCC.N    ??choose_PD_927
        B.N      ??choose_PD_925
// 3156           {
// 3157           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_924:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_925
// 3158           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_927:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_925
// 3159           case 3:
// 3160             {
// 3161               switch(position_now_low_P)
??choose_PD_926:
        LDR.W    R0,??choose_PD_873+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_928
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_929
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_930
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_931
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_932
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_933
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_934
        B.N      ??choose_PD_935
// 3162               {
// 3163               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_931:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_935
// 3164               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_930:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_935
// 3165               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_929:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_935
// 3166               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_928:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_935
// 3167               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_934:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_935
// 3168               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_933:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_935
// 3169               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_932:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
// 3170               }
// 3171             }break;
// 3172           }
// 3173         }break;
??choose_PD_935:
??choose_PD_925:
        B.W      ??choose_PD_887
// 3174       case 2:                                    //P=1  D=2
// 3175         {
// 3176           switch(track_form)
??choose_PD_876:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_936
        BCC.N    ??choose_PD_937
        CMP      R4,#+3
        BEQ.N    ??choose_PD_938
        BCC.N    ??choose_PD_939
        B.N      ??choose_PD_937
// 3177           {
// 3178           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_936:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_937
// 3179           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_939:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_937
// 3180           case 3:
// 3181             {
// 3182               switch(position_now_low_P)
??choose_PD_938:
        LDR.W    R0,??choose_PD_873+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_940
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_941
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_942
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_943
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_944
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_945
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_946
        B.N      ??choose_PD_947
// 3183               {
// 3184               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_943:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_947
// 3185               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_942:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_947
// 3186               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_941:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_947
// 3187               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_940:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_947
// 3188               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_946:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_947
// 3189               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_945:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_947
// 3190               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_944:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+4]
// 3191               }
// 3192             }break;
// 3193           }
// 3194         }break;
??choose_PD_947:
??choose_PD_937:
        B.W      ??choose_PD_887
// 3195       case 1:                                    //P=1  D=1
// 3196         {
// 3197           switch(track_form)
??choose_PD_875:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_948
        BCC.W    ??choose_PD_949
        CMP      R4,#+3
        BEQ.N    ??choose_PD_950
        BCC.N    ??choose_PD_951
        B.N      ??choose_PD_949
// 3198           {
// 3199           case 1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_948:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDR.N    R1,??choose_PD_864
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_949
// 3200           case 2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_951:
        LDR.N    R0,??choose_PD_864
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_864
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_864
        LDR.N    R1,??choose_PD_864
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_949
// 3201           case 3:
// 3202             {
// 3203               switch(position_now_low_P)
??choose_PD_950:
        LDR.W    R0,??choose_PD_873+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_952
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_953
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_954
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_955
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_956
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_957
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_958
        B.N      ??choose_PD_959
        DATA
??choose_PD_864:
        DC32     Servo
        THUMB
// 3204               {
// 3205               case 3:Servo.P+=1;Servo.D+=0;break;
??choose_PD_955:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDR.W    R1,??choose_PD_960
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_959
// 3206               case 2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_954:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDR.W    R1,??choose_PD_960
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_959
// 3207               case 1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_953:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDR.W    R1,??choose_PD_960
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_959
// 3208               case 0:Servo.P+=1;Servo.D+=0;break;
??choose_PD_952:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDR.W    R1,??choose_PD_960
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_959
// 3209               case -1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_958:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDR.W    R1,??choose_PD_960
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_959
// 3210               case -2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_957:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDR.W    R1,??choose_PD_960
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_959
// 3211               case -3:Servo.P+=1;Servo.D+=0;break;
??choose_PD_956:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDR.W    R1,??choose_PD_960
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 3212               }
// 3213             }break;
// 3214           }
// 3215         }break;
??choose_PD_959:
??choose_PD_949:
        B.N      ??choose_PD_887
// 3216       case 0:Servo.P+=6;break;                                    //P=1  D=0
??choose_PD_874:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+6
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_887
// 3217       case -1:                                    //P=1  D=-1
// 3218         {
// 3219           switch(track_form)
??choose_PD_886:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_961
        BCC.W    ??choose_PD_962
        CMP      R4,#+3
        BEQ.N    ??choose_PD_963
        BCC.N    ??choose_PD_964
        B.N      ??choose_PD_962
// 3220           {
// 3221           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_961:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_962
// 3222           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_964:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_962
// 3223           case 3:
// 3224             {
// 3225               switch(position_now_low_P)
??choose_PD_963:
        LDR.W    R0,??choose_PD_873+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_965
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_966
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_967
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_968
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_969
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_970
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_971
        B.N      ??choose_PD_972
// 3226               {
// 3227               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_968:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_972
// 3228               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_967:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_972
// 3229               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_966:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_972
// 3230               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_965:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_972
// 3231               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_971:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_972
// 3232               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_970:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_972
// 3233               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_969:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
// 3234               }
// 3235             }break;
// 3236           }
// 3237         }break;
??choose_PD_972:
??choose_PD_962:
        B.N      ??choose_PD_887
// 3238       case -2:                                    //P=1  D=-2
// 3239         {
// 3240           switch(track_form)
??choose_PD_885:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_973
        BCC.W    ??choose_PD_974
        CMP      R4,#+3
        BEQ.N    ??choose_PD_975
        BCC.N    ??choose_PD_976
        B.N      ??choose_PD_974
// 3241           {
// 3242           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_973:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_974
// 3243           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_976:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_974
// 3244           case 3:
// 3245             {
// 3246               switch(position_now_low_P)
??choose_PD_975:
        LDR.W    R0,??choose_PD_873+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_977
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_978
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_979
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_980
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_981
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_982
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_983
        B.N      ??choose_PD_984
// 3247               {
// 3248               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_980:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_984
// 3249               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_979:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_984
// 3250               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_978:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_984
// 3251               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_977:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_984
// 3252               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_983:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_984
// 3253               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_982:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_984
// 3254               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_981:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
// 3255               }
// 3256             }break;
// 3257           }
// 3258         }break;
??choose_PD_984:
??choose_PD_974:
        B.N      ??choose_PD_887
// 3259       case -3:                                    //P=1  D=-3
// 3260         {
// 3261           switch(track_form)
??choose_PD_884:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_985
        BCC.W    ??choose_PD_986
        CMP      R4,#+3
        BEQ.N    ??choose_PD_987
        BCC.N    ??choose_PD_988
        B.N      ??choose_PD_986
// 3262           {
// 3263           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_985:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_986
// 3264           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_988:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_986
// 3265           case 3:
// 3266             {
// 3267               switch(position_now_low_P)
??choose_PD_987:
        LDR.N    R0,??choose_PD_873+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_989
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_990
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_991
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_992
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_993
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_994
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_995
        B.N      ??choose_PD_996
// 3268               {
// 3269               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_992:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_996
// 3270               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_991:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_996
// 3271               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_990:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_996
// 3272               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_989:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_996
// 3273               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_995:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_996
// 3274               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_994:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_996
// 3275               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_993:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
// 3276               }
// 3277             }break;
// 3278           }
// 3279         }break;
??choose_PD_996:
??choose_PD_986:
        B.N      ??choose_PD_887
// 3280       case -4:                                    //P=1  D=-4
// 3281         {
// 3282           switch(track_form)
??choose_PD_883:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_997
        BCC.W    ??choose_PD_998
        CMP      R4,#+3
        BEQ.N    ??choose_PD_999
        BCC.N    ??choose_PD_1000
        B.N      ??choose_PD_998
// 3283           {
// 3284           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_997:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_998
// 3285           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1000:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_998
// 3286           case 3:
// 3287             {
// 3288               switch(position_now_low_P)
??choose_PD_999:
        LDR.N    R0,??choose_PD_873+0x4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1001
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1002
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1003
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1004
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1005
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1006
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1007
        B.N      ??choose_PD_1008
// 3289               {
// 3290               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1004:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1008
// 3291               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1003:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1008
// 3292               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1002:
        LDR.W    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1008
// 3293               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1001:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1008
// 3294               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1007:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1008
// 3295               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1006:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1008
// 3296               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1005:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
// 3297               }
// 3298             }break;
// 3299           }
// 3300         }break;
??choose_PD_1008:
??choose_PD_998:
        B.N      ??choose_PD_887
// 3301       case -5:                                    //P=1  D=-5
// 3302         {
// 3303           switch(track_form)
??choose_PD_882:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1009
        BCC.W    ??choose_PD_1010
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1011
        BCC.N    ??choose_PD_1012
        B.N      ??choose_PD_1010
// 3304           {
// 3305           case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1009:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1010
// 3306           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1012:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1010
        Nop      
        DATA
??choose_PD_873:
        DC32     position_now_D
        DC32     position_now_low_P
        THUMB
// 3307           case 3:
// 3308             {
// 3309               switch(position_now_low_P)
??choose_PD_1011:
        LDR.W    R0,??choose_PD_1013
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1014
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1015
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1016
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1017
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1018
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1019
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1020
        B.N      ??choose_PD_1021
// 3310               {
// 3311               case 3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1017:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1021
// 3312               case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1016:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1021
// 3313               case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1015:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1021
// 3314               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1014:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1021
// 3315               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1020:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1021
// 3316               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1019:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1021
// 3317               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1018:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
// 3318               }
// 3319             }break;
// 3320           }
// 3321         }break;
??choose_PD_1021:
??choose_PD_1010:
        B.N      ??choose_PD_887
// 3322       case -6:                                    //P=1  D=-6
// 3323         {
// 3324           switch(track_form)
??choose_PD_881:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1022
        BCC.N    ??choose_PD_1023
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1024
        BCC.N    ??choose_PD_1025
        B.N      ??choose_PD_1023
// 3325           {
// 3326           case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1022:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1023
// 3327           case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1025:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1023
// 3328           case 3:
// 3329             {
// 3330               switch(position_now_low_P)
??choose_PD_1024:
        LDR.W    R0,??choose_PD_1013
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1026
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1027
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1028
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1029
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1030
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1031
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1032
        B.N      ??choose_PD_1033
// 3331               {
// 3332               case 3:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1029:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1033
// 3333               case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1028:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1033
// 3334               case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1027:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1033
// 3335               case 0:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1026:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1033
// 3336               case -1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1032:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1033
// 3337               case -2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1031:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1033
// 3338               case -3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1030:
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_960
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_960
        STRH     R0,[R1, #+4]
// 3339               }
// 3340             }break;
// 3341           }
// 3342         }break;
// 3343       }
// 3344     }break;
??choose_PD_1033:
??choose_PD_1023:
??choose_PD_887:
        B.W      ??choose_PD_40
// 3345   case 2:                                    //P=2  
// 3346     {
// 3347       switch(position_now_D)
??choose_PD_29:
        LDR.W    R0,??choose_PD_1034
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_1035
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1036
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1037
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1038
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1039
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1040
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1041
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.W    ??choose_PD_1042
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1043
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1044
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1045
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1046
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1047
        B.W      ??choose_PD_1048
        Nop      
        DATA
??choose_PD_960:
        DC32     Servo
        THUMB
// 3348       {
// 3349       case 6:                                    //P=2  D=6
// 3350         {
// 3351           switch(track_form)
??choose_PD_1041:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1049
        BCC.W    ??choose_PD_1050
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1051
        BCC.N    ??choose_PD_1052
        B.N      ??choose_PD_1050
// 3352           {
// 3353           case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1049:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1050
// 3354           case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1052:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1050
// 3355           case 3:
// 3356             {
// 3357               switch(position_now_low_P)
??choose_PD_1051:
        LDR.W    R0,??choose_PD_1013
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1053
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1054
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1055
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1056
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1057
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1058
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1059
        B.N      ??choose_PD_1060
// 3358               {
// 3359               case 3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1056:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1060
// 3360               case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1055:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1060
// 3361               case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1054:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1060
// 3362               case 0:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1053:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1060
// 3363               case -1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1059:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1060
// 3364               case -2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1058:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1060
// 3365               case -3:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1057:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
// 3366               }
// 3367             }break;
// 3368           }
// 3369         }break;
??choose_PD_1060:
??choose_PD_1050:
        B.W      ??choose_PD_1048
// 3370       case 5:                                    //P=2  D=5
// 3371         {
// 3372           switch(track_form)
??choose_PD_1040:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1061
        BCC.W    ??choose_PD_1062
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1063
        BCC.N    ??choose_PD_1064
        B.N      ??choose_PD_1062
// 3373           {
// 3374           case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1061:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1062
// 3375           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1064:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1062
// 3376           case 3:
// 3377             {
// 3378               switch(position_now_low_P)
??choose_PD_1063:
        LDR.W    R0,??choose_PD_1013
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1065
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1066
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1067
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1068
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1069
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1070
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1071
        B.N      ??choose_PD_1072
// 3379               {
// 3380               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1068:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1072
// 3381               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1067:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1072
// 3382               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1066:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1072
// 3383               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1065:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1072
// 3384               case -1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1071:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1072
// 3385               case -2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1070:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1072
// 3386               case -3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1069:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
// 3387               }
// 3388             }break;
// 3389           }
// 3390         }break;
??choose_PD_1072:
??choose_PD_1062:
        B.W      ??choose_PD_1048
// 3391       case 4:                                    //P=2  D=4
// 3392         {
// 3393           switch(track_form)
??choose_PD_1039:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1073
        BCC.W    ??choose_PD_1074
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1075
        BCC.N    ??choose_PD_1076
        B.N      ??choose_PD_1074
// 3394           {
// 3395           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1073:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1074
// 3396           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1076:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1074
// 3397           case 3:
// 3398             {
// 3399               switch(position_now_low_P)
??choose_PD_1075:
        LDR.W    R0,??choose_PD_1013
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1077
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1078
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1079
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1080
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1081
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1082
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1083
        B.N      ??choose_PD_1084
// 3400               {
// 3401               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1080:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1084
// 3402               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1079:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1084
// 3403               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1078:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1084
// 3404               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1077:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1084
// 3405               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1083:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1084
// 3406               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1082:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1084
// 3407               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1081:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
// 3408               }
// 3409             }break;
// 3410           }
// 3411         }break;
??choose_PD_1084:
??choose_PD_1074:
        B.W      ??choose_PD_1048
// 3412       case 3:                                    //P=2  D=3
// 3413         {
// 3414           switch(track_form)
??choose_PD_1038:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1085
        BCC.W    ??choose_PD_1086
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1087
        BCC.N    ??choose_PD_1088
        B.N      ??choose_PD_1086
// 3415           {
// 3416           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1085:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1086
// 3417           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1088:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1086
// 3418           case 3:
// 3419             {
// 3420               switch(position_now_low_P)
??choose_PD_1087:
        LDR.N    R0,??choose_PD_1013
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1089
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1090
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1091
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1092
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1093
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1094
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1095
        B.N      ??choose_PD_1096
// 3421               {
// 3422               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1092:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1096
// 3423               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1091:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1096
// 3424               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1090:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1096
// 3425               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1089:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1096
// 3426               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1095:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1096
// 3427               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1094:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1096
// 3428               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1093:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
// 3429               }
// 3430             }break;
// 3431           }
// 3432         }break;
??choose_PD_1096:
??choose_PD_1086:
        B.W      ??choose_PD_1048
// 3433       case 2:                                    //P=2  D=2
// 3434         {
// 3435           switch(track_form)
??choose_PD_1037:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1097
        BCC.W    ??choose_PD_1098
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1099
        BCC.N    ??choose_PD_1100
        B.N      ??choose_PD_1098
// 3436           {
// 3437           case 1:Servo.P+=1;Servo.D-=0;break;
??choose_PD_1097:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDR.W    R1,??choose_PD_1034+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1098
// 3438           case 2:Servo.P+=1;Servo.D-=0;break;
??choose_PD_1100:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDR.W    R1,??choose_PD_1034+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1098
// 3439           case 3:
// 3440             {
// 3441               switch(position_now_low_P)
??choose_PD_1099:
        LDR.N    R0,??choose_PD_1013
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1101
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1102
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1103
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1104
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1105
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1106
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1107
        B.N      ??choose_PD_1108
// 3442               {
// 3443               case 3:Servo.P+=1;Servo.D+=0;break;
??choose_PD_1104:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDR.W    R1,??choose_PD_1034+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1108
// 3444               case 2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_1103:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDR.W    R1,??choose_PD_1034+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1108
// 3445               case 1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_1102:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDR.W    R1,??choose_PD_1034+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1108
// 3446               case 0:Servo.P+=1;Servo.D+=0;break;
??choose_PD_1101:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDR.W    R1,??choose_PD_1034+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1108
// 3447               case -1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_1107:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDR.W    R1,??choose_PD_1034+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1108
// 3448               case -2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_1106:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDR.W    R1,??choose_PD_1034+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1108
// 3449               case -3:Servo.P+=1;Servo.D+=0;break;
??choose_PD_1105:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDR.W    R1,??choose_PD_1034+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 3450               }
// 3451             }break;
// 3452           }
// 3453         }break;
??choose_PD_1108:
??choose_PD_1098:
        B.W      ??choose_PD_1048
// 3454       case 1:                                    //P=2  D=1
// 3455         {
// 3456           switch(track_form)
??choose_PD_1036:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1109
        BCC.W    ??choose_PD_1110
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1111
        BCC.N    ??choose_PD_1112
        B.N      ??choose_PD_1110
// 3457           {
// 3458           case 1:Servo.P+=1;Servo.D-=1;break;
??choose_PD_1109:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1110
// 3459           case 2:Servo.P+=1;Servo.D-=1;break;
??choose_PD_1112:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1110
// 3460           case 3:
// 3461             {
// 3462               switch(position_now_low_P)
??choose_PD_1111:
        LDR.N    R0,??choose_PD_1013
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1113
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1114
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1115
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1116
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1117
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1118
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1119
        B.N      ??choose_PD_1120
        DATA
??choose_PD_1013:
        DC32     position_now_low_P
        THUMB
// 3463               {
// 3464               case 3:Servo.P+=1;Servo.D-=1;break;
??choose_PD_1116:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1120
// 3465               case 2:Servo.P+=1;Servo.D-=1;break;
??choose_PD_1115:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1120
// 3466               case 1:Servo.P+=1;Servo.D-=1;break;
??choose_PD_1114:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1120
// 3467               case 0:Servo.P+=1;Servo.D-=1;break;
??choose_PD_1113:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1120
// 3468               case -1:Servo.P+=1;Servo.D-=1;break;
??choose_PD_1119:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1120
// 3469               case -2:Servo.P+=1;Servo.D-=1;break;
??choose_PD_1118:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1120
// 3470               case -3:Servo.P+=1;Servo.D-=1;break;
??choose_PD_1117:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
// 3471               }
// 3472             }break;
// 3473           }
// 3474         }break;
??choose_PD_1120:
??choose_PD_1110:
        B.N      ??choose_PD_1048
// 3475       case 0:Servo.P+=1;break;                                    //P=2  D=0
??choose_PD_1035:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_1048
// 3476       case -1:                                    //P=2  D=-1
// 3477         {
// 3478           switch(track_form)
??choose_PD_1047:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1121
        BCC.W    ??choose_PD_1122
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1123
        BCC.N    ??choose_PD_1124
        B.N      ??choose_PD_1122
// 3479           {
// 3480           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1121:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1122
// 3481           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1124:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1122
// 3482           case 3:
// 3483             {
// 3484               switch(position_now_low_P)
??choose_PD_1123:
        LDR.W    R0,??choose_PD_1125
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1126
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1127
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1128
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1129
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1130
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1131
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1132
        B.N      ??choose_PD_1133
// 3485               {
// 3486               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1129:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1133
// 3487               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1128:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1133
// 3488               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1127:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1133
// 3489               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1126:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1133
// 3490               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1132:
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1133
// 3491               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1131:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1133
// 3492               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1130:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
// 3493               }
// 3494             }break;
// 3495           }
// 3496         }break;
??choose_PD_1133:
??choose_PD_1122:
        B.N      ??choose_PD_1048
// 3497       case -2:                                    //P=2  D=-2
// 3498         {
// 3499           switch(track_form)
??choose_PD_1046:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1134
        BCC.N    ??choose_PD_1135
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1136
        BCC.N    ??choose_PD_1137
        B.N      ??choose_PD_1135
// 3500           {
// 3501           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1134:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1135
// 3502           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1137:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1135
// 3503           case 3:
// 3504             {
// 3505               switch(position_now_low_P)
??choose_PD_1136:
        LDR.W    R0,??choose_PD_1125
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1138
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1139
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1140
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1141
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1142
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1143
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1144
        B.N      ??choose_PD_1145
// 3506               {
// 3507               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1141:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1145
// 3508               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1140:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1145
// 3509               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1139:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1145
// 3510               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1138:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1145
// 3511               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1144:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1145
// 3512               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1143:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1145
// 3513               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1142:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
// 3514               }
// 3515             }break;
// 3516           }
// 3517         }break;
??choose_PD_1145:
??choose_PD_1135:
        B.N      ??choose_PD_1048
// 3518       case -3:                                    //P=2  D=-3
// 3519         {
// 3520           switch(track_form)
??choose_PD_1045:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1146
        BCC.N    ??choose_PD_1147
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1148
        BCC.N    ??choose_PD_1149
        B.N      ??choose_PD_1147
// 3521           {
// 3522           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1146:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1147
// 3523           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1149:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1147
// 3524           case 3:
// 3525             {
// 3526               switch(position_now_low_P)
??choose_PD_1148:
        LDR.W    R0,??choose_PD_1125
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1150
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1151
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1152
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1153
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1154
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1155
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1156
        B.N      ??choose_PD_1157
// 3527               {
// 3528               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1153:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1157
// 3529               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1152:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1157
// 3530               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1151:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1157
// 3531               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1150:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1157
// 3532               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1156:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1157
// 3533               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1155:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1157
// 3534               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1154:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
// 3535               }
// 3536             }break;
// 3537           }
// 3538         }break;
??choose_PD_1157:
??choose_PD_1147:
        B.N      ??choose_PD_1048
// 3539       case -4:                                    //P=2  D=-4
// 3540         {
// 3541           switch(track_form)
??choose_PD_1044:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1158
        BCC.W    ??choose_PD_1159
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1160
        BCC.N    ??choose_PD_1161
        B.N      ??choose_PD_1159
// 3542           {
// 3543           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1158:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1159
// 3544           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1161:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1159
// 3545           case 3:
// 3546             {
// 3547               switch(position_now_low_P)
??choose_PD_1160:
        LDR.W    R0,??choose_PD_1125
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1162
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1163
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1164
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1165
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1166
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1167
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1168
        B.N      ??choose_PD_1169
// 3548               {
// 3549               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1165:
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1034+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1034+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1169
        Nop      
        DATA
??choose_PD_1034:
        DC32     position_now_D
        DC32     Servo
        THUMB
// 3550               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1164:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1169
// 3551               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1163:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1169
// 3552               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1162:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1169
// 3553               case -1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1168:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1169
// 3554               case -2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1167:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1169
// 3555               case -3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_1166:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
// 3556               }
// 3557             }break;
// 3558           }
// 3559         }break;
??choose_PD_1169:
??choose_PD_1159:
        B.N      ??choose_PD_1048
// 3560       case -5:                                    //P=2  D=-5
// 3561         {
// 3562           switch(track_form)
??choose_PD_1043:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1171
        BCC.W    ??choose_PD_1172
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1173
        BCC.N    ??choose_PD_1174
        B.N      ??choose_PD_1172
// 3563           {
// 3564           case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1171:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1172
// 3565           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1174:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1172
// 3566           case 3:
// 3567             {
// 3568               switch(position_now_low_P)
??choose_PD_1173:
        LDR.W    R0,??choose_PD_1125
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1175
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1176
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1177
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1178
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1179
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1180
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1181
        B.N      ??choose_PD_1182
// 3569               {
// 3570               case 3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1178:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1182
// 3571               case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1177:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1182
// 3572               case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1176:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1182
// 3573               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1175:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1182
// 3574               case -1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1181:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1182
// 3575               case -2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1180:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1182
// 3576               case -3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_1179:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
// 3577               }
// 3578             }break;
// 3579           }
// 3580         }break;
??choose_PD_1182:
??choose_PD_1172:
        B.N      ??choose_PD_1048
// 3581       case -6:                                    //P=2  D=-6
// 3582         {
// 3583           switch(track_form)
??choose_PD_1042:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1183
        BCC.W    ??choose_PD_1184
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1185
        BCC.N    ??choose_PD_1186
        B.N      ??choose_PD_1184
// 3584           {
// 3585           case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1183:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1184
// 3586           case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1186:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1184
// 3587           case 3:
// 3588             {
// 3589               switch(position_now_low_P)
??choose_PD_1185:
        LDR.W    R0,??choose_PD_1125
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1187
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1188
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1189
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1190
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1191
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1192
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1193
        B.N      ??choose_PD_1194
// 3590               {
// 3591               case 3:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1190:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1194
// 3592               case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1189:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1194
// 3593               case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1188:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1194
// 3594               case 0:Servo.P+=1;Servo.D+=4;break;
??choose_PD_1187:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1194
// 3595               case -1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1193:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1194
// 3596               case -2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1192:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1194
// 3597               case -3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_1191:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
// 3598               }
// 3599             }break;
// 3600           }
// 3601         }break;
// 3602       }
// 3603     }break;
??choose_PD_1194:
??choose_PD_1184:
??choose_PD_1048:
        B.W      ??choose_PD_40
// 3604   case 3:                                    //P=3  D=6
// 3605     {
// 3606       switch(position_now_D)
??choose_PD_30:
        LDR.W    R0,??choose_PD_1195
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_1196
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1197
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1198
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1199
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1200
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1201
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1202
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.W    ??choose_PD_1203
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1204
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1205
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1206
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1207
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1208
        B.W      ??choose_PD_1209
// 3607       {
// 3608       case 6:
// 3609         {
// 3610           switch(track_form)
??choose_PD_1202:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1210
        BCC.W    ??choose_PD_1211
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1212
        BCC.N    ??choose_PD_1213
        B.N      ??choose_PD_1211
// 3611           {
// 3612           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1210:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1211
// 3613           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1213:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1211
// 3614           case 3:
// 3615             {
// 3616               switch(position_now_low_P)
??choose_PD_1212:
        LDR.N    R0,??choose_PD_1125
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1214
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1215
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1216
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1217
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1218
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1219
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1220
        B.N      ??choose_PD_1221
// 3617               {
// 3618               case 3:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1217:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1221
// 3619               case 2:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1216:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1221
// 3620               case 1:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1215:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1221
// 3621               case 0:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1214:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1221
// 3622               case -1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1220:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1221
// 3623               case -2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1219:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1221
// 3624               case -3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1218:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
// 3625               }
// 3626             }break;
// 3627           }
// 3628         }break;
??choose_PD_1221:
??choose_PD_1211:
        B.W      ??choose_PD_1209
// 3629       case 5:                                   //P=3  D=5
// 3630         {
// 3631           switch(track_form)
??choose_PD_1201:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1222
        BCC.W    ??choose_PD_1223
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1224
        BCC.N    ??choose_PD_1225
        B.N      ??choose_PD_1223
// 3632           {
// 3633           case 1:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1222:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1223
// 3634           case 2:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1225:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1223
// 3635           case 3:
// 3636             {
// 3637               switch(position_now_low_P)
??choose_PD_1224:
        LDR.N    R0,??choose_PD_1125
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1226
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1227
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1228
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1229
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1230
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1231
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1232
        B.N      ??choose_PD_1233
// 3638               {
// 3639               case 3:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1229:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1233
// 3640               case 2:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1228:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1233
// 3641               case 1:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1227:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1233
// 3642               case 0:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1226:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1233
// 3643               case -1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1232:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1233
// 3644               case -2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1231:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1233
// 3645               case -3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1230:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
// 3646               }
// 3647             }break;
// 3648           }
// 3649         }break;
??choose_PD_1233:
??choose_PD_1223:
        B.W      ??choose_PD_1209
// 3650       case 4:                                   //P=3  D=4
// 3651         {
// 3652           switch(track_form)
??choose_PD_1200:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1234
        BCC.W    ??choose_PD_1235
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1236
        BCC.N    ??choose_PD_1237
        B.N      ??choose_PD_1235
// 3653           {
// 3654           case 1:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1234:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1235
// 3655           case 2:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1237:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1235
// 3656           case 3:
// 3657             {
// 3658               switch(position_now_low_P)
??choose_PD_1236:
        LDR.N    R0,??choose_PD_1125
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1238
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1239
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1240
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1241
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1242
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1243
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1244
        B.N      ??choose_PD_1245
// 3659               {
// 3660               case 3:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1241:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1245
// 3661               case 2:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1240:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1245
// 3662               case 1:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1239:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1245
// 3663               case 0:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1238:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1245
// 3664               case -1:Servo.P+=2;Servo.D-=0;break;
??choose_PD_1244:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1245
// 3665               case -2:Servo.P+=2;Servo.D-=0;break;
??choose_PD_1243:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1245
// 3666               case -3:Servo.P+=2;Servo.D-=0;break;
??choose_PD_1242:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1170
        LDR.W    R1,??choose_PD_1170
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 3667               }
// 3668             }break;
// 3669           }
// 3670         }break;
??choose_PD_1245:
??choose_PD_1235:
        B.W      ??choose_PD_1209
        Nop      
        DATA
??choose_PD_1125:
        DC32     position_now_low_P
        THUMB
// 3671       case 3:                                   //P=3  D=3
// 3672         {
// 3673           switch(track_form)
??choose_PD_1199:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1246
        BCC.N    ??choose_PD_1247
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1248
        BCC.N    ??choose_PD_1249
        B.N      ??choose_PD_1247
// 3674           {
// 3675           case 1:Servo.P+=2;Servo.D-=2;break;
??choose_PD_1246:
        LDR.W    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1247
// 3676           case 2:Servo.P+=2;Servo.D-=2;break;
??choose_PD_1249:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1247
// 3677           case 3:
// 3678             {
// 3679               switch(position_now_low_P)
??choose_PD_1248:
        LDR.W    R0,??choose_PD_1250
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1251
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1252
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1253
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1254
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1255
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1256
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1257
        B.N      ??choose_PD_1258
// 3680               {
// 3681               case 3:Servo.P+=2;Servo.D-=2;break;
??choose_PD_1254:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1258
// 3682               case 2:Servo.P+=2;Servo.D-=2;break;
??choose_PD_1253:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1258
// 3683               case 1:Servo.P+=2;Servo.D-=2;break;
??choose_PD_1252:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1258
// 3684               case 0:Servo.P+=2;Servo.D-=2;break;
??choose_PD_1251:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1258
// 3685               case -1:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1257:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1258
// 3686               case -2:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1256:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1258
// 3687               case -3:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1255:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
// 3688               }
// 3689             }break;
// 3690           }
// 3691         }break;
??choose_PD_1258:
??choose_PD_1247:
        B.W      ??choose_PD_1209
// 3692       case 2:                                   //P=3  D=2
// 3693         {
// 3694           switch(track_form)
??choose_PD_1198:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1259
        BCC.N    ??choose_PD_1260
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1261
        BCC.N    ??choose_PD_1262
        B.N      ??choose_PD_1260
// 3695           {
// 3696           case 1:Servo.P+=2;Servo.D-=3;break;
??choose_PD_1259:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1260
// 3697           case 2:Servo.P+=2;Servo.D-=3;break;
??choose_PD_1262:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1260
// 3698           case 3:Servo.P+=2;Servo.D-=3;break;
??choose_PD_1261:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
// 3699             {
// 3700               switch(position_now_low_P)
// 3701               {
// 3702               case 3:Servo.P+=2;Servo.D-=3;break;
// 3703               case 2:Servo.P+=2;Servo.D-=3;break;
// 3704               case 1:Servo.P+=2;Servo.D-=3;break;
// 3705               case 0:Servo.P+=2;Servo.D-=3;break;
// 3706               case -1:Servo.P+=2;Servo.D-=3;break;
// 3707               case -2:Servo.P+=2;Servo.D-=3;break;
// 3708               case -3:Servo.P+=2;Servo.D-=3;break;
// 3709               }
// 3710             }break;
// 3711           }
// 3712         }break;
??choose_PD_1260:
        B.W      ??choose_PD_1209
// 3713       case 1:                                   //P=3  D=1
// 3714         {
// 3715           switch(track_form)
??choose_PD_1197:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1263
        BCC.N    ??choose_PD_1264
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1265
        BCC.N    ??choose_PD_1266
        B.N      ??choose_PD_1264
// 3716           {
// 3717           case 1:Servo.P+=2;Servo.D-=4;break;
??choose_PD_1263:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1264
// 3718           case 2:Servo.P+=2;Servo.D-=4;break;
??choose_PD_1266:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1264
// 3719           case 3:
// 3720             {
// 3721               switch(position_now_low_P)
??choose_PD_1265:
        LDR.W    R0,??choose_PD_1250
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1267
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1268
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1269
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1270
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1271
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1272
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1273
        B.N      ??choose_PD_1274
// 3722               {
// 3723               case 3:Servo.P+=2;Servo.D-=4;break;
??choose_PD_1270:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1274
// 3724               case 2:Servo.P+=2;Servo.D-=4;break;
??choose_PD_1269:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1274
// 3725               case 1:Servo.P+=2;Servo.D-=4;break;
??choose_PD_1268:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1274
// 3726               case 0:Servo.P+=2;Servo.D-=4;break;
??choose_PD_1267:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1274
// 3727               case -1:Servo.P+=2;Servo.D-=4;break;
??choose_PD_1273:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1274
// 3728               case -2:Servo.P+=2;Servo.D-=4;break;
??choose_PD_1272:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1274
// 3729               case -3:Servo.P+=2;Servo.D-=4;break;
??choose_PD_1271:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
// 3730               }
// 3731             }break;
// 3732           }
// 3733         }break;
??choose_PD_1274:
??choose_PD_1264:
        B.N      ??choose_PD_1209
// 3734       case 0:Servo.P+=2;break;                                   //P=3  D=0
??choose_PD_1196:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_1209
// 3735       case -1:                                   //P=3  D=-1
// 3736         {
// 3737           switch(track_form)
??choose_PD_1208:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1275
        BCC.W    ??choose_PD_1276
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1277
        BCC.N    ??choose_PD_1278
        B.N      ??choose_PD_1276
// 3738           {
// 3739           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1275:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1276
// 3740           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1278:
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1170
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1170
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1276
// 3741           case 3:
// 3742             {
// 3743               switch(position_now_low_P)
??choose_PD_1277:
        LDR.W    R0,??choose_PD_1250
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1279
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1280
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1281
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1282
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1283
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1284
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1285
        B.N      ??choose_PD_1286
        DATA
??choose_PD_1170:
        DC32     Servo
        THUMB
// 3744               {
// 3745               case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1282:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1286
// 3746               case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1281:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1286
// 3747               case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1280:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1286
// 3748               case 0:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1279:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1286
// 3749               case -1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1285:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1286
// 3750               case -2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1284:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1286
// 3751               case -3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1283:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3752               }
// 3753             }break;
// 3754           }
// 3755         }break;
??choose_PD_1286:
??choose_PD_1276:
        B.N      ??choose_PD_1209
// 3756       case -2:                                   //P=3  D=-2
// 3757         {
// 3758           switch(track_form)
??choose_PD_1207:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1288
        BCC.W    ??choose_PD_1289
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1290
        BCC.N    ??choose_PD_1291
        B.N      ??choose_PD_1289
// 3759           {
// 3760           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1288:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1289
// 3761           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1291:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1289
// 3762           case 3:
// 3763             {
// 3764               switch(position_now_low_P)
??choose_PD_1290:
        LDR.W    R0,??choose_PD_1250
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1292
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1293
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1294
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1295
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1296
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1297
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1298
        B.N      ??choose_PD_1299
// 3765               {
// 3766               case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1295:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1299
// 3767               case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1294:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1299
// 3768               case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1293:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1299
// 3769               case 0:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1292:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1299
// 3770               case -1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1298:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1299
// 3771               case -2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1297:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1299
// 3772               case -3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1296:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3773               }
// 3774             }break;
// 3775           }
// 3776         }break;
??choose_PD_1299:
??choose_PD_1289:
        B.N      ??choose_PD_1209
// 3777       case -3:                                   //P=3  D=-3
// 3778         {
// 3779           switch(track_form)
??choose_PD_1206:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1300
        BCC.W    ??choose_PD_1301
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1302
        BCC.N    ??choose_PD_1303
        B.N      ??choose_PD_1301
// 3780           {
// 3781           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1300:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1301
// 3782           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1303:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1301
// 3783           case 3:
// 3784             {
// 3785               switch(position_now_low_P)
??choose_PD_1302:
        LDR.W    R0,??choose_PD_1250
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1304
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1305
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1306
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1307
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1308
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1309
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1310
        B.N      ??choose_PD_1311
// 3786               {
// 3787               case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1307:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1311
// 3788               case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1306:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1311
// 3789               case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1305:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1311
// 3790               case 0:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1304:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1311
// 3791               case -1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1310:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1311
// 3792               case -2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1309:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1311
// 3793               case -3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1308:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3794               }
// 3795             }break;
// 3796           }
// 3797         }break;
??choose_PD_1311:
??choose_PD_1301:
        B.N      ??choose_PD_1209
// 3798       case -4:                                   //P=3  D=-4
// 3799         {
// 3800           switch(track_form)
??choose_PD_1205:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1312
        BCC.W    ??choose_PD_1313
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1314
        BCC.N    ??choose_PD_1315
        B.N      ??choose_PD_1313
// 3801           {
// 3802           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1312:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1313
// 3803           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1315:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1313
        DATA
??choose_PD_1195:
        DC32     position_now_D
        THUMB
// 3804           case 3:
// 3805             {
// 3806               switch(position_now_low_P)
??choose_PD_1314:
        LDR.N    R0,??choose_PD_1250
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1316
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1317
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1318
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1319
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1320
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1321
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1322
        B.N      ??choose_PD_1323
// 3807               {
// 3808               case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1319:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1323
// 3809               case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1318:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1323
// 3810               case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1317:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1323
// 3811               case 0:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1316:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1323
// 3812               case -1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1322:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1323
// 3813               case -2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1321:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1323
// 3814               case -3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1320:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3815               }
// 3816             }break;
// 3817           }
// 3818         }break;
??choose_PD_1323:
??choose_PD_1313:
        B.N      ??choose_PD_1209
// 3819       case -5:                                   //P=3  D=-5
// 3820         {
// 3821           switch(track_form)
??choose_PD_1204:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1324
        BCC.W    ??choose_PD_1325
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1326
        BCC.N    ??choose_PD_1327
        B.N      ??choose_PD_1325
// 3822           {
// 3823           case 1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1324:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1325
// 3824           case 2:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1327:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1325
// 3825           case 3:
// 3826             {
// 3827               switch(position_now_low_P)
??choose_PD_1326:
        LDR.N    R0,??choose_PD_1250
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1328
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1329
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1330
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1331
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1332
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1333
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1334
        B.N      ??choose_PD_1335
// 3828               {
// 3829               case 3:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1331:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1335
// 3830               case 2:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1330:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1335
// 3831               case 1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1329:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1335
// 3832               case 0:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1328:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1335
// 3833               case -1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1334:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1335
// 3834               case -2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1333:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1335
// 3835               case -3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1332:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3836               }
// 3837             }break;
// 3838           }
// 3839         }break;
??choose_PD_1335:
??choose_PD_1325:
        B.N      ??choose_PD_1209
// 3840       case -6:                                   //P=3  D=-6
// 3841         {
// 3842           switch(track_form)
??choose_PD_1203:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1336
        BCC.W    ??choose_PD_1337
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1338
        BCC.N    ??choose_PD_1339
        B.N      ??choose_PD_1337
// 3843           {
// 3844           case 1:Servo.P+=2;Servo.D+=4;break;
??choose_PD_1336:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1337
// 3845           case 2:Servo.P+=2;Servo.D+=4;break;
??choose_PD_1339:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1337
// 3846           case 3:
// 3847             {
// 3848               switch(position_now_low_P)
??choose_PD_1338:
        LDR.N    R0,??choose_PD_1250
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_1340
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1341
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1342
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1343
        MVNS     R1,#+5
        SUBS     R0,R0,R1
        BEQ.N    ??choose_PD_1344
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1345
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1346
        B.N      ??choose_PD_1347
        DATA
??choose_PD_1250:
        DC32     position_now_low_P
        THUMB
// 3849               {
// 3850               case 3:Servo.P+=2;Servo.D+=4;break;
??choose_PD_1343:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1347
// 3851               case 2:Servo.P+=2;Servo.D+=4;break;
??choose_PD_1342:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1347
// 3852               case 1:Servo.P+=2;Servo.D+=4;break;
??choose_PD_1341:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1347
// 3853               case 0:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1340:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1347
// 3854               case -1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1346:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1347
// 3855               case -2:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1345:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1347
// 3856               case -3:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1344:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3857               }
// 3858             }break;
// 3859           }
// 3860         }break;
// 3861       }
// 3862     }break;
??choose_PD_1347:
??choose_PD_1337:
??choose_PD_1209:
        B.W      ??choose_PD_40
// 3863   case 4:                                   //P=4  D=6
// 3864     {
// 3865       switch(position_now_D)
??choose_PD_31:
        LDR.W    R0,??choose_PD_1348
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_1349
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1350
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1351
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1352
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1353
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1354
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1355
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.W    ??choose_PD_1356
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1357
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1358
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1359
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1360
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1361
        B.N      ??choose_PD_1362
// 3866       {
// 3867       case 6:
// 3868         {
// 3869           switch(track_form)
??choose_PD_1355:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1363
        BCC.N    ??choose_PD_1364
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1365
        BCC.N    ??choose_PD_1366
        B.N      ??choose_PD_1364
// 3870           {
// 3871           case 1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1363:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1364
// 3872           case 2:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1366:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1364
// 3873           case 3:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1365:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3874           }
// 3875         }break;
??choose_PD_1364:
        B.N      ??choose_PD_1362
// 3876       case 5:                                   //P=4  D=5
// 3877         {
// 3878           switch(track_form)
??choose_PD_1354:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1367
        BCC.N    ??choose_PD_1368
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1369
        BCC.N    ??choose_PD_1370
        B.N      ??choose_PD_1368
// 3879           {
// 3880           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1367:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1368
// 3881           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1370:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1368
// 3882           case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1369:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3883           }
// 3884         }break;
??choose_PD_1368:
        B.N      ??choose_PD_1362
// 3885       case 4:                                   //P=4  D=4
// 3886         {
// 3887           switch(track_form)
??choose_PD_1353:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1371
        BCC.N    ??choose_PD_1372
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1373
        BCC.N    ??choose_PD_1374
        B.N      ??choose_PD_1372
// 3888           {
// 3889           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1371:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1372
// 3890           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1374:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1372
// 3891           case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1373:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3892           }
// 3893         }break;
??choose_PD_1372:
        B.N      ??choose_PD_1362
// 3894       case 3:                                   //P=4  D=3
// 3895         {
// 3896           switch(track_form)
??choose_PD_1352:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1375
        BCC.N    ??choose_PD_1376
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1377
        BCC.N    ??choose_PD_1378
        B.N      ??choose_PD_1376
// 3897           {
// 3898           case 1:Servo.P+=2;Servo.D-=0;break;
??choose_PD_1375:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDR.W    R1,??choose_PD_1287
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1376
// 3899           case 2:Servo.P+=2;Servo.D-=0;break;
??choose_PD_1378:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDR.W    R1,??choose_PD_1287
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1376
// 3900           case 3:Servo.P+=2;Servo.D+=0;break;
??choose_PD_1377:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDR.W    R1,??choose_PD_1287
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 3901           }
// 3902         }break;
??choose_PD_1376:
        B.N      ??choose_PD_1362
// 3903       case 2:                                   //P=4  D=2
// 3904         {
// 3905           switch(track_form)
??choose_PD_1351:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1379
        BCC.N    ??choose_PD_1380
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1381
        BCC.N    ??choose_PD_1382
        B.N      ??choose_PD_1380
// 3906           {
// 3907           case 1:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1379:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1380
// 3908           case 2:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1382:
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1380
// 3909           case 3:Servo.P+=2;Servo.D-=1;break;
??choose_PD_1381:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3910           }
// 3911         }break;
??choose_PD_1380:
        B.N      ??choose_PD_1362
// 3912       case 1:                                   //P=4  D=1
// 3913         {
// 3914           switch(track_form)
??choose_PD_1350:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1383
        BCC.N    ??choose_PD_1384
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1385
        BCC.N    ??choose_PD_1386
        B.N      ??choose_PD_1384
// 3915           {
// 3916           case 1:Servo.P+=2;Servo.D-=2;break;
??choose_PD_1383:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1384
// 3917           case 2:Servo.P+=2;Servo.D-=2;break;
??choose_PD_1386:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1384
// 3918           case 3:Servo.P+=2;Servo.D-=2;break;
??choose_PD_1385:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3919           }
// 3920         }break;
??choose_PD_1384:
        B.N      ??choose_PD_1362
// 3921       case 0:Servo.P+=2;break;                                   //P=4  D=0
??choose_PD_1349:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_1362
// 3922       case -1:                                   //P=4  D=-1
// 3923         {
// 3924           switch(track_form)
??choose_PD_1361:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1387
        BCC.N    ??choose_PD_1388
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1389
        BCC.N    ??choose_PD_1390
        B.N      ??choose_PD_1388
// 3925           {
// 3926           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1387:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1388
// 3927           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1390:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1388
// 3928           case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1389:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3929           }
// 3930         }break;
??choose_PD_1388:
        B.N      ??choose_PD_1362
// 3931       case -2:                                   //P=4  D=-2
// 3932         {
// 3933           switch(track_form)
??choose_PD_1360:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1391
        BCC.N    ??choose_PD_1392
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1393
        BCC.N    ??choose_PD_1394
        B.N      ??choose_PD_1392
// 3934           {
// 3935           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1391:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1392
// 3936           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1394:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1392
// 3937           case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_1393:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3938           }
// 3939         }break;
??choose_PD_1392:
        B.N      ??choose_PD_1362
// 3940       case -3:                                   //P=4  D=-3
// 3941         {
// 3942           switch(track_form)
??choose_PD_1359:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1395
        BCC.N    ??choose_PD_1396
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1397
        BCC.N    ??choose_PD_1398
        B.N      ??choose_PD_1396
// 3943           {
// 3944           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1395:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1396
// 3945           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1398:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1396
// 3946           case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1397:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3947           }
// 3948         }break;
??choose_PD_1396:
        B.N      ??choose_PD_1362
// 3949       case -4:                                   //P=4  D=-4
// 3950         {
// 3951           switch(track_form)
??choose_PD_1358:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1399
        BCC.N    ??choose_PD_1400
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1401
        BCC.N    ??choose_PD_1402
        B.N      ??choose_PD_1400
// 3952           {
// 3953           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1399:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1400
// 3954           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1402:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1400
// 3955           case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_1401:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3956           }
// 3957         }break;
??choose_PD_1400:
        B.N      ??choose_PD_1362
// 3958       case -5:                                   //P=4  D=-5
// 3959         {
// 3960           switch(track_form)
??choose_PD_1357:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1403
        BCC.N    ??choose_PD_1404
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1405
        BCC.N    ??choose_PD_1406
        B.N      ??choose_PD_1404
// 3961           {
// 3962           case 1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1403:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1404
// 3963           case 2:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1406:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1404
// 3964           case 3:Servo.P+=2;Servo.D+=3;break;
??choose_PD_1405:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3965           }
// 3966         }break;
??choose_PD_1404:
        B.N      ??choose_PD_1362
// 3967       case -6:                                   //P=4  D=-6
// 3968         {
// 3969           switch(track_form)
??choose_PD_1356:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1407
        BCC.N    ??choose_PD_1408
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1409
        BCC.N    ??choose_PD_1410
        B.N      ??choose_PD_1408
// 3970           {
// 3971           case 1:Servo.P+=2;Servo.D+=4;break;
??choose_PD_1407:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1408
// 3972           case 2:Servo.P+=2;Servo.D+=4;break;
??choose_PD_1410:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1408
// 3973           case 3:Servo.P+=2;Servo.D+=4;break;
??choose_PD_1409:
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_1287
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_1287
        STRH     R0,[R1, #+4]
// 3974           }
// 3975         }break;
// 3976       }
// 3977     }break;
??choose_PD_1408:
??choose_PD_1362:
        B.W      ??choose_PD_40
// 3978   case 5:                                   //P=5  D=6
// 3979     {
// 3980       switch(position_now_D)
??choose_PD_32:
        LDR.W    R0,??choose_PD_1348
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_1411
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1412
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1413
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1414
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1415
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1416
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1417
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.W    ??choose_PD_1418
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1419
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1420
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1421
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1422
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1423
        B.N      ??choose_PD_1424
        DATA
??choose_PD_1287:
        DC32     Servo
        THUMB
// 3981       {
// 3982       case 6:
// 3983         {
// 3984           switch(track_form)
??choose_PD_1417:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1425
        BCC.N    ??choose_PD_1426
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1427
        BCC.N    ??choose_PD_1428
        B.N      ??choose_PD_1426
// 3985           {
// 3986           case 1:Servo.P+=4;Servo.D+=1;break;
??choose_PD_1425:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1426
// 3987           case 2:Servo.P+=4;Servo.D+=1;break;
??choose_PD_1428:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1426
// 3988           case 3:Servo.P+=4;Servo.D+=1;break;
??choose_PD_1427:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 3989           }
// 3990         }break;
??choose_PD_1426:
        B.N      ??choose_PD_1424
// 3991       case 5:                                   //P=5  D=5
// 3992         {
// 3993           switch(track_form)
??choose_PD_1416:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1429
        BCC.N    ??choose_PD_1430
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1431
        BCC.N    ??choose_PD_1432
        B.N      ??choose_PD_1430
// 3994           {
// 3995           case 1:Servo.P+=4;Servo.D+=0;break;
??choose_PD_1429:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDR.W    R1,??DataTable64
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1430
// 3996           case 2:Servo.P+=4;Servo.D+=0;break;
??choose_PD_1432:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDR.W    R1,??DataTable64
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1430
// 3997           case 3:Servo.P+=4;Servo.D+=0;break;
??choose_PD_1431:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDR.W    R1,??DataTable64
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 3998           }
// 3999         }break;
??choose_PD_1430:
        B.N      ??choose_PD_1424
// 4000       case 4:                                   //P=5  D=4
// 4001         {
// 4002           switch(track_form)
??choose_PD_1415:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1433
        BCC.N    ??choose_PD_1434
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1435
        BCC.N    ??choose_PD_1436
        B.N      ??choose_PD_1434
// 4003           {
// 4004           case 1:Servo.P+=4;Servo.D-=1;break;
??choose_PD_1433:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1434
// 4005           case 2:Servo.P+=4;Servo.D-=1;break;
??choose_PD_1436:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1434
// 4006           case 3:Servo.P+=4;Servo.D-=1;break;
??choose_PD_1435:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4007           }
// 4008         }break;
??choose_PD_1434:
        B.N      ??choose_PD_1424
// 4009       case 3:                                   //P=5  D=3
// 4010         {
// 4011           switch(track_form)
??choose_PD_1414:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1437
        BCC.N    ??choose_PD_1438
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1439
        BCC.N    ??choose_PD_1440
        B.N      ??choose_PD_1438
// 4012           {
// 4013           case 1:Servo.P+=4;Servo.D-=2;break;
??choose_PD_1437:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1438
// 4014           case 2:Servo.P+=4;Servo.D-=2;break;
??choose_PD_1440:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1438
// 4015           case 3:Servo.P+=4;Servo.D-=2;break;
??choose_PD_1439:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4016           }
// 4017         }break;
??choose_PD_1438:
        B.N      ??choose_PD_1424
// 4018       case 2:                                   //P=5  D=2
// 4019         {
// 4020           switch(track_form)
??choose_PD_1413:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1441
        BCC.N    ??choose_PD_1442
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1443
        BCC.N    ??choose_PD_1444
        B.N      ??choose_PD_1442
// 4021           {
// 4022           case 1:Servo.P+=4;Servo.D-=3;break;
??choose_PD_1441:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1442
// 4023           case 2:Servo.P+=4;Servo.D-=3;break;
??choose_PD_1444:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1442
// 4024           case 3:Servo.P+=4;Servo.D-=3;break;
??choose_PD_1443:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4025           }
// 4026         }break;
??choose_PD_1442:
        B.N      ??choose_PD_1424
// 4027       case 1:                                   //P=5  D=1
// 4028         {
// 4029           switch(track_form)
??choose_PD_1412:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1445
        BCC.N    ??choose_PD_1446
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1447
        BCC.N    ??choose_PD_1448
        B.N      ??choose_PD_1446
// 4030           {
// 4031           case 1:Servo.P+=4;Servo.D-=4;break;
??choose_PD_1445:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1446
// 4032           case 2:Servo.P+=4;Servo.D-=4;break;
??choose_PD_1448:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1446
// 4033           case 3:Servo.P+=4;Servo.D-=4;break;
??choose_PD_1447:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4034           }
// 4035         }break;
??choose_PD_1446:
        B.N      ??choose_PD_1424
// 4036       case 0:Servo.P+=4;break;                                   //P=5  D=0
??choose_PD_1411:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_1424
// 4037       case -1:                                   //P=5  D=-1
// 4038         {
// 4039           switch(track_form)
??choose_PD_1423:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1449
        BCC.N    ??choose_PD_1450
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1451
        BCC.N    ??choose_PD_1452
        B.N      ??choose_PD_1450
// 4040           {
// 4041           case 1:Servo.P+=4;Servo.D+=1;break;
??choose_PD_1449:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1450
// 4042           case 2:Servo.P+=4;Servo.D+=1;break;
??choose_PD_1452:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1450
// 4043           case 3:Servo.P+=4;Servo.D+=1;break;
??choose_PD_1451:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4044           }
// 4045         }break;
??choose_PD_1450:
        B.N      ??choose_PD_1424
// 4046       case -2:                                   //P=5  D=-2
// 4047         {
// 4048           switch(track_form)
??choose_PD_1422:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1453
        BCC.N    ??choose_PD_1454
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1455
        BCC.N    ??choose_PD_1456
        B.N      ??choose_PD_1454
// 4049           {
// 4050           case 1:Servo.P+=4;Servo.D+=1;break;
??choose_PD_1453:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1454
// 4051           case 2:Servo.P+=4;Servo.D+=1;break;
??choose_PD_1456:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1454
// 4052           case 3:Servo.P+=4;Servo.D+=1;break;
??choose_PD_1455:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4053           }
// 4054         }break;
??choose_PD_1454:
        B.N      ??choose_PD_1424
// 4055       case -3:                                   //P=5  D=-3
// 4056         {
// 4057           switch(track_form)
??choose_PD_1421:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1457
        BCC.N    ??choose_PD_1458
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1459
        BCC.N    ??choose_PD_1460
        B.N      ??choose_PD_1458
// 4058           {
// 4059           case 1:Servo.P+=4;Servo.D+=2;break;
??choose_PD_1457:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1458
// 4060           case 2:Servo.P+=4;Servo.D+=2;break;
??choose_PD_1460:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1458
// 4061           case 3:Servo.P+=4;Servo.D+=2;break;
??choose_PD_1459:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4062           }
// 4063         }break;
??choose_PD_1458:
        B.N      ??choose_PD_1424
// 4064       case -4:                                   //P=5  D=-4
// 4065         {
// 4066           switch(track_form)
??choose_PD_1420:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1461
        BCC.N    ??choose_PD_1462
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1463
        BCC.N    ??choose_PD_1464
        B.N      ??choose_PD_1462
// 4067           {
// 4068           case 1:Servo.P+=4;Servo.D+=2;break;
??choose_PD_1461:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1462
// 4069           case 2:Servo.P+=4;Servo.D+=2;break;
??choose_PD_1464:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1462
// 4070           case 3:Servo.P+=4;Servo.D+=2;break;
??choose_PD_1463:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4071           }
// 4072         }break;
??choose_PD_1462:
        B.N      ??choose_PD_1424
// 4073       case -5:                                   //P=5  D=-5
// 4074         {
// 4075           switch(track_form)
??choose_PD_1419:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1465
        BCC.N    ??choose_PD_1466
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1467
        BCC.N    ??choose_PD_1468
        B.N      ??choose_PD_1466
// 4076           {
// 4077           case 1:Servo.P+=4;Servo.D+=3;break;
??choose_PD_1465:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1466
// 4078           case 2:Servo.P+=4;Servo.D+=3;break;
??choose_PD_1468:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1466
// 4079           case 3:Servo.P+=4;Servo.D+=3;break;
??choose_PD_1467:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4080           }
// 4081         }break;
??choose_PD_1466:
        B.N      ??choose_PD_1424
// 4082       case -6:                                   //P=5  D=-6
// 4083         {
// 4084           switch(track_form)
??choose_PD_1418:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1469
        BCC.N    ??choose_PD_1470
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1471
        BCC.N    ??choose_PD_1472
        B.N      ??choose_PD_1470
// 4085           {
// 4086           case 1:Servo.P+=4;Servo.D+=4;break;
??choose_PD_1469:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1470
// 4087           case 2:Servo.P+=4;Servo.D+=4;break;
??choose_PD_1472:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1470
// 4088           case 3:Servo.P+=4;Servo.D+=4;break;
??choose_PD_1471:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4089           }
// 4090         }break;
// 4091       }
// 4092     }break;
??choose_PD_1470:
??choose_PD_1424:
        B.N      ??choose_PD_40
// 4093   case 6:                                   //P=6  D=6
// 4094     {
// 4095       switch(position_now_D)
??choose_PD_33:
        LDR.N    R0,??choose_PD_1348
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.W    ??choose_PD_1473
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1474
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1475
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1476
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1477
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1478
        SUBS     R0,R0,#+1
        BEQ.N    ??choose_PD_1479
        MVNS     R1,#+11
        SUBS     R0,R0,R1
        BEQ.W    ??choose_PD_1480
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1481
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1482
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1483
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1484
        SUBS     R0,R0,#+1
        BEQ.W    ??choose_PD_1485
        B.N      ??choose_PD_1486
// 4096       {
// 4097       case 6:
// 4098         {
// 4099           switch(track_form)
??choose_PD_1479:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1487
        BCC.N    ??choose_PD_1488
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1489
        BCC.N    ??choose_PD_1490
        B.N      ??choose_PD_1488
// 4100           {
// 4101           case 1:Servo.P+=5;Servo.D+=0;break;
??choose_PD_1487:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDR.W    R1,??DataTable64
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1488
// 4102           case 2:Servo.P+=5;Servo.D+=0;break;
??choose_PD_1490:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDR.W    R1,??DataTable64
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1488
        DATA
??choose_PD_1348:
        DC32     position_now_D
        THUMB
// 4103           case 3:Servo.P+=5;Servo.D+=0;break;
??choose_PD_1489:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDR.W    R1,??DataTable64
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 4104           }
// 4105         }break;
??choose_PD_1488:
        B.N      ??choose_PD_1486
// 4106       case 5:                                  //P=6  D=5
// 4107         {
// 4108           switch(track_form)
??choose_PD_1478:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1491
        BCC.N    ??choose_PD_1492
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1493
        BCC.N    ??choose_PD_1494
        B.N      ??choose_PD_1492
// 4109           {
// 4110           case 1:Servo.P+=5;Servo.D+=0;break;
??choose_PD_1491:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDR.W    R1,??DataTable64
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1492
// 4111           case 2:Servo.P+=5;Servo.D+=0;break;
??choose_PD_1494:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDR.W    R1,??DataTable64
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_1492
// 4112           case 3:Servo.P+=5;Servo.D+=0;break;
??choose_PD_1493:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDR.W    R1,??DataTable64
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 4113           }
// 4114         }break;
??choose_PD_1492:
        B.N      ??choose_PD_1486
// 4115       case 4:                                  //P=6  D=4
// 4116         {
// 4117           switch(track_form)
??choose_PD_1477:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1495
        BCC.N    ??choose_PD_1496
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1497
        BCC.N    ??choose_PD_1498
        B.N      ??choose_PD_1496
// 4118           {
// 4119           case 1:Servo.P+=5;Servo.D-=1;break;
??choose_PD_1495:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1496
// 4120           case 2:Servo.P+=5;Servo.D-=1;break;
??choose_PD_1498:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1496
// 4121           case 3:Servo.P+=5;Servo.D-=1;break;
??choose_PD_1497:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4122           }
// 4123         }break;
??choose_PD_1496:
        B.N      ??choose_PD_1486
// 4124       case 3:                                  //P=6  D=3
// 4125         {
// 4126           switch(track_form)
??choose_PD_1476:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1499
        BCC.N    ??choose_PD_1500
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1501
        BCC.N    ??choose_PD_1502
        B.N      ??choose_PD_1500
// 4127           {
// 4128           case 1:Servo.P+=5;Servo.D-=2;break;
??choose_PD_1499:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1500
// 4129           case 2:Servo.P+=5;Servo.D-=2;break;
??choose_PD_1502:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1500
// 4130           case 3:Servo.P+=5;Servo.D-=2;break;
??choose_PD_1501:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4131           }
// 4132         }break;
??choose_PD_1500:
        B.N      ??choose_PD_1486
// 4133       case 2:                                  //P=6  D=2
// 4134         {
// 4135           switch(track_form)
??choose_PD_1475:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1503
        BCC.N    ??choose_PD_1504
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1505
        BCC.N    ??choose_PD_1506
        B.N      ??choose_PD_1504
// 4136           {
// 4137           case 1:Servo.P+=5;Servo.D-=3;break;
??choose_PD_1503:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1504
// 4138           case 2:Servo.P+=5;Servo.D-=3;break;
??choose_PD_1506:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1504
// 4139           case 3:Servo.P+=5;Servo.D-=3;break;
??choose_PD_1505:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4140           }
// 4141         }break;
??choose_PD_1504:
        B.N      ??choose_PD_1486
// 4142       case 1:                                  //P=6  D=1
// 4143         {
// 4144           switch(track_form)
??choose_PD_1474:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1507
        BCC.N    ??choose_PD_1508
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1509
        BCC.N    ??choose_PD_1510
        B.N      ??choose_PD_1508
// 4145           {
// 4146           case 1:Servo.P+=5;Servo.D-=4;break;
??choose_PD_1507:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1508
// 4147           case 2:Servo.P+=5;Servo.D-=4;break;
??choose_PD_1510:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1508
// 4148           case 3:Servo.P+=5;Servo.D-=4;break;
??choose_PD_1509:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4149           }
// 4150         }break;
??choose_PD_1508:
        B.N      ??choose_PD_1486
// 4151       case 0:Servo.P+=5;break;                                  //P=6  D=0
??choose_PD_1473:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_1486
// 4152       case -1:                                  //P=6  D=-1
// 4153         {
// 4154           switch(track_form)
??choose_PD_1485:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1511
        BCC.N    ??choose_PD_1512
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1513
        BCC.N    ??choose_PD_1514
        B.N      ??choose_PD_1512
// 4155           {
// 4156           case 1:Servo.P+=5;Servo.D+=1;break;
??choose_PD_1511:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1512
// 4157           case 2:Servo.P+=5;Servo.D+=1;break;
??choose_PD_1514:
        LDR.W    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1512
// 4158           case 3:Servo.P+=5;Servo.D+=1;break;
??choose_PD_1513:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4159           }
// 4160         }break;
??choose_PD_1512:
        B.N      ??choose_PD_1486
// 4161       case -2:                                  //P=6  D=-2
// 4162         {
// 4163           switch(track_form)
??choose_PD_1484:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1515
        BCC.N    ??choose_PD_1516
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1517
        BCC.N    ??choose_PD_1518
        B.N      ??choose_PD_1516
// 4164           {
// 4165           case 1:Servo.P+=5;Servo.D+=1;break;
??choose_PD_1515:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1516
// 4166           case 2:Servo.P+=5;Servo.D+=1;break;
??choose_PD_1518:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1516
// 4167           case 3:Servo.P+=5;Servo.D+=1;break;
??choose_PD_1517:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4168           }
// 4169         }break;
??choose_PD_1516:
        B.N      ??choose_PD_1486
// 4170       case -3:                                  //P=6  D=-3
// 4171         {
// 4172           switch(track_form)
??choose_PD_1483:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1519
        BCC.N    ??choose_PD_1520
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1521
        BCC.N    ??choose_PD_1522
        B.N      ??choose_PD_1520
// 4173           {
// 4174           case 1:Servo.P+=5;Servo.D+=2;break;
??choose_PD_1519:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1520
// 4175           case 2:Servo.P+=5;Servo.D+=2;break;
??choose_PD_1522:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1520
// 4176           case 3:Servo.P+=5;Servo.D+=2;break;
??choose_PD_1521:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4177           }
// 4178         }break;
??choose_PD_1520:
        B.N      ??choose_PD_1486
// 4179       case -4:                                  //P=6  D=-4
// 4180         {
// 4181           switch(track_form)
??choose_PD_1482:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1523
        BCC.N    ??choose_PD_1524
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1525
        BCC.N    ??choose_PD_1526
        B.N      ??choose_PD_1524
// 4182           {
// 4183           case 1:Servo.P+=5;Servo.D+=2;break;
??choose_PD_1523:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1524
// 4184           case 2:Servo.P+=5;Servo.D+=2;break;
??choose_PD_1526:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1524
// 4185           case 3:Servo.P+=5;Servo.D+=2;break;
??choose_PD_1525:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4186           }
// 4187         }break;
??choose_PD_1524:
        B.N      ??choose_PD_1486
// 4188       case -5:                                  //P=6  D=-5
// 4189         {
// 4190           switch(track_form)
??choose_PD_1481:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1527
        BCC.N    ??choose_PD_1528
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1529
        BCC.N    ??choose_PD_1530
        B.N      ??choose_PD_1528
// 4191           {
// 4192           case 1:Servo.P+=5;Servo.D+=3;break;
??choose_PD_1527:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1528
// 4193           case 2:Servo.P+=5;Servo.D+=3;break;
??choose_PD_1530:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1528
// 4194           case 3:Servo.P+=5;Servo.D+=3;break;
??choose_PD_1529:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4195           }
// 4196         }break;
??choose_PD_1528:
        B.N      ??choose_PD_1486
// 4197       case -6:                                  //P=6  D=-6
// 4198         {
// 4199           switch(track_form)
??choose_PD_1480:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_1531
        BCC.N    ??choose_PD_1532
        CMP      R4,#+3
        BEQ.N    ??choose_PD_1533
        BCC.N    ??choose_PD_1534
        B.N      ??choose_PD_1532
// 4200           {
// 4201           case 1:Servo.P+=5;Servo.D+=4;break;
??choose_PD_1531:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1532
// 4202           case 2:Servo.P+=5;Servo.D+=4;break;
??choose_PD_1534:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_1532
// 4203           case 3:Servo.P+=5;Servo.D+=4;break;
??choose_PD_1533:
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+0]
        LDR.N    R0,??DataTable64
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??DataTable64
        STRH     R0,[R1, #+4]
// 4204           }
// 4205         }break;
// 4206       }
// 4207     }break;
// 4208   }
// 4209  // if(zhidao_flag){
// 4210   //  Servo.P-=2;
// 4211   //  Servo.D-=2;
// 4212   //}
// 4213   xiaoS_flag=judge_small_S();
??choose_PD_1532:
??choose_PD_1486:
??choose_PD_40:
        BL       judge_small_S
        LDR.W    R1,??DataTable69
        STRH     R0,[R1, #+0]
// 4214   
// 4215   if(sai_dao_lei_xing==20&&!xiaoS_flag)
        LDR.W    R0,??DataTable69_1
        LDRB     R0,[R0, #+0]
        CMP      R0,#+20
        BNE.N    ??choose_PD_1535
        LDR.W    R0,??DataTable69
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??choose_PD_1535
// 4216   {
// 4217 //    num=0;
// 4218 //  position_now=0;
// 4219 //   for(i=20;i<25;i++)
// 4220 //  {
// 4221 //    if(center[i])
// 4222 //    {
// 4223 //      num++;
// 4224 //      position_now+=center[i];
// 4225 //    }  
// 4226 //  }
// 4227 //  position_old_old_old=position_old_old;
// 4228 //  position_old_old=position_old;
// 4229 //  position_old=position_now;
// 4230 //  if(num)
// 4231 //  position_now=position_now/num;   
// 4232 //  num=0;
// 4233   
// 4234     position_diff_zhi=position_old-position_now;
        LDR.W    R0,??DataTable69_2
        LDRH     R0,[R0, #+0]
        LDR.W    R1,??DataTable69_3
        LDRH     R1,[R1, #+0]
        SUBS     R10,R0,R1
// 4235     Servo_value=Servo_Middle-Servo_P_zhidao*(76-position_now)-Servo_D_zhidao*position_diff_zhi;//PD控制舵机
        LDR.W    R0,??DataTable69_4
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable69_5
        LDRB     R1,[R1, #+0]
        LDR.W    R2,??DataTable69_3
        LDRSH    R2,[R2, #+0]
        SUBS     R2,R2,#+76
        MULS     R1,R2,R1
        ADDS     R0,R1,R0
        LDR.W    R1,??DataTable69_6
        LDRB     R1,[R1, #+0]
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        MLS      R0,R10,R1,R0
        LDR.W    R1,??DataTable70
        STRH     R0,[R1, #+0]
// 4236          gpio_init(PORTA,14,1,0);
        MOVS     R3,#+0
        MOVS     R2,#+1
        MOVS     R1,#+14
        LDR.W    R0,??DataTable69_7  ;; 0x400ff000
        BL       gpio_init
// 4237         gpio_init(PORTA,15,1,0);
        MOVS     R3,#+0
        MOVS     R2,#+1
        MOVS     R1,#+15
        LDR.W    R0,??DataTable69_7  ;; 0x400ff000
        BL       gpio_init
// 4238         gpio_init(PORTA,16,1,0);
        MOVS     R3,#+0
        MOVS     R2,#+1
        MOVS     R1,#+16
        LDR.W    R0,??DataTable69_7  ;; 0x400ff000
        BL       gpio_init
// 4239         gpio_init(PORTA,17,1,0);
        MOVS     R3,#+0
        MOVS     R2,#+1
        MOVS     R1,#+17
        LDR.W    R0,??DataTable69_7  ;; 0x400ff000
        BL       gpio_init
        B.N      ??choose_PD_1536
// 4240   }else{
// 4241          gpio_init(PORTA,14,1,1);
??choose_PD_1535:
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+14
        LDR.W    R0,??DataTable69_7  ;; 0x400ff000
        BL       gpio_init
// 4242         gpio_init(PORTA,15,1,1);
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+15
        LDR.W    R0,??DataTable69_7  ;; 0x400ff000
        BL       gpio_init
// 4243         gpio_init(PORTA,16,1,1);
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+16
        LDR.W    R0,??DataTable69_7  ;; 0x400ff000
        BL       gpio_init
// 4244         gpio_init(PORTA,17,1,1);
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+17
        LDR.W    R0,??DataTable69_7  ;; 0x400ff000
        BL       gpio_init
// 4245   Servo_value=Servo_Middle-Servo.P*(77-position_now)-Servo.D*position_diff;//PD控制舵机
        LDR.W    R0,??DataTable69_4
        LDRSH    R0,[R0, #+0]
        LDR.N    R1,??DataTable64
        LDRSH    R1,[R1, #+0]
        LDR.W    R2,??DataTable69_3
        LDRSH    R2,[R2, #+0]
        SUBS     R2,R2,#+77
        MULS     R1,R2,R1
        ADDS     R0,R1,R0
        LDR.N    R1,??DataTable64
        LDRSH    R1,[R1, #+4]
        LDR.W    R2,??DataTable70_1
        LDRSH    R2,[R2, #+0]
        MLS      R0,R2,R1,R0
        LDR.W    R1,??DataTable70
        STRH     R0,[R1, #+0]
// 4246     //Servo_value=Servo_Middle-Servo.P*(77-position_now)-(Servo.D*position_diff*7+servo_d*(weizhi_old-weizhi)*3)/10;//PD控制舵机
// 4247   }
// 4248   Servo_value=limit(Servo_value,Servo_Right,Servo_Left);
??choose_PD_1536:
        LDR.W    R0,??DataTable70_2
        LDRSH    R2,[R0, #+0]
        LDR.W    R0,??DataTable70_3
        LDRSH    R1,[R0, #+0]
        LDR.W    R0,??DataTable70
        LDRSH    R0,[R0, #+0]
        BL       limit
        LDR.W    R1,??DataTable70
        STRH     R0,[R1, #+0]
// 4249   
// 4250   Servo_value_old=Servo_value;
        LDR.W    R0,??DataTable70_4
        LDR.W    R1,??DataTable70
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4251   FTM1_C0V=Servo_value;  
        LDR.W    R0,??DataTable70_5  ;; 0x40039010
        LDR.W    R1,??DataTable70
        LDRSH    R1,[R1, #+0]
        STR      R1,[R0, #+0]
// 4252   return ok;
        MOVS     R0,#+1
        POP      {R1,R4-R11,PC}   ;; return
// 4253 }

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable64:
        DC32     Servo
// 4254 
// 4255 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4256 int16 stages3(int16 value,int16 parameter,int16 windage_k)
// 4257 {
// 4258   
// 4259     
// 4260     if(!value) return unclear;
stages3:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BNE.N    ??stages3_0
        MVNS     R0,#+99
        B.N      ??stages3_1
// 4261     if(value<(parameter-windage_k)){
??stages3_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        SUBS     R3,R1,R2
        CMP      R0,R3
        BGE.N    ??stages3_2
// 4262       NULL;
// 4263       return(-1);
        MOVS     R0,#-1
        B.N      ??stages3_1
// 4264     }
// 4265     else if(value>=(parameter+windage_k)){
??stages3_2:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        SXTAH    R1,R2,R1
        CMP      R0,R1
        BLT.N    ??stages3_3
// 4266       NULL;
// 4267       return(1); 
        MOVS     R0,#+1
        B.N      ??stages3_1
// 4268     }
// 4269          else return(0);
??stages3_3:
        MOVS     R0,#+0
??stages3_1:
        BX       LR               ;; return
// 4270 }
// 4271 
// 4272 
// 4273 
// 4274 
// 4275 /*************判断赛道类型0**************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4276 uint8 judge_locus_0(void)
// 4277 {
judge_locus_0:
        PUSH     {R4-R6,LR}
// 4278   int16 i=0,num=0,buff1=0;
        MOVS     R4,#+0
        MOVS     R5,#+0
        MOVS     R0,#+0
// 4279   uint8 sai_dao_lei_xing_0=0;
        MOVS     R6,#+0
// 4280   for(i=54;i>21;i--)      //前段   59~41  33
        MOVS     R1,#+54
        MOVS     R4,R1
        B.N      ??judge_locus_0_0
// 4281     if(center[i]){
??judge_locus_0_1:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable70_6
        LDRB     R0,[R4, R0]
        CMP      R0,#+0
        BEQ.N    ??judge_locus_0_2
// 4282       low_0+=center[i];
        LDR.W    R0,??DataTable70_7
        LDRH     R0,[R0, #+0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable70_6
        LDRB     R1,[R4, R1]
        ADDS     R0,R0,R1
        LDR.W    R1,??DataTable70_7
        STRH     R0,[R1, #+0]
// 4283         num++;
        ADDS     R5,R5,#+1
// 4284     }
??judge_locus_0_2:
        SUBS     R4,R4,#+1
??judge_locus_0_0:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+22
        BGE.N    ??judge_locus_0_1
// 4285   if(low_0&&num>2)
        LDR.W    R0,??DataTable70_7
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??judge_locus_0_3
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+3
        BLT.N    ??judge_locus_0_3
// 4286     low_0=low_0/num;
        LDR.W    R0,??DataTable70_7
        LDRSH    R0,[R0, #+0]
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SDIV     R0,R0,R5
        LDR.W    R1,??DataTable70_7
        STRH     R0,[R1, #+0]
// 4287   num=0;
??judge_locus_0_3:
        MOVS     R5,#+0
        B.N      ??judge_locus_0_4
// 4288   
// 4289     
// 4290   for(;i>9;i--)    //中段  40~26    20  15
// 4291     if(center[i]){
??judge_locus_0_5:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable70_6
        LDRB     R0,[R4, R0]
        CMP      R0,#+0
        BEQ.N    ??judge_locus_0_6
// 4292       mid_0+=center[i];
        LDR.W    R0,??DataTable70_8
        LDRH     R0,[R0, #+0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable70_6
        LDRB     R1,[R4, R1]
        ADDS     R0,R0,R1
        LDR.W    R1,??DataTable70_8
        STRH     R0,[R1, #+0]
// 4293       num++;
        ADDS     R5,R5,#+1
// 4294       //j=i;
// 4295     }
??judge_locus_0_6:
        SUBS     R4,R4,#+1
??judge_locus_0_4:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+10
        BGE.N    ??judge_locus_0_5
// 4296   if(mid_0&&num>2)
        LDR.W    R0,??DataTable70_8
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??judge_locus_0_7
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+3
        BLT.N    ??judge_locus_0_7
// 4297     mid_0=mid_0/num;
        LDR.W    R0,??DataTable70_8
        LDRSH    R0,[R0, #+0]
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SDIV     R0,R0,R5
        LDR.W    R1,??DataTable70_8
        STRH     R0,[R1, #+0]
// 4298   num=0;    
??judge_locus_0_7:
        MOVS     R5,#+0
// 4299    
// 4300   if(abs(low_0-79)<8&&abs(mid_0-79)<8&&abs(high_0-79)<8){
        LDR.W    R0,??DataTable70_7
        LDRH     R0,[R0, #+0]
        SUBS     R0,R0,#+79
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        CMP      R0,#+8
        BGE.N    ??judge_locus_0_8
        LDR.W    R0,??DataTable70_8
        LDRH     R0,[R0, #+0]
        SUBS     R0,R0,#+79
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        CMP      R0,#+8
        BGE.N    ??judge_locus_0_8
        LDR.W    R0,??DataTable70_9
        LDRH     R0,[R0, #+0]
        SUBS     R0,R0,#+79
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        CMP      R0,#+8
        BGE.N    ??judge_locus_0_8
// 4301     zhidao_flag=1;
        LDR.W    R0,??DataTable70_10
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
        B.N      ??judge_locus_0_9
// 4302   }else{
// 4303    zhidao_flag=0; 
??judge_locus_0_8:
        LDR.W    R0,??DataTable70_10
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        B.N      ??judge_locus_0_9
// 4304   }
// 4305       
// 4306   for(;i>=0;i--)         //远段    25~0
// 4307     if(center[i]){
??judge_locus_0_10:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable70_6
        LDRB     R0,[R4, R0]
        CMP      R0,#+0
        BEQ.N    ??judge_locus_0_11
// 4308       high_0+=center[i];
        LDR.W    R0,??DataTable70_9
        LDRH     R0,[R0, #+0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable70_6
        LDRB     R1,[R4, R1]
        ADDS     R0,R0,R1
        LDR.W    R1,??DataTable70_9
        STRH     R0,[R1, #+0]
// 4309       num++;
        ADDS     R5,R5,#+1
// 4310     }
??judge_locus_0_11:
        SUBS     R4,R4,#+1
??judge_locus_0_9:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??judge_locus_0_10
// 4311   if(high_0&&num>2)
        LDR.W    R0,??DataTable70_9
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??judge_locus_0_12
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+3
        BLT.N    ??judge_locus_0_12
// 4312     high_0=high_0/num;
        LDR.W    R0,??DataTable70_9
        LDRSH    R0,[R0, #+0]
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SDIV     R0,R0,R5
        LDR.W    R1,??DataTable70_9
        STRH     R0,[R1, #+0]
// 4313    num=0;
??judge_locus_0_12:
        MOVS     R5,#+0
// 4314    
// 4315   low_now_0=low_0;                      //远近中端的坐标位置
        LDR.W    R0,??DataTable70_11
        LDR.W    R1,??DataTable70_7
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4316   mid_now_0=mid_0;
        LDR.W    R0,??DataTable70_12
        LDR.W    R1,??DataTable70_8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4317   high_now_0=high_0; 
        LDR.W    R0,??DataTable70_13
        LDR.W    R1,??DataTable70_9
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4318   
// 4319   low_0=stages3(low_0,video_Middle,24);        // 22          low,mid,high就是1，0，-1
        MOVS     R2,#+24
        MOVS     R1,#+80
        LDR.W    R0,??DataTable70_7
        LDRSH    R0,[R0, #+0]
        BL       stages3
        LDR.W    R1,??DataTable70_7
        STRH     R0,[R1, #+0]
// 4320    mid_0=stages3(mid_0,video_Middle,22);        // 19
        MOVS     R2,#+22
        MOVS     R1,#+80
        LDR.W    R0,??DataTable70_8
        LDRSH    R0,[R0, #+0]
        BL       stages3
        LDR.W    R1,??DataTable70_8
        STRH     R0,[R1, #+0]
// 4321    high_0=stages3(high_0,video_Middle,18);     //16
        MOVS     R2,#+18
        MOVS     R1,#+80
        LDR.W    R0,??DataTable70_9
        LDRSH    R0,[R0, #+0]
        BL       stages3
        LDR.W    R1,??DataTable70_9
        STRH     R0,[R1, #+0]
// 4322    if(high_0==unclear)
        LDR.W    R0,??DataTable70_9
        LDRSH    R0,[R0, #+0]
        MVNS     R1,#+99
        CMP      R0,R1
        BNE.N    ??judge_locus_0_13
// 4323    {    
// 4324      buff1=low_0*mid_0;
        LDR.W    R0,??DataTable70_7
        LDRH     R0,[R0, #+0]
        LDR.W    R1,??DataTable70_8
        LDRH     R1,[R1, #+0]
        MULS     R0,R1,R0
// 4325      if(mid_0==unclear)
        LDR.W    R1,??DataTable70_8
        LDRSH    R1,[R1, #+0]
        MVNS     R2,#+99
        CMP      R1,R2
        BNE.N    ??judge_locus_0_14
// 4326      { //超急弯
// 4327        if(low_0==0)
        LDR.W    R0,??DataTable70_7
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_15
// 4328        {      
// 4329          
// 4330          sai_dao_lei_xing_0=0;
        MOVS     R6,#+0
        B.N      ??judge_locus_0_16
// 4331          
// 4332        }
// 4333        else
// 4334        { 
// 4335          
// 4336          sai_dao_lei_xing_0=1;
??judge_locus_0_15:
        MOVS     R6,#+1
        B.N      ??judge_locus_0_16
// 4337          
// 4338        }
// 4339        
// 4340      }
// 4341      else
// 4342      {                                                  
// 4343        if(buff1==1)
??judge_locus_0_14:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+1
        BNE.N    ??judge_locus_0_17
// 4344        {   //急弯
// 4345          
// 4346          sai_dao_lei_xing_0=2;
        MOVS     R6,#+2
        B.N      ??judge_locus_0_16
// 4347          
// 4348          
// 4349        }
// 4350        else
// 4351        if(buff1==0)
??judge_locus_0_17:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_18
// 4352        {  //急弯
// 4353          if(low_0!=0) 
        LDR.W    R0,??DataTable70_7
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??judge_locus_0_19
// 4354          {
// 4355            
// 4356            sai_dao_lei_xing_0=4;
        MOVS     R6,#+4
        B.N      ??judge_locus_0_16
// 4357            
// 4358          }
// 4359          else
// 4360          {
// 4361            if(mid_0==0&&low_0==0)
??judge_locus_0_19:
        LDR.W    R0,??DataTable70_8
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_20
        LDR.W    R0,??DataTable70_7
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_20
// 4362            {
// 4363             
// 4364              sai_dao_lei_xing_0=5;
        MOVS     R6,#+5
// 4365              
// 4366              
// 4367            } 
// 4368            
// 4369            sai_dao_lei_xing_0=6;
??judge_locus_0_20:
        MOVS     R6,#+6
        B.N      ??judge_locus_0_16
// 4370            
// 4371          }
// 4372            
// 4373        }
// 4374        else if(buff1==-1)
??judge_locus_0_18:
        MOVS     R1,#-1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BNE.W    ??judge_locus_0_16
// 4375        { // 超急弯
// 4376          
// 4377          sai_dao_lei_xing_0=8;
        MOVS     R6,#+8
        B.N      ??judge_locus_0_16
// 4378          
// 4379            
// 4380        }
// 4381      }                                         
// 4382    }
// 4383    else
// 4384    {           //high!=unclear时
// 4385      if(mid_0==high_0)
??judge_locus_0_13:
        LDR.W    R0,??DataTable70_8
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable70_9
        LDRSH    R1,[R1, #+0]
        CMP      R0,R1
        BNE.N    ??judge_locus_0_21
// 4386      {
// 4387        if(high_0==0)
        LDR.W    R0,??DataTable70_9
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_22
// 4388        {        //直道         
// 4389          if(high_now_0>62&&high_now_0<92&&mid_now_0>61&&mid_now_0<93&&low_now_0>60&&low_now_0<94)
        LDR.W    R0,??DataTable70_13
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+63
        BLT.N    ??judge_locus_0_23
        LDR.W    R0,??DataTable70_13
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+92
        BGE.N    ??judge_locus_0_23
        LDR.W    R0,??DataTable70_12
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+62
        BLT.N    ??judge_locus_0_23
        LDR.W    R0,??DataTable70_12
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+93
        BGE.N    ??judge_locus_0_23
        LDR.W    R0,??DataTable70_11
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+61
        BLT.N    ??judge_locus_0_23
        LDR.W    R0,??DataTable70_11
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+94
        BGE.N    ??judge_locus_0_23
// 4390          {
// 4391            sai_dao_lei_xing_0=20;
        MOVS     R6,#+20
        B.N      ??judge_locus_0_16
// 4392          }
// 4393          else sai_dao_lei_xing_0=9;
??judge_locus_0_23:
        MOVS     R6,#+9
        B.N      ??judge_locus_0_16
// 4394          
// 4395        
// 4396        }
// 4397        else
// 4398        {           /////////////////////////
// 4399          
// 4400          sai_dao_lei_xing_0=10;
??judge_locus_0_22:
        MOVS     R6,#+10
        B.N      ??judge_locus_0_16
// 4401          
// 4402        
// 4403        }
// 4404      }
// 4405      else
// 4406      {     //mid!=high时
// 4407        if(low_0==0&&mid_0==0)
??judge_locus_0_21:
        LDR.W    R0,??DataTable70_7
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_24
        LDR.W    R0,??DataTable70_8
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_24
// 4408        {         //长大弯
// 4409          
// 4410          sai_dao_lei_xing_0=12;
        MOVS     R6,#+12
// 4411         
// 4412         
// 4413        }//else
// 4414        if(mid_0==0&&(low_0*high_0==-1))
??judge_locus_0_24:
        LDR.W    R0,??DataTable70_8
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_25
        LDR.W    R0,??DataTable70_7
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable70_9
        LDRSH    R1,[R1, #+0]
        MULS     R0,R1,R0
        CMN      R0,#+1
        BNE.N    ??judge_locus_0_25
// 4415        {  //大弯
// 4416          
// 4417          sai_dao_lei_xing_0=13;
        MOVS     R6,#+13
// 4418          
// 4419          
// 4420        }//else
// 4421        if(high_0==low_0&&low_0!=mid_0)
??judge_locus_0_25:
        LDR.W    R0,??DataTable70_9
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable70_7
        LDRSH    R1,[R1, #+0]
        CMP      R0,R1
        BNE.N    ??judge_locus_0_26
        LDR.W    R0,??DataTable70_7
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable70_8
        LDRSH    R1,[R1, #+0]
        CMP      R0,R1
        BEQ.N    ??judge_locus_0_26
// 4422        {    //S弯
// 4423          
// 4424          sai_dao_lei_xing_0=14;
        MOVS     R6,#+14
// 4425          
// 4426        
// 4427        }
// 4428        /////////////////////////////////////////////////////
// 4429        if(high_0==0&&(mid_0*low_0==-1))
??judge_locus_0_26:
        LDR.W    R0,??DataTable70_9
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_27
        LDR.W    R0,??DataTable70_8
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable70_7
        LDRSH    R1,[R1, #+0]
        MULS     R0,R1,R0
        CMN      R0,#+1
        BNE.N    ??judge_locus_0_27
// 4430        {
// 4431          
// 4432          sai_dao_lei_xing_0=15;
        MOVS     R6,#+15
// 4433          
// 4434        
// 4435        }
// 4436        if(high_0==0&&(mid_0*low_0==1))
??judge_locus_0_27:
        LDR.W    R0,??DataTable70_9
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_28
        LDR.W    R0,??DataTable70_8
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable70_7
        LDRSH    R1,[R1, #+0]
        MULS     R0,R1,R0
        CMP      R0,#+1
        BNE.N    ??judge_locus_0_28
// 4437        {         //长大弯
// 4438          
// 4439          sai_dao_lei_xing_0=16;
        MOVS     R6,#+16
// 4440          
// 4441         
// 4442        }
// 4443        if((high==-1&&mid==1&&low!=-1)||(high==1&&mid==-1&&low!=1))
??judge_locus_0_28:
        LDR.W    R0,??DataTable70_14
        LDRSH    R0,[R0, #+0]
        MOVS     R1,#-1
        CMP      R0,R1
        BNE.N    ??judge_locus_0_29
        LDR.W    R0,??DataTable70_15
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??judge_locus_0_29
        LDR.W    R0,??DataTable70_16
        LDRSH    R0,[R0, #+0]
        MOVS     R1,#-1
        CMP      R0,R1
        BNE.N    ??judge_locus_0_30
??judge_locus_0_29:
        LDR.W    R0,??DataTable70_14
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??judge_locus_0_16
        LDR.W    R0,??DataTable70_15
        LDRSH    R0,[R0, #+0]
        MOVS     R1,#-1
        CMP      R0,R1
        BNE.N    ??judge_locus_0_16
        LDR.W    R0,??DataTable70_16
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??judge_locus_0_16
// 4444        {         //长急弯
// 4445          
// 4446          sai_dao_lei_xing_0=17;
??judge_locus_0_30:
        MOVS     R6,#+17
// 4447          
// 4448         
// 4449        }
// 4450        /////////////////////////////////////////////////
// 4451      }
// 4452    }
// 4453    return sai_dao_lei_xing_0;
??judge_locus_0_16:
        MOVS     R0,R6
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        POP      {R4-R6,PC}       ;; return
// 4454   
// 4455 }
// 4456 /*************判断赛道类型0END**************/
// 4457 
// 4458 
// 4459 
// 4460 /////////////////坡道识别/////////////////

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4461 int16 Judge_slope(void){
// 4462     unsigned char  i,j;
// 4463 	unsigned char slope_num=0;
Judge_slope:
        MOVS     R1,#+0
// 4464 	int16 track_width=0,slope_flag=0;
        MOVS     R3,#+0
        MOVS     R0,#+0
// 4465     for(i=3;i<=23;i++){
        MOVS     R2,#+3
        B.N      ??Judge_slope_0
// 4466 		if(bianyan[0][i]&&bianyan[1][i]!=159){
??Judge_slope_1:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        LDR.W    R0,??DataTable70_17
        LDRB     R0,[R2, R0]
        CMP      R0,#+0
        BEQ.N    ??Judge_slope_2
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        LDR.W    R0,??DataTable70_17
        ADDS     R0,R2,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+159
        BEQ.N    ??Judge_slope_2
// 4467 		track_width+=bianyan[1][i]-bianyan[0][i];
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        LDR.W    R0,??DataTable70_17
        ADDS     R0,R2,R0
        LDRB     R0,[R0, #+55]
        UXTAB    R0,R3,R0
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        LDR.W    R3,??DataTable70_17
        LDRB     R3,[R2, R3]
        SUBS     R3,R0,R3
// 4468 			slope_num++;
        ADDS     R1,R1,#+1
// 4469 		}
// 4470 	}
??Judge_slope_2:
        ADDS     R2,R2,#+1
??Judge_slope_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        CMP      R2,#+24
        BCC.N    ??Judge_slope_1
// 4471 	if(slope_num>17){
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+18
        BCC.N    ??Judge_slope_3
// 4472       track_width=track_width/slope_num;
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        SDIV     R3,R3,R1
        B.N      ??Judge_slope_4
// 4473 	}else{
// 4474 		track_width=0;
??Judge_slope_3:
        MOVS     R3,#+0
// 4475 	}
// 4476 	//str.Format("track_width：%d\r\n",track_width);
// 4477 	   //PrintDebug(str);
// 4478 	if(track_width>67&&!high_0&&!mid_0&&!low_0){
??Judge_slope_4:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        CMP      R3,#+68
        BLT.N    ??Judge_slope_5
        LDR.W    R0,??DataTable70_9
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??Judge_slope_5
        LDR.W    R0,??DataTable70_8
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??Judge_slope_5
        LDR.W    R0,??DataTable70_7
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??Judge_slope_5
// 4479 		slope_flag=1;
        MOVS     R0,#+1
        B.N      ??Judge_slope_6
// 4480 //                gpio_init(PORTA,14,1,0);
// 4481 //        gpio_init(PORTA,15,1,0);
// 4482 //        gpio_init(PORTA,16,1,0);
// 4483 //        gpio_init(PORTA,17,1,0);
// 4484 	}else{
// 4485 		slope_flag=0;
??Judge_slope_5:
        MOVS     R0,#+0
// 4486 	}
// 4487     return slope_flag;
??Judge_slope_6:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BX       LR               ;; return
// 4488 }
// 4489 
// 4490 /***************很歪的十字交叉连接判断***************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4491 uint8 judage_shizi(void)
// 4492 {
// 4493   uint8 i=54,j_k=0,m=0;
judage_shizi:
        MOVS     R1,#+54
        MOVS     R0,#+0
        MOVS     R2,#+0
// 4494   
// 4495   if(mid_0==1)
        LDR.W    R3,??DataTable70_8
        LDRSH    R3,[R3, #+0]
        CMP      R3,#+1
        BNE.N    ??judage_shizi_0
// 4496   {
// 4497     for(i=54;i>10;i--)
        MOVS     R1,#+54
        B.N      ??judage_shizi_1
??judage_shizi_2:
        SUBS     R1,R1,#+1
??judage_shizi_1:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+11
        BCC.N    ??judage_shizi_3
// 4498     {
// 4499       if(center[i]>center[i-1]&&center[i]>center[i-2]&&center[i]>center[i-3])
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable70_6
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #-1]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable70_6
        LDRB     R3,[R1, R3]
        CMP      R2,R3
        BCS.N    ??judage_shizi_2
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable70_6
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #-2]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable70_6
        LDRB     R3,[R1, R3]
        CMP      R2,R3
        BCS.N    ??judage_shizi_2
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable70_6
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #-3]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable70_6
        LDRB     R3,[R1, R3]
        CMP      R2,R3
        BCS.N    ??judage_shizi_2
// 4500       {
// 4501         j_k=i;
        MOVS     R0,R1
// 4502         break;
        B.N      ??judage_shizi_3
// 4503       }
// 4504     }
// 4505     
// 4506   }
// 4507   else if(mid_0==-1)
??judage_shizi_0:
        LDR.W    R1,??DataTable70_8
        LDRSH    R1,[R1, #+0]
        MOVS     R2,#-1
        CMP      R1,R2
        BNE.N    ??judage_shizi_3
// 4508   {
// 4509     for(i=54;i>10;i--)
        MOVS     R1,#+54
        B.N      ??judage_shizi_4
??judage_shizi_5:
        SUBS     R1,R1,#+1
??judage_shizi_4:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+11
        BCC.N    ??judage_shizi_3
// 4510     {
// 4511       if(center[i]<center[i-1]&&center[i]<center[i-2]&&center[i]<center[i-3])
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable70_6
        LDRB     R2,[R1, R2]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable70_6
        ADDS     R3,R1,R3
        LDRB     R3,[R3, #-1]
        CMP      R2,R3
        BCS.N    ??judage_shizi_5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable70_6
        LDRB     R2,[R1, R2]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable70_6
        ADDS     R3,R1,R3
        LDRB     R3,[R3, #-2]
        CMP      R2,R3
        BCS.N    ??judage_shizi_5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable70_6
        LDRB     R2,[R1, R2]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable70_6
        ADDS     R3,R1,R3
        LDRB     R3,[R3, #-3]
        CMP      R2,R3
        BCS.N    ??judage_shizi_5
// 4512       {
// 4513         j_k=i;
        MOVS     R0,R1
// 4514         break;
// 4515       }
// 4516     }
// 4517     
// 4518   }
// 4519  
// 4520   return j_k;
??judage_shizi_3:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BX       LR               ;; return
// 4521 }
// 4522 /***************很歪的十字交叉连接判断END***************/
// 4523 
// 4524 
// 4525 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4526 int16 speed_control(void)
// 4527 {
speed_control:
        PUSH     {LR}
        SUB      SP,SP,#+28
// 4528   volatile int16 i=0;//,E=0,Ec=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 4529   volatile int32 exspeed=0;
        MOVS     R0,#+0
        STR      R0,[SP, #+4]
        B.N      ??speed_control_0
// 4530   volatile struct membership_grade S; 
// 4531  // static 
// 4532     //int16 i_old=0;
// 4533   
// 4534   
// 4535   while(!center[i]&&i<55) i++;   //50
??speed_control_1:
        LDRH     R0,[SP, #+0]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+0]
??speed_control_0:
        LDRSH    R0,[SP, #+0]
        LDR.W    R1,??DataTable70_6
        LDRB     R0,[R0, R1]
        CMP      R0,#+0
        BNE.N    ??speed_control_2
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+55
        BLT.N    ??speed_control_1
// 4536   
// 4537       
// 4538   E=54-i;   //i无效点个数    //49    E为有效的个数
??speed_control_2:
        LDRH     R0,[SP, #+0]
        RSBS     R0,R0,#+54
        LDR.W    R1,??DataTable70_18
        STRH     R0,[R1, #+0]
// 4539   Ec_old_old=Ec_old;
        LDR.W    R0,??DataTable70_19
        LDR.W    R1,??DataTable70_20
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4540   Ec_old=Ec;
        LDR.W    R0,??DataTable70_20
        LDR.W    R1,??DataTable70_21
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4541   Ec=i-i_old; //有效点变化率
        LDRH     R0,[SP, #+0]
        LDR.W    R1,??DataTable70_22
        LDRH     R1,[R1, #+0]
        SUBS     R0,R0,R1
        LDR.W    R1,??DataTable70_21
        STRH     R0,[R1, #+0]
// 4542   i_old=i;
        LDR.W    R0,??DataTable70_22
        LDRH     R1,[SP, #+0]
        STRH     R1,[R0, #+0]
// 4543   
// 4544   if(i<=5&&Ec>=0&&Ec_old>=0) return speed_top;    //直道全速冲刺  3
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+6
        BGE.N    ??speed_control_3
        LDR.W    R0,??DataTable70_21
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BMI.N    ??speed_control_3
        LDR.W    R0,??DataTable70_20
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BMI.N    ??speed_control_3
        LDR.W    R0,??DataTable70_23
        LDRSH    R0,[R0, #+0]
        B.N      ??speed_control_4
// 4545   if(i>=45)  return speed_ms;
??speed_control_3:
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+45
        BLT.N    ??speed_control_5
        LDR.W    R0,??DataTable70_24
        LDRSH    R0,[R0, #+0]
        B.N      ??speed_control_4
// 4546     
// 4547   if(i>=0)
??speed_control_5:
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BMI.N    ??speed_control_6
// 4548   {
// 4549     if(!Ec)//变化率为0的时候
        LDR.W    R0,??DataTable70_21
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??speed_control_7
// 4550     {
// 4551       //sub_e(E,25,20,50,45);//20，15，45，40通过采集到的点数来算出，speed_s,speed_m,speed_b所占的份额
// 4552   //  sub_e(E,24,0,54,24);       //主要决定十字弯道和直到的过弯速度
// 4553      // sub_e(E,35,30,50,45);
// 4554       sub_e(E,30,25,45,40);
        MOVS     R0,#+40
        STR      R0,[SP, #+0]
        MOVS     R3,#+45
        MOVS     R2,#+25
        MOVS     R1,#+30
        LDR.W    R0,??DataTable70_18
        LDRH     R0,[R0, #+0]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       sub_e
// 4555       S.s=sub.s;
        LDR.W    R0,??DataTable70_25
        LDRH     R0,[R0, #+0]
        STRH     R0,[SP, #+8]
// 4556       S.m=sub.m;
        LDR.W    R0,??DataTable70_25
        LDRH     R0,[R0, #+2]
        STRH     R0,[SP, #+10]
// 4557       S.b=sub.b;
        LDR.W    R0,??DataTable70_25
        LDRH     R0,[R0, #+4]
        STRH     R0,[SP, #+12]
// 4558       exspeed=(sub.s*speed_s+sub.m*speed_m+sub.b*speed_b)/100;
        LDR.W    R0,??DataTable70_25
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable70_26
        LDRSH    R1,[R1, #+0]
        LDR.W    R2,??DataTable70_25
        LDRSH    R2,[R2, #+2]
        LDR.W    R3,??DataTable70_27
        LDRSH    R3,[R3, #+0]
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR.W    R1,??DataTable70_25
        LDRSH    R1,[R1, #+4]
        LDR.W    R2,??DataTable70_28
        LDRSH    R2,[R2, #+0]
        MLA      R0,R2,R1,R0
        MOVS     R1,#+100
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        B.N      ??speed_control_8
// 4559     }
// 4560     else //变化率不等于0的时候
// 4561     {
// 4562       //exspeed=speed_fuzzy(E,Ec,35,25,50,45,3,1,7,5); 4.8―10：00
// 4563       exspeed=speed_fuzzy(E,Ec,35,30,50,45,3,1,7,5);
??speed_control_7:
        MOVS     R0,#+5
        STR      R0,[SP, #+20]
        MOVS     R0,#+7
        STR      R0,[SP, #+16]
        MOVS     R0,#+1
        STR      R0,[SP, #+12]
        MOVS     R0,#+3
        STR      R0,[SP, #+8]
        MOVS     R0,#+45
        STR      R0,[SP, #+4]
        MOVS     R0,#+50
        STR      R0,[SP, #+0]
        MOVS     R3,#+30
        MOVS     R2,#+35
        LDR.W    R0,??DataTable70_21
        LDRSH    R1,[R0, #+0]
        LDR.W    R0,??DataTable70_18
        LDRSH    R0,[R0, #+0]
        BL       speed_fuzzy
        STR      R0,[SP, #+4]
// 4564     }
// 4565     return exspeed;
??speed_control_8:
        LDR      R0,[SP, #+4]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        B.N      ??speed_control_4
// 4566   }
// 4567 }
??speed_control_6:
??speed_control_4:
        ADD      SP,SP,#+28
        POP      {PC}             ;; return
// 4568     
// 4569      
// 4570       

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4571 int16 Motor_control(int16 shift){
Motor_control:
        PUSH     {LR}
        SUB      SP,SP,#+28
// 4572   volatile int32 speed=0;
        MOVS     R1,#+0
        STR      R1,[SP, #+0]
// 4573   volatile int16 motor_e=0,motor_ec=0,absa=0;
        MOVS     R1,#+0
        STRH     R1,[SP, #+24]
        MOVS     R1,#+0
        STRH     R1,[SP, #+26]
        MOVS     R1,#+0
        STRH     R1,[SP, #+0]
// 4574   static int16 motor_e_old=0,motor_sum=0;
// 4575    
// 4576   motor_e=shift-pulse;             //speed_vari为编码器返回的脉冲数
        LDR.W    R1,??DataTable70_29
        LDRSH    R1,[R1, #+0]
        SUBS     R1,R0,R1
        STRH     R1,[SP, #+24]
// 4577   speed_now=shift;
        LDR.W    R1,??DataTable70_30
        STRH     R0,[R1, #+0]
// 4578   motor_ec=motor_e-motor_e_old;
        LDRH     R0,[SP, #+24]
        LDR.W    R1,??DataTable70_31
        LDRH     R1,[R1, #+0]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+26]
// 4579   absa=abs(motor_e);
        LDRSH    R0,[SP, #+24]
        BL       abs
        STRH     R0,[SP, #+0]
// 4580   //uart_send1(UART0,shift);
// 4581    //uart_send1(UART0,pulse);
// 4582   // uart_send1(UART0,absa);
// 4583   motor_fuzzy(motor_e,motor_ec,16,8,24,20,8,4,16,12);//30  20  50  40  15  10  25  20
        MOVS     R0,#+12
        STR      R0,[SP, #+20]
        MOVS     R0,#+16
        STR      R0,[SP, #+16]
        MOVS     R0,#+4
        STR      R0,[SP, #+12]
        MOVS     R0,#+8
        STR      R0,[SP, #+8]
        MOVS     R0,#+20
        STR      R0,[SP, #+4]
        MOVS     R0,#+24
        STR      R0,[SP, #+0]
        MOVS     R3,#+8
        MOVS     R2,#+16
        LDRSH    R1,[SP, #+26]
        LDRSH    R0,[SP, #+24]
        BL       motor_fuzzy
// 4584   motor_sum=line(motor_e,Motor.I);
        LDR.W    R0,??DataTable70_32
        LDRSH    R1,[R0, #+2]
        LDRSH    R0,[SP, #+24]
        BL       line
        LDR.W    R1,??DataTable70_33
        STRH     R0,[R1, #+0]
// 4585   speed=(long)s_old*motor_p+Motor.P*(long)motor_e+motor_p*(long)motor_sum/2;
        LDR.W    R0,??DataTable70_34
        LDRSH    R0,[R0, #+0]
        MOVS     R1,#+70
        LDR.W    R2,??DataTable70_32
        LDRSH    R2,[R2, #+0]
        LDRSH    R3,[SP, #+24]
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR.W    R1,??DataTable70_33
        LDRSH    R1,[R1, #+0]
        MOVS     R2,#+70
        MULS     R1,R2,R1
        MOVS     R2,#+2
        SDIV     R1,R1,R2
        ADDS     R0,R1,R0
        STR      R0,[SP, #+0]
// 4586   speed=speed/100;
        LDR      R0,[SP, #+0]
        MOVS     R1,#+100
        SDIV     R0,R0,R1
        STR      R0,[SP, #+0]
// 4587   s_old=pulse;
        LDR.W    R0,??DataTable70_34
        LDR.W    R1,??DataTable70_29
        LDRSH    R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4588   motor_e_old=motor_e;
        LDR.W    R0,??DataTable70_31
        LDRH     R1,[SP, #+24]
        STRH     R1,[R0, #+0]
// 4589   //if(pulse<50&&speed<0) return 50;
// 4590   return speed;            
        LDR      R0,[SP, #+0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        ADD      SP,SP,#+28
        POP      {PC}             ;; return
// 4591 }   

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69:
        DC32     xiaoS_flag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_1:
        DC32     sai_dao_lei_xing

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_2:
        DC32     position_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_3:
        DC32     position_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_4:
        DC32     Servo_Middle

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_5:
        DC32     Servo_P_zhidao

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_6:
        DC32     Servo_D_zhidao

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_7:
        DC32     0x400ff000

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
??motor_e_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
??motor_sum:
        DS8 2
// 4592 
// 4593 /*****************非动态阈值二值化*****************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4594 void threshold(void)
// 4595 {
threshold:
        PUSH     {R3-R11,LR}
// 4596   uint8 i=0,j=0;
        MOVS     R0,#+0
        MOVS     R1,#+0
// 4597 //  uint8 black_a1 = 140;
// 4598 //  uint8 black_a2 = 145;
// 4599 //  uint8 black_a3 = 140;
// 4600 //  uint8 black_b1 = 135;
// 4601 //  uint8 black_b2 = 140;
// 4602 //  uint8 black_b3 = 135;
// 4603 //  uint8 black_c1 = 132;
// 4604 //  uint8 black_c2 = 138;
// 4605 //  uint8 black_c3 = 132;
// 4606 //  uint8 black_d1 = 130;
// 4607 //  uint8 black_d2 = 142;
// 4608 //  uint8 black_d3 = 130;
// 4609   
// 4610   uint8 black_a1 = 135;//140
        MOVS     R2,#+135
        STRB     R2,[SP, #+1]
// 4611   uint8 black_a2 = 145;//145
        MOVS     R2,#+145
        STRB     R2,[SP, #+0]
// 4612   uint8 black_a3 = 135;//140
        MOVS     R2,#+135
// 4613   uint8 black_b1 = 150;//135
        MOVS     R3,#+150
// 4614   uint8 black_b2 = 150;//140
        MOVS     R4,#+150
// 4615   uint8 black_b3 = 150;//135
        MOVS     R5,#+150
// 4616   uint8 black_c1 = 145;//154   132
        MOVS     R6,#+145
// 4617   uint8 black_c2 = 158;//158     138
        MOVS     R7,#+158
// 4618   uint8 black_c3 = 145;//154     132
        MOVS     R12,#+145
// 4619   uint8 black_d1 = 152;//157  130
        MOVS     LR,#+152
// 4620   uint8 black_d2 = 153;//158  142
        MOVS     R8,#+153
// 4621   uint8 black_d3 = 152;//157  130
        MOVS     R9,#+152
// 4622   for(i=0;i<H;i++)
        MOVS     R10,#+0
        MOV      R0,R10
        B.N      ??threshold_0
??threshold_1:
        ADDS     R0,R0,#+1
??threshold_0:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+55
        BCS.W    ??threshold_2
// 4623   {
// 4624     if(i<8)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+8
        BCS.W    ??threshold_3
// 4625     {
// 4626       for(j=0;j<V;j++)
        MOVS     R1,#+0
        B.N      ??threshold_4
// 4627       {
// 4628         if(j<50)
// 4629         {
// 4630           if(video[i][j]<black_d1)video[i][j]=0;
// 4631           else video[i][j]=1;
// 4632         }
// 4633         else if(j<110)
// 4634         {
// 4635           if(video[i][j]<black_d2)video[i][j]=0;
// 4636           else video[i][j]=1;
// 4637         }
// 4638         else
// 4639         {
// 4640           if(video[i][j]<black_d3)video[i][j]=0;
// 4641           else video[i][j]=1;
??threshold_5:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
??threshold_6:
        ADDS     R1,R1,#+1
??threshold_4:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+160
        BCS.N    ??threshold_1
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+50
        BCS.N    ??threshold_7
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     LR,LR            ;; ZeroExt  LR,LR,#+24,#+24
        CMP      R10,LR
        BCS.N    ??threshold_8
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_6
??threshold_8:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_6
??threshold_7:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+110
        BCS.N    ??threshold_9
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
        CMP      R10,R8
        BCS.N    ??threshold_10
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_6
??threshold_10:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_6
??threshold_9:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
        CMP      R10,R9
        BCS.N    ??threshold_5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_6
// 4642         }
// 4643       }
// 4644     }
// 4645     else if(i<20)
??threshold_3:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+20
        BCS.W    ??threshold_11
// 4646     {
// 4647       for(j=0;j<V;j++)
        MOVS     R1,#+0
        B.N      ??threshold_12
// 4648       {
// 4649         if(j<50)
// 4650         {
// 4651           if(video[i][j]<black_c1)video[i][j]=0;
// 4652           else video[i][j]=1;
// 4653         }
// 4654         else if(j<110)
// 4655         {
// 4656           if(video[i][j]<black_c2)video[i][j]=0;
// 4657           else video[i][j]=1;
// 4658         }
// 4659         else
// 4660         {
// 4661           if(video[i][j]<black_c3)video[i][j]=0;
// 4662           else video[i][j]=1;
??threshold_13:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
??threshold_14:
        ADDS     R1,R1,#+1
??threshold_12:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+160
        BCS.W    ??threshold_1
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+50
        BCS.N    ??threshold_15
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R10,R6
        BCS.N    ??threshold_16
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_14
??threshold_16:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_14
??threshold_15:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+110
        BCS.N    ??threshold_17
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R10,R7
        BCS.N    ??threshold_18
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_14
??threshold_18:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_14
??threshold_17:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R12,R12          ;; ZeroExt  R12,R12,#+24,#+24
        CMP      R10,R12
        BCS.N    ??threshold_13
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_14
// 4663         }
// 4664       }
// 4665     }
// 4666     else if(i<34)
??threshold_11:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+34
        BCS.W    ??threshold_19
// 4667     {
// 4668       for(j=0;j<V;j++)
        MOVS     R1,#+0
        B.N      ??threshold_20
// 4669       {
// 4670         if(j<50)
// 4671         {
// 4672           if(video[i][j]<black_b1)video[i][j]=0;
// 4673           else video[i][j]=1;
// 4674         }
// 4675         else if(j<110)
// 4676         {
// 4677           if(video[i][j]<black_b2)video[i][j]=0;
// 4678           else video[i][j]=1;
// 4679         }
// 4680         else
// 4681         {
// 4682           if(video[i][j]<black_b3)video[i][j]=0;
// 4683           else video[i][j]=1;
??threshold_21:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
??threshold_22:
        ADDS     R1,R1,#+1
??threshold_20:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+160
        BCS.W    ??threshold_1
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+50
        BCS.N    ??threshold_23
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R10,R3
        BCS.N    ??threshold_24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_22
??threshold_24:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_22
??threshold_23:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+110
        BCS.N    ??threshold_25
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R10,R4
        BCS.N    ??threshold_26
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_22
??threshold_26:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_22
??threshold_25:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R10,R5
        BCS.N    ??threshold_21
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_22
// 4684         }
// 4685       }
// 4686     }
// 4687     else
// 4688     {
// 4689       for(j=0;j<V;j++)
??threshold_19:
        MOVS     R1,#+0
        B.N      ??threshold_27
// 4690       {
// 4691         if(j<50)
// 4692         {
// 4693           if(video[i][j]<black_a1)video[i][j]=0;
// 4694           else video[i][j]=1;
// 4695         }
// 4696         else if(j<110)
// 4697         {
// 4698           if(video[i][j]<black_a2)video[i][j]=0;
// 4699           else video[i][j]=1;
// 4700         }
// 4701         else
// 4702         {
// 4703           if(video[i][j]<black_a3)video[i][j]=0;
// 4704           else video[i][j]=1;
??threshold_28:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
??threshold_29:
        ADDS     R1,R1,#+1
??threshold_27:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+160
        BCS.W    ??threshold_1
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+50
        BCS.N    ??threshold_30
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        LDRB     R11,[SP, #+1]
        CMP      R10,R11
        BCS.N    ??threshold_31
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_29
??threshold_31:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_29
??threshold_30:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+110
        BCS.N    ??threshold_32
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        LDRB     R11,[SP, #+0]
        CMP      R10,R11
        BCS.N    ??threshold_33
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_29
??threshold_33:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_29
??threshold_32:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        CMP      R10,R2
        BCS.N    ??threshold_28
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70_35
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_29
// 4705         }
// 4706       }
// 4707     }
// 4708   }
// 4709 }
??threshold_2:
        POP      {R0,R4-R11,PC}   ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70:
        DC32     Servo_value

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_1:
        DC32     position_diff

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_2:
        DC32     Servo_Left

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_3:
        DC32     Servo_Right

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_4:
        DC32     Servo_value_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_5:
        DC32     0x40039010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_6:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_7:
        DC32     low_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_8:
        DC32     mid_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_9:
        DC32     high_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_10:
        DC32     zhidao_flag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_11:
        DC32     low_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_12:
        DC32     mid_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_13:
        DC32     high_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_14:
        DC32     `high`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_15:
        DC32     mid

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_16:
        DC32     `low`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_17:
        DC32     bianyan

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_18:
        DC32     E

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_19:
        DC32     Ec_old_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_20:
        DC32     Ec_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_21:
        DC32     Ec

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_22:
        DC32     i_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_23:
        DC32     speed_top

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_24:
        DC32     speed_ms

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_25:
        DC32     `sub`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_26:
        DC32     speed_s

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_27:
        DC32     speed_m

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_28:
        DC32     speed_b

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_29:
        DC32     pulse

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_30:
        DC32     speed_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_31:
        DC32     ??motor_e_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_32:
        DC32     Motor

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_33:
        DC32     ??motor_sum

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_34:
        DC32     s_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70_35:
        DC32     video
// 4710 /**********************非动态阈值END*********************/
// 4711 /**********************动态阈值***********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4712 void Yu_Zhi(unsigned char x1, unsigned char x2,unsigned char y)
// 4713 {
Yu_Zhi:
        PUSH     {R4-R7}
// 4714 	unsigned char i=0,black_number=0,white_number=0;
        MOVS     R7,#+0
        MOVS     R3,#+0
        MOVS     R6,#+0
// 4715 	int16 black_numbers=0,white_numbers=0;
        MOVS     R4,#+0
        MOVS     R5,#+0
// 4716 	if(y<10)
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        CMP      R2,#+10
        BCS.W    ??Yu_Zhi_0
// 4717 	{
// 4718 		if(x1==0)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BNE.N    ??Yu_Zhi_1
// 4719 		{
// 4720 		    for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_2
// 4721 			{
// 4722 			    if(video[y][i]<=16);
// 4723 			    else if(video[y][i]<black_max_a1){black_numbers=black_numbers+video[y][i];black_number++;}
// 4724                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_3:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_4:
        ADDS     R7,R7,#+1
??Yu_Zhi_2:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_5
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_4
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_1
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_3
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_4
// 4725 			}
// 4726 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_5:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_6
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4727 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_6:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_7
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4728 		    if(white_numbers&&black_numbers)black_max_1=(black_numbers+white_numbers)/2;
??Yu_Zhi_7:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_8
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_8
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable73_2
        STRB     R0,[R1, #+0]
// 4729 		    if(!(white_numbers&&black_numbers))black_max_1=black_max_a1;
??Yu_Zhi_8:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_9
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_9:
        LDR.W    R0,??DataTable73_2
        LDR.W    R1,??DataTable73_1
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.W      ??Yu_Zhi_10
// 4730 		}
// 4731 		else if(x1==40)
??Yu_Zhi_1:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+40
        BNE.N    ??Yu_Zhi_11
// 4732 		{
// 4733 			for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_12
// 4734 			{
// 4735 			    if(video[y][i]<=16);
// 4736 			    else if(video[y][i]<black_max_a2){black_numbers=black_numbers+video[y][i];black_number++;}
// 4737                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_13:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_14:
        ADDS     R7,R7,#+1
??Yu_Zhi_12:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_15
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_14
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_3
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_13
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_14
// 4738 			}
// 4739 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_15:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4740 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_16:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_17
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4741 		    if(white_numbers&&black_numbers)black_max_2=(black_numbers+white_numbers)/2;
??Yu_Zhi_17:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_18
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_18
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable73_4
        STRB     R0,[R1, #+0]
// 4742             if(!(white_numbers&&black_numbers))black_max_2=black_max_a2;
??Yu_Zhi_18:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_19
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_19:
        LDR.W    R0,??DataTable73_4
        LDR.W    R1,??DataTable73_3
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4743 		}
// 4744 		else
// 4745 		{
// 4746 			for(i=x1;i<x2;i++)
??Yu_Zhi_11:
        MOVS     R7,R0
        B.N      ??Yu_Zhi_20
// 4747 			{
// 4748 			    if(video[y][i]<=16);
// 4749 			    else if(video[y][i]<black_max_a3){black_numbers=black_numbers+video[y][i];black_number++;}
// 4750                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_21:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_22:
        ADDS     R7,R7,#+1
??Yu_Zhi_20:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_23
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_22
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_5
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_21
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_22
// 4751 			}
// 4752 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_23:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_24
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4753 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_24:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_25
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4754 		    if(white_numbers&&black_numbers)black_max_3=(black_numbers+white_numbers)/2;
??Yu_Zhi_25:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_26
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_26
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable73_6
        STRB     R0,[R1, #+0]
// 4755 		    if(!(white_numbers&&black_numbers))black_max_3=black_max_a3;
??Yu_Zhi_26:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_27
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_27:
        LDR.W    R0,??DataTable73_6
        LDR.W    R1,??DataTable73_5
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4756 		}
// 4757 	}
// 4758 	else if(y<20)
??Yu_Zhi_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        CMP      R2,#+20
        BCS.W    ??Yu_Zhi_28
// 4759 	{
// 4760 		if(x1==0)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BNE.N    ??Yu_Zhi_29
// 4761 		{
// 4762 		    for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_30
// 4763 			{
// 4764 			    if(video[y][i]<=16);
// 4765 			    else if(video[y][i]<black_max_b1){black_numbers=black_numbers+video[y][i];black_number++;}
// 4766                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_31:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_32:
        ADDS     R7,R7,#+1
??Yu_Zhi_30:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_33
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_32
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_7
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_31
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_32
// 4767 			}
// 4768 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_33:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_34
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4769 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_34:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_35
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4770 		    if(white_numbers&&black_numbers)black_max_1=(black_numbers+white_numbers)/2;
??Yu_Zhi_35:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_36
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_36
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable73_2
        STRB     R0,[R1, #+0]
// 4771 		    if(!(white_numbers&&black_numbers))black_max_1=black_max_b1;
??Yu_Zhi_36:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_37
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_37:
        LDR.W    R0,??DataTable73_2
        LDR.W    R1,??DataTable73_7
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4772 		}
// 4773 		else if(x1==40)
??Yu_Zhi_29:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+40
        BNE.N    ??Yu_Zhi_38
// 4774 		{
// 4775 			for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_39
// 4776 			{
// 4777 			    if(video[y][i]<=16);
// 4778 			    else if(video[y][i]<black_max_b2){black_numbers=black_numbers+video[y][i];black_number++;}
// 4779                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_40:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_41:
        ADDS     R7,R7,#+1
??Yu_Zhi_39:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_42
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_41
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_8
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_40
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_41
// 4780 			}
// 4781 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_42:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_43
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4782 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_43:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_44
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4783 		    if(white_numbers&&black_numbers)black_max_2=(black_numbers+white_numbers)/2;
??Yu_Zhi_44:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_45
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_45
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable73_4
        STRB     R0,[R1, #+0]
// 4784             if(!(white_numbers&&black_numbers))black_max_2=black_max_b2;
??Yu_Zhi_45:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_46
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_46:
        LDR.W    R0,??DataTable73_4
        LDR.W    R1,??DataTable73_8
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4785 		}
// 4786 		else
// 4787 		{
// 4788 			for(i=x1;i<x2;i++)
??Yu_Zhi_38:
        MOVS     R7,R0
        B.N      ??Yu_Zhi_47
// 4789 			{
// 4790 			    if(video[y][i]<=16);
// 4791 			    else if(video[y][i]<black_max_b3){black_numbers=black_numbers+video[y][i];black_number++;}
// 4792                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_48:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_49:
        ADDS     R7,R7,#+1
??Yu_Zhi_47:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_50
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_49
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_9
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_48
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_49
// 4793 			}
// 4794 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_50:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_51
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4795 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_51:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_52
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4796 		    if(white_numbers&&black_numbers)black_max_3=(black_numbers+white_numbers)/2;
??Yu_Zhi_52:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_53
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_53
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable73_6
        STRB     R0,[R1, #+0]
// 4797 		    if(!(white_numbers&&black_numbers))black_max_3=black_max_b3;
??Yu_Zhi_53:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_54
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_54:
        LDR.W    R0,??DataTable73_6
        LDR.W    R1,??DataTable73_9
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4798 		}
// 4799 	}
// 4800 	else if(y<35)
??Yu_Zhi_28:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        CMP      R2,#+35
        BCS.W    ??Yu_Zhi_55
// 4801 	{
// 4802 		if(x1==0)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BNE.N    ??Yu_Zhi_56
// 4803 		{
// 4804 		    for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_57
// 4805 			{
// 4806 			    if(video[y][i]<=16);
// 4807 			    else if(video[y][i]<black_max_c1){black_numbers=black_numbers+video[y][i];black_number++;}
// 4808                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_58:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_59:
        ADDS     R7,R7,#+1
??Yu_Zhi_57:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_60
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_59
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable74
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_58
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_59
// 4809 			}
// 4810 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_60:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_61
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4811 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_61:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_62
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4812 		    if(white_numbers&&black_numbers)black_max_1=(black_numbers+white_numbers)/2;
??Yu_Zhi_62:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_63
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_63
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable73_2
        STRB     R0,[R1, #+0]
// 4813 		    if(!(white_numbers&&black_numbers))black_max_1=black_max_c1;
??Yu_Zhi_63:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_64
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_64:
        LDR.W    R0,??DataTable73_2
        LDR.W    R1,??DataTable74
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4814 		}
// 4815 		else if(x1==40)
??Yu_Zhi_56:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+40
        BNE.N    ??Yu_Zhi_65
// 4816 		{
// 4817 			for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_66
// 4818 			{
// 4819 			    if(video[y][i]<=16);
// 4820 			    else if(video[y][i]<black_max_c2){black_numbers=black_numbers+video[y][i];black_number++;}
// 4821                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_67:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_68:
        ADDS     R7,R7,#+1
??Yu_Zhi_66:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_69
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_68
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable74_1
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_67
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_68
// 4822 			}
// 4823 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_69:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_70
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4824 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_70:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_71
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4825 		    if(white_numbers&&black_numbers)black_max_2=(black_numbers+white_numbers)/2;
??Yu_Zhi_71:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_72
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_72
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable73_4
        STRB     R0,[R1, #+0]
// 4826             if(!(white_numbers&&black_numbers))black_max_2=black_max_c2;
??Yu_Zhi_72:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_73
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_73:
        LDR.W    R0,??DataTable73_4
        LDR.W    R1,??DataTable74_1
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4827 		}
// 4828 		else
// 4829 		{
// 4830 			for(i=x1;i<x2;i++)
??Yu_Zhi_65:
        MOVS     R7,R0
        B.N      ??Yu_Zhi_74
// 4831 			{
// 4832 			    if(video[y][i]<=16);
// 4833 			    else if(video[y][i]<black_max_c3){black_numbers=black_numbers+video[y][i];black_number++;}
// 4834                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_75:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_76:
        ADDS     R7,R7,#+1
??Yu_Zhi_74:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_77
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_76
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable74_2
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_75
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_76
// 4835 			}
// 4836 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_77:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_78
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4837 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_78:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_79
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4838 		    if(white_numbers&&black_numbers)black_max_3=(black_numbers+white_numbers)/2;
??Yu_Zhi_79:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_80
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_80
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable73_6
        STRB     R0,[R1, #+0]
// 4839 		    if(!(white_numbers&&black_numbers))black_max_3=black_max_c3;
??Yu_Zhi_80:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_81
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_81:
        LDR.W    R0,??DataTable73_6
        LDR.W    R1,??DataTable74_2
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4840 		}
// 4841 	}
// 4842 	else
// 4843 	{
// 4844 		if(x1==0)
??Yu_Zhi_55:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BNE.N    ??Yu_Zhi_82
// 4845 		{
// 4846 		    for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_83
// 4847 			{
// 4848 			    if(video[y][i]<=16);
// 4849 			    else if(video[y][i]<black_max_d1){black_numbers=black_numbers+video[y][i];black_number++;}
// 4850                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_84:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_85:
        ADDS     R7,R7,#+1
??Yu_Zhi_83:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_86
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_85
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable74_3
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_84
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_85
// 4851 			}
// 4852 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_86:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_87
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4853 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_87:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_88
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4854 		    if(white_numbers&&black_numbers)black_max_1=(black_numbers+white_numbers)/2;
??Yu_Zhi_88:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_89
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_89
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable73_2
        STRB     R0,[R1, #+0]
// 4855 		    if(!(white_numbers&&black_numbers))black_max_1=black_max_d1;
??Yu_Zhi_89:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_90
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_90:
        LDR.W    R0,??DataTable73_2
        LDR.W    R1,??DataTable74_3
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4856 		}
// 4857 		else if(x1==40)
??Yu_Zhi_82:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+40
        BNE.N    ??Yu_Zhi_91
// 4858 		{
// 4859 			for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_92
// 4860 			{
// 4861 			    if(video[y][i]<=16);
// 4862 			    else if(video[y][i]<black_max_d2){black_numbers=black_numbers+video[y][i];black_number++;}
// 4863                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_93:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_94:
        ADDS     R7,R7,#+1
??Yu_Zhi_92:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_95
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_94
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable74_4
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_93
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_94
// 4864 			}
// 4865 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_95:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_96
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4866 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_96:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_97
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4867 		    if(white_numbers&&black_numbers)black_max_2=(black_numbers+white_numbers)/2;
??Yu_Zhi_97:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_98
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_98
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.N    R1,??DataTable73_4
        STRB     R0,[R1, #+0]
// 4868             if(!(white_numbers&&black_numbers))black_max_2=black_max_d2;
??Yu_Zhi_98:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_99
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.N    ??Yu_Zhi_10
??Yu_Zhi_99:
        LDR.N    R0,??DataTable73_4
        LDR.W    R1,??DataTable74_4
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4869 		}
// 4870 		else
// 4871 		{
// 4872 			for(i=x1;i<x2;i++)
??Yu_Zhi_91:
        MOVS     R7,R0
        B.N      ??Yu_Zhi_100
// 4873 			{
// 4874 			    if(video[y][i]<=16);
// 4875 			    else if(video[y][i]<black_max_d3){black_numbers=black_numbers+video[y][i];black_number++;}
// 4876                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_101:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_102:
        ADDS     R7,R7,#+1
??Yu_Zhi_100:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_103
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_102
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable74_5
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_101
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable73
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_102
// 4877 			}
// 4878 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_103:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_104
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4879 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_104:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_105
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4880 		    if(white_numbers&&black_numbers)black_max_3=(black_numbers+white_numbers)/2;
??Yu_Zhi_105:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_106
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_106
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.N    R1,??DataTable73_6
        STRB     R0,[R1, #+0]
// 4881 		    if(!(white_numbers&&black_numbers))black_max_3=black_max_d3;
??Yu_Zhi_106:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_107
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.N    ??Yu_Zhi_10
??Yu_Zhi_107:
        LDR.N    R0,??DataTable73_6
        LDR.W    R1,??DataTable74_5
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
// 4882 		}
// 4883 	}
// 4884 }
??Yu_Zhi_10:
        POP      {R4-R7}
        BX       LR               ;; return
// 4885 
// 4886 
// 4887 
// 4888 
// 4889 
// 4890 /**********************虚线的判断***********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4891 void judage_xuxian(void)
// 4892 { 
judage_xuxian:
        PUSH     {R4-R7}
// 4893   int16 i=0,b2chazhi1=0,b2chazhi3=0;
        MOVS     R0,#+0
        MOVS     R5,#+0
        MOVS     R6,#+0
// 4894   int16 d=0,f=0,m=0,n=0;
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        MOVS     R4,#+0
// 4895   for(i=53;i>=0;i--)
        MOVS     R7,#+53
        MOVS     R0,R7
        B.N      ??judage_xuxian_0
// 4896   {
// 4897     b2chazhi1=bianyan2[0][i]-bianyan2[0][i+1];
??judage_xuxian_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable74_6
        LDRB     R5,[R0, R5]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_6
        ADDS     R6,R0,R6
        LDRB     R6,[R6, #+1]
        SUBS     R5,R5,R6
// 4898     b2chazhi3=bianyan2[1][i]-bianyan2[1][i+1];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_6
        ADDS     R6,R0,R6
        LDRB     R6,[R6, #+55]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable74_6
        ADDS     R7,R0,R7
        LDRB     R7,[R7, #+56]
        SUBS     R6,R6,R7
// 4899 		
// 4900     if(b2chazhi1<-8)
        MVNS     R7,#+7
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,R7
        BGE.N    ??judage_xuxian_2
// 4901     {
// 4902       d++;
        ADDS     R1,R1,#+1
// 4903     }
// 4904     if(b2chazhi1>8)
??judage_xuxian_2:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+9
        BLT.N    ??judage_xuxian_3
// 4905     {
// 4906       m++;
        ADDS     R3,R3,#+1
// 4907     }
// 4908     if(b2chazhi3<-8)
??judage_xuxian_3:
        MVNS     R5,#+7
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R5
        BGE.N    ??judage_xuxian_4
// 4909     {
// 4910       n++;
        ADDS     R4,R4,#+1
// 4911     }
// 4912 	
// 4913     if(b2chazhi3>8)
??judage_xuxian_4:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+9
        BLT.N    ??judage_xuxian_5
// 4914     {
// 4915       f++;
        ADDS     R2,R2,#+1
// 4916     }
// 4917   }
??judage_xuxian_5:
        SUBS     R0,R0,#+1
??judage_xuxian_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BPL.N    ??judage_xuxian_1
// 4918   if(d>2&&m>2&&n>2&&f>2)
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+3
        BLT.N    ??judage_xuxian_6
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        CMP      R3,#+3
        BLT.N    ??judage_xuxian_6
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+3
        BLT.N    ??judage_xuxian_6
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R2,#+3
        BLT.N    ??judage_xuxian_6
// 4919   {
// 4920     xu_xian2=1;
        LDR.W    R0,??DataTable74_7
        MOVS     R5,#+1
        STRB     R5,[R0, #+0]
// 4921     xu1=d;
        LDR.W    R0,??DataTable74_8
        STRB     R1,[R0, #+0]
// 4922     xu2=m;
        LDR.W    R0,??DataTable74_9
        STRB     R3,[R0, #+0]
// 4923     xu3=n;
        LDR.W    R0,??DataTable74_10
        STRB     R4,[R0, #+0]
// 4924     xu4=f;
        LDR.W    R0,??DataTable74_11
        STRB     R2,[R0, #+0]
// 4925   }
// 4926 
// 4927 
// 4928 }
??judage_xuxian_6:
        POP      {R4-R7}
        BX       LR               ;; return
// 4929 /**********************虚线的判断END***********************/
// 4930 /*********************二次虚线的补线********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4931 void xu_xian_bu(void)
// 4932 {
xu_xian_bu:
        PUSH     {R3-R5,LR}
// 4933   int16 i=H-1,m=0,h=0;
        MOVS     R4,#+54
        MOVS     R0,#+0
        MOVS     R5,#+0
// 4934   for(i=H-1;i>h;i--)
        MOVS     R1,#+54
        MOVS     R4,R1
        B.N      ??xu_xian_bu_0
// 4935   {
// 4936     if(bianyan2[0][54]==0&&i==54)
// 4937     {
// 4938       for(i=54;i>h;i--)
// 4939       {
// 4940               if(bianyan2[0][i]>0)	break;
// 4941               
// 4942               
// 4943       }
// 4944       for(m=i;m<H-1;m++)
// 4945       {
// 4946               bianyan[0][m+1]=bianyan[0][m];
??xu_xian_bu_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable74_12
        ADDS     R1,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable74_12
        LDRB     R2,[R0, R2]
        STRB     R2,[R1, #+1]
// 4947               
// 4948       }
        ADDS     R0,R0,#+1
??xu_xian_bu_2:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+54
        BLT.N    ??xu_xian_bu_1
// 4949       xu_xian_find(0,i,h);
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R2,R5
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R1,R4
        MOVS     R0,#+0
        BL       xu_xian_find
// 4950 
// 4951             
// 4952     }
// 4953     if(bianyan2[0][54]>0) xu_xian_find(0,i,h);
??xu_xian_bu_3:
        LDR.W    R0,??DataTable74_6
        LDRB     R0,[R0, #+54]
        CMP      R0,#+1
        BCC.N    ??xu_xian_bu_4
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R2,R5
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R1,R4
        MOVS     R0,#+0
        BL       xu_xian_find
??xu_xian_bu_4:
        SUBS     R4,R4,#+1
??xu_xian_bu_0:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R5,R4
        BGE.N    ??xu_xian_bu_5
        LDR.W    R0,??DataTable74_6
        LDRB     R0,[R0, #+54]
        CMP      R0,#+0
        BNE.N    ??xu_xian_bu_3
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+54
        BNE.N    ??xu_xian_bu_3
        MOVS     R4,#+54
        B.N      ??xu_xian_bu_6
??xu_xian_bu_7:
        SUBS     R4,R4,#+1
??xu_xian_bu_6:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R5,R4
        BGE.N    ??xu_xian_bu_8
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable74_6
        LDRB     R0,[R4, R0]
        CMP      R0,#+1
        BCC.N    ??xu_xian_bu_7
??xu_xian_bu_8:
        MOVS     R0,R4
        B.N      ??xu_xian_bu_2
// 4954   }
// 4955   for(i=H-1;i>h;i--)
??xu_xian_bu_5:
        MOVS     R4,#+54
        B.N      ??xu_xian_bu_9
// 4956   {
// 4957     if(bianyan2[1][54]>=V-3&&i==54)
// 4958     {
// 4959             for(i=54;i>h;i--)
// 4960             {
// 4961                     if(bianyan2[1][i]<V-3)	break;
// 4962                     
// 4963                     
// 4964             }
// 4965             for(m=i;m<H-1;m++)
// 4966             {
// 4967                     bianyan[1][m+1]=bianyan[1][m];
??xu_xian_bu_10:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable74_12
        ADDS     R1,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable74_12
        ADDS     R2,R0,R2
        LDRB     R2,[R2, #+55]
        STRB     R2,[R1, #+56]
// 4968                     
// 4969             }
        ADDS     R0,R0,#+1
??xu_xian_bu_11:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+54
        BLT.N    ??xu_xian_bu_10
// 4970             xu_xian_find(1,i,h);
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R2,R5
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R1,R4
        MOVS     R0,#+1
        BL       xu_xian_find
// 4971 
// 4972             
// 4973     }
// 4974     if(bianyan2[1][54]<V-3) xu_xian_find(1,i,h);
??xu_xian_bu_12:
        LDR.W    R0,??DataTable74_6
        LDRB     R0,[R0, #+109]
        CMP      R0,#+157
        BCS.N    ??xu_xian_bu_13
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R2,R5
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R1,R4
        MOVS     R0,#+1
        BL       xu_xian_find
??xu_xian_bu_13:
        SUBS     R4,R4,#+1
??xu_xian_bu_9:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R5,R4
        BGE.N    ??xu_xian_bu_14
        LDR.W    R0,??DataTable74_6
        LDRB     R0,[R0, #+109]
        CMP      R0,#+157
        BCC.N    ??xu_xian_bu_12
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+54
        BNE.N    ??xu_xian_bu_12
        MOVS     R4,#+54
        B.N      ??xu_xian_bu_15
??xu_xian_bu_16:
        SUBS     R4,R4,#+1
??xu_xian_bu_15:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R5,R4
        BGE.N    ??xu_xian_bu_17
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable74_6
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCS.N    ??xu_xian_bu_16
??xu_xian_bu_17:
        MOVS     R0,R4
        B.N      ??xu_xian_bu_11
// 4975   }
// 4976   for(i=H-1;i>=0;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??xu_xian_bu_14:
        MOVS     R4,#+54
        B.N      ??xu_xian_bu_18
??xu_xian_bu_19:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable74_12
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable74_12
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable74_13
        STRB     R0,[R4, R1]
        SUBS     R4,R4,#+1
??xu_xian_bu_18:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??xu_xian_bu_19
// 4977 
// 4978   
// 4979 }
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73:
        DC32     video

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_1:
        DC32     black_max_a1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_2:
        DC32     black_max_1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_3:
        DC32     black_max_a2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_4:
        DC32     black_max_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_5:
        DC32     black_max_a3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_6:
        DC32     black_max_3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_7:
        DC32     black_max_b1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_8:
        DC32     black_max_b2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_9:
        DC32     black_max_b3
// 4980 /*********************二次虚线的补线END********************/
// 4981 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4982 void xu_xian_cai()
// 4983 {
xu_xian_cai:
        PUSH     {R4-R7}
// 4984   int16 i=H-1,j=0,X=0;
        MOVS     R0,#+54
        MOVS     R6,#+0
        MOVS     R5,#+0
// 4985   int16 chazhi1=0,chazhi2=0,chazhi3=0,chazhi4=0;
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        MOVS     R4,#+0
// 4986   for(i=H-1;i>=0;i--)
        MOVS     R7,#+54
        MOVS     R0,R7
        B.N      ??xu_xian_cai_0
// 4987   {
// 4988     if(i>=53)
// 4989     {
// 4990       for(j=video_Middle;j>=2;j--)
// 4991       {
// 4992          if(video[i][j]==0)
// 4993          {
// 4994            if(video[i][j-1]==0)
// 4995            {
// 4996              bianyan[0][i]=j;
// 4997              break;
// 4998            }
// 4999            else if(video[i][j-2]==0)
// 5000            {
// 5001              bianyan[0][i]=j;
// 5002              break;
// 5003            }
// 5004          }
// 5005       }
// 5006       if(j==1)
// 5007       {
// 5008         if(video[i][j]==0&&video[i][j-1]==0)
// 5009         {
// 5010              bianyan[0][i]=1;
// 5011         }
// 5012         else
// 5013         {
// 5014              bianyan[0][i]=0;
// 5015         }
// 5016       }
// 5017       for(j=video_Middle;j<=V-2;j++)
// 5018       {
// 5019         if(video[i][j]==0)
// 5020         {
// 5021           if(video[i][j+1]==0)
// 5022           {
// 5023            bianyan[1][i]=j;
// 5024            break;
// 5025           }
// 5026           else if(video[i][j+2]==0)
// 5027           {
// 5028            bianyan[1][i]=j;
// 5029            break;
// 5030           }
// 5031         }
// 5032       }
// 5033       if(j==V-1)
// 5034       {
// 5035         if(video[i][j]==0&&video[i][j+1]==0)
// 5036         {
// 5037              bianyan[1][i]=V-2;
// 5038         }
// 5039         else
// 5040         {
// 5041              bianyan[1][i]=V-1;
// 5042         }
// 5043       }
// 5044   
// 5045     }
// 5046         
// 5047     if(i>=12&&i<H-2)
// 5048     {
// 5049       if(X>=2*windage)
// 5050       {  /********************左边******************************/
// 5051         for(j=bianyan[0][i+1]+windage;j>=2;j--)
// 5052         {
// 5053           if(video[i][j]==0)
// 5054           {
// 5055             if(video[i][j-1]==0)
// 5056             {
// 5057               bianyan[0][i]=j;
// 5058               break;
// 5059             }
// 5060             else if(video[i][j-2]==0)
// 5061             {
// 5062               bianyan[0][i]=j;
// 5063               break;
// 5064             }
// 5065           }
// 5066         }
// 5067         if(j==1)
// 5068         {
// 5069           if(video[i][j]==0&&video[i][j-1]==0)
// 5070           {
// 5071                 bianyan[0][i]=1;
// 5072           }
// 5073           else
// 5074           {
// 5075                 bianyan[0][i]=0;
// 5076           }
// 5077         }
// 5078   
// 5079   /*********************右边*******************************/
// 5080         for(j=bianyan[1][i+1]-windage;j<=V-2;j++)
// 5081         {
// 5082           if(video[i][j]==0)
// 5083           {
// 5084             if(video[i][j+1]==0)
// 5085             {
// 5086                     bianyan[1][i]=j;
// 5087                     break;
// 5088             }
// 5089             else if(video[i][j+2]==0)
// 5090             {
// 5091                     bianyan[1][i]=j;
// 5092                     break;
// 5093             }
// 5094           }
// 5095         }
// 5096         if(j==V-1)
// 5097         {
// 5098           if(video[i][j]==0&&video[i][j+1]==0)
// 5099           {
// 5100                 bianyan[1][i]=V-2;
// 5101           }
// 5102           else
// 5103           {
// 5104                 bianyan[1][i]=V-1;
// 5105           }
// 5106         }
// 5107   
// 5108       }
// 5109       else
// 5110       {
// 5111         for(j=center[i+1];j>=2;j--)
// 5112         {
// 5113           if(video[i][j]==0)
// 5114           {
// 5115             if(video[i][j-1]==0)
// 5116             {
// 5117                     bianyan[0][i]=j;
// 5118                     break;
// 5119             }
// 5120             else if(video[i][j-2]==0)
// 5121             {
// 5122                     bianyan[0][i]=j;
// 5123                     break;
// 5124             }
// 5125           }
// 5126         }
// 5127         if(j==1)
// 5128         {
// 5129           if(video[i][j]==0&&video[i][j-1]==0)
// 5130           {
// 5131             bianyan[0][i]=1;
// 5132           }
// 5133           else
// 5134           {
// 5135                 bianyan[0][i]=0;
// 5136           }
// 5137         }
// 5138   
// 5139   
// 5140   /*********************右边*******************************/
// 5141         for(j=center[i+1];j<=V-2;j++)
// 5142         {
// 5143           if(video[i][j]==0)
// 5144           {
// 5145             if(video[i][j+1]==0)
// 5146             {
// 5147                     bianyan[1][i]=j;
// 5148                     break;
// 5149             }
// 5150             else if(video[i][j+2]==0)
// 5151             {
// 5152                     bianyan[1][i]=j;
// 5153                     break;
// 5154             }
// 5155           }
// 5156         }
// 5157         if(j==V-1)
// 5158         {
// 5159           if(video[i][j]==0&&video[i][j+1]==0)
// 5160           {
// 5161                 bianyan[1][i]=V-2;
// 5162           }
// 5163           else
// 5164           {
// 5165                 bianyan[1][i]=V-1;
// 5166           }
// 5167         }
// 5168       }
// 5169     }
// 5170     if(i<12)
// 5171     {
// 5172       for(j=center[i+1];j>=0;j--)
// 5173       {
// 5174         if(video[i][j]==0)
// 5175         {
// 5176                 bianyan[0][i]=j;
// 5177                 break;
// 5178         }
// 5179                         
// 5180       }
// 5181       for(j=center[i+1];j<=V-1;j++)
??xu_xian_cai_1:
        ADDS     R6,R6,#+1
??xu_xian_cai_2:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+160
        BGE.N    ??xu_xian_cai_3
// 5182       {
// 5183         if(video[i][j]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.W    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_1
// 5184         {
// 5185                 bianyan[1][i]=j;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable74_12
        ADDS     R5,R0,R5
        STRB     R6,[R5, #+55]
// 5186                 break;
// 5187         }
// 5188               
// 5189       }
// 5190     }
// 5191     bianyan2[0][i]=bianyan[0][i];
??xu_xian_cai_3:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable74_6
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_12
        LDRB     R6,[R0, R6]
        STRB     R6,[R0, R5]
// 5192     bianyan2[1][i]=bianyan[1][i];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable74_6
        ADDS     R5,R0,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_12
        ADDS     R6,R0,R6
        LDRB     R6,[R6, #+55]
        STRB     R6,[R5, #+55]
// 5193     if(i<52)
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+52
        BGE.N    ??xu_xian_cai_4
// 5194     {
// 5195       chazhi1=bianyan[0][i]-bianyan[0][i+1];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable74_12
        LDRB     R1,[R0, R1]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable74_12
        ADDS     R2,R0,R2
        LDRB     R2,[R2, #+1]
        SUBS     R1,R1,R2
// 5196       chazhi2=bianyan[0][i+1]-bianyan[0][i+2];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable74_12
        ADDS     R2,R0,R2
        LDRB     R2,[R2, #+1]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R3,??DataTable74_12
        ADDS     R3,R0,R3
        LDRB     R3,[R3, #+2]
        SUBS     R2,R2,R3
// 5197       chazhi3=bianyan[1][i]-bianyan[1][i+1];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R3,??DataTable74_12
        ADDS     R3,R0,R3
        LDRB     R3,[R3, #+55]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R4,??DataTable74_12
        ADDS     R4,R0,R4
        LDRB     R4,[R4, #+56]
        SUBS     R3,R3,R4
// 5198       chazhi4=bianyan[1][i+1]-bianyan[1][i+2];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R4,??DataTable74_12
        ADDS     R4,R0,R4
        LDRB     R4,[R4, #+56]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable74_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+57]
        SUBS     R4,R4,R5
// 5199     }
// 5200     if(i>=39&&i<52)
??xu_xian_cai_4:
        SUBS     R5,R0,#+39
        UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
        CMP      R5,#+13
        BCS.N    ??xu_xian_cai_5
// 5201     {
// 5202       if(chazhi1<=-8)
        MVNS     R5,#+6
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,R5
        BGE.N    ??xu_xian_cai_6
// 5203       {
// 5204       //bianyan[0][i+1]=bianyan[0][i+2]+chazhi3;
// 5205               bianyan[0][i]=bianyan[0][i+1]+chazhi2;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable74_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+1]
        ADDS     R5,R2,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_12
        STRB     R5,[R0, R6]
// 5206       }
// 5207       if(chazhi3>=8)
??xu_xian_cai_6:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        CMP      R3,#+8
        BLT.N    ??xu_xian_cai_5
// 5208       {
// 5209               bianyan[1][i]=bianyan[1][i+1]+chazhi4;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable74_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+56]
        ADDS     R5,R4,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_12
        ADDS     R6,R0,R6
        STRB     R5,[R6, #+55]
// 5210       }
// 5211     }
// 5212         
// 5213     if(i<39)
??xu_xian_cai_5:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+39
        BGE.N    ??xu_xian_cai_7
// 5214     {
// 5215       if(chazhi1<=-10)
        MVNS     R5,#+8
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,R5
        BGE.N    ??xu_xian_cai_8
// 5216       {
// 5217               bianyan[0][i]=bianyan[0][i+1];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable74_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+1]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_12
        STRB     R5,[R0, R6]
// 5218       }
// 5219       if(chazhi3>=10)
??xu_xian_cai_8:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        CMP      R3,#+10
        BLT.N    ??xu_xian_cai_7
// 5220       {
// 5221           bianyan[1][i]=bianyan[1][i+1];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable74_12
        ADDS     R5,R0,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_12
        ADDS     R6,R0,R6
        LDRB     R6,[R6, #+56]
        STRB     R6,[R5, #+55]
// 5222       }
// 5223     }
// 5224     X=bianyan[1][i]-bianyan[0][i];
??xu_xian_cai_7:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable74_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+55]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_12
        LDRB     R6,[R0, R6]
        SUBS     R5,R5,R6
// 5225     center[i]=(bianyan[1][i]+bianyan[0][i])/2;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_12
        ADDS     R6,R0,R6
        LDRB     R6,[R6, #+55]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable74_12
        LDRB     R7,[R0, R7]
        UXTAB    R6,R7,R6
        MOVS     R7,#+2
        SDIV     R6,R6,R7
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable74_13
        STRB     R6,[R0, R7]
        SUBS     R0,R0,#+1
??xu_xian_cai_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BMI.W    ??xu_xian_cai_9
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+53
        BLT.W    ??xu_xian_cai_10
        MOVS     R6,#+80
        B.N      ??xu_xian_cai_11
??xu_xian_cai_12:
        SUBS     R6,R6,#+1
??xu_xian_cai_11:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+2
        BLT.N    ??xu_xian_cai_13
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable74_14
        MLA      R7,R7,R0,R12
        LDRB     R7,[R6, R7]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_12
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable74_14
        MLA      R7,R7,R0,R12
        ADDS     R7,R6,R7
        LDRB     R7,[R7, #-1]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_14
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable74_12
        STRB     R6,[R0, R7]
        B.N      ??xu_xian_cai_13
??xu_xian_cai_14:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable74_14
        MLA      R7,R7,R0,R12
        ADDS     R7,R6,R7
        LDRB     R7,[R7, #-2]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_12
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable74_12
        STRB     R6,[R0, R7]
??xu_xian_cai_13:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BNE.N    ??xu_xian_cai_15
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable74_14
        MLA      R7,R7,R0,R12
        LDRB     R7,[R6, R7]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable74_14
        MLA      R7,R7,R0,R12
        ADDS     R6,R6,R7
        LDRB     R6,[R6, #-1]
        CMP      R6,#+0
        BNE.N    ??xu_xian_cai_16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_12
        MOVS     R7,#+1
        STRB     R7,[R0, R6]
        B.N      ??xu_xian_cai_15
??xu_xian_cai_16:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable74_12
        MOVS     R7,#+0
        STRB     R7,[R0, R6]
??xu_xian_cai_15:
        MOVS     R6,#+80
        B.N      ??xu_xian_cai_17
??xu_xian_cai_18:
        ADDS     R6,R6,#+1
??xu_xian_cai_17:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BGE.N    ??xu_xian_cai_19
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable74_14
        MLA      R7,R7,R0,R12
        LDRB     R7,[R6, R7]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_18
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable74_14
        MLA      R7,R7,R0,R12
        ADDS     R7,R6,R7
        LDRB     R7,[R7, #+1]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_20
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable74_12
        ADDS     R7,R0,R7
        STRB     R6,[R7, #+55]
        B.N      ??xu_xian_cai_19
??xu_xian_cai_20:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable74_14
        MLA      R7,R7,R0,R12
        ADDS     R7,R6,R7
        LDRB     R7,[R7, #+2]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_18
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable74_12
        ADDS     R7,R0,R7
        STRB     R6,[R7, #+55]
??xu_xian_cai_19:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BNE.N    ??xu_xian_cai_10
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable74_14
        MLA      R7,R7,R0,R12
        LDRB     R7,[R6, R7]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_21
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable74_14
        MLA      R7,R7,R0,R12
        ADDS     R6,R6,R7
        LDRB     R6,[R6, #+1]
        CMP      R6,#+0
        BNE.N    ??xu_xian_cai_21
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R6,??DataTable74_12
        ADDS     R6,R0,R6
        MOVS     R7,#+158
        STRB     R7,[R6, #+55]
        B.N      ??xu_xian_cai_10
??xu_xian_cai_21:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R6,??DataTable74_12
        ADDS     R6,R0,R6
        MOVS     R7,#+159
        STRB     R7,[R6, #+55]
??xu_xian_cai_10:
        SUBS     R6,R0,#+12
        UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
        CMP      R6,#+41
        BCS.W    ??xu_xian_cai_22
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+80
        BLT.W    ??xu_xian_cai_23
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+1]
        ADDS     R6,R5,#+40
        B.N      ??xu_xian_cai_24
??xu_xian_cai_25:
        SUBS     R6,R6,#+1
??xu_xian_cai_24:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+2
        BLT.N    ??xu_xian_cai_26
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_25
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_27
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        STRB     R6,[R0, R5]
        B.N      ??xu_xian_cai_26
??xu_xian_cai_27:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-2]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_25
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        STRB     R6,[R0, R5]
??xu_xian_cai_26:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BNE.N    ??xu_xian_cai_28
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_29
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_29
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
        B.N      ??xu_xian_cai_28
??xu_xian_cai_29:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
??xu_xian_cai_28:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+56]
        SUBS     R6,R5,#+40
        B.N      ??xu_xian_cai_30
??xu_xian_cai_31:
        ADDS     R6,R6,#+1
??xu_xian_cai_30:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BGE.N    ??xu_xian_cai_32
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_31
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_33
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        ADDS     R5,R0,R5
        STRB     R6,[R5, #+55]
        B.N      ??xu_xian_cai_32
??xu_xian_cai_33:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+2]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_31
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        ADDS     R5,R0,R5
        STRB     R6,[R5, #+55]
??xu_xian_cai_32:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BNE.W    ??xu_xian_cai_22
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_34
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_34
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        ADDS     R5,R0,R5
        MOVS     R6,#+158
        STRB     R6,[R5, #+55]
        B.N      ??xu_xian_cai_22
??xu_xian_cai_34:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        ADDS     R5,R0,R5
        MOVS     R6,#+159
        STRB     R6,[R5, #+55]
        B.N      ??xu_xian_cai_22
??xu_xian_cai_23:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_13
        ADDS     R5,R0,R5
        LDRB     R6,[R5, #+1]
        B.N      ??xu_xian_cai_35
??xu_xian_cai_36:
        SUBS     R6,R6,#+1
??xu_xian_cai_35:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+2
        BLT.N    ??xu_xian_cai_37
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_36
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_38
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        STRB     R6,[R0, R5]
        B.N      ??xu_xian_cai_37
??xu_xian_cai_38:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-2]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_36
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        STRB     R6,[R0, R5]
??xu_xian_cai_37:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BNE.N    ??xu_xian_cai_39
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_40
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_40
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
        B.N      ??xu_xian_cai_39
??xu_xian_cai_40:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
??xu_xian_cai_39:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_13
        ADDS     R5,R0,R5
        LDRB     R6,[R5, #+1]
        B.N      ??xu_xian_cai_41
??xu_xian_cai_42:
        ADDS     R6,R6,#+1
??xu_xian_cai_41:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BGE.N    ??xu_xian_cai_43
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_42
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_44
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        ADDS     R5,R0,R5
        STRB     R6,[R5, #+55]
        B.N      ??xu_xian_cai_43
??xu_xian_cai_44:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+2]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_42
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        ADDS     R5,R0,R5
        STRB     R6,[R5, #+55]
??xu_xian_cai_43:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BNE.N    ??xu_xian_cai_22
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_45
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_45
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        ADDS     R5,R0,R5
        MOVS     R6,#+158
        STRB     R6,[R5, #+55]
        B.N      ??xu_xian_cai_22
??xu_xian_cai_45:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        ADDS     R5,R0,R5
        MOVS     R6,#+159
        STRB     R6,[R5, #+55]
??xu_xian_cai_22:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+12
        BGE.W    ??xu_xian_cai_3
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_13
        ADDS     R5,R0,R5
        LDRB     R6,[R5, #+1]
        B.N      ??xu_xian_cai_46
??xu_xian_cai_47:
        SUBS     R6,R6,#+1
??xu_xian_cai_46:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??xu_xian_cai_48
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable74_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_47
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_12
        STRB     R6,[R0, R5]
??xu_xian_cai_48:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable74_13
        ADDS     R5,R0,R5
        LDRB     R6,[R5, #+1]
        B.N      ??xu_xian_cai_2
// 5226   
// 5227   
// 5228   }
// 5229 }
??xu_xian_cai_9:
        POP      {R4-R7}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74:
        DC32     black_max_c1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_1:
        DC32     black_max_c2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_2:
        DC32     black_max_c3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_3:
        DC32     black_max_d1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_4:
        DC32     black_max_d2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_5:
        DC32     black_max_d3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_6:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_7:
        DC32     xu_xian2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_8:
        DC32     xu1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_9:
        DC32     xu2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_10:
        DC32     xu3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_11:
        DC32     xu4

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_12:
        DC32     bianyan

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_13:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable74_14:
        DC32     video
// 5230 
// 5231 
// 5232 /*********************十字交叉系统识别与补线********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 5233 void xie_shizi(void)
// 5234 {
xie_shizi:
        PUSH     {R4-R8,LR}
        SUB      SP,SP,#+112
// 5235   int16 break_point_1=0,break_point_2=0,break_point_3=0;
        MOVS     R4,#+0
        MOVS     R5,#+0
        MOVS     R6,#+0
// 5236   int16 i=0,j=0;
        MOVS     R7,#+0
        MOVS     R8,#+0
// 5237   //int16 xie_shizi_flag_1=0,xie_shizi_flag_2=0;
// 5238   int16 xie_shizi[H]={0};
        ADD      R0,SP,#+0
        MOVS     R1,#+112
        BL       __aeabi_memclr4
// 5239   if((bianyan2[1][45]-bianyan2[1][54])<-10&&(bianyan2[0][45]-bianyan2[0][54])<5)
        LDR.W    R0,??DataTable76
        LDRB     R0,[R0, #+100]
        LDR.W    R1,??DataTable76
        LDRB     R1,[R1, #+109]
        SUBS     R0,R0,R1
        CMN      R0,#+10
        BGE.W    ??xie_shizi_0
        LDR.W    R0,??DataTable76
        LDRB     R0,[R0, #+45]
        LDR.W    R1,??DataTable76
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+5
        BGE.W    ??xie_shizi_0
// 5240   {
// 5241     for(i=40;i>10;i--)
        MOVS     R7,#+40
        B.N      ??xie_shizi_1
??xie_shizi_2:
        SUBS     R7,R7,#+1
??xie_shizi_1:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+11
        BLT.N    ??xie_shizi_3
// 5242     {
// 5243       if((bianyan2[1][i]-bianyan2[1][i-1])<0&&(bianyan2[1][i-1]-bianyan2[1][i-2])<0&&(bianyan2[1][i-2]-bianyan2[1][i-3])<0)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??xie_shizi_2
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+54]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+53]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??xie_shizi_2
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+53]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+52]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??xie_shizi_2
// 5244       {
// 5245               break_point_1=i;
        MOVS     R4,R7
// 5246               break;
// 5247       }
// 5248     }
// 5249     if(i!=10)
??xie_shizi_3:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+10
        BEQ.W    ??xie_shizi_4
// 5250     {
// 5251       if((bianyan2[1][i]-bianyan2[1][i-3])<-2&&(bianyan2[1][i]-bianyan2[1][i+3])<-2)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+52]
        SUBS     R0,R0,R1
        CMN      R0,#+2
        BGE.W    ??xie_shizi_4
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+58]
        SUBS     R0,R0,R1
        CMN      R0,#+2
        BGE.W    ??xie_shizi_4
        B.N      ??xie_shizi_5
// 5252       {
// 5253         for(;i>1;i--)
??xie_shizi_6:
        SUBS     R7,R7,#+1
??xie_shizi_5:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??xie_shizi_7
// 5254         {
// 5255                 if(video[i-1][bianyan2[1][break_point_1]-5]==0&&video[i-2][bianyan2[1][break_point_1]-5]==0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R1,#+160
        LDR.W    R2,??DataTable76_1
        MLA      R1,R1,R7,R2
        ADDS     R0,R0,R1
        LDRB     R0,[R0, #-165]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_6
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R1,#+160
        LDR.W    R2,??DataTable76_1
        MLA      R1,R1,R7,R2
        ADDS     R0,R0,R1
        SUBW     R0,R0,#+325
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_6
// 5256                 {
// 5257                         break_point_3=i;
        MOVS     R6,R7
// 5258                         break;
// 5259                 }
// 5260         }
// 5261               
// 5262         if(i>1)
??xie_shizi_7:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??xie_shizi_4
// 5263         {
// 5264           for(i=break_point_3;i<break_point_1;i++)
        MOVS     R7,R6
        B.N      ??xie_shizi_8
// 5265           {
// 5266                   for(j=bianyan2[1][break_point_1]-5;j>0;j--)
??xie_shizi_9:
        SUBS     R8,R8,#+1
??xie_shizi_10:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.N    ??xie_shizi_11
// 5267                   {
// 5268                           if(video[i][j]==0&&video[i][j-1]==0){xie_shizi[i]=j;break;}
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_9
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_9
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        STRH     R8,[R0, R7, LSL #+1]
// 5269                   }
// 5270                   if(j==0)xie_shizi[i]=0;
??xie_shizi_11:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+0
        BNE.N    ??xie_shizi_12
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        MOVS     R1,#+0
        STRH     R1,[R0, R7, LSL #+1]
??xie_shizi_12:
        ADDS     R7,R7,#+1
??xie_shizi_8:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BGE.N    ??xie_shizi_13
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SUBS     R8,R0,#+5
        B.N      ??xie_shizi_10
// 5271           }
// 5272           for(i=break_point_3;i<break_point_1;i++)
??xie_shizi_13:
        MOVS     R7,R6
        B.N      ??xie_shizi_14
??xie_shizi_15:
        ADDS     R7,R7,#+1
??xie_shizi_14:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BGE.N    ??xie_shizi_16
// 5273           {
// 5274                   if((xie_shizi[i]-xie_shizi[i+1])>10&&(xie_shizi[i]-xie_shizi[i+2])>10)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R7, LSL #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+11
        BLT.N    ??xie_shizi_15
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R7, LSL #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #+4]
        SUBS     R0,R0,R1
        CMP      R0,#+11
        BLT.N    ??xie_shizi_15
// 5275                   {
// 5276                           break_point_2=i;
        MOVS     R5,R7
// 5277                           break;
// 5278                   }
// 5279           }
// 5280           if(i!=break_point_1)//证明存在斜十字
??xie_shizi_16:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BEQ.N    ??xie_shizi_4
// 5281           {
// 5282                   xie_shizi_flag_1=1;
        LDR.W    R0,??DataTable76_2
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
// 5283                   for(i=break_point_1;i>=0;i--)center[i]=0;
        MOVS     R7,R4
        B.N      ??xie_shizi_17
??xie_shizi_18:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_17:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_18
// 5284           }
// 5285         }
// 5286       }
// 5287     }
// 5288     if(xie_shizi_flag_1==0)
??xie_shizi_4:
        LDR.W    R0,??DataTable76_2
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_0
// 5289     {
// 5290       if(abs(bianyan2[1][break_point_1]-bianyan2[1][break_point_1-1])+abs(bianyan2[1][break_point_1]-bianyan2[1][break_point_1+1])>4)xie_shizi_flag_3=1;
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R7,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        SXTAH    R0,R0,R7
        CMP      R0,#+5
        BLT.N    ??xie_shizi_0
        LDR.W    R0,??DataTable76_4
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
// 5291     }
// 5292           
// 5293   }
// 5294   if((bianyan2[1][45]-bianyan2[1][54])>-5&&(bianyan2[0][45]-bianyan2[0][54])>10)
??xie_shizi_0:
        LDR.W    R0,??DataTable76
        LDRB     R0,[R0, #+100]
        LDR.W    R1,??DataTable76
        LDRB     R1,[R1, #+109]
        SUBS     R0,R0,R1
        CMN      R0,#+4
        BLT.W    ??xie_shizi_19
        LDR.W    R0,??DataTable76
        LDRB     R0,[R0, #+45]
        LDR.W    R1,??DataTable76
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+11
        BLT.W    ??xie_shizi_19
// 5295   {
// 5296     for(i=40;i>10;i--)
        MOVS     R7,#+40
        B.N      ??xie_shizi_20
??xie_shizi_21:
        SUBS     R7,R7,#+1
??xie_shizi_20:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+11
        BLT.N    ??xie_shizi_22
// 5297     {
// 5298       if((bianyan2[0][i]-bianyan2[0][i-1])>0&&(bianyan2[0][i-1]-bianyan2[0][i-2])>0&&(bianyan2[0][i-2]-bianyan2[0][i-3])>0)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #-1]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??xie_shizi_21
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #-2]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??xie_shizi_21
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-2]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #-3]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??xie_shizi_21
// 5299       {
// 5300               break_point_1=i;
        MOVS     R4,R7
// 5301               break;
// 5302       }
// 5303     }
// 5304     if(i!=10)
??xie_shizi_22:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+10
        BEQ.W    ??xie_shizi_23
// 5305     {
// 5306       if((bianyan2[0][i]-bianyan2[0][i-3])>2&&(bianyan2[0][i]-bianyan2[0][i+3])>2)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #-3]
        SUBS     R0,R0,R1
        CMP      R0,#+3
        BLT.W    ??xie_shizi_23
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+3]
        SUBS     R0,R0,R1
        CMP      R0,#+3
        BLT.W    ??xie_shizi_23
        B.N      ??xie_shizi_24
// 5307       {
// 5308               
// 5309         for(;i>1;i--)
??xie_shizi_25:
        SUBS     R7,R7,#+1
??xie_shizi_24:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??xie_shizi_26
// 5310         {
// 5311           if(video[i-1][bianyan2[0][break_point_1]+5]==0&&video[i-2][bianyan2[0][break_point_1]+5]==0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R4, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R1,#+160
        LDR.W    R2,??DataTable76_1
        MLA      R1,R1,R7,R2
        ADDS     R0,R0,R1
        LDRB     R0,[R0, #-155]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_25
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R4, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R1,#+160
        LDR.W    R2,??DataTable76_1
        MLA      R1,R1,R7,R2
        ADDS     R0,R0,R1
        SUBW     R0,R0,#+315
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_25
// 5312           {
// 5313                   break_point_3=i;
        MOVS     R6,R7
// 5314                   break;
// 5315           }
// 5316         }
// 5317                           
// 5318         if(i>1)
??xie_shizi_26:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??xie_shizi_23
// 5319         {
// 5320           for(i=break_point_3;i<break_point_1;i++)
        MOVS     R7,R6
        B.N      ??xie_shizi_27
// 5321           {
// 5322             for(j=bianyan2[0][break_point_1]+5;j<159;j++)
??xie_shizi_28:
        ADDS     R8,R8,#+1
??xie_shizi_29:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BGE.N    ??xie_shizi_30
// 5323             {
// 5324                     if(video[i][j]==0&&video[i][j+1]==0){xie_shizi[i]=j;break;}//
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_28
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_28
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        STRH     R8,[R0, R7, LSL #+1]
// 5325 
// 5326             }
// 5327             if(j==159)xie_shizi[i]=159;
??xie_shizi_30:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BNE.N    ??xie_shizi_31
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        MOVS     R1,#+159
        STRH     R1,[R0, R7, LSL #+1]
??xie_shizi_31:
        ADDS     R7,R7,#+1
??xie_shizi_27:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BGE.N    ??xie_shizi_32
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R4, R0]
        ADDS     R8,R0,#+5
        B.N      ??xie_shizi_29
// 5328           }
// 5329           for(i=break_point_3;i<break_point_1;i++)
??xie_shizi_32:
        MOVS     R7,R6
        B.N      ??xie_shizi_33
??xie_shizi_34:
        ADDS     R7,R7,#+1
??xie_shizi_33:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BGE.N    ??xie_shizi_35
// 5330           {
// 5331             if((xie_shizi[i]-xie_shizi[i+1])<-10&&(xie_shizi[i]-xie_shizi[i+2])<-10)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R7, LSL #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMN      R0,#+10
        BGE.N    ??xie_shizi_34
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R7, LSL #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #+4]
        SUBS     R0,R0,R1
        CMN      R0,#+10
        BGE.N    ??xie_shizi_34
// 5332             {
// 5333                     break_point_2=i;
        MOVS     R5,R7
// 5334                     break;
// 5335             }
// 5336           }
// 5337           if(i!=break_point_1)//证明存在斜十字
??xie_shizi_35:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BEQ.N    ??xie_shizi_23
// 5338           {
// 5339                   xie_shizi_flag_2=1;
        LDR.W    R0,??DataTable76_5
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
// 5340                   for(i=break_point_1;i>=0;i--)center[i]=0;
        MOVS     R7,R4
        B.N      ??xie_shizi_36
??xie_shizi_37:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_36:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_37
// 5341           }
// 5342         }
// 5343       }
// 5344     }
// 5345     if(xie_shizi_flag_2==0)
??xie_shizi_23:
        LDR.W    R0,??DataTable76_5
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_19
// 5346     {
// 5347       if(abs(bianyan2[0][break_point_1]-bianyan2[0][break_point_1-1])+abs(bianyan2[0][break_point_1]-bianyan2[0][break_point_1+1])>4)xie_shizi_flag_3=1;
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #-1]
        SUBS     R0,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R6,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        SXTAH    R0,R0,R6
        CMP      R0,#+5
        BLT.N    ??xie_shizi_19
        LDR.W    R0,??DataTable76_4
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
// 5348     }
// 5349   }
// 5350   if(xie_shizi_flag_1==1)
??xie_shizi_19:
        LDR.W    R0,??DataTable76_2
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BNE.W    ??xie_shizi_38
// 5351 	{
// 5352 		//bianyan[1][break_point_2]=xie_shizi[break_point_2];
// 5353 		
// 5354 		for(i=break_point_2;i>0;i--)
        MOVS     R7,R5
        B.N      ??xie_shizi_39
??xie_shizi_40:
        SUBS     R7,R7,#+1
??xie_shizi_39:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BLT.N    ??xie_shizi_41
// 5355 		{
// 5356 			
// 5357 			for(j=xie_shizi[break_point_2]/2;j<xie_shizi[break_point_2];j++)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        MOVS     R1,#+2
        SDIV     R8,R0,R1
        B.N      ??xie_shizi_42
??xie_shizi_43:
        ADDS     R8,R8,#+1
??xie_shizi_42:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,R0
        BGE.N    ??xie_shizi_44
// 5358 			{
// 5359 				if(video[i][j]==0&&video[i][j+1]==0){bianyan[1][i]=j;break;}
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_43
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_43
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        STRB     R8,[R0, #+55]
// 5360 			}
// 5361 			if((bianyan[1][i]-bianyan[1][i+1])>0)bianyan[1][i]=bianyan[1][i+1];
??xie_shizi_44:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??xie_shizi_45
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+56]
        STRB     R1,[R0, #+55]
// 5362 
// 5363 			if(j==xie_shizi[break_point_2]/2)break;
??xie_shizi_45:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        CMP      R8,R0
        BNE.N    ??xie_shizi_40
// 5364 		
// 5365 		}
// 5366         LianJie(1,break_point_1,break_point_2);
??xie_shizi_41:
        MOVS     R2,R5
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,R4
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,#+1
        BL       LianJie
// 5367         END_Line=i;
        LDR.W    R0,??DataTable76_7
        STRH     R7,[R0, #+0]
// 5368 		if(i==0)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BNE.N    ??xie_shizi_46
// 5369 		{
// 5370 			for(j=bianyan[1][2];j>0;j--)
        LDR.W    R0,??DataTable76_6
        LDRB     R8,[R0, #+57]
        B.N      ??xie_shizi_47
??xie_shizi_48:
        SUBS     R8,R8,#+1
??xie_shizi_47:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.N    ??xie_shizi_49
// 5371 			{
// 5372 				if(video[2][j]==0&&video[2][j-1]==0)break;
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable76_1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+320]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_48
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable76_1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+319]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_48
// 5373 			}
// 5374 			center[2]=(j+bianyan[1][2])/2;
??xie_shizi_49:
        LDR.W    R0,??DataTable76_6
        LDRB     R0,[R0, #+57]
        SXTAH    R0,R0,R8
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable76_3
        STRB     R0,[R1, #+2]
// 5375             LianJie_center(break_point_1+1,2);
        MOVS     R1,#+2
        ADDS     R0,R4,#+1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 5376 		}
// 5377 		if(i)
??xie_shizi_46:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BEQ.N    ??xie_shizi_50
// 5378 		{
// 5379 			for(j=xie_shizi[break_point_2]/2;j>0;j++)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        MOVS     R1,#+2
        SDIV     R8,R0,R1
        B.N      ??xie_shizi_51
??xie_shizi_52:
        ADDS     R8,R8,#+1
??xie_shizi_51:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.N    ??xie_shizi_53
// 5380 			{
// 5381 				if(video[i+1][j]==0&&video[i+1][j-1]==0)break;
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+160]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_52
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+159]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_52
// 5382 			}
// 5383 			center[i+1]=(bianyan[1][i+1]+j)/2;
??xie_shizi_53:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+56]
        SXTAH    R0,R0,R8
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76_3
        ADDS     R1,R7,R1
        STRB     R0,[R1, #+1]
// 5384             if(center[break_point_1+1]&&(center[i+1]-center[break_point_1+1])<-9)//
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76_3
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BEQ.N    ??xie_shizi_54
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76_3
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMN      R0,#+9
        BGE.N    ??xie_shizi_54
// 5385 			{
// 5386 				LianJie_center(break_point_1+1,i+1);
        ADDS     R1,R7,#+1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R0,R4,#+1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 5387 			}
// 5388 			if(center[break_point_1+1]==0||(center[i+1]-center[break_point_1+1])>=-9)center[i+1]=0;
??xie_shizi_54:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76_3
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BEQ.N    ??xie_shizi_55
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76_3
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMN      R0,#+9
        BLT.N    ??xie_shizi_50
??xie_shizi_55:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_3
        ADDS     R0,R7,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+1]
// 5389         
// 5390 		}
// 5391                 for(i=END_Line;i>=0;i--){bianyan[0][i]=0;bianyan[1][i]=0;}
??xie_shizi_50:
        LDR.W    R0,??DataTable76_7
        LDRSH    R7,[R0, #+0]
        B.N      ??xie_shizi_56
??xie_shizi_57:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+55]
        SUBS     R7,R7,#+1
??xie_shizi_56:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_57
// 5392 		for(i=break_point_2+1;i>=END_Line;i--)
        ADDS     R7,R5,#+1
        B.N      ??xie_shizi_58
// 5393 		{
// 5394             for(j=bianyan[1][i];j>0;j--)
??xie_shizi_59:
        SUBS     R8,R8,#+1
??xie_shizi_60:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.N    ??xie_shizi_61
// 5395 			{
// 5396 				if(video[i][j]==0&&video[i][j-1]==0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_59
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_59
// 5397 				{
// 5398 					bianyan[0][i]=j;
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        STRB     R8,[R7, R0]
// 5399 					break;
// 5400 				}
// 5401 			}
// 5402 			if(j==0)bianyan[1][i]=0;
??xie_shizi_61:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+0
        BNE.N    ??xie_shizi_62
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+55]
// 5403 			if(bianyan[0][i]-bianyan[0][i+1]>3)bianyan[0][i]=bianyan[0][i+1];
??xie_shizi_62:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+4
        BLT.N    ??xie_shizi_63
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76_6
        STRB     R0,[R7, R1]
??xie_shizi_63:
        SUBS     R7,R7,#+1
??xie_shizi_58:
        LDR.W    R0,??DataTable76_7
        LDRSH    R0,[R0, #+0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,R0
        BLT.N    ??xie_shizi_38
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        LDRB     R8,[R0, #+55]
        B.N      ??xie_shizi_60
// 5404 		}
// 5405 
// 5406 	}
// 5407 	if(xie_shizi_flag_2==1)
??xie_shizi_38:
        LDR.W    R0,??DataTable76_5
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BNE.W    ??xie_shizi_64
// 5408 	{
// 5409 		//bianyan[0][break_point_2]=xie_shizi[break_point_2];
// 5410 		
// 5411 		for(i=break_point_2;i>0;i--)
        MOVS     R7,R5
        B.N      ??xie_shizi_65
??xie_shizi_66:
        SUBS     R7,R7,#+1
??xie_shizi_65:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BLT.N    ??xie_shizi_67
// 5412 		{
// 5413 			for(j=(159+xie_shizi[break_point_2])/2;j>xie_shizi[break_point_2];j--)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        ADDS     R0,R0,#+159
        MOVS     R1,#+2
        SDIV     R8,R0,R1
        B.N      ??xie_shizi_68
??xie_shizi_69:
        SUBS     R8,R8,#+1
??xie_shizi_68:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R0,R8
        BGE.N    ??xie_shizi_70
// 5414 			{
// 5415                 if(video[i][j]==0&&video[i][j-1]==0){bianyan[0][i]=j;break;}
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_69
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_69
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        STRB     R8,[R7, R0]
// 5416 			}
// 5417 			if((bianyan[0][i]-bianyan[0][i+1])<0)bianyan[0][i]=bianyan[0][i+1];
??xie_shizi_70:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??xie_shizi_71
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76_6
        STRB     R0,[R7, R1]
// 5418 			if(j==(159+xie_shizi[break_point_2])/2)break;
??xie_shizi_71:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        ADDS     R0,R0,#+159
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        CMP      R8,R0
        BNE.N    ??xie_shizi_66
// 5419 		}
// 5420 		LianJie(0,break_point_1,break_point_2);
??xie_shizi_67:
        MOVS     R2,R5
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,R4
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,#+0
        BL       LianJie
// 5421                 END_Line=i;
        LDR.W    R0,??DataTable76_7
        STRH     R7,[R0, #+0]
// 5422 		if(i==0)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BNE.N    ??xie_shizi_72
// 5423 		{
// 5424 			for(j=bianyan[0][2];j<V-1;j++)
        LDR.W    R0,??DataTable76_6
        LDRB     R8,[R0, #+2]
        B.N      ??xie_shizi_73
??xie_shizi_74:
        ADDS     R8,R8,#+1
??xie_shizi_73:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BGE.N    ??xie_shizi_75
// 5425 			{
// 5426 				if(video[2][j]==0&&video[2][j+1]==0)break;
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable76_1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+320]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_74
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable76_1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+321]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_74
// 5427 			}
// 5428 			center[2]=(j+bianyan[0][2])/2;
??xie_shizi_75:
        LDR.W    R0,??DataTable76_6
        LDRB     R0,[R0, #+2]
        SXTAH    R0,R0,R8
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable76_3
        STRB     R0,[R1, #+2]
// 5429             LianJie_center(break_point_1+1,2);
        MOVS     R1,#+2
        ADDS     R0,R4,#+1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 5430 		}
// 5431 		if(i)
??xie_shizi_72:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BEQ.N    ??xie_shizi_76
// 5432 		{
// 5433 			for(j=(159+xie_shizi[break_point_2])/2;j<V-1;j++)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        ADDS     R0,R0,#+159
        MOVS     R1,#+2
        SDIV     R8,R0,R1
        B.N      ??xie_shizi_77
??xie_shizi_78:
        ADDS     R8,R8,#+1
??xie_shizi_77:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BGE.N    ??xie_shizi_79
// 5434 			{
// 5435 				if(video[i+1][j]==0&&video[i+1][j+1]==0)break;
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+160]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_78
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+161]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_78
// 5436 			}
// 5437 			center[i+1]=(bianyan[0][i+1]+j)/2;
??xie_shizi_79:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTAH    R0,R0,R8
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable76_3
        ADDS     R1,R7,R1
        STRB     R0,[R1, #+1]
// 5438             if(center[break_point_1+1]&&(center[i+1]-center[break_point_1+1])>9)//
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76_3
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BEQ.N    ??xie_shizi_80
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76_3
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+10
        BLT.N    ??xie_shizi_80
// 5439 			{
// 5440 				LianJie_center(break_point_1+1,i+1);
        ADDS     R1,R7,#+1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R0,R4,#+1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 5441 			}
// 5442 			if(center[break_point_1+1]==0||(center[i+1]-center[break_point_1+1])<=9)center[i+1]=0;
??xie_shizi_80:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76_3
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BEQ.N    ??xie_shizi_81
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76_3
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+10
        BGE.N    ??xie_shizi_76
??xie_shizi_81:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_3
        ADDS     R0,R7,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+1]
// 5443         
// 5444 		}
// 5445                 for(i=END_Line;i>=0;i--){bianyan[0][i]=0;bianyan[1][i]=0;}
??xie_shizi_76:
        LDR.W    R0,??DataTable76_7
        LDRSH    R7,[R0, #+0]
        B.N      ??xie_shizi_82
??xie_shizi_83:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable76_6
        ADDS     R0,R7,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+55]
        SUBS     R7,R7,#+1
??xie_shizi_82:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_83
// 5446 		for(i=break_point_2;i>=END_Line;i--)
        MOVS     R7,R5
        B.N      ??xie_shizi_84
// 5447 		{
// 5448             for(j=bianyan[0][i];j<V-1;j++)
??xie_shizi_85:
        ADDS     R8,R8,#+1
??xie_shizi_86:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BGE.N    ??xie_shizi_87
// 5449 			{
// 5450 				if(video[i][j]==0&&video[i][j+1]==0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_85
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??DataTable76_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_85
// 5451 				{
// 5452 					bianyan[1][i]=j;
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_6
        ADDS     R0,R7,R0
        STRB     R8,[R0, #+55]
// 5453 					break;
// 5454 				}
// 5455 			}
// 5456 			if(j==V-1)bianyan[1][i]=V-1;
??xie_shizi_87:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BNE.N    ??xie_shizi_88
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_6
        ADDS     R0,R7,R0
        MOVS     R1,#+159
        STRB     R1,[R0, #+55]
// 5457 			if(bianyan[1][i]-bianyan[1][i+1]>3)bianyan[1][i]=bianyan[1][i+1];
??xie_shizi_88:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+4
        BLT.N    ??xie_shizi_89
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_6
        ADDS     R0,R7,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+56]
        STRB     R1,[R0, #+55]
??xie_shizi_89:
        SUBS     R7,R7,#+1
??xie_shizi_84:
        LDR.N    R0,??DataTable76_7
        LDRSH    R0,[R0, #+0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,R0
        BLT.N    ??xie_shizi_64
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_6
        LDRB     R8,[R7, R0]
        B.N      ??xie_shizi_86
// 5458 		}
// 5459 		
// 5460 	}
// 5461   if(xie_shizi_flag_1==0&&xie_shizi_flag_2==0&&break_point_1<35&&break_point_1>18)
??xie_shizi_64:
        LDR.N    R0,??DataTable76_2
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??xie_shizi_90
        LDR.N    R0,??DataTable76_5
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??xie_shizi_90
        SUBS     R0,R4,#+19
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+16
        BCS.W    ??xie_shizi_90
// 5462 	{
// 5463 		if((bianyan[0][break_point_1]-bianyan[0][54])>100)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??DataTable76_6
        LDRB     R0,[R4, R0]
        LDR.N    R1,??DataTable76_6
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+101
        BLT.N    ??xie_shizi_91
// 5464 		{
// 5465 			if((bianyan[0][break_point_1]-bianyan[0][break_point_1+2])>10)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??DataTable76_6
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R1,??DataTable76_6
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+11
        BLT.N    ??xie_shizi_91
// 5466 			{
// 5467 				for(i=53;i>=break_point_1;i--)
        MOVS     R7,#+53
        B.N      ??xie_shizi_92
// 5468 				{
// 5469 					if(bianyan[1][i]>156)
// 5470 					{
// 5471 						if(center[i+1]+bianyan[0][i]-bianyan[0][i+1]<160)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 5472 						else
// 5473 						{
// 5474 							for(;i>=0;i--)center[i]=0;
??xie_shizi_93:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_94:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_93
// 5475 						}
??xie_shizi_95:
        SUBS     R7,R7,#+1
??xie_shizi_92:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BLT.N    ??xie_shizi_96
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??xie_shizi_95
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_6
        LDRB     R1,[R7, R1]
        UXTAB    R0,R1,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??xie_shizi_94
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_6
        LDRB     R1,[R7, R1]
        ADDS     R0,R1,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_3
        STRB     R0,[R7, R1]
        B.N      ??xie_shizi_95
// 5476 					}
// 5477 				}
// 5478 				for(i=break_point_1;i>=0;i--)center[i]=0;
??xie_shizi_96:
        MOVS     R7,R4
        B.N      ??xie_shizi_97
??xie_shizi_98:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_97:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_98
// 5479 			}
// 5480 		}
// 5481 		if((bianyan[1][break_point_1]-bianyan[1][54])<-100)
??xie_shizi_91:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??DataTable76_6
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        LDR.N    R1,??DataTable76_6
        LDRB     R1,[R1, #+109]
        SUBS     R0,R0,R1
        CMN      R0,#+100
        BGE.N    ??xie_shizi_90
// 5482 		{
// 5483 			if((bianyan[1][break_point_1]-bianyan[1][break_point_1+2])<-10)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??DataTable76_6
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R1,??DataTable76_6
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+57]
        SUBS     R0,R0,R1
        CMN      R0,#+10
        BGE.N    ??xie_shizi_90
// 5484 			{
// 5485 				for(i=53;i>=break_point_1;i--)
        MOVS     R7,#+53
        B.N      ??xie_shizi_99
// 5486 				{
// 5487 					if(bianyan[0][i]<3)
// 5488 					{
// 5489 						if(center[i+1]+bianyan[1][i]-bianyan[1][i+1]>=0)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 5490 						else
// 5491 						{
// 5492 							for(;i>=0;i--)center[i]=0;
??xie_shizi_100:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_101:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_100
// 5493 						}
??xie_shizi_102:
        SUBS     R7,R7,#+1
??xie_shizi_99:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BLT.N    ??xie_shizi_103
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_6
        LDRB     R0,[R7, R0]
        CMP      R0,#+3
        BCS.N    ??xie_shizi_102
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??xie_shizi_101
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_6
        LDRB     R1,[R7, R1]
        ADDS     R0,R1,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable76_3
        STRB     R0,[R7, R1]
        B.N      ??xie_shizi_102
// 5494 					}
// 5495 				}
// 5496 				for(i=break_point_1;i>=0;i--)center[i]=0;
??xie_shizi_103:
        MOVS     R7,R4
        B.N      ??xie_shizi_104
??xie_shizi_105:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable76_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_104:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_105
// 5497 			}
// 5498 		}
// 5499 	}
// 5500 }
??xie_shizi_90:
        ADD      SP,SP,#+112
        POP      {R4-R8,PC}       ;; return
// 5501 /*********************十字交叉系统识别与补线END********************/
// 5502 /***********************************
// 5503 *function name:X_LineBend()
// 5504 *function:优化图像处理，使急弯更加平滑的过渡到长大弯
// 5505 *date:2013.5.4
// 5506 *潘杰
// 5507 ************************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 5508 void X_LineBend(void)
// 5509 {
X_LineBend:
        PUSH     {R4}
// 5510   int16 k=54,i=0,j=0;
        MOVS     R0,#+54
        MOVS     R1,#+0
        MOVS     R2,#+0
        B.N      ??X_LineBend_0
// 5511   while(center[k]&&k>10)k--;
??X_LineBend_1:
        SUBS     R0,R0,#+1
??X_LineBend_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R1,??DataTable76_3
        LDRB     R1,[R0, R1]
        CMP      R1,#+0
        BEQ.N    ??X_LineBend_2
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+11
        BGE.N    ??X_LineBend_1
// 5512   if(k>15)
??X_LineBend_2:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+16
        BLT.N    ??X_LineBend_3
// 5513   {
// 5514     if((k-END_Line_2)>15)
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R1,??DataTable76_8
        LDRB     R1,[R1, #+0]
        SUBS     R1,R0,R1
        CMP      R1,#+16
        BLT.N    ??X_LineBend_3
// 5515     {
// 5516       if(xie_shizi_flag_3==0)
        LDR.N    R1,??DataTable76_4
        LDRSH    R1,[R1, #+0]
        CMP      R1,#+0
        BNE.N    ??X_LineBend_3
// 5517       {
// 5518         for(i=k;i>=END_Line_2;i--)
        MOVS     R1,R0
        B.N      ??X_LineBend_4
??X_LineBend_5:
        SUBS     R1,R1,#+1
??X_LineBend_4:
        LDR.N    R2,??DataTable76_8
        LDRB     R2,[R2, #+0]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R1,R2
        BLT.N    ??X_LineBend_6
// 5519         {
// 5520           if(bianyan[0][i]>0&&bianyan[1][i]<159){center[i]=(bianyan[1][i]+bianyan[0][i])/2;break;}
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable76_6
        LDRB     R2,[R1, R2]
        CMP      R2,#+1
        BCC.N    ??X_LineBend_5
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable76_6
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #+55]
        CMP      R2,#+159
        BCS.N    ??X_LineBend_5
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable76_6
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #+55]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R3,??DataTable76_6
        LDRB     R3,[R1, R3]
        UXTAB    R2,R3,R2
        MOVS     R3,#+2
        SDIV     R2,R2,R3
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R3,??DataTable76_3
        STRB     R2,[R1, R3]
// 5521         }
// 5522         for(j=k;j>i;j--)center[j]=center[i];
??X_LineBend_6:
        MOVS     R2,R0
        B.N      ??X_LineBend_7
??X_LineBend_8:
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        LDR.N    R3,??DataTable76_3
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R4,??DataTable76_3
        LDRB     R4,[R1, R4]
        STRB     R4,[R2, R3]
        SUBS     R2,R2,#+1
??X_LineBend_7:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R1,R2
        BLT.N    ??X_LineBend_8
// 5523         if((k-i)<3){center[k+1]=center[i];center[k+2]=center[i];}
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R0,R1
        CMP      R2,#+3
        BGE.N    ??X_LineBend_9
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R2,??DataTable76_3
        ADDS     R2,R0,R2
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R3,??DataTable76_3
        LDRB     R3,[R1, R3]
        STRB     R3,[R2, #+1]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R2,??DataTable76_3
        ADDS     R0,R0,R2
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable76_3
        LDRB     R2,[R1, R2]
        STRB     R2,[R0, #+2]
// 5524         for(i=i-1;i>=END_Line_2;i--)center[i]=(bianyan[1][i]+bianyan[0][i])/2;
??X_LineBend_9:
        SUBS     R1,R1,#+1
        B.N      ??X_LineBend_10
??X_LineBend_11:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R0,??DataTable76_6
        ADDS     R0,R1,R0
        LDRB     R0,[R0, #+55]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable76_6
        LDRB     R2,[R1, R2]
        UXTAB    R0,R2,R0
        MOVS     R2,#+2
        SDIV     R0,R0,R2
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable76_3
        STRB     R0,[R1, R2]
        SUBS     R1,R1,#+1
??X_LineBend_10:
        LDR.N    R0,??DataTable76_8
        LDRB     R0,[R0, #+0]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BGE.N    ??X_LineBend_11
// 5525       }
// 5526     }
// 5527   }
// 5528 }
??X_LineBend_3:
        POP      {R4}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable76:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable76_1:
        DC32     video

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable76_2:
        DC32     xie_shizi_flag_1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable76_3:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable76_4:
        DC32     xie_shizi_flag_3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable76_5:
        DC32     xie_shizi_flag_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable76_6:
        DC32     bianyan

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable76_7:
        DC32     END_Line

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable76_8:
        DC32     END_Line_2
// 5529 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
// 5530 void find_bianyan(void)
// 5531 {
find_bianyan:
        PUSH     {R4-R11,LR}
        SUB      SP,SP,#+132
// 5532   uint8 start_18_25=0,start_25_35=0,start_35_45=0,start_45_55=0;
        MOVS     R0,#+0
        STRB     R0,[SP, #+37]
        MOVS     R0,#+0
        STRB     R0,[SP, #+36]
        MOVS     R0,#+0
        STRB     R0,[SP, #+35]
        MOVS     R0,#+0
        STRB     R0,[SP, #+34]
// 5533   uint8 s1=0,s2=0,s3=0,s4=0,s5=0,s6=0,s7=0;
        MOVS     R0,#+0
        STRB     R0,[SP, #+11]
        MOVS     R0,#+0
        STRB     R0,[SP, #+9]
        MOVS     R0,#+0
        STRB     R0,[SP, #+5]
        MOVS     R0,#+0
        STRB     R0,[SP, #+4]
        MOVS     R0,#+0
        STRB     R0,[SP, #+8]
        MOVS     R0,#+0
        STRB     R0,[SP, #+10]
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
// 5534   int16 quan_bai_num_k=0,shizi2=0,shizi3=0,kk=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
        MOVS     R0,#+0
        STRH     R0,[SP, #+68]
        MOVS     R0,#+0
        STRH     R0,[SP, #+50]
        MOVS     R0,#+0
        STRH     R0,[SP, #+66]
// 5535   int16 n_1=0,num_3=0,num_4=0,num_5=0,num_6=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+22]
        MOVS     R0,#+0
        STRH     R0,[SP, #+62]
        MOVS     R0,#+0
        STRH     R0,[SP, #+60]
        MOVS     R0,#+0
        STRH     R0,[SP, #+32]
        MOVS     R0,#+0
        STRH     R0,[SP, #+30]
// 5536   int16 chazhi_center_1=0,chazhi_center_2=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 5537   int16 num_1=0,num_2=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+48]
        MOVS     R0,#+0
        STRH     R0,[SP, #+46]
// 5538   int16 n=0,numx=0;
        MOVS     R4,#+0
        MOVS     R5,#+0
// 5539   int16 bu1_number=0,bu2_number=0;
        MOVS     R11,#+0
        MOVS     R10,#+0
// 5540   int16 chazhi_5=0,chazhi_6=0;//用于十字交叉的断点与补线
        MOVS     R0,#+0
        STRH     R0,[SP, #+20]
        MOVS     R0,#+0
        STRH     R0,[SP, #+18]
// 5541   int16 i=0,j=0;
        MOVS     R6,#+0
        MOVS     R7,#+0
// 5542   int16 L0=0,L1=0,iii=H-1,iii_end=0,iiii=0,quan_bai_begin=0,quan_bai_end_1=0,quan_bai_end=0,shizi=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
        MOVS     R0,#+54
        STRH     R0,[SP, #+40]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
        MOVS     R0,#+0
        STRH     R0,[SP, #+44]
        MOVS     R0,#+0
        STRH     R0,[SP, #+14]
        MOVS     R0,#+0
        STRH     R0,[SP, #+16]
        MOVS     R0,#+0
        STRH     R0,[SP, #+38]
        MOVS     R0,#+0
        STRH     R0,[SP, #+28]
// 5543   int16 Small_S=0,b1=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+58]
        MOVS     R0,#+0
        STRH     R0,[SP, #+42]
// 5544   int16 X=0,chazhi1=0,chazhi3=0,chazhi1_buxian=0,chazhi3_buxian=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+56]
        MOVS     R0,#+0
        STRH     R0,[SP, #+54]
        MOVS     R0,#+0
        STRH     R0,[SP, #+52]
        MOVS     R0,#+0
        STRH     R0,[SP, #+26]
        MOVS     R0,#+0
        STRH     R0,[SP, #+24]
// 5545   int16 END=0,END1=0;//END2=0,END3=0;
        MOVS     R8,#+0
        MOVS     R0,#+0
        STRH     R0,[SP, #+64]
// 5546   int16 he=0,m=0,cha=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
        MOVS     R9,#+0
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 5547   int16 d1_1=0,d1_2=0,d2_1=0,d2_2=0;//十字交叉断点寻找与补线
        MOVS     R0,#+0
        STRH     R0,[SP, #+6]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
        MOVS     R0,#+0
        STRH     R0,[SP, #+12]
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
// 5548   unsigned char quan_bai[H]={0};
        ADD      R0,SP,#+72
        MOVS     R1,#+56
        BL       __aeabi_memclr4
// 5549   threshold();            //非动态阈值二值化
        BL       threshold
// 5550   
// 5551   
// 5552   /************起始线检测************/
// 5553   if(P_timer<30||P_timer>170)//P_timer<30||P_timer>200  pit2定时器，设置的是0.1s一次，每次P_timer++,即前3s与后20s进行起始线检测，但只有后20s检测到的起始线才停车
        LDR.W    R0,??find_bianyan_0
        LDR      R0,[R0, #+0]
        CMP      R0,#+30
        BLT.N    ??find_bianyan_1
        LDR.W    R0,??find_bianyan_0
        LDR      R0,[R0, #+0]
        CMP      R0,#+171
        BLT.W    ??find_bianyan_2
// 5554   {
// 5555     Start_Detection_3(0,25,18,40,120);
??find_bianyan_1:
        MOVS     R0,#+120
        STR      R0,[SP, #+0]
        MOVS     R3,#+40
        MOVS     R2,#+18
        MOVS     R1,#+25
        MOVS     R0,#+0
        BL       Start_Detection_3
// 5556     BW_filter(3);
        MOVS     R0,#+3
        BL       BW_filter
// 5557     if(BW3[0]==0)
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_3
// 5558     {
// 5559       for(i=0;i<82;i++)
        MOVS     R6,#+0
        B.N      ??find_bianyan_4
??find_bianyan_5:
        ADDS     R6,R6,#+1
??find_bianyan_4:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_6
// 5560       {
// 5561         if(BW3[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_5
// 5562         {
// 5563                 s1=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+11]
// 5564                 break;
// 5565         }
// 5566       }
// 5567       if(i<82)
??find_bianyan_6:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_8
// 5568       {
// 5569         for(;i<82;i++)
??find_bianyan_9:
        ADDS     R6,R6,#+1
??find_bianyan_8:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_10
// 5570         {
// 5571           if(BW3[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_9
// 5572           {
// 5573                   s2=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+9]
// 5574                   break;
// 5575           }
// 5576         }
// 5577         if(i<82)
??find_bianyan_10:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_11
// 5578         {
// 5579           for(;i<82;i++)
??find_bianyan_12:
        ADDS     R6,R6,#+1
??find_bianyan_11:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_13
// 5580           {
// 5581             if(BW3[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_12
// 5582             {
// 5583                     s3=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+5]
// 5584                     break;
// 5585             }
// 5586           }
// 5587           if(i<82)
??find_bianyan_13:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_14
// 5588           {
// 5589             for(;i<82;i++)
??find_bianyan_15:
        ADDS     R6,R6,#+1
??find_bianyan_14:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_16
// 5590             {
// 5591               if(BW3[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_15
// 5592               {
// 5593                       s4=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+4]
// 5594                       break;
// 5595               }
// 5596             }
// 5597             if(i<82)
??find_bianyan_16:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_17
// 5598             {
// 5599               for(;i<82;i++)
??find_bianyan_18:
        ADDS     R6,R6,#+1
??find_bianyan_17:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_19
// 5600               {
// 5601                 if(BW3[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_18
// 5602                 {
// 5603                   s5=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+8]
// 5604                   break;
// 5605                 }
// 5606               }
// 5607               if(i<82)
??find_bianyan_19:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_20
// 5608               {
// 5609                 for(;i<82;i++)
??find_bianyan_21:
        ADDS     R6,R6,#+1
??find_bianyan_20:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_22
// 5610                 {
// 5611                   if(BW3[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_21
// 5612                   {
// 5613                           s6=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+10]
// 5614                           break;
// 5615                   }
// 5616                 }
// 5617                 if(i<82)
??find_bianyan_22:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_23
// 5618                 {
// 5619                   for(;i<82;i++)
??find_bianyan_24:
        ADDS     R6,R6,#+1
??find_bianyan_23:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_25
// 5620                   {
// 5621                     if(BW3[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_24
// 5622                     {
// 5623                             s7=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+0]
// 5624                             break;
// 5625                     }
// 5626                   }
// 5627                   if(i==82)start_xian=1;
??find_bianyan_25:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BNE.N    ??find_bianyan_7
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5628                 }
// 5629 	      }
// 5630 	    }
// 5631 	  }
// 5632 	}
// 5633 
// 5634       }
// 5635       if(start_xian==1)
??find_bianyan_7:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_3
// 5636       {
// 5637          if((s4-s3)>25||(s2-s1)>7||(s6-s5)>7||(s3-s2)<6||(s5-s4)<6)
        LDRB     R0,[SP, #+4]
        LDRB     R1,[SP, #+5]
        SUBS     R0,R0,R1
        CMP      R0,#+26
        BGE.N    ??find_bianyan_27
        LDRB     R0,[SP, #+9]
        LDRB     R1,[SP, #+11]
        SUBS     R0,R0,R1
        CMP      R0,#+8
        BGE.N    ??find_bianyan_27
        LDRB     R0,[SP, #+10]
        LDRB     R1,[SP, #+8]
        SUBS     R0,R0,R1
        CMP      R0,#+8
        BGE.N    ??find_bianyan_27
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+9]
        SUBS     R0,R0,R1
        CMP      R0,#+6
        BLT.N    ??find_bianyan_27
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+4]
        SUBS     R0,R0,R1
        CMP      R0,#+6
        BGE.N    ??find_bianyan_28
// 5638          {
// 5639                  start_18_25_2=1;
??find_bianyan_27:
        LDR.W    R0,??find_bianyan_26+0x4
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5640                  start_xian=0;
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        B.N      ??find_bianyan_3
// 5641          }
// 5642          else start_18_25=1;
??find_bianyan_28:
        MOVS     R0,#+1
        STRB     R0,[SP, #+37]
// 5643       }
// 5644     }
// 5645 	
// 5646     if(start_xian==0)
??find_bianyan_3:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_29
// 5647     {
// 5648       Start_Detection(0,35,25,30,130);
        MOVS     R0,#+130
        STR      R0,[SP, #+0]
        MOVS     R3,#+30
        MOVS     R2,#+25
        MOVS     R1,#+35
        MOVS     R0,#+0
        BL       Start_Detection
// 5649       BW_filter(0);
        MOVS     R0,#+0
        BL       BW_filter
// 5650       if(BW[0]==0)
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_30
// 5651       {
// 5652         for(i=0;i<102;i++)
        MOVS     R6,#+0
        B.N      ??find_bianyan_31
??find_bianyan_32:
        ADDS     R6,R6,#+1
??find_bianyan_31:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_33
// 5653         {
// 5654           if(BW[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_32
// 5655           {
// 5656                   s1=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+11]
// 5657                   break;
// 5658           }
// 5659         }
// 5660         if(i<102)
??find_bianyan_33:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_34
// 5661         {
// 5662           for(;i<102;i++)
??find_bianyan_35:
        ADDS     R6,R6,#+1
??find_bianyan_34:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_36
// 5663           {
// 5664             if(BW[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_35
// 5665             {
// 5666                     s2=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+9]
// 5667                     break;
// 5668             }
// 5669           }
// 5670           if(i<102)
??find_bianyan_36:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_37
// 5671           {
// 5672             for(;i<102;i++)
??find_bianyan_38:
        ADDS     R6,R6,#+1
??find_bianyan_37:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_39
// 5673             {
// 5674               if(BW[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_38
// 5675               {
// 5676                       s3=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+5]
// 5677                       break;
// 5678               }
// 5679             }
// 5680             if(i<102)
??find_bianyan_39:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_40
// 5681             {
// 5682               for(;i<102;i++)
??find_bianyan_41:
        ADDS     R6,R6,#+1
??find_bianyan_40:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_42
// 5683               {
// 5684                 if(BW[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_41
// 5685                 {
// 5686                         s4=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+4]
// 5687                         break;
// 5688                 }
// 5689               }
// 5690               if(i<102)
??find_bianyan_42:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_43
// 5691               {
// 5692                 for(;i<102;i++)
??find_bianyan_44:
        ADDS     R6,R6,#+1
??find_bianyan_43:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_45
// 5693                 {
// 5694                   if(BW[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_44
// 5695                   {
// 5696                           s5=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+8]
// 5697                           break;
// 5698                   }
// 5699                 }
// 5700                 if(i<102)
??find_bianyan_45:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_46
// 5701                 {
// 5702                   for(;i<102;i++)
??find_bianyan_47:
        ADDS     R6,R6,#+1
??find_bianyan_46:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_48
// 5703                   {
// 5704                     if(BW[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_47
// 5705                     {
// 5706                             s6=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+10]
// 5707                             break;
// 5708                     }
// 5709                   }
// 5710                   if(i<102)
??find_bianyan_48:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_49
// 5711                   {
// 5712                     for(;i<102;i++)
??find_bianyan_50:
        ADDS     R6,R6,#+1
??find_bianyan_49:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_51
// 5713                     {
// 5714                       if(BW[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_50
// 5715                       {
// 5716                               s7=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+0]
// 5717                               break;
// 5718                       }
// 5719                     }
// 5720                     if(i==102)start_xian=1;
??find_bianyan_51:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BNE.N    ??find_bianyan_30
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5721 		  }
// 5722 		}
// 5723 	      }
// 5724 	    }
// 5725 	  }
// 5726         }
// 5727       }
// 5728       if(start_xian==1)
??find_bianyan_30:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_52
// 5729       {
// 5730          if((s4-s3)>30||(s2-s1)>12||(s6-s5)>12)//||(s3-s2)<4||(s5-s4)<4
        LDRB     R0,[SP, #+4]
        LDRB     R1,[SP, #+5]
        SUBS     R0,R0,R1
        CMP      R0,#+31
        BGE.N    ??find_bianyan_53
        LDRB     R0,[SP, #+9]
        LDRB     R1,[SP, #+11]
        SUBS     R0,R0,R1
        CMP      R0,#+13
        BGE.N    ??find_bianyan_53
        LDRB     R0,[SP, #+10]
        LDRB     R1,[SP, #+8]
        SUBS     R0,R0,R1
        CMP      R0,#+13
        BLT.N    ??find_bianyan_54
// 5731          {
// 5732                  start_25_35_2=1;
??find_bianyan_53:
        LDR.W    R0,??find_bianyan_26+0xC
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5733                  start_xian=0;
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        B.N      ??find_bianyan_52
// 5734          }
// 5735          else start_25_35=1;
??find_bianyan_54:
        MOVS     R0,#+1
        STRB     R0,[SP, #+36]
// 5736       }
// 5737       if(start_xian==0)
??find_bianyan_52:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_29
// 5738       {
// 5739         Start_Detection_2(0,45,35,20,140);
        MOVS     R0,#+140
        STR      R0,[SP, #+0]
        MOVS     R3,#+20
        MOVS     R2,#+35
        MOVS     R1,#+45
        MOVS     R0,#+0
        BL       Start_Detection_2
// 5740         BW_filter(2);
        MOVS     R0,#+2
        BL       BW_filter
// 5741         if(BW2[0]==0)
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_55
// 5742         {
// 5743           for(i=0;i<122;i++)
        MOVS     R6,#+0
        B.N      ??find_bianyan_56
??find_bianyan_57:
        ADDS     R6,R6,#+1
??find_bianyan_56:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_58
// 5744           {
// 5745             if(BW2[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_57
// 5746             {
// 5747                     s1=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+11]
// 5748                     break;
// 5749             }
// 5750           }
// 5751           if(i<122)
??find_bianyan_58:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_59
// 5752           {
// 5753             for(;i<122;i++)
??find_bianyan_60:
        ADDS     R6,R6,#+1
??find_bianyan_59:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_61
// 5754             {
// 5755               if(BW2[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_60
// 5756               {
// 5757                       s2=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+9]
// 5758                       break;
// 5759               }
// 5760             }
// 5761             if(i<122)
??find_bianyan_61:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_62
// 5762             {
// 5763               for(;i<122;i++)
??find_bianyan_63:
        ADDS     R6,R6,#+1
??find_bianyan_62:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_64
// 5764               {
// 5765                 if(BW2[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_63
// 5766                 {
// 5767                         s3=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+5]
// 5768                         break;
// 5769                 }
// 5770               }
// 5771               if(i<122)
??find_bianyan_64:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_65
// 5772               {
// 5773                 for(;i<122;i++)
??find_bianyan_66:
        ADDS     R6,R6,#+1
??find_bianyan_65:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_67
// 5774                 {
// 5775                   if(BW2[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_66
// 5776                   {
// 5777                           s4=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+4]
// 5778                           break;
// 5779                   }
// 5780                 }
// 5781                 if(i<122)
??find_bianyan_67:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_68
// 5782                 {
// 5783                   for(;i<122;i++)
??find_bianyan_69:
        ADDS     R6,R6,#+1
??find_bianyan_68:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_70
// 5784                   {
// 5785                     if(BW2[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_69
// 5786                     {
// 5787                             s5=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+8]
// 5788                             break;
// 5789                     }
// 5790                   }
// 5791                   if(i<122)
??find_bianyan_70:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_71
// 5792                   {
// 5793                     for(;i<122;i++)
??find_bianyan_72:
        ADDS     R6,R6,#+1
??find_bianyan_71:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_73
// 5794                     {
// 5795                       if(BW2[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_72
// 5796                       {
// 5797                               s6=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+10]
// 5798                               break;
// 5799                       }
// 5800                     }
// 5801                     if(i<122)
??find_bianyan_73:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_74
// 5802                     {
// 5803                       for(;i<122;i++)
??find_bianyan_75:
        ADDS     R6,R6,#+1
??find_bianyan_74:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_76
// 5804                       {
// 5805                         if(BW2[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_75
// 5806                         {
// 5807                                 s7=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+0]
// 5808                                 break;
// 5809                         }
// 5810                       }
// 5811                       if(i==122)start_xian=1;
??find_bianyan_76:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BNE.N    ??find_bianyan_55
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5812                     }
// 5813                   }
// 5814                 }
// 5815               }
// 5816             }
// 5817           }
// 5818         }
// 5819         if(start_xian==1)
??find_bianyan_55:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_77
// 5820         {
// 5821           if((s4-s3)>35||(s2-s1)>13||(s6-s5)>13||(s3-s2)<15||(s5-s4)<15)
        LDRB     R0,[SP, #+4]
        LDRB     R1,[SP, #+5]
        SUBS     R0,R0,R1
        CMP      R0,#+36
        BGE.N    ??find_bianyan_78
        LDRB     R0,[SP, #+9]
        LDRB     R1,[SP, #+11]
        SUBS     R0,R0,R1
        CMP      R0,#+14
        BGE.N    ??find_bianyan_78
        LDRB     R0,[SP, #+10]
        LDRB     R1,[SP, #+8]
        SUBS     R0,R0,R1
        CMP      R0,#+14
        BGE.N    ??find_bianyan_78
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+9]
        SUBS     R0,R0,R1
        CMP      R0,#+15
        BLT.N    ??find_bianyan_78
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+4]
        SUBS     R0,R0,R1
        CMP      R0,#+15
        BGE.N    ??find_bianyan_79
// 5822           {
// 5823                   start_35_45_2=1;
??find_bianyan_78:
        LDR.W    R0,??find_bianyan_26+0x14
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5824                   start_xian=0;
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        B.N      ??find_bianyan_77
// 5825           }
// 5826           else start_35_45=1;
??find_bianyan_79:
        MOVS     R0,#+1
        STRB     R0,[SP, #+35]
// 5827         }
// 5828         if(start_xian==0)
??find_bianyan_77:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_29
// 5829         {
// 5830           Start_Detection_4(0,54,45,10,150);
        MOVS     R0,#+150
        STR      R0,[SP, #+0]
        MOVS     R3,#+10
        MOVS     R2,#+45
        MOVS     R1,#+54
        MOVS     R0,#+0
        BL       Start_Detection_4
// 5831           BW_filter(4);
        MOVS     R0,#+4
        BL       BW_filter
// 5832           if(BW4[0]==0)
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_80
// 5833           {
// 5834             for(i=0;i<142;i++)
        MOVS     R6,#+0
        B.N      ??find_bianyan_81
??find_bianyan_82:
        ADDS     R6,R6,#+1
??find_bianyan_81:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_83
// 5835             {
// 5836               if(BW4[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_82
// 5837               {
// 5838                       s1=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+11]
// 5839                       break;
// 5840               }
// 5841             }
// 5842             if(i<142)
??find_bianyan_83:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_84
// 5843             {
// 5844               for(;i<142;i++)
??find_bianyan_85:
        ADDS     R6,R6,#+1
??find_bianyan_84:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_86
// 5845               {
// 5846                 if(BW4[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_85
// 5847                 {
// 5848                         s2=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+9]
// 5849                         break;
// 5850                 }
// 5851               }
// 5852               if(i<142)
??find_bianyan_86:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_87
// 5853               {
// 5854                 for(;i<142;i++)
??find_bianyan_88:
        ADDS     R6,R6,#+1
??find_bianyan_87:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_89
// 5855                 {
// 5856                   if(BW4[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_88
// 5857                   {
// 5858                           s3=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+5]
// 5859                           break;
// 5860                   }
// 5861                 }
// 5862                 if(i<142)
??find_bianyan_89:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_90
// 5863                 {
// 5864                   for(;i<142;i++)
??find_bianyan_91:
        ADDS     R6,R6,#+1
??find_bianyan_90:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_92
// 5865                   {
// 5866                     if(BW4[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_91
// 5867                     {
// 5868                             s4=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+4]
// 5869                             break;
// 5870                     }
// 5871                   }
// 5872                   if(i<142)
??find_bianyan_92:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_93
// 5873                   {
// 5874                     for(;i<142;i++)
??find_bianyan_94:
        ADDS     R6,R6,#+1
??find_bianyan_93:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_95
// 5875                     {
// 5876                       if(BW4[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_94
// 5877                       {
// 5878                               s5=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+8]
// 5879                               break;
// 5880                       }
// 5881                     }
// 5882                     if(i<142)
??find_bianyan_95:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_96
// 5883                     {
// 5884                       for(;i<142;i++)
??find_bianyan_97:
        ADDS     R6,R6,#+1
??find_bianyan_96:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_98
// 5885                       {
// 5886                         if(BW4[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_97
// 5887                         {
// 5888                                 s6=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+10]
// 5889                                 break;
// 5890                         }
// 5891                       }
// 5892                       if(i<142)
??find_bianyan_98:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_99
// 5893                       {
// 5894                         for(;i<142;i++)
??find_bianyan_100:
        ADDS     R6,R6,#+1
??find_bianyan_99:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_101
// 5895                         {
// 5896                           if(BW4[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_100
// 5897                           {
// 5898                                   s7=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+0]
// 5899                                   break;
// 5900                           }
// 5901                         }
// 5902                         if(i==142)start_xian=1;
??find_bianyan_101:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BNE.N    ??find_bianyan_80
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5903                       }
// 5904                     }
// 5905 		  }
// 5906 		}
// 5907 	      }
// 5908             }
// 5909           }
// 5910           if(start_xian==1)
??find_bianyan_80:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_29
// 5911           {
// 5912             if((s4-s3)>35||(s2-s1)>15||(s6-s5)>15)
        LDRB     R0,[SP, #+4]
        LDRB     R1,[SP, #+5]
        SUBS     R0,R0,R1
        CMP      R0,#+36
        BGE.N    ??find_bianyan_102
        LDRB     R0,[SP, #+9]
        LDRB     R1,[SP, #+11]
        SUBS     R0,R0,R1
        CMP      R0,#+16
        BGE.N    ??find_bianyan_102
        LDRB     R0,[SP, #+10]
        LDRB     R1,[SP, #+8]
        SUBS     R0,R0,R1
        CMP      R0,#+16
        BLT.N    ??find_bianyan_103
// 5913             {
// 5914                     start_45_55_2=1;
??find_bianyan_102:
        LDR.W    R0,??find_bianyan_26+0x1C
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5915                     start_xian=0;
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        B.N      ??find_bianyan_29
// 5916             }
// 5917             else start_45_55=1;
??find_bianyan_103:
        MOVS     R0,#+1
        STRB     R0,[SP, #+34]
// 5918           }
// 5919         }
// 5920       }
// 5921     }
// 5922     //for(i=0;i<102;i++)BW[i]=0;
// 5923 	
// 5924 	/************起始线检测END************/
// 5925   /***************如果检测出起始线就把起始线黑线去掉**************/
// 5926     if(start_xian==1)
??find_bianyan_29:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_2
// 5927 	{
// 5928 		if(start_45_55==1)
        LDRB     R0,[SP, #+34]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_104
// 5929 		{
// 5930              for(i=(s1+s2)/2+10;i<=(s3+s4)/2+10;i++)
        LDRB     R0,[SP, #+11]
        LDRB     R1,[SP, #+9]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+10
        B.N      ??find_bianyan_105
        Nop      
        DATA
??find_bianyan_0:
        DC32     P_timer
        DC32     BW3
        THUMB
// 5931 			 {
// 5932 				 for(j=54;j>45;j--)
// 5933 				 {
// 5934 					 if(video[j][i]==0)break;
// 5935 				 }
// 5936 				 for(;j>40;j--)
// 5937 				 {
// 5938 					 if(video[j][i]==0)video[j][i]=1;
??find_bianyan_106:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_107
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
// 5939 				 }
??find_bianyan_107:
        SUBS     R7,R7,#+1
??find_bianyan_108:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+41
        BGE.N    ??find_bianyan_106
        ADDS     R6,R6,#+1
??find_bianyan_105:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+10
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_109
        MOVS     R7,#+54
        B.N      ??find_bianyan_110
??find_bianyan_111:
        SUBS     R7,R7,#+1
??find_bianyan_110:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+46
        BLT.N    ??find_bianyan_108
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_111
        B.N      ??find_bianyan_108
// 5940 			 }
// 5941 			 for(i=(s3+s4)/2+10;i<=(s5+s6)/2+10;i++)
??find_bianyan_109:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+10
        B.N      ??find_bianyan_112
// 5942 			 {
// 5943 				 for(j=54;j>45;j--)
// 5944 				 {
// 5945 					 if(video[j][i]==0)break;
// 5946 				 }
// 5947 				 for(;j>40;j--)
// 5948 				 {
// 5949 					 if(video[j][i]==0)video[j][i]=1;
??find_bianyan_113:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_114
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
// 5950 				 }
??find_bianyan_114:
        SUBS     R7,R7,#+1
??find_bianyan_115:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+41
        BGE.N    ??find_bianyan_113
        ADDS     R6,R6,#+1
??find_bianyan_112:
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+10]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+10
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_104
        MOVS     R7,#+54
        B.N      ??find_bianyan_116
??find_bianyan_117:
        SUBS     R7,R7,#+1
??find_bianyan_116:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+46
        BLT.N    ??find_bianyan_115
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_117
        B.N      ??find_bianyan_115
// 5951 			 }
// 5952 		}
// 5953 		if(start_35_45==1)
??find_bianyan_104:
        LDRB     R0,[SP, #+35]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_118
// 5954 		{
// 5955              for(i=(s1+s2)/2+20;i<=(s3+s4)/2+20;i++)
        LDRB     R0,[SP, #+11]
        LDRB     R1,[SP, #+9]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+20
        B.N      ??find_bianyan_119
// 5956 			 {
// 5957 				 for(j=47;j>35;j--)
// 5958 				 {
// 5959 					 if(video[j][i]==0)
// 5960 					 {
// 5961 						 m=j;
// 5962 						 break;
// 5963 					 }
// 5964 				 }
// 5965 				 if(j==47)
// 5966 				 {
// 5967 					 m=j+1;
// 5968 					 for(;j>40;j--)
// 5969 					 {
// 5970 						 if(video[j][i]==0)video[j][i]=1;
// 5971 					 }
// 5972 					 for(;m<50;m++)
// 5973 					 {
// 5974 						 if(video[m][i]==0)video[m][i]=1;
// 5975 					 }
// 5976 				 }
// 5977 				 else if(j==35)
// 5978 				 {
// 5979 					 for(;j>31;j--)video[j][i]=1;
// 5980 				 }
// 5981 				 else
// 5982 				 {
// 5983 					 for(;j>31;j--)
// 5984 					 {
// 5985 						 if(video[j][i]==1)break;
// 5986 					 }
// 5987 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_120:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_121:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_120
??find_bianyan_122:
        ADDS     R6,R6,#+1
??find_bianyan_119:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+20
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_123
        MOVS     R7,#+47
        B.N      ??find_bianyan_124
??find_bianyan_125:
        SUBS     R7,R7,#+1
??find_bianyan_124:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+36
        BLT.N    ??find_bianyan_126
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_125
        MOV      R9,R7
??find_bianyan_126:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+47
        BNE.N    ??find_bianyan_127
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_128
??find_bianyan_129:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_130
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_130:
        SUBS     R7,R7,#+1
??find_bianyan_128:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+41
        BGE.N    ??find_bianyan_129
??find_bianyan_131:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+50
        BGE.N    ??find_bianyan_122
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_132
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_132:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_131
??find_bianyan_127:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+35
        BNE.N    ??find_bianyan_133
??find_bianyan_134:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+32
        BLT.N    ??find_bianyan_122
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R7,R7,#+1
        B.N      ??find_bianyan_134
??find_bianyan_135:
        SUBS     R7,R7,#+1
??find_bianyan_133:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+32
        BLT.N    ??find_bianyan_121
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_135
        B.N      ??find_bianyan_121
// 5988 				 }
// 5989 				 
// 5990 			 }
// 5991 			 for(i=(s3+s4)/2+20;i<=(s5+s6)/2+20;i++)
??find_bianyan_123:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+20
        B.N      ??find_bianyan_136
// 5992 			 {
// 5993 				 for(j=47;j>35;j--)
// 5994 				 {
// 5995 					 if(video[j][i]==0)
// 5996 					 {
// 5997 						 m=j;
// 5998 						 break;
// 5999 					 }
// 6000 				 }
// 6001 				 if(j==47)
// 6002 				 {
// 6003 					 m=j+1;
// 6004 					 for(;j>40;j--)
// 6005 					 {
// 6006 						 if(video[j][i]==0)video[j][i]=1;
// 6007 					 }
// 6008 					 for(;m<50;m++)
// 6009 					 {
// 6010 						 if(video[m][i]==0)video[m][i]=1;
// 6011 					 }
// 6012 				 }
// 6013 				 else if(j==35)
// 6014 				 {
// 6015 					 for(;j>31;j--)video[j][i]=1;
// 6016 				 }
// 6017 				 else
// 6018 				 {
// 6019 					 for(;j>31;j--)
// 6020 					 {
// 6021 						 if(video[j][i]==1)break;
// 6022 					 }
// 6023 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_137:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_138:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_137
??find_bianyan_139:
        ADDS     R6,R6,#+1
??find_bianyan_136:
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+10]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+20
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_118
        MOVS     R7,#+47
        B.N      ??find_bianyan_140
??find_bianyan_141:
        SUBS     R7,R7,#+1
??find_bianyan_140:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+36
        BLT.N    ??find_bianyan_142
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_141
        MOV      R9,R7
??find_bianyan_142:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+47
        BNE.N    ??find_bianyan_143
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_144
??find_bianyan_145:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_146
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_146:
        SUBS     R7,R7,#+1
??find_bianyan_144:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+41
        BGE.N    ??find_bianyan_145
??find_bianyan_147:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+50
        BGE.N    ??find_bianyan_139
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_148
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_148:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_147
??find_bianyan_143:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+35
        BNE.N    ??find_bianyan_149
??find_bianyan_150:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+32
        BLT.N    ??find_bianyan_139
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R7,R7,#+1
        B.N      ??find_bianyan_150
??find_bianyan_151:
        SUBS     R7,R7,#+1
??find_bianyan_149:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+32
        BLT.N    ??find_bianyan_138
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_151
        B.N      ??find_bianyan_138
// 6024 				 }
// 6025 				 
// 6026 			 }
// 6027 		}
// 6028 		if(start_25_35==1)
??find_bianyan_118:
        LDRB     R0,[SP, #+36]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_152
// 6029 		{
// 6030              for(i=(s2+s1)/2+30;i<=(s3+s4)/2+30;i++)
        LDRB     R0,[SP, #+9]
        LDRB     R1,[SP, #+11]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+30
        B.N      ??find_bianyan_153
// 6031 			 {
// 6032 				 for(j=37;j>25;j--)
// 6033 				 {
// 6034 					 if(video[j][i]==0)
// 6035 					 {
// 6036 						 m=j;
// 6037 						 break;
// 6038 					 }
// 6039 				 }
// 6040 				 if(j==37)
// 6041 				 {
// 6042 					 m=j+1;
// 6043 					 for(;j>30;j--)
// 6044 					 {
// 6045 						 if(video[j][i]==0)video[j][i]=1;
// 6046 					 }
// 6047 					 for(;m<40;m++)
// 6048 					 {
// 6049 						 if(video[m][i]==0)video[m][i]=1;
// 6050 					 }
// 6051 				 }
// 6052 				 else
// 6053 				 {
// 6054 					 for(;j>22;j--)
// 6055 					 {
// 6056 						 if(video[j][i]==1)break;
// 6057 					 }
// 6058 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_154:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_155:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_154
??find_bianyan_156:
        ADDS     R6,R6,#+1
??find_bianyan_153:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+30
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_157
        MOVS     R7,#+37
        B.N      ??find_bianyan_158
??find_bianyan_159:
        SUBS     R7,R7,#+1
??find_bianyan_158:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+26
        BLT.N    ??find_bianyan_160
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_159
        MOV      R9,R7
??find_bianyan_160:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+37
        BNE.N    ??find_bianyan_161
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_162
??find_bianyan_163:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_164
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_164:
        SUBS     R7,R7,#+1
??find_bianyan_162:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+31
        BGE.N    ??find_bianyan_163
??find_bianyan_165:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+40
        BGE.N    ??find_bianyan_156
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_166
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_166:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_165
??find_bianyan_167:
        SUBS     R7,R7,#+1
??find_bianyan_161:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+23
        BLT.N    ??find_bianyan_155
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_167
        B.N      ??find_bianyan_155
// 6059 				 }
// 6060 				 
// 6061 			 }
// 6062 			 for(i=(s3+s4)/2+30;i<=(s5+s6)/2+30;i++)
??find_bianyan_157:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+30
        B.N      ??find_bianyan_168
// 6063 			 {
// 6064 				 for(j=37;j>25;j--)
// 6065 				 {
// 6066 					 if(video[j][i]==0)
// 6067 					 {
// 6068 						 m=j;
// 6069 						 break;
// 6070 					 }
// 6071 				 }
// 6072 				 if(j==37)
// 6073 				 {
// 6074 					 m=j+1;
// 6075 					 for(;j>30;j--)
// 6076 					 {
// 6077 						 if(video[j][i]==0)video[j][i]=1;
// 6078 					 }
// 6079 					 for(;m<40;m++)
// 6080 					 {
// 6081 						 if(video[m][i]==0)video[m][i]=1;
// 6082 					 }
// 6083 				 }
// 6084 				 else
// 6085 				 {
// 6086 					 for(;j>22;j--)
// 6087 					 {
// 6088 						 if(video[j][i]==1)break;
// 6089 					 }
// 6090 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_169:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_170:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_169
??find_bianyan_171:
        ADDS     R6,R6,#+1
??find_bianyan_168:
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+10]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+30
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_152
        MOVS     R7,#+37
        B.N      ??find_bianyan_172
??find_bianyan_173:
        SUBS     R7,R7,#+1
??find_bianyan_172:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+26
        BLT.N    ??find_bianyan_174
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_173
        MOV      R9,R7
??find_bianyan_174:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+37
        BNE.N    ??find_bianyan_175
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_176
??find_bianyan_177:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_178
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_178:
        SUBS     R7,R7,#+1
??find_bianyan_176:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+31
        BGE.N    ??find_bianyan_177
??find_bianyan_179:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+40
        BGE.N    ??find_bianyan_171
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_180
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_180:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_179
??find_bianyan_181:
        SUBS     R7,R7,#+1
??find_bianyan_175:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+23
        BLT.N    ??find_bianyan_170
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_181
        B.N      ??find_bianyan_170
// 6091 				 }
// 6092 				 
// 6093 			 }
// 6094 		}
// 6095 		if(start_18_25==1)
??find_bianyan_152:
        LDRB     R0,[SP, #+37]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_2
// 6096 		{
// 6097              for(i=(s1+s2)/2+40;i<=(s3+s4)/2+40;i++)
        LDRB     R0,[SP, #+11]
        LDRB     R1,[SP, #+9]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+40
        B.N      ??find_bianyan_182
// 6098 			 {
// 6099 				 for(j=27;j>18;j--)
// 6100 				 {
// 6101 					 if(video[j][i]==0)
// 6102 					 {
// 6103 						 m=j;
// 6104 						 break;
// 6105 					 }
// 6106 				 }
// 6107 				 if(j==27)
// 6108 				 {
// 6109 					 m=j+1;
// 6110 					 for(;j>20;j--)
// 6111 					 {
// 6112 						 if(video[j][i]==0)video[j][i]=1;
// 6113 					 }
// 6114 					 for(;m<30;m++)
// 6115 					 {
// 6116 						 if(video[m][i]==0)video[m][i]=1;
// 6117 					 }
// 6118 				 }
// 6119 				 else
// 6120 				 {
// 6121 					 for(;j>16;j--)
// 6122 					 {
// 6123 						 if(video[j][i]==1)break;
// 6124 					 }
// 6125 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_183:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_184:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_183
??find_bianyan_185:
        ADDS     R6,R6,#+1
??find_bianyan_182:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+40
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_186
        MOVS     R7,#+27
        B.N      ??find_bianyan_187
??find_bianyan_188:
        SUBS     R7,R7,#+1
??find_bianyan_187:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+19
        BLT.N    ??find_bianyan_189
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_188
        MOV      R9,R7
??find_bianyan_189:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+27
        BNE.N    ??find_bianyan_190
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_191
??find_bianyan_192:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_193
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_193:
        SUBS     R7,R7,#+1
??find_bianyan_191:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+21
        BGE.N    ??find_bianyan_192
??find_bianyan_194:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+30
        BGE.N    ??find_bianyan_185
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_195
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_195:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_194
??find_bianyan_196:
        SUBS     R7,R7,#+1
??find_bianyan_190:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+17
        BLT.N    ??find_bianyan_184
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_196
        B.N      ??find_bianyan_184
// 6126 				 }
// 6127 				 
// 6128 			 }
// 6129 			 for(i=(s3+s4)/2+40;i<=(s5+s6)/2+40;i++)
??find_bianyan_186:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+40
        B.N      ??find_bianyan_197
// 6130 			 {
// 6131 				 for(j=27;j>18;j--)
// 6132 				 {
// 6133 					 if(video[j][i]==0)
// 6134 					 {
// 6135 						 m=j;
// 6136 						 break;
// 6137 					 }
// 6138 				 }
// 6139 				 if(j==27)
// 6140 				 {
// 6141 					 m=j+1;
// 6142 					 for(;j>20;j--)
// 6143 					 {
// 6144 						 if(video[j][i]==0)video[j][i]=1;
// 6145 					 }
// 6146 					 for(;m<30;m++)
// 6147 					 {
// 6148 						 if(video[m][i]==0)video[m][i]=1;
// 6149 					 }
// 6150 				 }
// 6151 				 else
// 6152 				 {
// 6153 					 for(;j>16;j--)
// 6154 					 {
// 6155 						 if(video[j][i]==1)break;
// 6156 					 }
// 6157 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_198:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_199:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_198
??find_bianyan_200:
        ADDS     R6,R6,#+1
??find_bianyan_197:
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+10]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+40
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_2
        MOVS     R7,#+27
        B.N      ??find_bianyan_201
??find_bianyan_202:
        SUBS     R7,R7,#+1
??find_bianyan_201:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+19
        BLT.N    ??find_bianyan_203
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_202
        MOV      R9,R7
??find_bianyan_203:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+27
        BNE.N    ??find_bianyan_204
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_205
??find_bianyan_206:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_207
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_207:
        SUBS     R7,R7,#+1
??find_bianyan_205:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+21
        BGE.N    ??find_bianyan_206
??find_bianyan_208:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+30
        BGE.N    ??find_bianyan_200
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_209
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_209:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_208
??find_bianyan_210:
        SUBS     R7,R7,#+1
??find_bianyan_204:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+17
        BLT.N    ??find_bianyan_199
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_210
        B.N      ??find_bianyan_199
// 6158 				 }
// 6159 				 
// 6160 			 }
// 6161 		}
// 6162 	}
// 6163   }
// 6164 	/***************如果检测出起始线就把起始线黑线去掉END**************/
// 6165  
// 6166   
// 6167     /******************全图扫描******************
// 6168 	/开始对全图扫描一次用来判断赛道的情况
// 6169 	/b1,b2的数目是用来判断全部是白点的行数
// 6170     ********************************************/
// 6171   for(i=H-1;i>10;i--)
??find_bianyan_2:
        MOVS     R6,#+54
        B.N      ??find_bianyan_211
// 6172   {
// 6173     for(j=V/2;j>=1;j--)
// 6174     {
// 6175       if(video[i][j]==0&&video[i][j-1]==0)break;
// 6176     }
// 6177     L0=j;
// 6178     for(j=V/2;j<=V-2;j++)
??find_bianyan_212:
        ADDS     R7,R7,#+1
??find_bianyan_213:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+159
        BGE.N    ??find_bianyan_214
// 6179     {
// 6180       if(video[i][j]==0&&video[i][j+1]==0)break;
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_212
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_212
// 6181     }
// 6182     L1=j;
??find_bianyan_214:
        STRH     R7,[SP, #+0]
// 6183     if(L1-L0>V-20)
        LDRSH    R0,[SP, #+0]
        LDRSH    R1,[SP, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+141
        BLT.N    ??find_bianyan_215
// 6184     {
// 6185       quan_bai[i]=i;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        ADD      R0,SP,#+72
        STRB     R6,[R6, R0]
// 6186       b1++;
        LDRH     R0,[SP, #+42]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+42]
// 6187     }
??find_bianyan_215:
        SUBS     R6,R6,#+1
??find_bianyan_211:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+11
        BLT.N    ??find_bianyan_216
        MOVS     R7,#+80
        B.N      ??find_bianyan_217
??find_bianyan_218:
        SUBS     R7,R7,#+1
??find_bianyan_217:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BLT.N    ??find_bianyan_219
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_218
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_218
??find_bianyan_219:
        STRH     R7,[SP, #+2]
        MOVS     R7,#+80
        B.N      ??find_bianyan_213
        DATA
??find_bianyan_26:
        DC32     start_xian
        DC32     start_18_25_2
        DC32     BW
        DC32     start_25_35_2
        DC32     BW2
        DC32     start_35_45_2
        DC32     BW4
        DC32     start_45_55_2
        DC32     video
        THUMB
// 6188   }
// 6189   if(b1>shi_zi_jiao_cha_number)shizi=1;
??find_bianyan_216:
        LDRSH    R0,[SP, #+42]
        CMP      R0,#+10
        BLT.N    ??find_bianyan_220
        MOVS     R0,#+1
        STRH     R0,[SP, #+28]
// 6190   if(shizi==1)
??find_bianyan_220:
        LDRSH    R0,[SP, #+28]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_221
        B.N      ??find_bianyan_222
// 6191   {
// 6192     while(quan_bai[iii]==0)iii--;
??find_bianyan_223:
        LDRH     R0,[SP, #+40]
        SUBS     R0,R0,#+1
        STRH     R0,[SP, #+40]
??find_bianyan_222:
        LDRSH    R0,[SP, #+40]
        ADD      R1,SP,#+72
        LDRB     R0,[R0, R1]
        CMP      R0,#+0
        BEQ.N    ??find_bianyan_223
// 6193     quan_bai_begin=iii;
        LDRSH    R0,[SP, #+40]
        STRH     R0,[SP, #+14]
// 6194     iii_end=iii;
        LDRSH    R0,[SP, #+40]
        STRH     R0,[SP, #+0]
        B.N      ??find_bianyan_224
// 6195     while(quan_bai[iii_end]>0)iii_end--;
??find_bianyan_225:
        LDRH     R0,[SP, #+0]
        SUBS     R0,R0,#+1
        STRH     R0,[SP, #+0]
??find_bianyan_224:
        LDRSH    R0,[SP, #+0]
        ADD      R1,SP,#+72
        LDRB     R0,[R0, R1]
        CMP      R0,#+1
        BCS.N    ??find_bianyan_225
// 6196     quan_bai_end_1=iii_end;
        LDRSH    R0,[SP, #+0]
        STRH     R0,[SP, #+16]
        B.N      ??find_bianyan_226
// 6197     while(quan_bai[iiii]==0)iiii++;
??find_bianyan_227:
        LDRH     R0,[SP, #+44]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+44]
??find_bianyan_226:
        LDRSH    R0,[SP, #+44]
        ADD      R1,SP,#+72
        LDRB     R0,[R0, R1]
        CMP      R0,#+0
        BEQ.N    ??find_bianyan_227
// 6198     quan_bai_end=iiii;
        LDRSH    R0,[SP, #+44]
        STRH     R0,[SP, #+38]
// 6199     if(quan_bai_begin-quan_bai_end>b1)Small_S=1; 
        LDRSH    R0,[SP, #+42]
        LDRSH    R1,[SP, #+14]
        LDRSH    R2,[SP, #+38]
        SUBS     R1,R1,R2
        CMP      R0,R1
        BGE.N    ??find_bianyan_221
        MOVS     R0,#+1
        STRH     R0,[SP, #+58]
// 6200   }
// 6201   /******************全图扫描END******************/
// 6202   if(Small_S==1)
??find_bianyan_221:
        LDRSH    R0,[SP, #+58]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_228
// 6203   {
// 6204     xu_xian_cai();
        BL       xu_xian_cai
// 6205   }
// 6206   if(Small_S==0)
??find_bianyan_228:
        LDRSH    R0,[SP, #+58]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_229
// 6207   {
// 6208     i=H-1;
        MOVS     R6,#+54
        B.N      ??find_bianyan_230
// 6209     while(i>=0)
// 6210     {
// 6211 		
// 6212     
// 6213     /***********************寻点范围设定***************************/
// 6214       if(i>=53)
// 6215       {
// 6216         for(j=video_Middle;j>=2;j--)
// 6217         {
// 6218           if(video[i][j]==0)
// 6219           {
// 6220             if(video[i][j-1]==0)
// 6221             {
// 6222                     bianyan[0][i]=j;
// 6223                     break;
// 6224             }
// 6225             else if(video[i][j-2]==0)
// 6226             {
// 6227                     bianyan[0][i]=j;
// 6228                     break;
// 6229             }
// 6230           }
// 6231         }
// 6232         if(j==1)
// 6233         {
// 6234           if(video[i][j]==0&&video[i][j-1]==0)
// 6235           {
// 6236                   bianyan[0][i]=1;
// 6237           }
// 6238           else
// 6239           {
// 6240                   bianyan[0][i]=0;
// 6241           }
// 6242         }
// 6243         for(j=video_Middle;j<=V-4;j++)
// 6244         {
// 6245           if(video[i][j]==0)
// 6246           {
// 6247             if(video[i][j+1]==0)
// 6248             {
// 6249                     bianyan[1][i]=j;
// 6250                     break;
// 6251             }
// 6252             else if(video[i][j+2]==0)
// 6253             {
// 6254                     bianyan[1][i]=j;
// 6255                     break;
// 6256             }
// 6257           }
// 6258         }
// 6259         if(j==V-3)
// 6260         {
// 6261           if(video[i][j]==0&&video[i][j+1]==0)
// 6262           {
// 6263                   bianyan[1][i]=V-4;
// 6264           }
// 6265           else
// 6266           {
// 6267                   bianyan[1][i]=V-3;
// 6268           }
// 6269         }
// 6270         bianyan2[0][i]=bianyan[0][i];
// 6271         bianyan2[1][i]=bianyan[1][i];
// 6272       } 
// 6273       else
// 6274       {
// 6275         if(X>=2*windage)
// 6276         {  /********************左边******************************/
// 6277           for(j=bianyan[0][i+1]+windage;j>=2;j--)
// 6278           {
// 6279             if(video[i][j]==0)
// 6280             {
// 6281               if(video[i][j-1]==0)
// 6282               {
// 6283                      bianyan[0][i]=j;
// 6284                      break;
// 6285               }
// 6286               else if(video[i][j-2]==0)
// 6287               {
// 6288                      bianyan[0][i]=j;
// 6289                      break;
// 6290               }
// 6291             }
// 6292           }
// 6293           if(j==1)
// 6294           {
// 6295             if(video[i][j]==0&&video[i][j-1]==0)
// 6296             {
// 6297                bianyan[0][i]=1;
// 6298             }
// 6299             else
// 6300             {
// 6301                bianyan[0][i]=0;
// 6302             }
// 6303           }
// 6304 
// 6305 /*********************右边*******************************/
// 6306           for(j=bianyan[1][i+1]-windage;j<=V-4;j++)
// 6307           {
// 6308             if(video[i][j]==0)
// 6309             {
// 6310               if(video[i][j+1]==0)
// 6311               {
// 6312                       bianyan[1][i]=j;
// 6313                       break;
// 6314               }
// 6315               else if(video[i][j+2]==0)
// 6316               {
// 6317                       bianyan[1][i]=j;
// 6318                       break;
// 6319               }
// 6320             }
// 6321           }
// 6322           if(j==V-3)
// 6323           {
// 6324             if(video[i][j]==0&&video[i][j+1]==0)
// 6325             {
// 6326                    bianyan[1][i]=V-4;
// 6327             }
// 6328             else
// 6329             {
// 6330                    bianyan[1][i]=V-3;
// 6331             }
// 6332           }
// 6333 
// 6334         }
// 6335         else
// 6336         {
// 6337           for(j=center[i+1];j>=2;j--)
// 6338           {
// 6339             if(video[i][j]==0)
// 6340             {
// 6341               if(video[i][j-1]==0)
// 6342               {
// 6343                       bianyan[0][i]=j;
// 6344                       break;
// 6345               }
// 6346               else if(video[i][j-2]==0)
// 6347               {
// 6348                       bianyan[0][i]=j;
// 6349                       break;
// 6350               }
// 6351             }
// 6352           }
// 6353           if(j==1)
// 6354           {
// 6355             if(video[i][j]==0&&video[i][j-1]==0)
// 6356             {
// 6357                     bianyan[0][i]=1;
// 6358             }
// 6359             else
// 6360             {
// 6361                     bianyan[0][i]=0;
// 6362             }
// 6363           }
// 6364      
// 6365       
// 6366 		  /*********************右边*******************************/
// 6367           for(j=center[i+1];j<=V-4;j++)
// 6368           {
// 6369             if(video[i][j]==0)
// 6370             {
// 6371               if(video[i][j+1]==0)
// 6372               {
// 6373                       bianyan[1][i]=j;
// 6374                       break;
// 6375               }
// 6376               else if(video[i][j+2]==0)
// 6377               {
// 6378                       bianyan[1][i]=j;
// 6379                       break;
// 6380               }
// 6381             }
// 6382           }
// 6383           if(j==V-3)
// 6384           {
// 6385             if(video[i][j]==0&&video[i][j+1]==0)
// 6386             {
// 6387                     bianyan[1][i]=V-4;
// 6388             }
// 6389             else
// 6390             {
// 6391                     bianyan[1][i]=V-3;
// 6392             }
// 6393           }
// 6394     
// 6395 
// 6396 	}
// 6397 		
// 6398 		  
// 6399         bianyan2[0][i]=bianyan[0][i];
// 6400         bianyan2[1][i]=bianyan[1][i];
// 6401 
// 6402 
// 6403         chazhi1=bianyan[0][i]-bianyan[0][i+1];
// 6404         chazhi3=bianyan[1][i]-bianyan[1][i+1];
// 6405         if(i>=50)
// 6406         {
// 6407                 chazhi1_buxian=bianyan[0][i+1]-bianyan[0][i+2];
// 6408                 chazhi3_buxian=bianyan[1][i+1]-bianyan[1][i+2];
// 6409         }
// 6410 				
// 6411         if(i<50)
// 6412         {
// 6413                 chazhi1_buxian=bianyan[0][i+2]-bianyan[0][i+5];
// 6414                 chazhi1_buxian=chazhi1_buxian/3;
// 6415                 chazhi3_buxian=bianyan[1][i+2]-bianyan[1][i+5];
// 6416                 chazhi3_buxian=chazhi3_buxian/3;
// 6417         }
// 6418       }
// 6419 		
// 6420 
// 6421 			 /*********************对bianyan[][]的值进行调整***********************/
// 6422    
// 6423     
// 6424       if(chazhi1<=-8)
// 6425       {
// 6426 
// 6427         if(i>30&&chazhi1_buxian>1)
// 6428         {
// 6429                 bianyan[0][i]=bianyan[0][i+1]+1;
// 6430         }
// 6431         else
// 6432         {
// 6433                 bianyan[0][i]=bianyan[0][i+1]+chazhi1_buxian;
// 6434         }
// 6435               
// 6436               
// 6437               
// 6438       }
// 6439 
// 6440       if(chazhi3>=8)
// 6441       {
// 6442         if(i>30&&chazhi3_buxian<-1)
// 6443         {
// 6444                 bianyan[1][i]=bianyan[1][i+1]-1;
// 6445         }
// 6446         else
// 6447         {
// 6448                 bianyan[1][i]=bianyan[1][i+1]+chazhi3_buxian;
// 6449         }
// 6450 
// 6451       }
// 6452     
// 6453 
// 6454 			
// 6455 			
// 6456 
// 6457 			
// 6458       if(shizi==1&&i>=quan_bai_end)
// 6459       {
// 6460         if(chazhi1<=-6||(bianyan[0][i]<3&&i<H-1))
// 6461         {
// 6462                 if(i%2==0)bianyan[0][i]=bianyan[0][i+1]+1;
// 6463                 else bianyan[0][i]=bianyan[0][i+1];
// 6464                 
// 6465         }
// 6466         if(chazhi3>=6||(bianyan[1][i]>=V-4&&i<H-1))
// 6467         {
// 6468                 if(i%2==0)bianyan[1][i]=bianyan[1][i+1]-1;
// 6469                 else bianyan[1][i]=bianyan[1][i+1];
// 6470         }
// 6471       }
// 6472 
// 6473 
// 6474 
// 6475 
// 6476 			/******************十字交叉END********************/
// 6477 			/***********************************************/
// 6478       X=bianyan[1][i]-bianyan[0][i];
// 6479     
// 6480     
// 6481       if(X<=5)
// 6482       {
// 6483               END=i;	
// 6484               break;
// 6485       }//弯道时判断处理结束线的
// 6486 
// 6487 
// 6488       center[i]=(bianyan[1][i]+bianyan[0][i])/2;
??find_bianyan_231:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0x4
        STRB     R0,[R6, R1]
// 6489       i--;
        SUBS     R6,R6,#+1
??find_bianyan_230:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.W    ??find_bianyan_229
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+53
        BLT.W    ??find_bianyan_233
        MOVS     R7,#+80
        B.N      ??find_bianyan_234
??find_bianyan_235:
        SUBS     R7,R7,#+1
??find_bianyan_234:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??find_bianyan_236
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_235
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_237
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
        B.N      ??find_bianyan_236
??find_bianyan_237:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_235
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
??find_bianyan_236:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BNE.N    ??find_bianyan_238
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_239
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_239
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        B.N      ??find_bianyan_238
??find_bianyan_239:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
??find_bianyan_238:
        MOVS     R7,#+80
        B.N      ??find_bianyan_240
??find_bianyan_241:
        ADDS     R7,R7,#+1
??find_bianyan_240:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+157
        BGE.N    ??find_bianyan_242
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_241
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_243
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
        B.N      ??find_bianyan_242
??find_bianyan_243:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_241
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
??find_bianyan_242:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+157
        BNE.N    ??find_bianyan_244
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_245
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_245
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+156
        STRB     R1,[R0, #+55]
        B.N      ??find_bianyan_244
??find_bianyan_245:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+157
        STRB     R1,[R0, #+55]
??find_bianyan_244:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        LDRB     R1,[R6, R1]
        STRB     R1,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        B.N      ??find_bianyan_246
??find_bianyan_233:
        LDRSH    R0,[SP, #+56]
        CMP      R0,#+80
        BLT.W    ??find_bianyan_247
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        ADDS     R7,R0,#+40
        B.N      ??find_bianyan_248
??find_bianyan_249:
        SUBS     R7,R7,#+1
??find_bianyan_248:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??find_bianyan_250
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_249
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_251
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
        B.N      ??find_bianyan_250
??find_bianyan_251:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_249
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
??find_bianyan_250:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BNE.N    ??find_bianyan_252
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_253
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_253
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        B.N      ??find_bianyan_252
??find_bianyan_253:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
??find_bianyan_252:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+56]
        SUBS     R7,R0,#+40
        B.N      ??find_bianyan_254
??find_bianyan_255:
        ADDS     R7,R7,#+1
??find_bianyan_254:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+157
        BGE.N    ??find_bianyan_256
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_255
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_257
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
        B.N      ??find_bianyan_256
??find_bianyan_257:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_255
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
??find_bianyan_256:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+157
        BNE.W    ??find_bianyan_258
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_259
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_259
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+156
        STRB     R1,[R0, #+55]
        B.N      ??find_bianyan_258
??find_bianyan_259:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+157
        STRB     R1,[R0, #+55]
        B.N      ??find_bianyan_258
??find_bianyan_247:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0x4
        ADDS     R0,R6,R0
        LDRB     R7,[R0, #+1]
        B.N      ??find_bianyan_260
??find_bianyan_261:
        SUBS     R7,R7,#+1
??find_bianyan_260:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??find_bianyan_262
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_261
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_263
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
        B.N      ??find_bianyan_262
??find_bianyan_263:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_261
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
??find_bianyan_262:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BNE.N    ??find_bianyan_264
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_265
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_265
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        B.N      ??find_bianyan_264
??find_bianyan_265:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
??find_bianyan_264:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0x4
        ADDS     R0,R6,R0
        LDRB     R7,[R0, #+1]
        B.N      ??find_bianyan_266
??find_bianyan_267:
        ADDS     R7,R7,#+1
??find_bianyan_266:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+157
        BGE.N    ??find_bianyan_268
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_267
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_269
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
        B.N      ??find_bianyan_268
??find_bianyan_269:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_267
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
??find_bianyan_268:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+157
        BNE.N    ??find_bianyan_258
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_270
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_270
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+156
        STRB     R1,[R0, #+55]
        B.N      ??find_bianyan_258
??find_bianyan_270:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+157
        STRB     R1,[R0, #+55]
??find_bianyan_258:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        LDRB     R1,[R6, R1]
        STRB     R1,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+54]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+52]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+50
        BLT.N    ??find_bianyan_271
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+26]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+56]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+57]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+24]
??find_bianyan_271:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+50
        BGE.N    ??find_bianyan_246
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+5]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+26]
        LDRSH    R0,[SP, #+26]
        MOVS     R1,#+3
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+26]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+57]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+60]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+24]
        LDRSH    R0,[SP, #+24]
        MOVS     R1,#+3
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+24]
??find_bianyan_246:
        LDRSH    R0,[SP, #+54]
        MVNS     R1,#+6
        CMP      R0,R1
        BGE.N    ??find_bianyan_272
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+31
        BLT.N    ??find_bianyan_273
        LDRSH    R0,[SP, #+26]
        CMP      R0,#+2
        BLT.N    ??find_bianyan_273
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        ADDS     R0,R0,#+1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_272
??find_bianyan_273:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        LDRH     R1,[SP, #+26]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        STRB     R0,[R6, R1]
??find_bianyan_272:
        LDRSH    R0,[SP, #+52]
        CMP      R0,#+8
        BLT.N    ??find_bianyan_274
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+31
        BLT.N    ??find_bianyan_275
        LDRSH    R0,[SP, #+24]
        MOVS     R1,#-1
        CMP      R0,R1
        BGE.N    ??find_bianyan_275
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+56]
        SUBS     R0,R0,#+1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+55]
        B.N      ??find_bianyan_274
??find_bianyan_275:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+56]
        LDRH     R1,[SP, #+24]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+55]
??find_bianyan_274:
        LDRSH    R0,[SP, #+28]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_276
        LDRSH    R0,[SP, #+38]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_276
        LDRSH    R0,[SP, #+54]
        MVNS     R1,#+4
        CMP      R0,R1
        BLT.N    ??find_bianyan_277
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        CMP      R0,#+3
        BCS.N    ??find_bianyan_278
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_278
??find_bianyan_277:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+2
        SDIV     R1,R6,R0
        MLS      R1,R1,R0,R6
        CMP      R1,#+0
        BNE.N    ??find_bianyan_279
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        ADDS     R0,R0,#+1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_278
??find_bianyan_279:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        STRB     R0,[R6, R1]
??find_bianyan_278:
        LDRSH    R0,[SP, #+52]
        CMP      R0,#+6
        BGE.N    ??find_bianyan_280
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_276
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_276
??find_bianyan_280:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+2
        SDIV     R1,R6,R0
        MLS      R1,R1,R0,R6
        CMP      R1,#+0
        BNE.N    ??find_bianyan_281
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+56]
        SUBS     R0,R0,#+1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+55]
        B.N      ??find_bianyan_276
??find_bianyan_281:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        STRB     R1,[R0, #+55]
??find_bianyan_276:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        LDRB     R1,[R6, R1]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+56]
        LDRSH    R0,[SP, #+56]
        CMP      R0,#+6
        BGE.W    ??find_bianyan_231
        MOV      R8,R6
// 6490     }
// 6491   }
// 6492   END_Line_2=END;
??find_bianyan_229:
        LDR.W    R0,??find_bianyan_282
        STRB     R8,[R0, #+0]
// 6493   /**************中心优化1***************/
// 6494   if(END>0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.N    ??find_bianyan_283
// 6495   {
// 6496     he=center[END+1]+center[END+2]+center[END+3];
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0x4
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0x4
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #+2]
        UXTAB    R0,R1,R0
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0x4
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #+3]
        UXTAB    R0,R0,R1
        STRH     R0,[SP, #+2]
// 6497     he=he/3;
        LDRSH    R0,[SP, #+2]
        MOVS     R1,#+3
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+2]
// 6498     for(m=END+1;m<H-3;m++)
        ADDS     R9,R8,#+1
        B.N      ??find_bianyan_284
??find_bianyan_285:
        ADDS     R9,R9,#+1
??find_bianyan_284:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+52
        BGE.N    ??find_bianyan_283
// 6499     {
// 6500       cha=center[m]-he;
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0x4
        LDRB     R0,[R9, R0]
        LDRH     R1,[SP, #+2]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+0]
// 6501       cha=abs(cha);
        LDRSH    R0,[SP, #+0]
        BL       abs
        STRH     R0,[SP, #+0]
// 6502       if(cha>2)
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+3
        BLT.N    ??find_bianyan_285
// 6503       {
// 6504         END1=m;
        STRH     R9,[SP, #+64]
// 6505         break;
// 6506       }
// 6507     }
// 6508   }
// 6509   for(m=END1-1;m>=0;m--)
??find_bianyan_283:
        LDRH     R0,[SP, #+64]
        SUBS     R9,R0,#+1
        B.N      ??find_bianyan_286
// 6510   {
// 6511           center[m]=0;
??find_bianyan_287:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0x4
        MOVS     R1,#+0
        STRB     R1,[R9, R0]
// 6512   }
        SUBS     R9,R9,#+1
??find_bianyan_286:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+0
        BPL.N    ??find_bianyan_287
// 6513   judage_xuxian();
        BL       judage_xuxian
// 6514   /*********************十字交叉断点的寻找与补线***********************/
// 6515   if(shizi==1&&xu_xian2==0)
        LDRSH    R0,[SP, #+28]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_288
        LDR.W    R0,??find_bianyan_282+0x4
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_288
// 6516   {
// 6517     int16 d1_chazhi1=0,d1_chazhi2=0,d2_chazhi1=0,d2_chazhi2=0;
        MOVS     R1,#+0
        MOVS     R3,#+0
        MOVS     R0,#+0
        MOVS     R2,#+0
// 6518     if(quan_bai_begin<H-1)
        LDRSH    R6,[SP, #+14]
        CMP      R6,#+54
        BGE.N    ??find_bianyan_289
// 6519     {
// 6520       for(i=quan_bai_begin;i<H-1;i++)
        LDRSH    R6,[SP, #+14]
        B.N      ??find_bianyan_290
??find_bianyan_291:
        ADDS     R6,R6,#+1
??find_bianyan_290:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_292
// 6521       {
// 6522         if(bianyan2[0][i]>3)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        LDRB     R0,[R6, R0]
        CMP      R0,#+4
        BCC.N    ??find_bianyan_291
// 6523         {
// 6524           d1_chazhi1=bianyan2[0][i]-bianyan2[0][i+1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R1,R0,R1
// 6525           d1_chazhi1=abs(d1_chazhi1);
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R1,R0
// 6526           if(d1_chazhi1<3)break;
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+3
        BGE.N    ??find_bianyan_291
// 6527         }
// 6528       }
// 6529       d1_1=i;
??find_bianyan_292:
        STRH     R6,[SP, #+6]
// 6530       for(i=quan_bai_begin;i<H-1;i++)
        LDRSH    R6,[SP, #+14]
        B.N      ??find_bianyan_293
??find_bianyan_294:
        ADDS     R6,R6,#+1
??find_bianyan_293:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_295
// 6531       {
// 6532         if(bianyan2[1][i]<V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCS.N    ??find_bianyan_294
// 6533         {
// 6534           d2_chazhi1=bianyan2[1][i]-bianyan2[1][i+1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
// 6535           d2_chazhi1=abs(d2_chazhi1);
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
// 6536           if(d2_chazhi1<3)break;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+3
        BGE.N    ??find_bianyan_294
// 6537         }
// 6538       }
// 6539       d2_1=i;
??find_bianyan_295:
        STRH     R6,[SP, #+12]
// 6540     }
// 6541     if(quan_bai_begin==H-1){d1_1=H;d2_1=H;}
??find_bianyan_289:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+54
        BNE.N    ??find_bianyan_296
        MOVS     R0,#+55
        STRH     R0,[SP, #+6]
        MOVS     R0,#+55
        STRH     R0,[SP, #+12]
// 6542 	
// 6543     for(i=quan_bai_end_1;i>0;i--)
??find_bianyan_296:
        LDRSH    R6,[SP, #+16]
        B.N      ??find_bianyan_297
??find_bianyan_298:
        SUBS     R6,R6,#+1
??find_bianyan_297:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BLT.N    ??find_bianyan_299
// 6544     {   
// 6545       if(bianyan2[0][i]>3)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        LDRB     R0,[R6, R0]
        CMP      R0,#+4
        BCC.N    ??find_bianyan_298
// 6546       {
// 6547          d1_chazhi2=bianyan2[0][i]-bianyan2[0][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R3,R0,R1
// 6548          d1_chazhi2=abs(d1_chazhi2);
        MOVS     R0,R3
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R3,R0
// 6549          if(d1_chazhi2<3)break;
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        CMP      R3,#+3
        BGE.N    ??find_bianyan_298
// 6550       }
// 6551   
// 6552     }
// 6553     d1_2=i;
??find_bianyan_299:
        STRH     R6,[SP, #+0]
// 6554     for(i=quan_bai_end_1;i>0;i--)
        LDRSH    R6,[SP, #+16]
        B.N      ??find_bianyan_300
??find_bianyan_301:
        SUBS     R6,R6,#+1
??find_bianyan_300:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BLT.N    ??find_bianyan_302
// 6555     {
// 6556       if(bianyan2[1][i]<V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCS.N    ??find_bianyan_301
// 6557       {
// 6558          d2_chazhi2=bianyan2[1][i]-bianyan2[1][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R2,R0,R1
// 6559          d2_chazhi2=abs(d2_chazhi2);
        MOVS     R0,R2
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R2,R0
// 6560          if(d2_chazhi2<3)break;
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R2,#+3
        BGE.N    ??find_bianyan_301
// 6561       }
// 6562   
// 6563     }
// 6564     d2_2=i;
??find_bianyan_302:
        STRH     R6,[SP, #+2]
// 6565     if(d1_1==quan_bai_begin)
        LDRSH    R0,[SP, #+6]
        LDRSH    R1,[SP, #+14]
        CMP      R0,R1
        BNE.N    ??find_bianyan_303
// 6566     {
// 6567       for(i=quan_bai_begin-1;i>quan_bai_end_1;i--)
        LDRH     R0,[SP, #+14]
        SUBS     R6,R0,#+1
        B.N      ??find_bianyan_304
??find_bianyan_305:
        SUBS     R6,R6,#+1
??find_bianyan_304:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_306
// 6568       {
// 6569             
// 6570           d1_chazhi1=bianyan2[0][i]-bianyan2[0][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232+0xC
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R1,R0,R1
// 6571           d1_chazhi1=abs(d1_chazhi1);
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R1,R0
// 6572           if(d1_chazhi1>3)break;
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+4
        BLT.N    ??find_bianyan_305
// 6573     
// 6574       }
// 6575       d1_1=i;
??find_bianyan_306:
        STRH     R6,[SP, #+6]
// 6576     }
// 6577     if(d2_1==quan_bai_begin)
??find_bianyan_303:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+14]
        CMP      R0,R1
        BNE.N    ??find_bianyan_307
// 6578     {
// 6579       for(i=quan_bai_begin-1;i>quan_bai_end_1;i--)
        LDRH     R0,[SP, #+14]
        SUBS     R6,R0,#+1
        B.N      ??find_bianyan_308
??find_bianyan_309:
        SUBS     R6,R6,#+1
??find_bianyan_308:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_310
// 6580       {
// 6581             
// 6582           d2_chazhi1=bianyan2[1][i]-bianyan2[1][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
// 6583           d2_chazhi1=abs(d2_chazhi1);
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
// 6584           if(d2_chazhi1>3)break;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+4
        BLT.N    ??find_bianyan_309
// 6585     
// 6586   
// 6587       }
// 6588       d2_1=i;
??find_bianyan_310:
        STRH     R6,[SP, #+12]
// 6589     }
// 6590     if(d1_1<H){bianyan[0][d1_1]=bianyan2[0][d1_1];bianyan[0][d1_2]=bianyan2[0][d1_2];LianJie(0,d1_1,d1_2);}
??find_bianyan_307:
        LDRSH    R0,[SP, #+6]
        CMP      R0,#+55
        BGE.N    ??find_bianyan_311
        LDRSH    R0,[SP, #+6]
        LDR.N    R1,??find_bianyan_232
        LDRSH    R2,[SP, #+6]
        LDR.N    R3,??find_bianyan_232+0xC
        LDRB     R2,[R2, R3]
        STRB     R2,[R0, R1]
        LDRSH    R0,[SP, #+0]
        LDR.N    R1,??find_bianyan_232
        LDRSH    R2,[SP, #+0]
        LDR.N    R3,??find_bianyan_232+0xC
        LDRB     R2,[R2, R3]
        STRB     R2,[R0, R1]
        LDRSH    R2,[SP, #+0]
        LDRSH    R1,[SP, #+6]
        MOVS     R0,#+0
        BL       LianJie
// 6591     if(d2_1<H){bianyan[1][d1_1]=bianyan2[1][d1_1];bianyan[1][d1_2]=bianyan2[1][d1_2];LianJie(1,d2_1,d2_2);}
??find_bianyan_311:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+55
        BGE.N    ??find_bianyan_312
        LDRSH    R0,[SP, #+6]
        LDR.N    R1,??find_bianyan_232
        ADDS     R0,R0,R1
        LDRSH    R1,[SP, #+6]
        LDR.N    R2,??find_bianyan_232+0xC
        ADDS     R1,R1,R2
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        LDRSH    R0,[SP, #+0]
        LDR.N    R1,??find_bianyan_232
        ADDS     R0,R0,R1
        LDRSH    R1,[SP, #+0]
        LDR.N    R2,??find_bianyan_232+0xC
        ADDS     R1,R1,R2
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        LDRSH    R2,[SP, #+2]
        LDRSH    R1,[SP, #+12]
        MOVS     R0,#+1
        BL       LianJie
// 6592     if(d1_1==H)
??find_bianyan_312:
        LDRSH    R0,[SP, #+6]
        CMP      R0,#+55
        BNE.N    ??find_bianyan_313
// 6593     {
// 6594       for(i=d1_2-9;i<d1_2;i++)
        LDRH     R0,[SP, #+0]
        SUBS     R6,R0,#+9
        B.N      ??find_bianyan_314
// 6595       {
// 6596              chazhi_5=chazhi_5+bianyan[0][i]-bianyan[0][i-1];
??find_bianyan_315:
        LDRH     R0,[SP, #+20]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        LDRB     R1,[R6, R1]
        ADDS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+20]
// 6597              
// 6598       }
        ADDS     R6,R6,#+1
??find_bianyan_314:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_315
// 6599       chazhi_5=chazhi_5/9;
        LDRSH    R0,[SP, #+20]
        MOVS     R1,#+9
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+20]
// 6600       for(i=d1_2;i<H-1;i++)bianyan[0][i+1]=bianyan[0][i]+chazhi_5;
        LDRSH    R6,[SP, #+0]
        B.N      ??find_bianyan_316
??find_bianyan_317:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        LDRH     R1,[SP, #+20]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+1]
        ADDS     R6,R6,#+1
??find_bianyan_316:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BLT.N    ??find_bianyan_317
// 6601     }
// 6602     if(d2_1==H)
??find_bianyan_313:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+55
        BNE.N    ??find_bianyan_318
// 6603     {
// 6604       for(i=d2_2-9;i<d2_2;i++)
        LDRH     R0,[SP, #+2]
        SUBS     R6,R0,#+9
        B.N      ??find_bianyan_319
// 6605       {
// 6606              chazhi_6=chazhi_6+bianyan[1][i]-bianyan[1][i-1];
??find_bianyan_320:
        LDRH     R0,[SP, #+18]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+18]
// 6607               
// 6608       }
        ADDS     R6,R6,#+1
??find_bianyan_319:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_320
// 6609       chazhi_6=chazhi_6/9;
        LDRSH    R0,[SP, #+18]
        MOVS     R1,#+9
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+18]
// 6610       for(i=d2_2;i<H-1;i++)bianyan[1][i+1]=bianyan[1][i]+chazhi_6;
        LDRSH    R6,[SP, #+2]
        B.N      ??find_bianyan_321
??find_bianyan_322:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        LDRH     R1,[SP, #+18]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+56]
        ADDS     R6,R6,#+1
??find_bianyan_321:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BLT.N    ??find_bianyan_322
// 6611     }
// 6612 
// 6613 	   
// 6614     if(d1_1>d2_1)
??find_bianyan_318:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+6]
        CMP      R0,R1
        BGE.N    ??find_bianyan_323
// 6615     {
// 6616       if(d1_2>d2_2)
        LDRSH    R0,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        CMP      R0,R1
        BGE.N    ??find_bianyan_324
// 6617       {
// 6618              for(i=d1_1;i>=d2_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
        LDRSH    R6,[SP, #+6]
??find_bianyan_325:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_323
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0x4
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_325
// 6619       }
// 6620       else
// 6621       {
// 6622          for(i=d1_1;i>=d1_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_324:
        LDRSH    R6,[SP, #+6]
        B.N      ??find_bianyan_326
??find_bianyan_327:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0x4
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
??find_bianyan_326:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BGE.N    ??find_bianyan_327
// 6623       }
// 6624   
// 6625     }
// 6626     if(d1_1<=d2_1)
??find_bianyan_323:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+6]
        CMP      R0,R1
        BLT.N    ??find_bianyan_288
// 6627     {
// 6628       if(d1_2>d2_2)
        LDRSH    R0,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        CMP      R0,R1
        BGE.N    ??find_bianyan_328
// 6629       {
// 6630          for(i=d2_1;i>=d2_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
        LDRSH    R6,[SP, #+12]
??find_bianyan_329:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_288
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0x4
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_329
// 6631       }
// 6632       else
// 6633       {
// 6634          for(i=d2_1;i>=d1_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_328:
        LDRSH    R6,[SP, #+12]
        B.N      ??find_bianyan_330
??find_bianyan_331:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0x4
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
??find_bianyan_330:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BGE.N    ??find_bianyan_331
// 6635       }
// 6636     }
// 6637   }
// 6638   /*********************十字交叉断点的寻找与补线END***********************/
// 6639   if(xu_xian2==1)
??find_bianyan_288:
        LDR.W    R0,??find_bianyan_282+0x4
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_332
// 6640   {  
// 6641     for(i=quan_bai_begin;i>quan_bai_end_1;i--)
        LDRSH    R6,[SP, #+14]
        B.N      ??find_bianyan_333
        DATA
??find_bianyan_232:
        DC32     bianyan
        DC32     center
        DC32     video
        DC32     bianyan2
        THUMB
??find_bianyan_334:
        SUBS     R6,R6,#+1
??find_bianyan_333:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_335
// 6642 		{
// 6643 			
// 6644 			if((bianyan2[1][i]-bianyan2[0][i])>V-5)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        LDRB     R1,[R6, R1]
        SUBS     R0,R0,R1
        CMP      R0,#+156
        BLT.N    ??find_bianyan_334
// 6645 			{
// 6646 				m=i;
        MOV      R9,R6
// 6647 				break;
        B.N      ??find_bianyan_335
// 6648 			}
// 6649 		}
// 6650 		for(;i>quan_bai_end_1;i--)
??find_bianyan_337:
        SUBS     R6,R6,#+1
??find_bianyan_335:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_338
// 6651 		{
// 6652 			if((bianyan2[1][i]-bianyan2[0][i])<=V-5)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        LDRB     R1,[R6, R1]
        SUBS     R0,R0,R1
        CMP      R0,#+156
        BGE.N    ??find_bianyan_337
// 6653 		}
// 6654 		quan_bai_num_k=m-i;
??find_bianyan_338:
        SUBS     R0,R9,R6
        STRH     R0,[SP, #+0]
// 6655 		if(quan_bai_num_k>((quan_bai_begin-quan_bai_end_1)/2))shizi2=1;
        LDRSH    R0,[SP, #+14]
        LDRSH    R1,[SP, #+16]
        SUBS     R0,R0,R1
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDRSH    R1,[SP, #+0]
        CMP      R0,R1
        BGE.N    ??find_bianyan_339
        MOVS     R0,#+1
        STRH     R0,[SP, #+68]
// 6656 		if(shizi2==1)
??find_bianyan_339:
        LDRSH    R0,[SP, #+68]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_340
// 6657 		{
// 6658 			if(quan_bai_num_k>16)shizi3=1;
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+17
        BLT.N    ??find_bianyan_341
        MOVS     R0,#+1
        STRH     R0,[SP, #+50]
        B.N      ??find_bianyan_340
// 6659 			else
// 6660 			{
// 6661 				for(;i>=quan_bai_end;i--)
??find_bianyan_342:
        SUBS     R6,R6,#+1
??find_bianyan_341:
        LDRSH    R0,[SP, #+38]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_343
// 6662 				{
// 6663 					if(bianyan[0][i]==bianyan2[0][i]&&bianyan[1][i]==bianyan2[1][i])
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_342
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_342
// 6664 					{
// 6665 						kk=i;
        STRH     R6,[SP, #+66]
// 6666 						break;
        B.N      ??find_bianyan_343
// 6667 					}
// 6668 					
// 6669 				}
// 6670 				for(;i>=quan_bai_end;i--)
??find_bianyan_345:
        SUBS     R6,R6,#+1
??find_bianyan_343:
        LDRSH    R0,[SP, #+38]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_346
// 6671 				{
// 6672 					if(!(bianyan[0][i]==bianyan2[0][i]&&bianyan[1][i]==bianyan2[1][i]))break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_347
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_345
// 6673 				}
// 6674 				if((kk-i)>=10)shizi3=1;
??find_bianyan_347:
??find_bianyan_346:
        LDRSH    R0,[SP, #+66]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R0,R6
        CMP      R0,#+10
        BLT.N    ??find_bianyan_340
        MOVS     R0,#+1
        STRH     R0,[SP, #+50]
// 6675 			}
// 6676 			
// 6677 		}
// 6678 		if(shizi3==0)	xu_xian_bu();
??find_bianyan_340:
        LDRSH    R0,[SP, #+50]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_348
        BL       xu_xian_bu
// 6679 		if(shizi3==1)
??find_bianyan_348:
        LDRSH    R0,[SP, #+50]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_332
// 6680 		{
// 6681 			int d1_chazhi1=0,d1_chazhi2=0,d2_chazhi1=0,d2_chazhi2=0;
        MOVS     R1,#+0
        MOVS     R3,#+0
        MOVS     R0,#+0
        MOVS     R2,#+0
// 6682    	   if(quan_bai_begin<H-1)
        LDRSH    R6,[SP, #+14]
        CMP      R6,#+54
        BGE.N    ??find_bianyan_349
// 6683 	   {
// 6684 	   	  for(i=quan_bai_begin;i<H-1;i++)
        LDRSH    R6,[SP, #+14]
        B.N      ??find_bianyan_350
??find_bianyan_351:
        ADDS     R6,R6,#+1
??find_bianyan_350:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_352
// 6685 		  {
// 6686 		     if(bianyan2[0][i]>3)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+4
        BCC.N    ??find_bianyan_351
// 6687 			 {
// 6688 		        d1_chazhi1=bianyan2[0][i]-bianyan2[0][i+1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R1,R0,R1
// 6689 		        d1_chazhi1=abs(d1_chazhi1);
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R1,R0
// 6690 		        if(d1_chazhi1<3)break;
        CMP      R1,#+3
        BGE.N    ??find_bianyan_351
// 6691 			 }
// 6692 		  }
// 6693           d1_1=i;
??find_bianyan_352:
        STRH     R6,[SP, #+6]
// 6694 	      for(i=quan_bai_begin;i<H-1;i++)
        LDRSH    R6,[SP, #+14]
        B.N      ??find_bianyan_353
??find_bianyan_354:
        ADDS     R6,R6,#+1
??find_bianyan_353:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_355
// 6695 		  {
// 6696 	      	 if(bianyan2[1][i]<V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCS.N    ??find_bianyan_354
// 6697 			 {
// 6698 		        d2_chazhi1=bianyan2[1][i]-bianyan2[1][i+1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
// 6699 		        d2_chazhi1=abs(d2_chazhi1);
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
// 6700 		        if(d2_chazhi1<3)break;
        CMP      R0,#+3
        BGE.N    ??find_bianyan_354
// 6701 			 }
// 6702 		  }
// 6703     	  d2_1=i;
??find_bianyan_355:
        STRH     R6,[SP, #+12]
// 6704 	   }
// 6705 	   if(quan_bai_begin==H-1){d1_1=H;d2_1=H;}
??find_bianyan_349:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+54
        BNE.N    ??find_bianyan_356
        MOVS     R0,#+55
        STRH     R0,[SP, #+6]
        MOVS     R0,#+55
        STRH     R0,[SP, #+12]
// 6706 	
// 6707 	   for(i=quan_bai_end_1;i>0;i--)
??find_bianyan_356:
        LDRSH    R6,[SP, #+16]
        B.N      ??find_bianyan_357
??find_bianyan_358:
        SUBS     R6,R6,#+1
??find_bianyan_357:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BLT.N    ??find_bianyan_359
// 6708 	   {   
// 6709 		  if(bianyan2[0][i]>3)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+4
        BCC.N    ??find_bianyan_358
// 6710 		  {
// 6711 		     d1_chazhi2=bianyan2[0][i]-bianyan2[0][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R3,R0,R1
// 6712 		     d1_chazhi2=abs(d1_chazhi2);
        MOVS     R0,R3
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R3,R0
// 6713 		     if(d1_chazhi2<3)break;
        CMP      R3,#+3
        BGE.N    ??find_bianyan_358
// 6714 		  }
// 6715 
// 6716 	   }
// 6717        d1_2=i;
??find_bianyan_359:
        STRH     R6,[SP, #+0]
// 6718 	   for(i=quan_bai_end_1;i>0;i--)
        LDRSH    R6,[SP, #+16]
        B.N      ??find_bianyan_360
??find_bianyan_361:
        SUBS     R6,R6,#+1
??find_bianyan_360:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BLT.N    ??find_bianyan_362
// 6719 	   {
// 6720 		  if(bianyan2[1][i]<V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCS.N    ??find_bianyan_361
// 6721 		  {
// 6722 		     d2_chazhi2=bianyan2[1][i]-bianyan2[1][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R2,R0,R1
// 6723 		     d2_chazhi2=abs(d2_chazhi2);
        MOVS     R0,R2
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R2,R0
// 6724 		     if(d2_chazhi2<3)break;
        CMP      R2,#+3
        BGE.N    ??find_bianyan_361
// 6725 		  }
// 6726 
// 6727 	   }
// 6728 	   d2_2=i;
??find_bianyan_362:
        STRH     R6,[SP, #+2]
// 6729        if(d1_1==quan_bai_begin)
        LDRSH    R0,[SP, #+6]
        LDRSH    R1,[SP, #+14]
        CMP      R0,R1
        BNE.N    ??find_bianyan_363
// 6730 	   {
// 6731 		  for(i=quan_bai_begin-1;i>quan_bai_end_1;i--)
        LDRH     R0,[SP, #+14]
        SUBS     R6,R0,#+1
        B.N      ??find_bianyan_364
??find_bianyan_365:
        SUBS     R6,R6,#+1
??find_bianyan_364:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_366
// 6732 		  {
// 6733 			
// 6734 		      d1_chazhi1=bianyan2[0][i]-bianyan2[0][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R1,R0,R1
// 6735 		      d1_chazhi1=abs(d1_chazhi1);
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R1,R0
// 6736 		      if(d1_chazhi1>3)break;
        CMP      R1,#+4
        BLT.N    ??find_bianyan_365
// 6737 		
// 6738 		  }
// 6739 		  d1_1=i;
??find_bianyan_366:
        STRH     R6,[SP, #+6]
// 6740 	   }
// 6741 	   if(d2_1==quan_bai_begin)
??find_bianyan_363:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+14]
        CMP      R0,R1
        BNE.N    ??find_bianyan_367
// 6742 	   {
// 6743 		  for(i=quan_bai_begin-1;i>quan_bai_end_1;i--)
        LDRH     R0,[SP, #+14]
        SUBS     R6,R0,#+1
        B.N      ??find_bianyan_368
??find_bianyan_369:
        SUBS     R6,R6,#+1
??find_bianyan_368:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_370
// 6744 		  {
// 6745 			
// 6746 		      d2_chazhi1=bianyan2[1][i]-bianyan2[1][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
// 6747 		      d2_chazhi1=abs(d2_chazhi1);
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
// 6748 		      if(d2_chazhi1>3)break;
        CMP      R0,#+4
        BLT.N    ??find_bianyan_369
// 6749 		
// 6750             
// 6751 		  }
// 6752 		  d2_1=i;
??find_bianyan_370:
        STRH     R6,[SP, #+12]
// 6753 	   }
// 6754 	   if(d1_1<H){bianyan[0][d1_1]=bianyan2[0][d1_1];bianyan[0][d1_2]=bianyan2[0][d1_2];LianJie(0,d1_1,d1_2);}
??find_bianyan_367:
        LDRSH    R0,[SP, #+6]
        CMP      R0,#+55
        BGE.N    ??find_bianyan_371
        LDRSH    R0,[SP, #+6]
        LDR.W    R1,??find_bianyan_344
        LDRSH    R2,[SP, #+6]
        LDR.W    R3,??find_bianyan_336
        LDRB     R2,[R2, R3]
        STRB     R2,[R0, R1]
        LDRSH    R0,[SP, #+0]
        LDR.W    R1,??find_bianyan_344
        LDRSH    R2,[SP, #+0]
        LDR.W    R3,??find_bianyan_336
        LDRB     R2,[R2, R3]
        STRB     R2,[R0, R1]
        LDRSH    R2,[SP, #+0]
        LDRSH    R1,[SP, #+6]
        MOVS     R0,#+0
        BL       LianJie
// 6755 	   if(d2_1<H){bianyan[1][d1_1]=bianyan2[1][d1_1];bianyan[1][d1_2]=bianyan2[1][d1_2];LianJie(1,d2_1,d2_2);}
??find_bianyan_371:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+55
        BGE.N    ??find_bianyan_372
        LDRSH    R0,[SP, #+6]
        LDR.W    R1,??find_bianyan_344
        ADDS     R0,R0,R1
        LDRSH    R1,[SP, #+6]
        LDR.W    R2,??find_bianyan_336
        ADDS     R1,R1,R2
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        LDRSH    R0,[SP, #+0]
        LDR.W    R1,??find_bianyan_344
        ADDS     R0,R0,R1
        LDRSH    R1,[SP, #+0]
        LDR.W    R2,??find_bianyan_336
        ADDS     R1,R1,R2
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        LDRSH    R2,[SP, #+2]
        LDRSH    R1,[SP, #+12]
        MOVS     R0,#+1
        BL       LianJie
// 6756 	   if(d1_1==H)
??find_bianyan_372:
        LDRSH    R0,[SP, #+6]
        CMP      R0,#+55
        BNE.N    ??find_bianyan_373
// 6757 	   {
// 6758 		   for(i=d1_2-9;i<d1_2;i++)
        LDRH     R0,[SP, #+0]
        SUBS     R6,R0,#+9
        B.N      ??find_bianyan_374
// 6759 		   {
// 6760 			   chazhi_5=chazhi_5+bianyan[0][i]-bianyan[0][i-1];
??find_bianyan_375:
        LDRH     R0,[SP, #+20]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        ADDS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+20]
// 6761 			   
// 6762 		   }
        ADDS     R6,R6,#+1
??find_bianyan_374:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_375
// 6763            chazhi_5=chazhi_5/9;
        LDRSH    R0,[SP, #+20]
        MOVS     R1,#+9
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+20]
// 6764 		   for(i=d1_2;i<H-1;i++)bianyan[0][i+1]=bianyan[0][i]+chazhi_5;
        LDRSH    R6,[SP, #+0]
        B.N      ??find_bianyan_376
??find_bianyan_377:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        LDRH     R1,[SP, #+20]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+1]
        ADDS     R6,R6,#+1
??find_bianyan_376:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BLT.N    ??find_bianyan_377
// 6765 	   }
// 6766 	   if(d2_1==H)
??find_bianyan_373:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+55
        BNE.N    ??find_bianyan_378
// 6767 	   {
// 6768 		   for(i=d2_2-9;i<d2_2;i++)
        LDRH     R0,[SP, #+2]
        SUBS     R6,R0,#+9
        B.N      ??find_bianyan_379
// 6769 		   {
// 6770 			   chazhi_6=chazhi_6+bianyan[1][i]-bianyan[1][i-1];
??find_bianyan_380:
        LDRH     R0,[SP, #+18]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+18]
// 6771 			   
// 6772 		   }
        ADDS     R6,R6,#+1
??find_bianyan_379:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_380
// 6773            chazhi_6=chazhi_6/9;
        LDRSH    R0,[SP, #+18]
        MOVS     R1,#+9
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+18]
// 6774 		   for(i=d2_2;i<H-1;i++)bianyan[1][i+1]=bianyan[1][i]+chazhi_6;
        LDRSH    R6,[SP, #+2]
        B.N      ??find_bianyan_381
??find_bianyan_382:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        LDRH     R1,[SP, #+18]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+56]
        ADDS     R6,R6,#+1
??find_bianyan_381:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BLT.N    ??find_bianyan_382
// 6775 	   }
// 6776 
// 6777 	   
// 6778 	   if(d1_1>d2_1)
??find_bianyan_378:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+6]
        CMP      R0,R1
        BGE.N    ??find_bianyan_383
// 6779 	   {
// 6780 		  if(d1_2>d2_2)
        LDRSH    R0,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        CMP      R0,R1
        BGE.N    ??find_bianyan_384
// 6781 		  {
// 6782 			 for(i=d1_1;i>=d2_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
        LDRSH    R6,[SP, #+6]
??find_bianyan_385:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_383
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_385
// 6783 		  }
// 6784 		  else
// 6785 		  {
// 6786 		     for(i=d1_1;i>=d1_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_384:
        LDRSH    R6,[SP, #+6]
        B.N      ??find_bianyan_387
??find_bianyan_388:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
??find_bianyan_387:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BGE.N    ??find_bianyan_388
// 6787 		  }
// 6788 
// 6789 	   }
// 6790 	   if(d1_1<=d2_1)
??find_bianyan_383:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+6]
        CMP      R0,R1
        BLT.N    ??find_bianyan_332
// 6791 	   {
// 6792           if(d1_2>d2_2)
        LDRSH    R0,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        CMP      R0,R1
        BGE.N    ??find_bianyan_389
// 6793 		  {
// 6794 		     for(i=d2_1;i>=d2_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
        LDRSH    R6,[SP, #+12]
??find_bianyan_390:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_332
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_390
        DATA
??find_bianyan_282:
        DC32     END_Line_2
        DC32     xu_xian2
        THUMB
// 6795 		  }
// 6796 		  else
// 6797 		  {
// 6798 		     for(i=d2_1;i>=d1_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_389:
        LDRSH    R6,[SP, #+12]
        B.N      ??find_bianyan_391
??find_bianyan_392:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
??find_bianyan_391:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BGE.N    ??find_bianyan_392
// 6799 		  }
// 6800 	   }
// 6801 		}
// 6802 
// 6803   }
// 6804   /*****************弯道的处理*****************/
// 6805   if(xu_xian2==0&&END>0)//shizi==0
??find_bianyan_332:
        LDR.W    R0,??find_bianyan_393
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_394
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.W    ??find_bianyan_394
// 6806   {
// 6807     if(END<6)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+6
        BGE.N    ??find_bianyan_395
// 6808     {
// 6809       for(i=END+15;i>END;i--)
        ADDS     R6,R8,#+15
??find_bianyan_396:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_394
// 6810       {
// 6811          if(!(bianyan2[0][i]==bianyan[0][i]))bu1_number++;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_397
        ADDS     R11,R11,#+1
// 6812          if(!(bianyan2[1][i]==bianyan[1][i]))bu2_number++;
??find_bianyan_397:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_398
        ADDS     R10,R10,#+1
// 6813       }
??find_bianyan_398:
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_396
// 6814             
// 6815     }
// 6816     else if(END<15)
??find_bianyan_395:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+15
        BGE.N    ??find_bianyan_399
// 6817     {
// 6818       for(i=END+20;i>END;i--)
        ADDS     R6,R8,#+20
??find_bianyan_400:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_394
// 6819       {
// 6820         if((!(bianyan2[0][i]==bianyan[0][i]))||bianyan2[0][i]<2)bu1_number++;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_401
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_402
??find_bianyan_401:
        ADDS     R11,R11,#+1
// 6821         if((!(bianyan2[1][i]==bianyan[1][i]))||bianyan2[1][i]>V-5)bu2_number++;
??find_bianyan_402:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_403
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_404
??find_bianyan_403:
        ADDS     R10,R10,#+1
// 6822       }
??find_bianyan_404:
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_400
// 6823     }
// 6824     else if(END<20)
??find_bianyan_399:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+20
        BGE.N    ??find_bianyan_405
// 6825     {
// 6826       for(i=END+25;i>END;i--)
        ADDS     R6,R8,#+25
??find_bianyan_406:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_394
// 6827       {
// 6828          if((!(bianyan2[0][i]==bianyan[0][i]))||bianyan2[0][i]<2)bu1_number++;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_407
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_408
??find_bianyan_407:
        ADDS     R11,R11,#+1
// 6829          if((!(bianyan2[1][i]==bianyan[1][i]))||bianyan2[1][i]>V-5)bu2_number++;
??find_bianyan_408:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_409
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_410
??find_bianyan_409:
        ADDS     R10,R10,#+1
// 6830       }
??find_bianyan_410:
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_406
// 6831     }
// 6832     else
// 6833     {
// 6834       for(i=H-1;i>END;i--)
??find_bianyan_405:
        MOVS     R6,#+54
        B.N      ??find_bianyan_411
// 6835       {
// 6836               if(bianyan2[0][i]<2)num_1++;
??find_bianyan_412:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_413
        LDRH     R0,[SP, #+48]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+48]
// 6837               if(bianyan2[1][i]>V-5)num_2++;
??find_bianyan_413:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_414
        LDRH     R0,[SP, #+46]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+46]
// 6838       }
??find_bianyan_414:
        SUBS     R6,R6,#+1
??find_bianyan_411:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_412
// 6839       if(num_1>num_2)
        LDRSH    R0,[SP, #+46]
        LDRSH    R1,[SP, #+48]
        CMP      R0,R1
        BGE.W    ??find_bianyan_415
// 6840       {
// 6841         
// 6842         if(bianyan2[0][54]<2&&bianyan2[0][53]<2&&bianyan2[0][52]<2)
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+54]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_416
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+53]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_416
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+52]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_416
// 6843         {
// 6844                 if(END>23&&END<55)
        SUBS     R0,R8,#+24
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+31
        BCS.N    ??find_bianyan_416
// 6845                 {
// 6846                         if((bianyan2[1][54]-mo_hu[END-24])>=0)center[54]=bianyan2[1][54]-mo_hu[END-24];
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+109]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_417
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #-24]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_416
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+109]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_417
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #-24]
        SUBS     R0,R0,R1
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R1, #+54]
// 6847                 }
// 6848         }
// 6849         for(i=H-2;i>END;i--)
??find_bianyan_416:
        MOVS     R6,#+53
        B.N      ??find_bianyan_418
??find_bianyan_419:
        SUBS     R6,R6,#+1
??find_bianyan_418:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_420
// 6850          {
// 6851                 if(bianyan2[0][i]<1)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BCS.N    ??find_bianyan_419
        B.N      ??find_bianyan_420
// 6852                  
// 6853          }
// 6854         for(;i>END;i--)
// 6855         {
// 6856                 if((center[i+1]+bianyan[1][i]-bianyan[1][i+1])>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 6857             else 
// 6858                 {
// 6859                    for(;i>END;i--)center[i]=0;
??find_bianyan_421:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_422:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_421
// 6860                 }
??find_bianyan_423:
        SUBS     R6,R6,#+1
??find_bianyan_420:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_415
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_422
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_423
// 6861 
// 6862         }
// 6863       }
// 6864       if(num_1<num_2)
??find_bianyan_415:
        LDRSH    R0,[SP, #+48]
        LDRSH    R1,[SP, #+46]
        CMP      R0,R1
        BGE.W    ??find_bianyan_394
// 6865       {
// 6866          if(bianyan2[1][54]>V-3&&bianyan2[1][53]>V-3&&bianyan2[1][52]>V-3)
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+109]
        CMP      R0,#+158
        BCC.N    ??find_bianyan_424
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+108]
        CMP      R0,#+158
        BCC.N    ??find_bianyan_424
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+107]
        CMP      R0,#+158
        BCC.N    ??find_bianyan_424
// 6867         {
// 6868                 if(END>23&&END<55)
        SUBS     R0,R8,#+24
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+31
        BCS.N    ??find_bianyan_424
// 6869                 {
// 6870                         if((bianyan2[0][54]+mo_hu[END-24])<V-1)center[54]=bianyan2[0][54]+mo_hu[END-24];
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+54]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_417
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #-24]
        ADDS     R0,R1,R0
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+159
        BCS.N    ??find_bianyan_424
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+54]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_417
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #-24]
        ADDS     R0,R1,R0
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R1, #+54]
// 6871                 }
// 6872         }
// 6873          for(i=H-2;i>END;i--)
??find_bianyan_424:
        MOVS     R6,#+53
        B.N      ??find_bianyan_425
??find_bianyan_426:
        SUBS     R6,R6,#+1
??find_bianyan_425:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_427
// 6874          {
// 6875                  if(bianyan2[1][i]>=V-4)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_426
        B.N      ??find_bianyan_427
// 6876                  
// 6877          }
// 6878          for(;i>END;i--)
// 6879          {
// 6880                  if((center[i+1]+bianyan[0][i]-bianyan[0][i+1])<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 6881                  else 
// 6882                  {
// 6883                          for(;i>END;i--)center[i]=0;
??find_bianyan_428:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_429:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_428
// 6884                  }
??find_bianyan_430:
        SUBS     R6,R6,#+1
??find_bianyan_427:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_394
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_429
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_430
// 6885          }
// 6886       }
// 6887       
// 6888     }
// 6889   }
// 6890   if(bu1_number>0&&(bu2_number==0||(bu1_number-bu2_number)>15))
??find_bianyan_394:
        SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
        CMP      R11,#+1
        BLT.W    ??find_bianyan_431
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        CMP      R10,#+0
        BEQ.N    ??find_bianyan_432
        SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SUBS     R0,R11,R10
        CMP      R0,#+16
        BLT.W    ??find_bianyan_431
// 6891   {
// 6892     if(END<6)
??find_bianyan_432:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+6
        BGE.N    ??find_bianyan_433
// 6893     {
// 6894       for(i=END+15;i>END;i--)
        ADDS     R6,R8,#+15
        B.N      ??find_bianyan_434
??find_bianyan_435:
        SUBS     R6,R6,#+1
??find_bianyan_434:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_436
// 6895       {
// 6896         if(!(bianyan2[0][i]==bianyan[0][i]))break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_435
        B.N      ??find_bianyan_436
// 6897       }
// 6898       for(;i>END;i--)
// 6899       {
// 6900         if((center[i+1]+bianyan[1][i]-bianyan[1][i+1])>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 6901         else 
// 6902         {
// 6903           for(;i>END;i--)center[i]=0;
??find_bianyan_437:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_438:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_437
// 6904         }
??find_bianyan_439:
        SUBS     R6,R6,#+1
??find_bianyan_436:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_431
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_438
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_439
// 6905       }
// 6906     }
// 6907     else if(END<15)
??find_bianyan_433:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+15
        BGE.N    ??find_bianyan_440
// 6908     {
// 6909       for(i=END+20;i>END;i--)
        ADDS     R6,R8,#+20
        B.N      ??find_bianyan_441
??find_bianyan_442:
        SUBS     R6,R6,#+1
??find_bianyan_441:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_443
// 6910       {
// 6911         if((!(bianyan2[0][i]==bianyan[0][i]))||bianyan2[0][i]<2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_444
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_442
??find_bianyan_444:
        B.N      ??find_bianyan_443
// 6912       }
// 6913       for(;i>END;i--)
// 6914       {
// 6915         if((center[i+1]+bianyan[1][i]-bianyan[1][i+1])>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 6916         else 
// 6917         {
// 6918                 for(;i>END;i--)center[i]=0;
??find_bianyan_445:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_446:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_445
// 6919         }
??find_bianyan_447:
        SUBS     R6,R6,#+1
??find_bianyan_443:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_431
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_446
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_447
// 6920       }
// 6921     }
// 6922     else if(END<20)
??find_bianyan_440:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+20
        BGE.N    ??find_bianyan_448
// 6923     {
// 6924       for(i=END+25;i>END;i--)
        ADDS     R6,R8,#+25
        B.N      ??find_bianyan_449
??find_bianyan_450:
        SUBS     R6,R6,#+1
??find_bianyan_449:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_451
// 6925       {
// 6926         if((!(bianyan2[0][i]==bianyan[0][i]))||bianyan2[0][i]<2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_452
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_450
??find_bianyan_452:
        B.N      ??find_bianyan_451
// 6927       }
// 6928       for(;i>END;i--)
// 6929       {
// 6930         if((center[i+1]+bianyan[1][i]-bianyan[1][i+1])>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 6931         else 
// 6932         {
// 6933                 for(;i>END;i--)center[i]=0;
??find_bianyan_453:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_454:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_453
// 6934         }
??find_bianyan_455:
        SUBS     R6,R6,#+1
??find_bianyan_451:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_431
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_454
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_455
// 6935       }
// 6936     }
// 6937     else 
// 6938     {
// 6939       for(i=H-2;i>END;i--)
??find_bianyan_448:
        MOVS     R6,#+53
        B.N      ??find_bianyan_456
??find_bianyan_457:
        SUBS     R6,R6,#+1
??find_bianyan_456:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_458
// 6940       {
// 6941         if((!(bianyan2[0][i]==bianyan[0][i]))||bianyan2[0][i]<2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_459
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_457
??find_bianyan_459:
        B.N      ??find_bianyan_458
// 6942       }
// 6943       for(;i>END;i--)
// 6944       {
// 6945         if((center[i+1]+bianyan[1][i]-bianyan[1][i+1])>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 6946         else 
// 6947         {
// 6948                 for(;i>END;i--)center[i]=0;
??find_bianyan_460:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_461:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_460
// 6949         }
??find_bianyan_462:
        SUBS     R6,R6,#+1
??find_bianyan_458:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_431
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_461
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_462
// 6950       }
// 6951     }
// 6952   }
// 6953 	
// 6954   if((bu1_number==0||(bu2_number-bu1_number)>15)&&bu2_number>0)
??find_bianyan_431:
        SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
        CMP      R11,#+0
        BEQ.N    ??find_bianyan_463
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
        SUBS     R0,R10,R11
        CMP      R0,#+16
        BLT.W    ??find_bianyan_464
??find_bianyan_463:
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        CMP      R10,#+1
        BLT.W    ??find_bianyan_464
// 6955   {
// 6956     if(END<6)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+6
        BGE.N    ??find_bianyan_465
// 6957     {
// 6958       for(i=END+15;i>END;i--)
        ADDS     R6,R8,#+15
        B.N      ??find_bianyan_466
??find_bianyan_467:
        SUBS     R6,R6,#+1
??find_bianyan_466:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_468
// 6959       {
// 6960         if(!(bianyan2[1][i]==bianyan[1][i]))break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_467
        B.N      ??find_bianyan_468
        DATA
??find_bianyan_336:
        DC32     bianyan2
        THUMB
// 6961       }
// 6962       for(;i>END;i--)
// 6963       {
// 6964         if((center[i+1]+bianyan[0][i]-bianyan[0][i+1])<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 6965         else 
// 6966         {
// 6967                 for(;i>END;i--)center[i]=0;
??find_bianyan_469:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_470:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_469
// 6968         }
??find_bianyan_471:
        SUBS     R6,R6,#+1
??find_bianyan_468:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_464
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_470
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_471
// 6969       }
// 6970     }
// 6971     else if(END<15)
??find_bianyan_465:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+15
        BGE.N    ??find_bianyan_472
// 6972     {
// 6973       for(i=END+20;i>END;i--)
        ADDS     R6,R8,#+20
        B.N      ??find_bianyan_473
??find_bianyan_474:
        SUBS     R6,R6,#+1
??find_bianyan_473:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_475
// 6974       {
// 6975         if((!(bianyan2[1][i]==bianyan[1][i]))||bianyan2[1][i]>V-5)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_477
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_474
??find_bianyan_477:
        B.N      ??find_bianyan_475
// 6976       }
// 6977       for(;i>END;i--)
// 6978       {
// 6979         if((center[i+1]+bianyan[0][i]-bianyan[0][i+1])<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 6980         else 
// 6981         {
// 6982                 for(;i>END;i--)center[i]=0;
??find_bianyan_478:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_479:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_478
// 6983         }
??find_bianyan_480:
        SUBS     R6,R6,#+1
??find_bianyan_475:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_464
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_479
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_480
// 6984       }
// 6985     }
// 6986     else if(END<20)
??find_bianyan_472:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+20
        BGE.N    ??find_bianyan_481
// 6987     {
// 6988       for(i=END+25;i>END;i--)
        ADDS     R6,R8,#+25
        B.N      ??find_bianyan_482
??find_bianyan_483:
        SUBS     R6,R6,#+1
??find_bianyan_482:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_484
// 6989       {
// 6990         if((!(bianyan2[1][i]==bianyan[1][i]))||bianyan2[1][i]>V-5)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_485
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_483
??find_bianyan_485:
        B.N      ??find_bianyan_484
// 6991       }
// 6992       for(;i>END;i--)
// 6993       {
// 6994         if((center[i+1]+bianyan[0][i]-bianyan[0][i+1])<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 6995         else 
// 6996         {
// 6997                 for(;i>END;i--)center[i]=0;
??find_bianyan_486:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_487:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_486
// 6998         }
??find_bianyan_488:
        SUBS     R6,R6,#+1
??find_bianyan_484:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_464
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_487
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_488
        DATA
??find_bianyan_344:
        DC32     bianyan
        THUMB
// 6999       }
// 7000     }
// 7001     else 
// 7002     {
// 7003       for(i=H-2;i>END;i--)
??find_bianyan_481:
        MOVS     R6,#+53
        B.N      ??find_bianyan_489
??find_bianyan_490:
        SUBS     R6,R6,#+1
??find_bianyan_489:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_491
// 7004       {
// 7005         if((!(bianyan2[1][i]==bianyan[1][i]))||bianyan2[1][i]>V-5)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_492
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_490
??find_bianyan_492:
        B.N      ??find_bianyan_491
        Nop      
        DATA
??find_bianyan_386:
        DC32     center
        THUMB
// 7006       }
// 7007       for(;i>END;i--)
// 7008       {
// 7009         if((center[i+1]+bianyan[0][i]-bianyan[0][i+1])<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 7010         else 
// 7011         {
// 7012                 for(;i>END;i--)center[i]=0;
??find_bianyan_493:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_494:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_493
// 7013         }
??find_bianyan_495:
        SUBS     R6,R6,#+1
??find_bianyan_491:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_464
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable77
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_494
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable77
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable77_1
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_495
// 7014       }
// 7015     }
// 7016   }
// 7017   /*****************弯道的处理END*****************/
// 7018   /*****************长直弯与十字交叉快要出弯的识别与补线****************/
// 7019   m=0;
??find_bianyan_464:
        MOVS     R9,#+0
// 7020   if(shizi==0&&xu_xian2==0&&END<6)
        LDRSH    R0,[SP, #+28]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_496
        LDR.N    R0,??find_bianyan_393
        B.N      ??find_bianyan_497
        DATA
??find_bianyan_393:
        DC32     xu_xian2
        THUMB
??find_bianyan_497:
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_496
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+6
        BGE.W    ??find_bianyan_496
// 7021   {
// 7022     if(bianyan[0][54]<2)
        LDR.W    R0,??DataTable77
        LDRB     R0,[R0, #+54]
        CMP      R0,#+2
        BCS.W    ??find_bianyan_498
// 7023     {
// 7024       for(i=H-1;i>=0;i--)
        MOVS     R6,#+54
        B.N      ??find_bianyan_499
??find_bianyan_500:
        SUBS     R6,R6,#+1
??find_bianyan_499:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_501
// 7025       {
// 7026               if(bianyan[0][i]>=2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCC.N    ??find_bianyan_500
        B.N      ??find_bianyan_501
// 7027       }
// 7028       for(;i>=0;i--)
??find_bianyan_502:
        SUBS     R6,R6,#+1
??find_bianyan_501:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_503
// 7029       {
// 7030               if(bianyan[0][i]<2)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_502
// 7031               {
// 7032                       m=i;
        MOV      R9,R6
// 7033                       break;
        B.N      ??find_bianyan_503
// 7034               }
// 7035       }
// 7036       for(;i>=0;i--)
??find_bianyan_504:
        SUBS     R6,R6,#+1
??find_bianyan_503:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_505
// 7037       {
// 7038               if(bianyan[0][i]>=2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCC.N    ??find_bianyan_504
// 7039       }
// 7040       if(m-i>15)
??find_bianyan_505:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R9,R6
        CMP      R0,#+16
        BLT.N    ??find_bianyan_498
// 7041       {
// 7042         for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_506
// 7043         {
// 7044                 if(!(bianyan2[1][n]==bianyan[1][n]))numx++;
??find_bianyan_507:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_508
        ADDS     R5,R5,#+1
// 7045         }
??find_bianyan_508:
        SUBS     R4,R4,#+1
??find_bianyan_506:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BLT.N    ??find_bianyan_507
// 7046         if(numx<5)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+5
        BGE.N    ??find_bianyan_498
// 7047         {
// 7048           for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_509
??find_bianyan_510:
        SUBS     R4,R4,#+1
??find_bianyan_509:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_498
// 7049           {
// 7050                   if(bianyan[1][n]-bianyan[1][n+1]<0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??find_bianyan_511
// 7051                   {
// 7052                      if(center[n+1]+bianyan[1][n]-bianyan[1][n+1]>=0)center[n]=center[n+1]+bianyan[1][n]-bianyan[1][n+1];
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_512
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_510
// 7053                      else
// 7054                      {
// 7055                              for(;n>=0;n--)center[n]=0;
??find_bianyan_513:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_512:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_513
// 7056                              break;
// 7057                      }
// 7058                   }
// 7059                   else
// 7060                   {
// 7061                     for(;n>=0;n--)
// 7062                     {
// 7063                       if(center[n+1]+center[n+1]-center[n+2]>=0)center[n]=center[n+1]+center[n+1]-center[n+2];
// 7064                       else
// 7065                       {
// 7066                               for(;n>=0;n--)center[n]=0;
// 7067                               
// 7068                       }
// 7069                     }
// 7070                }
// 7071           }
// 7072         }
// 7073       }
// 7074     }
// 7075     if(bianyan[0][54]>=2)
??find_bianyan_498:
        LDR.W    R0,??DataTable77
        LDRB     R0,[R0, #+54]
        CMP      R0,#+2
        BCC.W    ??find_bianyan_514
// 7076     {
// 7077       for(i=H-1;i>=0;i--)
        MOVS     R6,#+54
        B.N      ??find_bianyan_515
??find_bianyan_516:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_517:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_516
??find_bianyan_518:
        SUBS     R4,R4,#+1
??find_bianyan_511:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BMI.N    ??find_bianyan_510
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_517
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_518
??find_bianyan_519:
        SUBS     R6,R6,#+1
??find_bianyan_515:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_520
// 7078       {
// 7079               if(bianyan[0][i]<2)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_519
// 7080               {
// 7081                       m=i;
        MOV      R9,R6
// 7082                       break;
        B.N      ??find_bianyan_520
// 7083               }
// 7084       }
// 7085       for(;i>=0;i--)
??find_bianyan_521:
        SUBS     R6,R6,#+1
??find_bianyan_520:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_522
// 7086       {
// 7087               if(bianyan[0][i]>=2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCC.N    ??find_bianyan_521
// 7088       }
// 7089       if(m-i>15)
??find_bianyan_522:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R9,R6
        CMP      R0,#+16
        BLT.N    ??find_bianyan_514
// 7090       {
// 7091         for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_523
// 7092         {
// 7093                 if(!(bianyan2[1][n]==bianyan[1][n]))numx++;
??find_bianyan_524:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_525
        ADDS     R5,R5,#+1
// 7094         }
??find_bianyan_525:
        SUBS     R4,R4,#+1
??find_bianyan_523:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BLT.N    ??find_bianyan_524
// 7095         if(numx<5)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+5
        BGE.N    ??find_bianyan_514
// 7096         {
// 7097           for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_526
??find_bianyan_527:
        SUBS     R4,R4,#+1
??find_bianyan_526:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_514
// 7098           {
// 7099             if(bianyan[1][n]-bianyan[1][n+1]<0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??find_bianyan_528
// 7100             {
// 7101                if(center[n+1]+bianyan[1][n]-bianyan[1][n+1]>=0)center[n]=center[n+1]+bianyan[1][n]-bianyan[1][n+1];
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_529
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_527
// 7102            else
// 7103                {
// 7104                        for(;n>=0;n--)center[n]=0;
??find_bianyan_530:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_529:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_530
// 7105                        break;
// 7106                }
// 7107             }
// 7108             else
// 7109             {
// 7110                     for(;n>=0;n--)
// 7111                     {
// 7112                             if(center[n+1]+center[n+1]-center[n+2]>=0)center[n]=center[n+1]+center[n+1]-center[n+2];
// 7113                             else
// 7114                             {
// 7115                                     for(;n>=0;n--)center[n]=0;
// 7116                                     
// 7117                             }
// 7118                     }
// 7119             }
// 7120           }
// 7121         }
// 7122       }
// 7123     }
// 7124     m=0;
??find_bianyan_514:
        MOVS     R9,#+0
// 7125     numx=0;
        MOVS     R5,#+0
// 7126     if(bianyan[1][54]>V-4)
        LDR.W    R0,??DataTable77
        LDRB     R0,[R0, #+109]
        CMP      R0,#+157
        BCC.W    ??find_bianyan_531
// 7127     {
// 7128       for(i=H-1;i>=0;i--)
        MOVS     R6,#+54
        B.N      ??find_bianyan_532
??find_bianyan_533:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_534:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_533
??find_bianyan_535:
        SUBS     R4,R4,#+1
??find_bianyan_528:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BMI.N    ??find_bianyan_527
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_534
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_535
??find_bianyan_536:
        SUBS     R6,R6,#+1
??find_bianyan_532:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_537
// 7129       {
// 7130               if(bianyan[1][i]<=V-4)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCS.N    ??find_bianyan_536
        B.N      ??find_bianyan_537
// 7131       }
// 7132       for(;i>=0;i--)
??find_bianyan_538:
        SUBS     R6,R6,#+1
??find_bianyan_537:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_539
// 7133       {
// 7134               if(bianyan[1][i]>V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??find_bianyan_538
// 7135               {
// 7136                       m=i;
        MOV      R9,R6
// 7137                       break;
        B.N      ??find_bianyan_539
// 7138               }
// 7139       }
// 7140       for(;i>=0;i--)
??find_bianyan_540:
        SUBS     R6,R6,#+1
??find_bianyan_539:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_541
// 7141       {
// 7142               if(bianyan[1][i]<=V-4)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCS.N    ??find_bianyan_540
// 7143       }
// 7144       if(m-i>15)
??find_bianyan_541:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R9,R6
        CMP      R0,#+16
        BLT.N    ??find_bianyan_531
// 7145       {
// 7146         for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_542
// 7147         {
// 7148                 if(!(bianyan2[0][n]==bianyan[0][n]))numx++;
??find_bianyan_543:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        LDRB     R1,[R4, R1]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_544
        ADDS     R5,R5,#+1
// 7149         }
??find_bianyan_544:
        SUBS     R4,R4,#+1
??find_bianyan_542:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BLT.N    ??find_bianyan_543
// 7150         if(numx<5)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+5
        BGE.N    ??find_bianyan_531
// 7151         {
// 7152                 for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_545
??find_bianyan_546:
        SUBS     R4,R4,#+1
??find_bianyan_545:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_531
// 7153                 {
// 7154                         if(bianyan[0][n]-bianyan[0][n+1]>0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??find_bianyan_547
// 7155                         {
// 7156                            if(center[n+1]+bianyan[0][n]-bianyan[0][n+1]<V)center[n]=center[n+1]+bianyan[0][n]-bianyan[0][n+1];
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        LDRB     R1,[R4, R1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_548
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        LDRB     R1,[R4, R1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_546
// 7157                            else
// 7158                            {
// 7159                                    for(;n>=0;n--)center[n]=0;
??find_bianyan_549:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_548:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_549
// 7160                                    break;
// 7161                            }
// 7162                         }
// 7163                         else
// 7164                         {
// 7165                                 for(;n>=0;n--)
// 7166                                 {
// 7167                                         if(center[n+1]+center[n+1]-center[n+2]<V)center[n]=center[n+1]+center[n+1]-center[n+2];
// 7168                                         else
// 7169                                         {
// 7170                                                 for(;n>=0;n--)center[n]=0;
// 7171                                                 
// 7172                                         }
// 7173                                 }
// 7174                         }
// 7175                 }
// 7176         }
// 7177       }
// 7178     }
// 7179     if(bianyan[1][54]<=V-4)
??find_bianyan_531:
        LDR.W    R0,??DataTable77
        LDRB     R0,[R0, #+109]
        CMP      R0,#+157
        BCS.W    ??find_bianyan_496
// 7180     {
// 7181       for(i=H-1;i>=0;i--)
        MOVS     R6,#+54
        B.N      ??find_bianyan_550
??find_bianyan_551:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_552:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_551
??find_bianyan_553:
        SUBS     R4,R4,#+1
??find_bianyan_547:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BMI.N    ??find_bianyan_546
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_552
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_553
??find_bianyan_554:
        SUBS     R6,R6,#+1
??find_bianyan_550:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_555
// 7182       {
// 7183               if(bianyan[1][i]>V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??find_bianyan_554
// 7184               {
// 7185                       m=i;
        MOV      R9,R6
// 7186                       break;
        B.N      ??find_bianyan_555
// 7187               }
// 7188       }
// 7189       for(;i>=0;i--)
??find_bianyan_556:
        SUBS     R6,R6,#+1
??find_bianyan_555:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_557
// 7190       {
// 7191               if(bianyan[0][i]<=V-4)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R6, R0]
        CMP      R0,#+157
        BCS.N    ??find_bianyan_556
// 7192       }
// 7193         if(m-i>15)
??find_bianyan_557:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R9,R6
        CMP      R0,#+16
        BLT.N    ??find_bianyan_496
// 7194         {
// 7195           for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_558
// 7196           {
// 7197                   if(!(bianyan2[0][n]==bianyan[0][n]))numx++;
??find_bianyan_559:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??find_bianyan_476
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        LDRB     R1,[R4, R1]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_560
        ADDS     R5,R5,#+1
// 7198           }
??find_bianyan_560:
        SUBS     R4,R4,#+1
??find_bianyan_558:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BLT.N    ??find_bianyan_559
// 7199             if(numx<5)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+5
        BGE.N    ??find_bianyan_496
// 7200             {
// 7201               for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_561
        Nop      
        DATA
??find_bianyan_417:
        DC32     mo_hu
        THUMB
??find_bianyan_562:
        SUBS     R4,R4,#+1
??find_bianyan_561:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_496
// 7202               {
// 7203                       if(bianyan[0][n]-bianyan[0][n+1]>0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??find_bianyan_563
// 7204                       {
// 7205                          if(center[n+1]+bianyan[0][n]-bianyan[0][n+1]<V)center[n]=center[n+1]+bianyan[0][n]-bianyan[0][n+1];
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        LDRB     R1,[R4, R1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_564
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        LDRB     R1,[R4, R1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_562
// 7206                          else
// 7207                          {
// 7208                                  for(;n>=0;n--)center[n]=0;
??find_bianyan_565:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_564:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_565
// 7209                                  break;
// 7210                          }
// 7211                       }
// 7212                       else
// 7213                       {
// 7214                               for(;n>=0;n--)
// 7215                               {
// 7216                                       if(center[n+1]+center[n+1]-center[n+2]<V)center[n]=center[n+1]+center[n+1]-center[n+2];
// 7217                                       else
// 7218                                       {
// 7219                                               for(;n>=0;n--)center[n]=0;
// 7220                                               
// 7221                                       }
// 7222                               }
// 7223                       }
// 7224               }
// 7225             }
// 7226         }
// 7227       }
// 7228   }
// 7229     /*****************长直弯与十字交叉快要出弯的识别与补线END****************/
// 7230   if(END<8)
??find_bianyan_496:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+8
        BGE.W    ??find_bianyan_566
// 7231 	{
// 7232 		for(i=0;i<H;i++)
        MOVS     R6,#+0
        B.N      ??find_bianyan_567
??find_bianyan_568:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_569:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_568
??find_bianyan_570:
        SUBS     R4,R4,#+1
??find_bianyan_563:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BMI.N    ??find_bianyan_562
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_569
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77_1
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_570
??find_bianyan_571:
        ADDS     R6,R6,#+1
??find_bianyan_567:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+55
        BGE.N    ??find_bianyan_572
// 7233 		{
// 7234 			if(center[i]>0)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77_1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BCC.N    ??find_bianyan_571
// 7235 		}
// 7236 		for(m=H-3;m>i;m--)
??find_bianyan_572:
        MOVS     R9,#+52
        B.N      ??find_bianyan_573
??find_bianyan_574:
        SUBS     R9,R9,#+1
??find_bianyan_573:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R6,R9
        BGE.W    ??find_bianyan_575
// 7237 		{
// 7238 			chazhi_center_1=center[m]-center[m+1];
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable77_1
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R9,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+2]
// 7239 			chazhi_center_2=center[m+1]-center[m+2];
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R9,R0
        LDRB     R0,[R0, #+1]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R1,??DataTable77_1
        ADDS     R1,R9,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+0]
// 7240 			chazhi_center_1=abs(chazhi_center_1);
        LDRSH    R0,[SP, #+2]
        BL       abs
        STRH     R0,[SP, #+2]
// 7241 			chazhi_center_2=abs(chazhi_center_2);
        LDRSH    R0,[SP, #+0]
        BL       abs
        STRH     R0,[SP, #+0]
// 7242 			if((chazhi_center_1-chazhi_center_2)>8)
        LDRSH    R0,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        SUBS     R0,R0,R1
        CMP      R0,#+9
        BLT.N    ??find_bianyan_574
// 7243 			{
// 7244 				n_1=m;
        STRH     R9,[SP, #+22]
// 7245 				n=m;
        MOV      R4,R9
        B.N      ??find_bianyan_576
// 7246 				for(;n>i;n--)
??find_bianyan_577:
        SUBS     R4,R4,#+1
??find_bianyan_576:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_578
// 7247 				{
// 7248 					if((bianyan[0][n]==bianyan2[0][n])&&(bianyan[1][n]==bianyan2[1][n]))break;
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R1,??find_bianyan_476
        LDRB     R1,[R4, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_577
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R1,??find_bianyan_476
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_577
// 7249 				}
// 7250 				for(m=m+1;m<H;m++)
??find_bianyan_578:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_579
??find_bianyan_580:
        ADDS     R9,R9,#+1
??find_bianyan_579:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+55
        BGE.N    ??find_bianyan_581
// 7251 				{
// 7252 					if((bianyan[0][m]==bianyan2[0][m])&&(bianyan[1][m]==bianyan2[1][m]))break;
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.N    R1,??find_bianyan_476
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_580
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R9,R0
        LDRB     R0,[R0, #+55]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.N    R1,??find_bianyan_476
        ADDS     R1,R9,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_580
// 7253 				}
// 7254 				if(n>i&&(m-n)>1){LianJie_center(m,n);break;}
??find_bianyan_581:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_582
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SUBS     R0,R9,R4
        CMP      R0,#+2
        BLT.N    ??find_bianyan_582
        MOVS     R1,R4
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOV      R0,R9
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
        B.N      ??find_bianyan_575
        Nop      
        DATA
??find_bianyan_476:
        DC32     bianyan2
        THUMB
// 7255 				else break;
// 7256 			}
// 7257 		}
// 7258 		if(n_1&&(m-n)==1)
??find_bianyan_582:
??find_bianyan_575:
        LDRSH    R0,[SP, #+22]
        CMP      R0,#+0
        BEQ.W    ??find_bianyan_566
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SUBS     R0,R9,R4
        CMP      R0,#+1
        BNE.W    ??find_bianyan_566
        B.N      ??find_bianyan_583
// 7259 		{
// 7260 			for(;m<H;m++)
// 7261 			{
// 7262 				if(!(bianyan2[0][m]==bianyan[0][m]))num_3++;
??find_bianyan_584:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable78
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R1,??DataTable77
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_585
        LDRH     R0,[SP, #+62]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+62]
// 7263                 if(!(bianyan2[1][m]==bianyan[1][m]))num_4++;
??find_bianyan_585:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable78
        ADDS     R0,R9,R0
        LDRB     R0,[R0, #+55]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R9,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_586
        LDRH     R0,[SP, #+60]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+60]
// 7264 				
// 7265 			}
??find_bianyan_586:
        ADDS     R9,R9,#+1
??find_bianyan_583:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+55
        BLT.N    ??find_bianyan_584
// 7266 			if(num_3<5&&num_4<5)
        LDRSH    R0,[SP, #+62]
        CMP      R0,#+5
        BGE.N    ??find_bianyan_566
        LDRSH    R0,[SP, #+60]
        CMP      R0,#+5
        BGE.N    ??find_bianyan_566
// 7267 			{
// 7268 				for(i=n_1;i<H;i++)
        LDRSH    R6,[SP, #+22]
        B.N      ??find_bianyan_587
// 7269 				{
// 7270                     if(bianyan[0][i]==0)num_5++;
??find_bianyan_588:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_589
        LDRH     R0,[SP, #+32]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+32]
// 7271 					if(bianyan[1][i]>V-4)num_6++;
??find_bianyan_589:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??find_bianyan_590
        LDRH     R0,[SP, #+30]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+30]
// 7272 				}
??find_bianyan_590:
        ADDS     R6,R6,#+1
??find_bianyan_587:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+55
        BLT.N    ??find_bianyan_588
// 7273 				if(num_5<num_6)
        LDRSH    R0,[SP, #+32]
        LDRSH    R1,[SP, #+30]
        CMP      R0,R1
        BGE.N    ??find_bianyan_591
// 7274 				{
// 7275 					if(num_6>6)
        LDRSH    R0,[SP, #+30]
        CMP      R0,#+7
        BLT.N    ??find_bianyan_591
// 7276 					{
// 7277 						LianJie_center((n_1+num_6/3),n_1);
        LDRSH    R1,[SP, #+22]
        LDRH     R0,[SP, #+22]
        LDRSH    R2,[SP, #+30]
        MOVS     R3,#+3
        SDIV     R2,R2,R3
        ADDS     R0,R2,R0
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 7278 					}
// 7279 				}
// 7280 				if(num_5>num_6)
??find_bianyan_591:
        LDRSH    R0,[SP, #+30]
        LDRSH    R1,[SP, #+32]
        CMP      R0,R1
        BGE.N    ??find_bianyan_566
// 7281 				{
// 7282 					if(num_5>6)
        LDRSH    R0,[SP, #+32]
        CMP      R0,#+7
        BLT.N    ??find_bianyan_566
// 7283 					{
// 7284                         LianJie_center((n_1+num_5/3),n_1);
        LDRSH    R1,[SP, #+22]
        LDRH     R0,[SP, #+22]
        LDRSH    R2,[SP, #+32]
        MOVS     R3,#+3
        SDIV     R2,R2,R3
        ADDS     R0,R2,R0
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 7285 					}
// 7286 				}
// 7287 			}
// 7288 		}
// 7289 		
// 7290 	}
// 7291   END_0=END;
??find_bianyan_566:
        LDR.W    R0,??DataTable78_1
        STRH     R8,[R0, #+0]
// 7292   /*************十字交叉系统识别*************/
// 7293   if(shizi==0&&END<15)
        LDRSH    R0,[SP, #+28]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_592
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+15
        BGE.N    ??find_bianyan_592
// 7294   {
// 7295     xie_shizi();
        BL       xie_shizi
// 7296     if(xie_shizi_flag_1==1||xie_shizi_flag_2==1)
        LDR.W    R0,??DataTable78_2
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??find_bianyan_593
        LDR.W    R0,??DataTable78_3
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_592
// 7297     {
// 7298       END=END_Line;
??find_bianyan_593:
        LDR.W    R0,??DataTable78_4
        LDRSH    R8,[R0, #+0]
// 7299       END_0=END;
        LDR.W    R0,??DataTable78_1
        STRH     R8,[R0, #+0]
// 7300       xie_shizi_flag_1=0;
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
// 7301       xie_shizi_flag_2=0;
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
// 7302       END_Line=0;
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
// 7303     }
// 7304   }
// 7305   /*************十字交叉系统识别END*************/
// 7306   /***************边沿倾斜过于严重的情况***************/
// 7307 	
// 7308   if(END<18)
??find_bianyan_592:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+18
        BGE.W    ??find_bianyan_594
// 7309   {
// 7310     if(END>12)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+13
        BLT.W    ??find_bianyan_595
// 7311     {
// 7312       if(bianyan[0][END+1]>130)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+131
        BCC.N    ??find_bianyan_596
// 7313       {
// 7314         if((bianyan[0][END+1]-bianyan[0][54])>100)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        LDR.N    R1,??DataTable77
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+101
        BLT.N    ??find_bianyan_596
// 7315         {
// 7316           for(i=53;i>=0;i--)
        MOVS     R6,#+53
        B.N      ??find_bianyan_597
// 7317           {
// 7318             if(bianyan[1][i]>V-4)
// 7319             {
// 7320               if(center[i+1]+bianyan[0][i]-bianyan[0][i+1]<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 7321               else
// 7322               {
// 7323                 for(;i>=0;i--)center[i]=0;
// 7324               }
// 7325             }
// 7326             else
// 7327             {
// 7328                     center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_598:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77_1
        STRB     R0,[R6, R1]
// 7329             }
??find_bianyan_599:
        SUBS     R6,R6,#+1
??find_bianyan_597:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_596
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??find_bianyan_598
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_600
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77_1
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_599
??find_bianyan_600:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_599
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_600
// 7330           }
// 7331         }
// 7332       }
// 7333       if(bianyan[1][END+1]<30)
??find_bianyan_596:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+56]
        CMP      R0,#+30
        BCS.W    ??find_bianyan_594
// 7334       {
// 7335         if((bianyan[1][END+1]-bianyan[1][54])<-100)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+56]
        LDR.N    R1,??DataTable77
        LDRB     R1,[R1, #+109]
        SUBS     R0,R0,R1
        CMN      R0,#+100
        BGE.W    ??find_bianyan_594
// 7336         {
// 7337           for(i=53;i>=0;i--)
        MOVS     R6,#+53
        B.N      ??find_bianyan_601
// 7338           {
// 7339             if(bianyan[0][i]<2)
// 7340             {
// 7341               if(center[i+1]+bianyan[1][i]-bianyan[1][i+1]>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 7342               else
// 7343               {
// 7344                 for(;i>=0;i--)center[i]=0;
// 7345               }
// 7346             }
// 7347             else
// 7348             {
// 7349                     center[i]=(bianyan[1][i]+bianyan[0][i])/2;
??find_bianyan_602:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77_1
        STRB     R0,[R6, R1]
// 7350             }
??find_bianyan_603:
        SUBS     R6,R6,#+1
??find_bianyan_601:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.W    ??find_bianyan_594
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_602
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_604
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77_1
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_603
??find_bianyan_604:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_603
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_604
// 7351           }
// 7352         }
// 7353       }
// 7354     }
// 7355     else
// 7356     {
// 7357       if((bianyan[0][END+1]-bianyan[0][54])>100)
??find_bianyan_595:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        LDR.N    R1,??DataTable77
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+101
        BLT.N    ??find_bianyan_605
// 7358       {
// 7359         for(i=53;i>=0;i--)
        MOVS     R6,#+53
        B.N      ??find_bianyan_606
// 7360         {
// 7361           if(bianyan[1][i]>V-4)
// 7362           {
// 7363             if(center[i+1]+bianyan[0][i]-bianyan[0][i+1]<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 7364             else
// 7365             {
// 7366                     for(;i>=0;i--)center[i]=0;
// 7367             }
// 7368           }
// 7369           else
// 7370           {
// 7371                   center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_607:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77_1
        STRB     R0,[R6, R1]
// 7372           }
??find_bianyan_608:
        SUBS     R6,R6,#+1
??find_bianyan_606:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_605
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??find_bianyan_607
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_609
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77_1
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_608
??find_bianyan_609:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_608
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_609
// 7373         }
// 7374       }
// 7375       if((bianyan[1][END+1]-bianyan[1][54])<-100)
??find_bianyan_605:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+56]
        LDR.N    R1,??DataTable77
        LDRB     R1,[R1, #+109]
        SUBS     R0,R0,R1
        CMN      R0,#+100
        BGE.N    ??find_bianyan_594
// 7376       {
// 7377         for(i=53;i>=0;i--)
        MOVS     R6,#+53
        B.N      ??find_bianyan_610
// 7378         {
// 7379           if(bianyan[0][i]<2)
// 7380           {
// 7381             if(center[i+1]+bianyan[1][i]-bianyan[1][i+1]>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 7382             else
// 7383             {
// 7384                     for(;i>=0;i--)center[i]=0;
// 7385             }
// 7386           }
// 7387           else
// 7388           {
// 7389                   center[i]=(bianyan[1][i]+bianyan[0][i])/2;
??find_bianyan_611:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77_1
        STRB     R0,[R6, R1]
// 7390           }
??find_bianyan_612:
        SUBS     R6,R6,#+1
??find_bianyan_610:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_594
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_611
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_613
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77_1
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_612
??find_bianyan_613:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_612
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77_1
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_613
// 7391         }
// 7392       }
// 7393     }
// 7394   }
// 7395   /***************边沿倾斜过于严重的情况END***************/
// 7396   /********************************************
// 7397   *踩线补线有漏洞导致最后一个点center[0]被漏掉了
// 7398   *故在这里补上,为避免麻烦这里我们就使用上一次的
// 7399   *边沿位置值
// 7400   
// 7401   *********************************************/
// 7402   if(center[1])
??find_bianyan_594:
        LDR.N    R0,??DataTable77_1
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BEQ.N    ??find_bianyan_614
// 7403   {
// 7404     if(bianyan[0][0]&&bianyan[1][0])
        LDR.N    R0,??DataTable77
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??find_bianyan_614
        LDR.N    R0,??DataTable77
        LDRB     R0,[R0, #+55]
        CMP      R0,#+0
        BEQ.N    ??find_bianyan_614
// 7405     {
// 7406       bianyan[1][0]=bianyan[1][1];
        LDR.N    R0,??DataTable77
        LDR.N    R1,??DataTable77
        LDRB     R1,[R1, #+56]
        STRB     R1,[R0, #+55]
// 7407       bianyan[0][0]=bianyan[0][1];
        LDR.N    R0,??DataTable77
        LDRB     R0,[R0, #+1]
        LDR.N    R1,??DataTable77
        STRB     R0,[R1, #+0]
// 7408       bianyan2[1][0]=bianyan[1][1];
        LDR.W    R0,??DataTable78
        LDR.N    R1,??DataTable77
        LDRB     R1,[R1, #+56]
        STRB     R1,[R0, #+55]
// 7409       bianyan2[0][0]=bianyan[0][1];
        LDR.N    R0,??DataTable77
        LDRB     R0,[R0, #+1]
        LDR.N    R1,??DataTable78
        STRB     R0,[R1, #+0]
// 7410       center[0]=(bianyan[1][0]+bianyan[0][0])/2;
        LDR.N    R0,??DataTable77
        LDRB     R0,[R0, #+55]
        LDR.N    R1,??DataTable77
        LDRB     R1,[R1, #+0]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.N    R1,??DataTable77_1
        STRB     R0,[R1, #+0]
// 7411     }
// 7412   }
// 7413 }
??find_bianyan_614:
        ADD      SP,SP,#+132
        POP      {R4-R11,PC}      ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable77:
        DC32     bianyan

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable77_1:
        DC32     center
// 7414 
// 7415 
// 7416 
// 7417 
// 7418 /************************主函数****************************/
// 7419 
// 7420 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 7421   uint16 Judge_startline2(){
Judge_startline2:
        PUSH     {R4-R11,LR}
        SUB      SP,SP,#+236
// 7422   int16 i=54,j=0,black_max=0,k=0;
        MOVS     R5,#+54
        MOVS     R10,#+0
        MOVS     R6,#+0
        MOVS     R0,#+0
        STRH     R0,[SP, #+8]
// 7423   int16 white_position=0,white_num=0,start_place=0,start_black_num=0;
        MOVS     R7,#+0
        MOVS     R8,#+0
        MOVS     R9,#+0
        MOVS     R4,#+0
// 7424   int16 bianyan_startline[2][55]={0};
        ADD      R0,SP,#+12
        MOVS     R1,#+220
        BL       __aeabi_memclr4
// 7425   uint8 endl=0,startl=0,endr=0,startr=0;
        MOVS     R11,#+0
        MOVS     R0,#+0
        STRB     R0,[SP, #+3]
        MOVS     R0,#+0
        MOVS     R1,#+0
        STRB     R1,[SP, #+2]
// 7426   uint8  bianyan1_old=0,bianyan2_old=0;
        MOVS     R1,#+0
        STRB     R1,[SP, #+1]
        MOVS     R1,#+0
        STRB     R1,[SP, #+0]
// 7427   int last_hang=0;
        MOVS     R1,#+0
        STR      R1,[SP, #+4]
// 7428 
// 7429   //首先以一个很小框框的范围找到两边边沿，这样避免因为起始影响边沿的寻找
// 7430   i=54;
        MOVS     R1,#+54
        MOVS     R5,R1
        B.N      ??Judge_startline2_0
// 7431   while(i>=0){
// 7432   if(i>35){
// 7433   black_max=160;
// 7434   }else
// 7435   if(i>20){
// 7436   black_max=158;
// 7437   }else
// 7438   if(i>10){
// 7439    black_max=157;
// 7440   }else{
// 7441   black_max=156;
// 7442   }
// 7443  
// 7444  
// 7445  
// 7446     if(i==54){
// 7447     for(j=0;j<160;j++){
// 7448        if(video[i][j]>black_max){
// 7449           white_position+=j;
// 7450           white_num++;
// 7451 		 
// 7452        } 
// 7453 	   //str.Format("white_position:%d\r\n\r\n",white_position);
// 7454 	 // PrintDebug(str);
// 7455     }
// 7456     if(white_num){ 
// 7457     start_place=white_position/white_num;  
// 7458     }else{
// 7459         start_place=80;
// 7460     }
// 7461 	//str.Format("start_place:%d\r\n\r\n",start_place);
// 7462 	 // PrintDebug(str);
// 7463     }
// 7464     
// 7465 
// 7466      if(i==54){
// 7467        startl=start_place;
// 7468        endl=2;
// 7469        startr=start_place;
// 7470        endr=157;
// 7471      }else{
// 7472        startl=limit(bianyan1_old+5,157,1);
// 7473        endl=limit(bianyan1_old-5,157,1);
// 7474        startr=limit(bianyan2_old-5,157,1);
// 7475        endr=limit(bianyan2_old+5,157,1);
// 7476      }
// 7477 
// 7478     
// 7479      
// 7480      
// 7481     for(j=startl;j>0;j--){
// 7482        if(video[i][j+2]>=black_max&&video[i][j+1]>=black_max&&video[i][j]<black_max&&video[i][j-1]){
// 7483            bianyan_startline[0][i]=j;
// 7484            bianyan1_old=j;
// 7485 		   
// 7486            break;
// 7487        }
// 7488        
// 7489        if(j==endl){
// 7490 		   
// 7491           bianyan_startline[0][i]=0;
// 7492           
// 7493         break;  
// 7494        }
// 7495       
// 7496     }
// 7497    
// 7498    
// 7499     for(j=startr;j<158;j++){
// 7500        if(video[i][j-2]>=black_max&&video[i][j-1]>=black_max&&video[i][j]<black_max&&video[i][j+1]){
// 7501            bianyan_startline[1][i]=j;
// 7502            bianyan2_old=j;
// 7503 		   
// 7504            break;
// 7505        }
// 7506        
// 7507        if(j==endr){
??Judge_startline2_1:
        MOVS     R1,R0
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R10,R1
        BNE.W    ??Judge_startline2_2
// 7508 		  
// 7509           bianyan_startline[1][i]=0;
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+12
        ADDS     R0,R0,R5, LSL #+1
        MOVS     R1,#+0
        STRH     R1,[R0, #+110]
// 7510          
// 7511         break;  
// 7512        }
// 7513       
// 7514     }
// 7515     
// 7516   i--;
??Judge_startline2_3:
        SUBS     R5,R5,#+1
??Judge_startline2_0:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BMI.W    ??Judge_startline2_4
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+36
        BLT.N    ??Judge_startline2_5
        MOVS     R6,#+160
        B.N      ??Judge_startline2_6
??Judge_startline2_5:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+21
        BLT.N    ??Judge_startline2_7
        MOVS     R6,#+158
        B.N      ??Judge_startline2_6
??Judge_startline2_7:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+11
        BLT.N    ??Judge_startline2_8
        MOVS     R6,#+157
        B.N      ??Judge_startline2_6
??Judge_startline2_8:
        MOVS     R6,#+156
??Judge_startline2_6:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+54
        BNE.N    ??Judge_startline2_9
        MOVS     R10,#+0
        B.N      ??Judge_startline2_10
??Judge_startline2_11:
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??DataTable78_5
        MLA      R0,R0,R5,R1
        LDRB     R0,[R10, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R6,R0
        BGE.N    ??Judge_startline2_12
        ADDS     R7,R10,R7
        ADDS     R8,R8,#+1
??Judge_startline2_12:
        ADDS     R10,R10,#+1
??Judge_startline2_10:
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        CMP      R10,#+160
        BLT.N    ??Judge_startline2_11
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+0
        BEQ.N    ??Judge_startline2_13
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SDIV     R9,R7,R8
        B.N      ??Judge_startline2_9
??Judge_startline2_13:
        MOVS     R9,#+80
??Judge_startline2_9:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+54
        BNE.N    ??Judge_startline2_14
        MOV      R0,R9
        STRB     R0,[SP, #+3]
        MOVS     R11,#+2
        MOV      R0,R9
        STRB     R0,[SP, #+2]
        MOVS     R0,#+157
        B.N      ??Judge_startline2_15
??Judge_startline2_14:
        MOVS     R2,#+1
        MOVS     R1,#+157
        LDRB     R0,[SP, #+1]
        ADDS     R0,R0,#+5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       limit
        STRB     R0,[SP, #+3]
        MOVS     R2,#+1
        MOVS     R1,#+157
        LDRB     R0,[SP, #+1]
        SUBS     R0,R0,#+5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       limit
        MOV      R11,R0
        MOVS     R2,#+1
        MOVS     R1,#+157
        LDRB     R0,[SP, #+0]
        SUBS     R0,R0,#+5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       limit
        STRB     R0,[SP, #+2]
        MOVS     R2,#+1
        MOVS     R1,#+157
        LDRB     R0,[SP, #+0]
        ADDS     R0,R0,#+5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       limit
??Judge_startline2_15:
        LDRB     R10,[SP, #+3]
        B.N      ??Judge_startline2_16
??Judge_startline2_17:
        SUBS     R10,R10,#+1
??Judge_startline2_16:
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        CMP      R10,#+1
        BLT.N    ??Judge_startline2_18
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R1,#+160
        LDR.N    R2,??DataTable78_5
        MLA      R1,R1,R5,R2
        ADDS     R1,R10,R1
        LDRB     R1,[R1, #+2]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R1,R6
        BLT.N    ??Judge_startline2_19
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R1,#+160
        LDR.N    R2,??DataTable78_5
        MLA      R1,R1,R5,R2
        ADDS     R1,R10,R1
        LDRB     R1,[R1, #+1]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R1,R6
        BLT.N    ??Judge_startline2_19
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R1,#+160
        LDR.N    R2,??DataTable78_5
        MLA      R1,R1,R5,R2
        LDRB     R1,[R10, R1]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R1,R6
        BGE.N    ??Judge_startline2_19
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R1,#+160
        LDR.N    R2,??DataTable78_5
        MLA      R1,R1,R5,R2
        ADDS     R1,R10,R1
        LDRB     R1,[R1, #-1]
        CMP      R1,#+0
        BEQ.N    ??Judge_startline2_19
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R1,SP,#+12
        STRH     R10,[R1, R5, LSL #+1]
        STRB     R10,[SP, #+1]
        B.N      ??Judge_startline2_18
??Judge_startline2_19:
        MOV      R1,R11
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R10,R1
        BNE.N    ??Judge_startline2_17
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R1,SP,#+12
        MOVS     R2,#+0
        STRH     R2,[R1, R5, LSL #+1]
??Judge_startline2_18:
        LDRB     R10,[SP, #+2]
        B.N      ??Judge_startline2_20
??Judge_startline2_2:
        ADDS     R10,R10,#+1
??Judge_startline2_20:
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        CMP      R10,#+158
        BGE.W    ??Judge_startline2_3
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R1,#+160
        LDR.N    R2,??DataTable78_5
        MLA      R1,R1,R5,R2
        ADDS     R1,R10,R1
        LDRB     R1,[R1, #-2]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R1,R6
        BLT.W    ??Judge_startline2_1
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R1,#+160
        LDR.N    R2,??DataTable78_5
        MLA      R1,R1,R5,R2
        ADDS     R1,R10,R1
        LDRB     R1,[R1, #-1]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R1,R6
        BLT.W    ??Judge_startline2_1
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R1,#+160
        LDR.N    R2,??DataTable78_5
        MLA      R1,R1,R5,R2
        LDRB     R1,[R10, R1]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R1,R6
        BGE.W    ??Judge_startline2_1
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R1,#+160
        LDR.N    R2,??DataTable78_5
        MLA      R1,R1,R5,R2
        ADDS     R1,R10,R1
        LDRB     R1,[R1, #+1]
        CMP      R1,#+0
        BEQ.W    ??Judge_startline2_1
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+12
        ADDS     R0,R0,R5, LSL #+1
        STRH     R10,[R0, #+110]
        STRB     R10,[SP, #+0]
        B.N      ??Judge_startline2_3
// 7517   }
// 7518 /////边沿寻找完毕
// 7519 
// 7520 ///在边沿两边之间寻找黑色的点，确定寻找起始线行的范围
// 7521 for(i=54;i>=0;i--){
??Judge_startline2_4:
        MOVS     R5,#+54
        B.N      ??Judge_startline2_21
??Judge_startline2_22:
        SUBS     R5,R5,#+1
??Judge_startline2_21:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BMI.N    ??Judge_startline2_23
// 7522 	if(!(bianyan_startline[0][i]&&bianyan_startline[1][i])){
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+12
        LDRSH    R0,[R0, R5, LSL #+1]
        CMP      R0,#+0
        BEQ.N    ??Judge_startline2_24
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+12
        ADDS     R0,R0,R5, LSL #+1
        LDRSH    R0,[R0, #+110]
        CMP      R0,#+0
        BNE.N    ??Judge_startline2_22
// 7523 		last_hang=i+1;
??Judge_startline2_24:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADDS     R0,R5,#+1
        STR      R0,[SP, #+4]
// 7524 		 
// 7525 	
// 7526 		break;
// 7527 	}
// 7528 }
// 7529 if(last_hang<20)
??Judge_startline2_23:
        LDR      R0,[SP, #+4]
        CMP      R0,#+20
        BGE.N    ??Judge_startline2_25
// 7530   last_hang=20;
        MOVS     R0,#+20
        STR      R0,[SP, #+4]
// 7531   
// 7532   black_max=155;
??Judge_startline2_25:
        MOVS     R6,#+155
// 7533   if(last_hang<=46){
        LDR      R0,[SP, #+4]
        CMP      R0,#+47
        BGE.N    ??Judge_startline2_26
// 7534 for(j=bianyan_startline[0][54]+1;j<bianyan_startline[1][54];j++){
        LDRH     R0,[SP, #+120]
        ADDS     R10,R0,#+1
        B.N      ??Judge_startline2_27
// 7535 for(i=54;i>last_hang;i--){
// 7536 	if(j>bianyan_startline[0][i]&&j<bianyan_startline[1][i]){
// 7537 		if(video[i][j]<black_max){
??Judge_startline2_28:
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??DataTable78_5
        MLA      R0,R0,R5,R1
        LDRB     R0,[R10, R0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??Judge_startline2_29
// 7538             
// 7539             start_black_num++;
        ADDS     R4,R4,#+1
// 7540 		}
// 7541 	}else{
??Judge_startline2_29:
        SUBS     R5,R5,#+1
??Judge_startline2_30:
        LDR      R0,[SP, #+4]
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R0,R5
        BGE.N    ??Judge_startline2_31
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+12
        LDRSH    R0,[R0, R5, LSL #+1]
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        CMP      R0,R10
        BGE.N    ??Judge_startline2_32
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+12
        ADDS     R0,R0,R5, LSL #+1
        LDRSH    R0,[R0, #+110]
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        CMP      R10,R0
        BLT.N    ??Judge_startline2_28
// 7542 		break;
// 7543 	}
// 7544 }
??Judge_startline2_32:
??Judge_startline2_31:
        ADDS     R10,R10,#+1
??Judge_startline2_27:
        LDRSH    R0,[SP, #+230]
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        CMP      R10,R0
        BGE.N    ??Judge_startline2_26
        MOVS     R5,#+54
        B.N      ??Judge_startline2_30
// 7545 }
// 7546   }
// 7547 
// 7548 
// 7549 return start_black_num;
??Judge_startline2_26:
        MOVS     R0,R4
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        ADD      SP,SP,#+236
        POP      {R4-R11,PC}      ;; return
// 7550 }

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_1:
        DC32     END_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_2:
        DC32     xie_shizi_flag_1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_3:
        DC32     xie_shizi_flag_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_4:
        DC32     END_Line

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_5:
        DC32     video
// 7551 
// 7552 
// 7553 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
// 7554 void main(void)
// 7555 {  
main:
        PUSH     {R4-R11,LR}
        SUB      SP,SP,#+148
// 7556   uint8 start_xian_3=0;
        MOVS     R4,#+0
// 7557   int16 track[30]={-1},track_2[30]={0},track_number=0;
        ADD      R0,SP,#+84
        LDR.W    R1,??main_0
        MOVS     R2,#+60
        BL       __aeabi_memcpy4
        ADD      R0,SP,#+24
        MOVS     R1,#+60
        BL       __aeabi_memclr4
        MOVS     R5,#+0
// 7558   uint8 j=0,j_num=0;
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
// 7559   //uint8 m=0;
// 7560   uint8 P_stop=0;//停车关速度控制标志位
        MOVS     R0,#+0
        STRB     R0,[SP, #+3]
// 7561   int park=-100,xu_xian2_P=-100;
        MVNS     R0,#+99
        STR      R0,[SP, #+16]
        MVNS     R0,#+99
        STR      R0,[SP, #+12]
// 7562   uint8 i,Hong_Wai=0,direct=0,LCD_begin=0;
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
        MOVS     R0,#+0
        STRB     R0,[SP, #+1]
        MOVS     R0,#+0
        STRB     R0,[SP, #+2]
// 7563   int8 judge=0,set=0;       
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
// 7564   int16  exspeed=0,pwm_speed=0;
        MOVS     R6,#+0
        MOVS     R11,#+0
// 7565   uint16 slope_flag1=0,slope_flag2=0,slope_flag3=0,slope_flag4=0,slope_flag5=0;
        MOVS     R10,#+0
        MOVS     R0,#+0
        STRH     R0,[SP, #+10]
        MOVS     R0,#+0
        STRH     R0,[SP, #+8]
        MOVS     R0,#+0
        STRH     R0,[SP, #+6]
        MOVS     R9,#+0
// 7566   uint16 startline_black_num=0,startline_flag=0;
        MOVS     R8,#+0
        MOVS     R0,#+0
        STRH     R0,[SP, #+4]
// 7567   uint16 changshu=0;
        MOVS     R7,#+0
// 7568   int startline_time=0;
        MOVS     R0,#+0
        STR      R0,[SP, #+20]
// 7569   DisableInterrupts;
        CPSID i         
// 7570   pllinit180M();
        BL       pllinit180M
// 7571   IO_Init();
        BL       IO_Init
// 7572   LCD_Init();  
        BL       LCD_Init
// 7573   hw_FTM1_init();
        BL       hw_FTM1_init
// 7574   hw_FTM0_init();
        BL       hw_FTM0_init
// 7575   FTM2_QUAD_Init();
        BL       FTM2_QUAD_Init
// 7576   JIANPAN_ini();
        BL       JIANPAN_ini
// 7577       gpio_init(PORTA,14,1,1);
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+14
        LDR.W    R0,??main_1      ;; 0x400ff000
        BL       gpio_init
// 7578       gpio_init(PORTA,15,1,1);
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+15
        LDR.W    R0,??main_1      ;; 0x400ff000
        BL       gpio_init
// 7579       gpio_init(PORTA,16,1,1);
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+16
        LDR.W    R0,??main_1      ;; 0x400ff000
        BL       gpio_init
// 7580       gpio_init(PORTA,17,1,1);
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+17
        LDR.W    R0,??main_1      ;; 0x400ff000
        BL       gpio_init
// 7581   CH451_ini();
        BL       CH451_ini
// 7582   CH451_WriteCommand(CH451_BCD);
        MOV      R0,#+1408
        BL       CH451_WriteCommand
// 7583   speed_Very_straight=70;speed_top=60;speed_b=50;speed_m=40;speed_s=30 ;speed_ms=80;
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+60
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+50
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+40
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+30
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+80
        STRH     R1,[R0, #+0]
// 7584   LCD_P6x8Str(0,0,"speed");     //英文字符串显示
        LDR.W    R2,??main_1+0x1C
        MOVS     R1,#+0
        MOVS     R0,#+0
        BL       LCD_P6x8Str
// 7585    LCD_P6x8Str(0,1,"speed_cut_timer"); 
        LDR.W    R2,??main_1+0x20
        MOVS     R1,#+1
        MOVS     R0,#+0
        BL       LCD_P6x8Str
// 7586    LCD_P6x8Str(0,7,"start_startline");  
        LDR.W    R2,??main_1+0x24
        MOVS     R1,#+7
        MOVS     R0,#+0
        BL       LCD_P6x8Str
// 7587   Car_Speed();
        BL       Car_Speed
        B.N      ??main_2
// 7588   
// 7589   
// 7590   while(KeyValue!=50)
// 7591   {
// 7592     KeyValue=50;
??main_3:
        LDR.W    R0,??main_1+0x28
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
// 7593     CH451_GetKeyValue();
        BL       CH451_GetKeyValue
// 7594   }
??main_2:
        LDR.W    R0,??main_1+0x28
        LDRB     R0,[R0, #+0]
        CMP      R0,#+50
        BNE.N    ??main_3
// 7595   /****************1直接发车，不调节PD，，，2调节PD后发车*******************/
// 7596   while(!direct)
??main_4:
        LDRB     R0,[SP, #+1]
        CMP      R0,#+0
        BNE.N    ??main_5
// 7597   {
// 7598     LCD_P6x8Str(0,1,"TJorFC");     //英文字符串显示      
        LDR.W    R2,??main_1+0x2C
        MOVS     R1,#+1
        MOVS     R0,#+0
        BL       LCD_P6x8Str
// 7599     CH451_GetKeyValue();
        BL       CH451_GetKeyValue
// 7600     switch(KeyValue)
        LDR.W    R0,??main_1+0x28
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_6
        CMP      R0,#+2
        BEQ.N    ??main_7
        CMP      R0,#+5
        BEQ.N    ??main_8
        B.N      ??main_4
// 7601     {
// 7602     case 1:
// 7603       LCD_P6x8Str(40,1,"FC");     //英文字符串显示      
??main_6:
        ADR.N    R2,??main_9      ;; 0x46, 0x43, 0x00, 0x00
        MOVS     R1,#+1
        MOVS     R0,#+40
        BL       LCD_P6x8Str
        B.N      ??main_10
// 7604       while(KeyValue==1)
// 7605       {
// 7606         KeyValue=50;
??main_11:
        LDR.W    R0,??main_1+0x28
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
// 7607         CH451_GetKeyValue();
        BL       CH451_GetKeyValue
// 7608       }
??main_10:
        LDR.W    R0,??main_1+0x28
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_11
// 7609       direct=1;
        MOVS     R0,#+1
        STRB     R0,[SP, #+1]
// 7610       break;
        B.N      ??main_4
// 7611     case 2:
// 7612       LCD_P6x8Str(40,1,"TJ");     //英文字符串显示      
??main_7:
        ADR.N    R2,??main_9+0x4  ;; 0x54, 0x4A, 0x00, 0x00
        MOVS     R1,#+1
        MOVS     R0,#+40
        BL       LCD_P6x8Str
        B.N      ??main_12
// 7613       while(KeyValue==2)
// 7614       {
// 7615         KeyValue=50;
??main_13:
        LDR.W    R0,??main_1+0x28
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
// 7616         CH451_GetKeyValue();
        BL       CH451_GetKeyValue
// 7617       }
??main_12:
        LDR.W    R0,??main_1+0x28
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??main_13
// 7618       LCD_P6x8Str(0,2,"sai_dao_number");     //英文字符串显示  
        LDR.W    R2,??main_14
        MOVS     R1,#+2
        MOVS     R0,#+0
        BL       LCD_P6x8Str
// 7619       Duo_Ji_PD();
        BL       Duo_Ji_PD
// 7620       LCD_P6x8Str(58,1,"FC");     //英文字符串显示  
        ADR.N    R2,??main_9      ;; 0x46, 0x43, 0x00, 0x00
        MOVS     R1,#+1
        MOVS     R0,#+58
        BL       LCD_P6x8Str
// 7621       direct=1;
        MOVS     R0,#+1
        STRB     R0,[SP, #+1]
// 7622       break;
        B.N      ??main_4
// 7623     case 5:
// 7624       LCD_P6x8Str(76,0,"LCDgo_on");     //英文字符串显示      
??main_8:
        LDR.W    R2,??main_14+0x4
        MOVS     R1,#+0
        MOVS     R0,#+76
        BL       LCD_P6x8Str
        B.N      ??main_15
// 7625       while(KeyValue==5)
// 7626       {
// 7627         KeyValue=50;
??main_16:
        LDR.W    R0,??main_1+0x28
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
// 7628         CH451_GetKeyValue();
        BL       CH451_GetKeyValue
// 7629       }
??main_15:
        LDR.W    R0,??main_1+0x28
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??main_16
// 7630       LCD_begin=1;
        MOVS     R0,#+1
        STRB     R0,[SP, #+2]
// 7631       break;
        B.N      ??main_4
// 7632        
// 7633     }
// 7634   }
// 7635   /****************1直接发车，不调节PD，，，2调节PD后发车end*******************/
// 7636         
// 7637        
// 7638   enable_irq (87);//使能A口中断 ，A24场中断
??main_5:
        MOVS     R0,#+87
        BL       enable_irq
// 7639   UART0_Init();
        BL       UART0_Init
// 7640   DMA0_Init();
        BL       DMA0_Init
// 7641   //hw_pit_init(1,16000);         //pit1中断初始化
// 7642   //enable_irq(89);             //开c9口红外遥控停车中断
// 7643   //enable_pit_interrupt(1);    //使能PIT1中断，，，用于红外计数
// 7644   delays(2);              //延时发车
        MOVS     R0,#+2
        BL       delays
// 7645   LCD_CLS();
        BL       LCD_CLS
// 7646   
// 7647   hw_pit_init(PIT2,6000000);//100ms
        LDR.W    R1,??DataTable79  ;; 0x5b8d80
        MOVS     R0,#+2
        BL       hw_pit_init
// 7648   enable_pit_interrupt(PIT2);
        MOVS     R0,#+2
        BL       enable_pit_interrupt
// 7649   
// 7650   EnableInterrupts;
        CPSIE i         
        B.N      ??main_17
// 7651   for(;;) 
// 7652   {	
// 7653     
// 7654     if(finish==1)
// 7655     { 
// 7656       
// 7657       if(P_timer>=speed_cut_timer&&P_timer<speed_cut_timer+50&&!(speed_cut_timer==100)){
// 7658     speed_Very_straight=118;speed_top=108;speed_b=98;speed_m=88;speed_s=82; speed_ms=70 ;
// 7659      //speed_Very_straight=70;speed_top=70;speed_b=70;speed_m=70;speed_s=70; speed_ms=70 ;
// 7660     }else{
// 7661    switch(car_speed)
// 7662   {
// 7663      case 0:speed_Very_straight=80;speed_top=80;speed_b=80;speed_m=80;speed_s=80; speed_ms=70;break;
// 7664   case 1:speed_Very_straight=90;speed_top=90;speed_b=90;speed_m=90;speed_s=90; speed_ms=90;break;
// 7665   //case 1:speed_Very_straight=110;speed_top=100;speed_b=90;speed_m=80;speed_s=75; speed_ms=70 ;break;
// 7666   case 2:speed_Very_straight=113;speed_top=103;speed_b=93;speed_m=83;speed_s=78; speed_ms=70 ;break;
// 7667   case 3:speed_Very_straight=115;speed_top=105;speed_b=95;speed_m=85;speed_s=80; speed_ms=70 ;break;
// 7668   case 4:speed_Very_straight=118;speed_top=108;speed_b=98;speed_m=88;speed_s=82; speed_ms=70 ;break;
// 7669   case 5:speed_Very_straight=122;speed_top=108;speed_b=98;speed_m=88;speed_s=82; speed_ms=70 ;break;
// 7670   case 6:speed_Very_straight=124;speed_top=110;speed_b=100;speed_m=90;speed_s=84; speed_ms=70 ;break;
// 7671   case 7:speed_Very_straight=124;speed_top=110;speed_b=104;speed_m=94;speed_s=88; speed_ms=70 ;break;
// 7672   case 8:speed_Very_straight=125;speed_top=112;speed_b=104;speed_m=94;speed_s=88; speed_ms=70 ;break;
// 7673   case 9:speed_Very_straight=125;speed_top=114;speed_b=106;speed_m=92;speed_s=82; speed_ms=70 ;break;
// 7674   case 10:speed_Very_straight=125;speed_top=116;speed_b=108;speed_m=94;speed_s=84; speed_ms=73 ;break;
// 7675   case 11:speed_Very_straight=130;speed_top=116;speed_b=110;speed_m=95;speed_s=88; speed_ms=75 ;break;
// 7676   case 12:speed_Very_straight=140;speed_top=116;speed_b=112;speed_m=97;speed_s=90; speed_ms=70 ;break;
// 7677   case 13:speed_Very_straight=140;speed_top=118;speed_b=114;speed_m=99;speed_s=93; speed_ms=70;break;
// 7678   case 14:speed_Very_straight=145;speed_top=117;speed_b=115;speed_m=95;speed_s=93; speed_ms=70;break;
// 7679   case 15:speed_Very_straight=103;speed_top=100;speed_b=98;speed_m=96;speed_s=94; speed_ms=70;break;
// 7680   case 16:speed_Very_straight=106;speed_top=103;speed_b=101;speed_m=99;speed_s=97; speed_ms=70;break;
// 7681   case 17:speed_Very_straight=110;speed_top=106;speed_b=103;speed_m=100;speed_s=97; speed_ms=70;break;
// 7682   case 18:speed_Very_straight=95;speed_top=95;speed_b=95;speed_m=95;speed_s=95; speed_ms=70;break;
// 7683   case 19:speed_Very_straight=100;speed_top=100;speed_b=100;speed_m=100;speed_s=100; speed_ms=70;break;
// 7684   }
// 7685     } 
// 7686     
// 7687     
// 7688       if(P_timer>start_startline){
// 7689       startline_black_num=Judge_startline2();
// 7690       }
// 7691       find_bianyan();  //找两边黑线
// 7692       if(P_timer<30||P_timer>170)Start_Line();
// 7693       X_LineBend();
// 7694       //m=judge_locus_0();
// 7695       //if(m!=20)center_filter();//加权平均法使中心线变得平滑
// 7696       center_filter();
// 7697       m=judge_locus_0();
// 7698       sai_dao_lei_xing=m;
// 7699     slope_flag5=slope_flag4;  
// 7700     slope_flag4=slope_flag3;
// 7701     slope_flag3=slope_flag2;
// 7702     slope_flag2=slope_flag1;
// 7703     slope_flag1=Judge_slope();
// 7704     if(slope_flag1||slope_flag2||slope_flag3||slope_flag4||slope_flag5){
// 7705       slope_flag=1;
// 7706     }
// 7707       /************再次检测起始线以免是起始线误判成不是*************/
// 7708       if(start_18_25_2==1||start_25_35_2==1||start_35_45_2==1||start_45_55_2==1)
// 7709       {
// 7710         if(m==20)
// 7711         {
// 7712           start_xian_3=1;
// 7713         }
// 7714       }
// 7715       if(start_xian_3==0)
// 7716       {
// 7717         if(start_line2==1&&sai_dao_lei_xing==20)start_xian_3=1;
// 7718       }
// 7719       if(start_xian==1&&m!=20)start_xian=0;
// 7720 	/************再次检测起始线以免是起始线误判成不是*END************/
// 7721       /****************停车控制***************/
// 7722       if(xu_xian2_P==-100)          //如果检测到虚线，那么在检测到虚线后的1s内不让车停车
// 7723       {
// 7724         if(xu_xian2==1)
// 7725         {
// 7726           xu_xian2_P=P_timer;
// 7727         }
// 7728       }
// 7729       if(P_timer==xu_xian2_P+10)xu_xian2_P=-100;
// 7730       if(P_timer<30||xu_xian2_P!=-100){start_xian=0;start_xian_3=0;}//发车，只检测，不停车||m!=9||m!=20
// 7731       /*************记录最近30场的赛道类型*************/
// 7732       if(track_number==30)track_number=0;
// 7733       if(ramp_flag==1)track_2[track_number]=40;                    //40在这里代表坡道
// 7734       if(start_xian==1) track_2[track_number]=100;             //100在这里表示采集到了起始线
// 7735       if(start_xian!=1&&start_xian_3==1) track_2[track_number]=80;//80代表有可能是起始线
// 7736       if(xu_xian2==1)track_2[track_number]=60;                     //60代表是虚线
// 7737       
// 7738       if(start_xian!=1&&start_xian_3!=1&&xu_xian2!=1&&ramp_flag!=1)track_2[track_number]=0;
// 7739       track[track_number]=m;
// 7740       track_number++;
// 7741       
// 7742       /*************记录最近30场的赛道类型END*************/
// 7743       /*************是否停车的判断**************
// 7744       *我的停车判断方法：看最近5场的图像类型  肯定是起始线100，可能是起始线80
// 7745       *1,一场肯定是起始线的，就判定为起始线
// 7746       *2，两场以上可能是起始线的，就判定为起始线
// 7747       *3，
// 7748       *4，
// 7749       *****************************************/
// 7750       if(park==-100)
// 7751       {
// 7752         if(track_2[track_number-1]==100)
// 7753         {
// 7754           start_xian==0;
// 7755           park=P_timer;
// 7756         }
// 7757         if(track_2[track_number-1]==80)
// 7758         {
// 7759           uint8 start_num_3=0;
// 7760           if(track_number==1)
// 7761           {
// 7762             if(track_2[29]==80)start_num_3++;
// 7763             if(track_2[28]==80)start_num_3++;
// 7764             if(track_2[27]==80)start_num_3++;
// 7765             if(track_2[26]==80)start_num_3++;
// 7766           }
// 7767           if(track_number==2)
// 7768           {
// 7769             if(track_2[0]==80)start_num_3++;
// 7770             if(track_2[29]==80)start_num_3++;
// 7771             if(track_2[28]==80)start_num_3++;
// 7772             if(track_2[27]==80)start_num_3++;
// 7773           }
// 7774           if(track_number==3)
// 7775           {
// 7776             if(track_2[1]==80)start_num_3++;
// 7777             if(track_2[0]==80)start_num_3++;
// 7778             if(track_2[29]==80)start_num_3++;
// 7779             if(track_2[28]==80)start_num_3++;
// 7780           }
// 7781           if(track_number==4)
// 7782           {
// 7783             if(track_2[2]==80)start_num_3++;
// 7784             if(track_2[1]==80)start_num_3++;
// 7785             if(track_2[0]==80)start_num_3++;
// 7786             if(track_2[29]==80)start_num_3++;
// 7787           }
// 7788           if(track_number>4)
// 7789           {
// 7790             if(track_2[track_number-2]==80)start_num_3++;
// 7791             if(track_2[track_number-3]==80)start_num_3++;
// 7792             if(track_2[track_number-4]==80)start_num_3++;
// 7793             if(track_2[track_number-5]==80)start_num_3++;
// 7794           }
// 7795           if(start_num_3>=1)
// 7796           {
// 7797             park=P_timer;
// 7798           }
// 7799         }
// 7800       }
// 7801     
// 7802       if(P_timer==park+3)
// 7803       {
// 7804         P_stop=1;
// 7805         //park=-100;
// 7806       }
// 7807       if(xu_xian2_P==-100){
// 7808       if(startline_black_num>32&&P_timer>20&&!(slope_flag1||slope_flag2||slope_flag3||slope_flag4||slope_flag5))
// 7809       {
// 7810         startline_flag=1;
// 7811       startline_time=P_timer;
// 7812       }
// 7813       }
// 7814       if(startline_flag){
// 7815         changshu++;
// 7816       }
// 7817       if(startline_flag&&changshu>8)//P_timer>startline_time+1)
// 7818       //if(P_stop==1&&!(slope_flag1||slope_flag2||slope_flag3||slope_flag4||slope_flag5))
// 7819       { 
// 7820         //FTM0_C3V=0;
// 7821         if(pulse>20)
// 7822         {
// 7823           FTM0_C3V=375;          //300   停车倒转
// 7824           FTM0_C0V=0;
// 7825         }
// 7826         else
// 7827         {
// 7828           FTM0_C3V=0;
// 7829           FTM0_C0V=0;
// 7830           FTM0_C1V=0;
// 7831         }
// 7832         
// 7833         
// 7834       }
// 7835                     
// 7836     // if(P_timer>startline_time+15&&!startline_time)    
// 7837      // {
// 7838        // FTM0_C3V=0;
// 7839         //FTM0_C0V=0;
// 7840        // FTM0_C1V=0;
// 7841         
// 7842      // }
// 7843       
// 7844       /*************是否停车的判断*END*************/
// 7845       /****************停车控制END***************/
// 7846       /**************稳定在很直的长直道判断***************/
// 7847       if(track[track_number-1]==20)
// 7848       {
// 7849         if(track_number==1)
// 7850         {
// 7851           if(track[29]==20&&track[28]==20)Very_straight=1;
// 7852           
// 7853         }
// 7854         else if(track_number==2)
// 7855         {
// 7856           if(track[0]==20&&track[29]==20)Very_straight=1;
// 7857         }
// 7858         else 
// 7859         {
// 7860           if(track[track_number-2]==20&&track[track_number-3]==20&&track[track_number-4]==20)Very_straight=1;;
// 7861         }
// 7862       }
// 7863       /**************稳定在很直的长直道判断***************/            
// 7864     set=choose_PD();  
// 7865     
// 7866     
// 7867     
// 7868     
// 7869     
// 7870     //if(P_stop==0)
// 7871     if(!(startline_flag&&changshu>8))
// 7872     {
// 7873       if(P_timer<10)pwm_speed=150;
// 7874       
// 7875       //发车前1.3s给满占空比，使其快速发车
// 7876       else
// 7877       {
// 7878         if(Very_straight==0)
// 7879         {
// 7880           exspeed=speed_control();
// 7881         }
// 7882         if(Very_straight==1)
// 7883         {
// 7884           Very_straight=0;
// 7885           exspeed=speed_Very_straight;
// 7886         }
// 7887         pwm_speed=Motor_control(exspeed);
// 7888       }
// 7889       
// 7890       
// 7891       set_speed(pwm_speed);
// 7892     }
// 7893     
// 7894     hw_pit_init(PIT0,800000);//20ms,1200000,30ms,1800000  注意这个初始化一定要放在大的for循环里面，使用定时器，这样才是在固定的时间里面得到的脉冲数
// 7895     enable_pit_interrupt(PIT0);
// 7896    
// 7897     
// 7898     /********************LCD数据显示模块*********************/
// 7899     CH451_GetKeyValue();
// 7900     if(KeyValue==10||LCD_begin==1)           //LCD_begin==1
// 7901     {
// 7902       if(LCD_P1==250)LCD_P1=0;
// 7903                     //秒加1
// 7904                   
// 7905       if(++LCD_P1%10)
// 7906       {
// 7907         LCD_CLS();                     
// 7908         LCD_P6x8Str(1,0,"low_0");     //英文字符串显示
// 7909         LCD_P6x8Str_3(45,0,low_now_0);
// 7910         if(low_now)LCD_P6x8Str_1(70,0,low_0);    //如果存在的话就显示，不存在的话就不显示
// 7911         LCD_P6x8Str_3(70,0,sai_dao_lei_xing);//显示赛道类型
// 7912          LCD_P6x8Str_3(100,0,i_old);
// 7913         LCD_P6x8Str(1,1,"mid_0");     //英文字符串显示
// 7914         LCD_P6x8Str_3(45,1,mid_now_0);
// 7915         if(mid_now)LCD_P6x8Str_1(70,1,mid_0);
// 7916         LCD_P6x8Str_1(100,1,xiaoS_flag);
// 7917         LCD_P6x8Str(1,2,"high_0");     //英文字符串显示
// 7918         LCD_P6x8Str_3(45,2,high_now_0);
// 7919         LCD_P6x8Str_3(80,2,startline_black_num);
// 7920         if(high_now)LCD_P6x8Str_1(70,2,high_0);
// 7921         LCD_P6x8Str(1,3,"position_now");     //英文字符串显示
// 7922         LCD_P6x8Str_3(75,3,position_now);
// 7923         LCD_P6x8Str(1,4,"position_diff");     //英文字符串显示
// 7924         LCD_P6x8Str_FuHao_3(88,4,position_diff);
// 7925         LCD_P6x8Str(1,5,"p_low");     //英文字符串显示
// 7926         LCD_P6x8Str_FuHao_3(30,5,position_now_low);
// 7927         LCD_P6x8Str(1,6,"see_distance");     //英文字符串显示
// 7928         LCD_P6x8Str_FuHao_3(100,6,see_distance);
// 7929         LCD_P6x8Str(1,7,"P_D");     //英文字符串显示
// 7930         LCD_P6x8Str_FuHao_3(30,7,position_now_P);
// 7931          LCD_P6x8Str_FuHao_3(60,7,position_now_D);
// 7932         //LCD_P6x8Str_FuHao_3(30,7,Servo.P);
// 7933          //LCD_P6x8Str_FuHao_3(60,7,Servo.D);
// 7934          // LCD_P6x8Str_FuHao_3(100,7,position_now_low_P);
// 7935         //LCD_P6x8Str(1,5,"Servo_value");     //英文字符串显示Servo_value
// 7936         LCD_P6x8Str_5(80,5,Servo_value);
// 7937         //LCD_P6x8Str_3(1,6,start_xian);
// 7938         //LCD_P6x8Str_3(20,6,start_xian_3);
// 7939         //LCD_P6x8Str_3(40,6,ramp_flag);
// 7940         
// 7941         //LCD_P6x8Str_3(60,6,topline);
// 7942         //LCD_P6x8Str(1,7,"pwm_speed");     //英文字符串显示
// 7943         //LCD_P6x8Str_3(58,7,pwm_speed);
// 7944         //LCD_P6x8Str_3(80,7,pulse);
// 7945       }
// 7946     }
// 7947     if(KeyValue==6)
// 7948     {
// 7949       if(LCD_P3==250)LCD_P3=0;
// 7950       if(++LCD_P3%10)
// 7951       {
// 7952         LCD_CLS();
// 7953         
// 7954         for(i=0;i<H-1;i++)
// 7955         {
// 7956            LCD_PutPixel(center[i],i);
// 7957         }
// 7958        }
// 7959      }
// 7960                   
// 7961       /***************对一些变量进行清零****************/
// 7962       position_now_low=0;
// 7963      // position_now=0;
// 7964       position_diff=0;
// 7965       xie_shizi_flag_1=0;
// 7966       xie_shizi_flag_2=0;
// 7967       xie_shizi_flag_3=0;   //用来表示只找到一个拐点的
// 7968       xu_xian2=0;
// 7969       xu1=0;
// 7970       xu2=0;
// 7971       xu3=0;
// 7972       xu4=0;   
// 7973       for(i=0;i<H;i++)
// 7974       {
// 7975         bianyan2[0][i]=0;
// 7976         bianyan[0][i]=0;
// 7977         bianyan2[1][i]=0;
// 7978         bianyan[1][i]=0;
// 7979         center[i]=0;
// 7980       }
// 7981       for(i=0;i<142;i++)BW4[i]=0;
// 7982       for(i=0;i<82;i++)BW3[i]=0;
// 7983       for(i=0;i<122;i++)BW2[i]=0;
// 7984       for(i=0;i<102;i++)BW[i]=0;
??main_18:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.W    R0,??DataTable79_1
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        ADDS     R4,R4,#+1
??main_19:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+102
        BCC.N    ??main_18
// 7985       start_18_25_2=0;
        LDR.W    R0,??DataTable79_2
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7986       start_25_35_2=0;
        LDR.W    R0,??DataTable79_3
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7987       start_35_45_2=0;
        LDR.W    R0,??DataTable79_4
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7988       start_45_55_2=0;
        LDR.W    R0,??DataTable79_5
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7989       start_xian_3=0;
        MOVS     R4,#+0
// 7990       start_line2=0;
        LDR.W    R0,??DataTable79_6
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7991       ramp_flag=0;
        LDR.W    R0,??DataTable79_7
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7992       finish=0;
        LDR.W    R0,??DataTable79_8
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7993       xiaoS_flag=0;
        LDR.W    R0,??DataTable79_9
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
??main_17:
        LDR.W    R0,??DataTable79_8
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_17
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        LDR.W    R1,??DataTable79_11
        LDRH     R1,[R1, #+0]
        CMP      R0,R1
        BLT.N    ??main_20
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        LDR.W    R1,??DataTable79_11
        LDRH     R1,[R1, #+0]
        ADDS     R1,R1,#+50
        CMP      R0,R1
        BGE.N    ??main_20
        LDR.W    R0,??DataTable79_11
        LDRH     R0,[R0, #+0]
        CMP      R0,#+100
        BEQ.N    ??main_20
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+118
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+108
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+98
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+88
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+82
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_20:
        LDR.W    R0,??DataTable79_12
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??main_22
        CMP      R0,#+2
        BEQ.N    ??main_23
        BCC.N    ??main_24
        CMP      R0,#+4
        BEQ.W    ??main_25
        BCC.N    ??main_26
        CMP      R0,#+6
        BEQ.W    ??main_27
        BCC.W    ??main_28
        CMP      R0,#+8
        BEQ.W    ??main_29
        BCC.W    ??main_30
        CMP      R0,#+10
        BEQ.W    ??main_31
        BCC.W    ??main_32
        CMP      R0,#+12
        BEQ.W    ??main_33
        BCC.W    ??main_34
        CMP      R0,#+14
        BEQ.W    ??main_35
        BCC.W    ??main_36
        CMP      R0,#+16
        BEQ.W    ??main_37
        BCC.W    ??main_38
        CMP      R0,#+18
        BEQ.W    ??main_39
        BCC.W    ??main_40
        CMP      R0,#+19
        BEQ.W    ??main_41
        B.N      ??main_21
        DATA
??main_9:
        DC8      0x46, 0x43, 0x00, 0x00
        DC8      0x54, 0x4A, 0x00, 0x00
        THUMB
??main_22:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+80
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+80
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+80
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+80
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+80
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_24:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_23:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+113
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+103
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+93
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+83
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+78
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_26:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+115
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+105
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+85
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+80
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_25:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+118
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+108
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+98
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+88
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+82
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_28:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+122
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+108
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+98
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+88
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+82
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_27:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+124
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+110
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+84
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_30:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+124
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+110
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+104
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+94
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+88
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_29:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+125
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+112
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+104
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+94
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+88
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_32:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+125
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+114
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+106
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+92
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+82
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_31:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+125
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+116
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+108
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+94
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+84
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+73
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_34:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+130
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+116
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+110
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+88
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+75
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_33:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+140
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+116
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+112
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+97
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_36:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+140
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+118
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+114
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+99
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+93
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_35:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+145
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+117
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+115
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+93
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_38:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+103
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+98
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+96
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+94
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_37:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+106
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+103
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+101
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+99
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+97
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_40:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+110
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+106
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+103
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+97
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_39:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_21
??main_41:
        LDR.W    R0,??main_1+0x4
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x8
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0xC
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x10
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x14
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??main_1+0x18
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
??main_21:
        LDR.W    R0,??DataTable79_14
        LDRH     R0,[R0, #+0]
        LDR.W    R1,??DataTable79_10
        LDR      R1,[R1, #+0]
        CMP      R0,R1
        BGE.N    ??main_42
        BL       Judge_startline2
        MOV      R8,R0
??main_42:
        BL       find_bianyan
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        CMP      R0,#+30
        BLT.N    ??main_43
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        CMP      R0,#+171
        BLT.N    ??main_44
??main_43:
        BL       Start_Line
??main_44:
        BL       X_LineBend
        BL       center_filter
        BL       judge_locus_0
        LDR.W    R1,??DataTable79_15
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable79_16
        LDR.W    R1,??DataTable79_15
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        LDRH     R9,[SP, #+6]
        LDRH     R0,[SP, #+8]
        STRH     R0,[SP, #+6]
        LDRH     R0,[SP, #+10]
        STRH     R0,[SP, #+8]
        STRH     R10,[SP, #+10]
        BL       Judge_slope
        MOV      R10,R0
        LDRH     R0,[SP, #+10]
        ORRS     R0,R0,R10
        LDRH     R1,[SP, #+8]
        ORRS     R0,R1,R0
        LDRH     R1,[SP, #+6]
        ORRS     R0,R1,R0
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BNE.N    ??main_45
        UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
        CMP      R9,#+0
        BEQ.N    ??main_46
??main_45:
        LDR.W    R0,??DataTable79_17
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
??main_46:
        LDR.W    R0,??DataTable79_2
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_47
        LDR.W    R0,??DataTable79_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_47
        LDR.W    R0,??DataTable79_4
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_47
        LDR.W    R0,??DataTable79_5
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_48
??main_47:
        LDR.W    R0,??DataTable79_15
        LDRB     R0,[R0, #+0]
        CMP      R0,#+20
        BNE.N    ??main_48
        MOVS     R4,#+1
??main_48:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??main_49
        LDR.W    R0,??DataTable79_6
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_49
        LDR.W    R0,??DataTable79_16
        LDRB     R0,[R0, #+0]
        CMP      R0,#+20
        BNE.N    ??main_49
        MOVS     R4,#+1
??main_49:
        LDR.W    R0,??DataTable79_18
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_50
        LDR.W    R0,??DataTable79_15
        LDRB     R0,[R0, #+0]
        CMP      R0,#+20
        BEQ.N    ??main_50
        LDR.W    R0,??DataTable79_18
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
??main_50:
        LDR      R0,[SP, #+12]
        CMN      R0,#+100
        BNE.N    ??main_51
        LDR.W    R0,??DataTable79_19
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_51
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        STR      R0,[SP, #+12]
??main_51:
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        LDR      R1,[SP, #+12]
        ADDS     R1,R1,#+10
        CMP      R0,R1
        BNE.N    ??main_52
        MVNS     R0,#+99
        STR      R0,[SP, #+12]
??main_52:
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        CMP      R0,#+30
        BLT.N    ??main_53
        LDR      R0,[SP, #+12]
        CMN      R0,#+100
        BEQ.N    ??main_54
??main_53:
        LDR.W    R0,??DataTable79_18
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        MOVS     R4,#+0
??main_54:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+30
        BNE.N    ??main_55
        MOVS     R5,#+0
??main_55:
        LDR.W    R0,??DataTable79_7
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_56
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+24
        MOVS     R1,#+40
        STRH     R1,[R0, R5, LSL #+1]
??main_56:
        LDR.W    R0,??DataTable79_18
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_57
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+24
        MOVS     R1,#+100
        STRH     R1,[R0, R5, LSL #+1]
??main_57:
        LDR.W    R0,??DataTable79_18
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_58
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BNE.N    ??main_58
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+24
        MOVS     R1,#+80
        STRH     R1,[R0, R5, LSL #+1]
??main_58:
        LDR.W    R0,??DataTable79_19
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_59
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+24
        MOVS     R1,#+60
        STRH     R1,[R0, R5, LSL #+1]
??main_59:
        LDR.W    R0,??DataTable79_18
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_60
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??main_60
        LDR.W    R0,??DataTable79_19
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_60
        LDR.W    R0,??DataTable79_7
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_60
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+24
        MOVS     R1,#+0
        STRH     R1,[R0, R5, LSL #+1]
??main_60:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+84
        LDR.W    R1,??DataTable79_15
        LDRB     R1,[R1, #+0]
        STRH     R1,[R0, R5, LSL #+1]
        ADDS     R5,R5,#+1
        LDR      R0,[SP, #+16]
        CMN      R0,#+100
        BNE.W    ??main_61
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+24
        ADDS     R0,R0,R5, LSL #+1
        LDRSH    R0,[R0, #-2]
        CMP      R0,#+100
        BNE.N    ??main_62
        LDR.W    R0,??DataTable79_18
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??main_63
        MOVS     R0,#+1
        B.N      ??main_64
??main_63:
        MOVS     R0,#+0
??main_64:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        STR      R0,[SP, #+16]
??main_62:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+24
        ADDS     R0,R0,R5, LSL #+1
        LDRSH    R0,[R0, #-2]
        CMP      R0,#+80
        BNE.W    ??main_61
        MOVS     R0,#+0
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+1
        BNE.N    ??main_65
        LDRSH    R1,[SP, #+82]
        CMP      R1,#+80
        BNE.N    ??main_66
        ADDS     R0,R0,#+1
??main_66:
        LDRSH    R1,[SP, #+80]
        CMP      R1,#+80
        BNE.N    ??main_67
        ADDS     R0,R0,#+1
??main_67:
        LDRSH    R1,[SP, #+78]
        CMP      R1,#+80
        BNE.N    ??main_68
        ADDS     R0,R0,#+1
??main_68:
        LDRSH    R1,[SP, #+76]
        CMP      R1,#+80
        BNE.N    ??main_65
        ADDS     R0,R0,#+1
??main_65:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+2
        BNE.N    ??main_69
        LDRSH    R1,[SP, #+24]
        CMP      R1,#+80
        BNE.N    ??main_70
        ADDS     R0,R0,#+1
??main_70:
        LDRSH    R1,[SP, #+82]
        CMP      R1,#+80
        BNE.N    ??main_71
        ADDS     R0,R0,#+1
??main_71:
        LDRSH    R1,[SP, #+80]
        CMP      R1,#+80
        BNE.N    ??main_72
        ADDS     R0,R0,#+1
??main_72:
        LDRSH    R1,[SP, #+78]
        CMP      R1,#+80
        BNE.N    ??main_69
        ADDS     R0,R0,#+1
??main_69:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+3
        BNE.N    ??main_73
        LDRSH    R1,[SP, #+26]
        CMP      R1,#+80
        BNE.N    ??main_74
        ADDS     R0,R0,#+1
??main_74:
        LDRSH    R1,[SP, #+24]
        CMP      R1,#+80
        BNE.N    ??main_75
        ADDS     R0,R0,#+1
??main_75:
        LDRSH    R1,[SP, #+82]
        CMP      R1,#+80
        BNE.N    ??main_76
        ADDS     R0,R0,#+1
??main_76:
        LDRSH    R1,[SP, #+80]
        CMP      R1,#+80
        BNE.N    ??main_73
        ADDS     R0,R0,#+1
??main_73:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+4
        BNE.N    ??main_77
        LDRSH    R1,[SP, #+28]
        CMP      R1,#+80
        BNE.N    ??main_78
        ADDS     R0,R0,#+1
??main_78:
        LDRSH    R1,[SP, #+26]
        CMP      R1,#+80
        BNE.N    ??main_79
        ADDS     R0,R0,#+1
??main_79:
        LDRSH    R1,[SP, #+24]
        CMP      R1,#+80
        BNE.N    ??main_80
        ADDS     R0,R0,#+1
??main_80:
        LDRSH    R1,[SP, #+82]
        CMP      R1,#+80
        BNE.N    ??main_77
        ADDS     R0,R0,#+1
??main_77:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+5
        BLT.N    ??main_81
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R1,SP,#+24
        ADDS     R1,R1,R5, LSL #+1
        LDRSH    R1,[R1, #-4]
        CMP      R1,#+80
        BNE.N    ??main_82
        ADDS     R0,R0,#+1
??main_82:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R1,SP,#+24
        ADDS     R1,R1,R5, LSL #+1
        LDRSH    R1,[R1, #-6]
        CMP      R1,#+80
        BNE.N    ??main_83
        ADDS     R0,R0,#+1
??main_83:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R1,SP,#+24
        ADDS     R1,R1,R5, LSL #+1
        LDRSH    R1,[R1, #-8]
        CMP      R1,#+80
        BNE.N    ??main_84
        ADDS     R0,R0,#+1
??main_84:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R1,SP,#+24
        ADDS     R1,R1,R5, LSL #+1
        LDRSH    R1,[R1, #-10]
        CMP      R1,#+80
        BNE.N    ??main_81
        ADDS     R0,R0,#+1
??main_81:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+1
        BCC.N    ??main_61
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        STR      R0,[SP, #+16]
??main_61:
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        LDR      R1,[SP, #+16]
        ADDS     R1,R1,#+3
        CMP      R0,R1
        BNE.N    ??main_85
        MOVS     R0,#+1
        STRB     R0,[SP, #+3]
??main_85:
        LDR      R0,[SP, #+12]
        CMN      R0,#+100
        BNE.N    ??main_86
        UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
        CMP      R8,#+33
        BCC.N    ??main_86
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        CMP      R0,#+21
        BLT.N    ??main_86
        LDRH     R0,[SP, #+10]
        ORRS     R0,R0,R10
        LDRH     R1,[SP, #+8]
        ORRS     R0,R1,R0
        LDRH     R1,[SP, #+6]
        ORRS     R0,R1,R0
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BNE.N    ??main_86
        UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
        CMP      R9,#+0
        BNE.N    ??main_86
        MOVS     R0,#+1
        STRH     R0,[SP, #+4]
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        STR      R0,[SP, #+20]
??main_86:
        LDRH     R0,[SP, #+4]
        CMP      R0,#+0
        BEQ.N    ??main_87
        ADDS     R7,R7,#+1
??main_87:
        LDRH     R0,[SP, #+4]
        CMP      R0,#+0
        BEQ.N    ??main_88
        UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
        CMP      R7,#+9
        BCC.N    ??main_88
        LDR.W    R0,??DataTable79_20
        LDRH     R0,[R0, #+0]
        CMP      R0,#+21
        BCC.N    ??main_89
        LDR.W    R0,??DataTable79_21  ;; 0x40038028
        MOVW     R1,#+375
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable79_22  ;; 0x40038010
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        B.N      ??main_88
??main_89:
        LDR.W    R0,??DataTable79_21  ;; 0x40038028
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable79_22  ;; 0x40038010
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable79_23  ;; 0x40038018
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
??main_88:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+84
        ADDS     R0,R0,R5, LSL #+1
        LDRSH    R0,[R0, #-2]
        CMP      R0,#+20
        BNE.N    ??main_90
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+1
        BNE.N    ??main_91
        LDRSH    R0,[SP, #+142]
        CMP      R0,#+20
        BNE.N    ??main_90
        LDRSH    R0,[SP, #+140]
        CMP      R0,#+20
        BNE.N    ??main_90
        LDR.W    R0,??DataTable79_24
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
        B.N      ??main_90
??main_91:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+2
        BNE.N    ??main_92
        LDRSH    R0,[SP, #+84]
        CMP      R0,#+20
        BNE.N    ??main_90
        LDRSH    R0,[SP, #+142]
        CMP      R0,#+20
        BNE.N    ??main_90
        LDR.W    R0,??DataTable79_24
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
        B.N      ??main_90
??main_92:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+84
        ADDS     R0,R0,R5, LSL #+1
        LDRSH    R0,[R0, #-4]
        CMP      R0,#+20
        BNE.N    ??main_90
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+84
        ADDS     R0,R0,R5, LSL #+1
        LDRSH    R0,[R0, #-6]
        CMP      R0,#+20
        BNE.N    ??main_90
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+84
        ADDS     R0,R0,R5, LSL #+1
        LDRSH    R0,[R0, #-8]
        CMP      R0,#+20
        BNE.N    ??main_90
        LDR.W    R0,??DataTable79_24
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
??main_90:
        BL       choose_PD
        STRB     R0,[SP, #+0]
        LDRH     R0,[SP, #+4]
        CMP      R0,#+0
        BEQ.N    ??main_93
        UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
        CMP      R7,#+9
        BCS.N    ??main_94
??main_93:
        LDR.W    R0,??DataTable79_10
        LDR      R0,[R0, #+0]
        CMP      R0,#+10
        BGE.N    ??main_95
        MOVS     R11,#+150
        B.N      ??main_96
        DATA
??main_0:
        DC32     `?<Constant {-1}>`
        THUMB
??main_95:
        LDR.W    R0,??DataTable79_24
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??main_97
        BL       speed_control
        MOVS     R6,R0
??main_97:
        LDR.W    R0,??DataTable79_24
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_98
        LDR.W    R0,??DataTable79_24
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        LDR.N    R0,??main_1+0x4
        LDRSH    R6,[R0, #+0]
??main_98:
        MOVS     R0,R6
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       Motor_control
        MOV      R11,R0
??main_96:
        MOV      R0,R11
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       set_speed
??main_94:
        LDR.W    R1,??DataTable79_25  ;; 0xc3500
        MOVS     R0,#+0
        BL       hw_pit_init
        MOVS     R0,#+0
        BL       enable_pit_interrupt
        BL       CH451_GetKeyValue
        LDR.N    R0,??main_1+0x28
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??main_99
        LDRB     R0,[SP, #+2]
        CMP      R0,#+1
        BNE.W    ??main_100
??main_99:
        LDR.N    R0,??DataTable79_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+250
        BNE.N    ??main_101
        LDR.N    R0,??DataTable79_26
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
??main_101:
        LDR.N    R0,??DataTable79_26
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??DataTable79_26
        STRB     R0,[R1, #+0]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R1,#+10
        SDIV     R2,R0,R1
        MLS      R0,R1,R2,R0
        CMP      R0,#+0
        BEQ.W    ??main_100
        BL       LCD_CLS
        LDR.N    R2,??DataTable79_27
        MOVS     R1,#+0
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable79_28
        LDRSH    R2,[R0, #+0]
        MOVS     R1,#+0
        MOVS     R0,#+45
        BL       LCD_P6x8Str_3
        LDR.N    R0,??DataTable79_29
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??main_102
        LDR.N    R0,??DataTable79_30
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+0
        MOVS     R0,#+70
        BL       LCD_P6x8Str_1
??main_102:
        LDR.N    R0,??DataTable79_16
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+0
        MOVS     R0,#+70
        BL       LCD_P6x8Str_3
        LDR.N    R0,??DataTable79_31
        LDRSH    R2,[R0, #+0]
        MOVS     R1,#+0
        MOVS     R0,#+100
        BL       LCD_P6x8Str_3
        LDR.N    R2,??DataTable79_32
        MOVS     R1,#+1
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable79_33
        LDRSH    R2,[R0, #+0]
        MOVS     R1,#+1
        MOVS     R0,#+45
        BL       LCD_P6x8Str_3
        LDR.N    R0,??DataTable79_34
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??main_103
        LDR.N    R0,??DataTable79_35
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+1
        MOVS     R0,#+70
        BL       LCD_P6x8Str_1
??main_103:
        LDR.N    R0,??DataTable79_9
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+1
        MOVS     R0,#+100
        BL       LCD_P6x8Str_1
        LDR.N    R2,??DataTable79_36
        MOVS     R1,#+2
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable79_37
        LDRSH    R2,[R0, #+0]
        MOVS     R1,#+2
        MOVS     R0,#+45
        BL       LCD_P6x8Str_3
        MOV      R2,R8
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+80
        BL       LCD_P6x8Str_3
        LDR.N    R0,??DataTable79_38
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??main_104
        LDR.N    R0,??DataTable79_39
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+2
        MOVS     R0,#+70
        BL       LCD_P6x8Str_1
??main_104:
        LDR.N    R2,??DataTable79_40
        MOVS     R1,#+3
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable79_41
        LDRSH    R2,[R0, #+0]
        MOVS     R1,#+3
        MOVS     R0,#+75
        BL       LCD_P6x8Str_3
        LDR.N    R2,??DataTable79_42
        MOVS     R1,#+4
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable79_43
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+4
        MOVS     R0,#+88
        BL       LCD_P6x8Str_FuHao_3
        LDR.N    R2,??DataTable79_44
        MOVS     R1,#+5
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable79_45
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+5
        MOVS     R0,#+30
        BL       LCD_P6x8Str_FuHao_3
        LDR.N    R2,??DataTable79_46
        MOVS     R1,#+6
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable79_47
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+6
        MOVS     R0,#+100
        BL       LCD_P6x8Str_FuHao_3
        ADR.N    R2,??DataTable79_13  ;; "P_D"
        MOVS     R1,#+7
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable79_48
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+7
        MOVS     R0,#+30
        BL       LCD_P6x8Str_FuHao_3
        LDR.N    R0,??DataTable79_49
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+7
        MOVS     R0,#+60
        BL       LCD_P6x8Str_FuHao_3
        LDR.N    R0,??DataTable79_50
        LDRSH    R2,[R0, #+0]
        MOVS     R1,#+5
        MOVS     R0,#+80
        BL       LCD_P6x8Str_5
??main_100:
        LDR.N    R0,??main_1+0x28
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BNE.N    ??main_105
        LDR.N    R0,??DataTable79_51
        LDRB     R0,[R0, #+0]
        CMP      R0,#+250
        BNE.N    ??main_106
        LDR.N    R0,??DataTable79_51
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
??main_106:
        LDR.N    R0,??DataTable79_51
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??DataTable79_51
        STRB     R0,[R1, #+0]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R1,#+10
        SDIV     R2,R0,R1
        MLS      R0,R1,R2,R0
        CMP      R0,#+0
        BEQ.N    ??main_105
        BL       LCD_CLS
        MOVS     R4,#+0
        B.N      ??main_107
        DATA
??main_1:
        DC32     0x400ff000
        DC32     speed_Very_straight
        DC32     speed_top
        DC32     speed_b
        DC32     speed_m
        DC32     speed_s
        DC32     speed_ms
        DC32     `?<Constant "speed">`
        DC32     `?<Constant "speed_cut_timer">`
        DC32     `?<Constant "start_startline">`
        DC32     KeyValue
        DC32     `?<Constant "TJorFC">`
        THUMB
??main_108:
        MOVS     R1,R4
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable79_52
        LDRB     R0,[R4, R0]
        BL       LCD_PutPixel
        ADDS     R4,R4,#+1
??main_107:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+54
        BCC.N    ??main_108
??main_105:
        LDR.N    R0,??DataTable79_45
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable79_43
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable79_53
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable79_54
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable79_55
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable79_19
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        LDR.N    R0,??DataTable79_56
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        LDR.N    R0,??DataTable79_57
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        LDR.N    R0,??DataTable79_58
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        LDR.N    R0,??DataTable79_59
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        MOVS     R4,#+0
        B.N      ??main_109
??main_110:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable79_60
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable79_61
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable79_60
        ADDS     R0,R4,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+55]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable79_61
        ADDS     R0,R4,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+55]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable79_52
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        ADDS     R4,R4,#+1
??main_109:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+55
        BCC.N    ??main_110
        MOVS     R4,#+0
        B.N      ??main_111
??main_112:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable79_62
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        ADDS     R4,R4,#+1
??main_111:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+142
        BCC.N    ??main_112
        MOVS     R4,#+0
        B.N      ??main_113
??main_114:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable79_63
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        ADDS     R4,R4,#+1
??main_113:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+82
        BCC.N    ??main_114
        MOVS     R4,#+0
        B.N      ??main_115
??main_116:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable79_64
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        ADDS     R4,R4,#+1
??main_115:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+122
        BCC.N    ??main_116
        MOVS     R4,#+0
        B.W      ??main_19
        DATA
??main_14:
        DC32     `?<Constant "sai_dao_number">`
        DC32     `?<Constant "LCDgo_on">`
// 7994       /***************对一些变量进行清零END****************/
// 7995       /********************LCD数据显示模块end*********************/
// 7996       
// 7997     }
// 7998   }	
// 7999 	//return 0;
// 8000 }

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79:
        DC32     0x5b8d80

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_1:
        DC32     BW

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_2:
        DC32     start_18_25_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_3:
        DC32     start_25_35_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_4:
        DC32     start_35_45_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_5:
        DC32     start_45_55_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_6:
        DC32     start_line2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_7:
        DC32     ramp_flag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_8:
        DC32     finish

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_9:
        DC32     xiaoS_flag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_10:
        DC32     P_timer

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_11:
        DC32     speed_cut_timer

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_12:
        DC32     car_speed

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_13:
        DC8      "P_D"

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_14:
        DC32     start_startline

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_15:
        DC32     m

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_16:
        DC32     sai_dao_lei_xing

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_17:
        DC32     slope_flag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_18:
        DC32     start_xian

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_19:
        DC32     xu_xian2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_20:
        DC32     pulse

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_21:
        DC32     0x40038028

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_22:
        DC32     0x40038010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_23:
        DC32     0x40038018

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_24:
        DC32     Very_straight

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_25:
        DC32     0xc3500

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_26:
        DC32     LCD_P1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_27:
        DC32     `?<Constant "low_0">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_28:
        DC32     low_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_29:
        DC32     low_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_30:
        DC32     low_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_31:
        DC32     i_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_32:
        DC32     `?<Constant "mid_0">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_33:
        DC32     mid_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_34:
        DC32     mid_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_35:
        DC32     mid_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_36:
        DC32     `?<Constant "high_0">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_37:
        DC32     high_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_38:
        DC32     high_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_39:
        DC32     high_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_40:
        DC32     `?<Constant "position_now">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_41:
        DC32     position_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_42:
        DC32     `?<Constant "position_diff">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_43:
        DC32     position_diff

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_44:
        DC32     `?<Constant "p_low">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_45:
        DC32     position_now_low

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_46:
        DC32     `?<Constant "see_distance">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_47:
        DC32     see_distance

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_48:
        DC32     position_now_P

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_49:
        DC32     position_now_D

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_50:
        DC32     Servo_value

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_51:
        DC32     LCD_P3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_52:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_53:
        DC32     xie_shizi_flag_1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_54:
        DC32     xie_shizi_flag_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_55:
        DC32     xie_shizi_flag_3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_56:
        DC32     xu1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_57:
        DC32     xu2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_58:
        DC32     xu3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_59:
        DC32     xu4

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_60:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_61:
        DC32     bianyan

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_62:
        DC32     BW4

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_63:
        DC32     BW3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable79_64:
        DC32     BW2

        SECTION `.iar_vfe_header`:DATA:REORDER:NOALLOC:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
        DC32 0

        SECTION __DLIB_PERTHREAD:DATA:REORDER:NOROOT(0)
        SECTION_TYPE SHT_PROGBITS, 0

        SECTION __DLIB_PERTHREAD_init:DATA:REORDER:NOROOT(0)
        SECTION_TYPE SHT_PROGBITS, 0

        END
// 8001 /************************主函数END****************************/
// 8002 
// 
// 10 148 bytes in section .bss
//    117 bytes in section .data
//  1 312 bytes in section .rodata
// 80 250 bytes in section .text
// 
// 80 250 bytes of CODE  memory
//  1 312 bytes of CONST memory
// 10 265 bytes of DATA  memory
//
//Errors: none
//Warnings: 246
