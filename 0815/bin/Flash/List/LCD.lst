###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     30/Mar/2012  16:33:17 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\kinetis_IAR\19_LQ_DMAov7620\src\LCD.c                 #
#    Command line =  E:\kinetis_IAR\19_LQ_DMAov7620\src\LCD.c -D IAR -D       #
#                    TWR_K60N512 -lCN E:\kinetis_IAR\19_LQ_DMAov7620\bin\Flas #
#                    h\List\ -lB E:\kinetis_IAR\19_LQ_DMAov7620\bin\Flash\Lis #
#                    t\ -o E:\kinetis_IAR\19_LQ_DMAov7620\bin\Flash\Obj\      #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I E:\kinetis_IAR\19_LQ_DMAov7620\src\Sources\H\  #
#                    -I E:\kinetis_IAR\19_LQ_DMAov7620\src\Sources\H\Componen #
#                    t_H\ -I E:\kinetis_IAR\19_LQ_DMAov7620\src\Sources\H\Fra #
#                    me_H\ -Ol --use_c++_inline                               #
#    List file    =  E:\kinetis_IAR\19_LQ_DMAov7620\bin\Flash\List\LCD.lst    #
#    Object file  =  E:\kinetis_IAR\19_LQ_DMAov7620\bin\Flash\Obj\LCD.o       #
#                                                                             #
#                                                                             #
###############################################################################

E:\kinetis_IAR\19_LQ_DMAov7620\src\LCD.c
      1          /********************************************************   
      2          【平    台】龙丘K60X256多功能开发板
      3          【编    写】龙丘
      4          【Designed】by Chiu Sir
      5          【E-mail  】chiusir@yahoo.cn
      6          【软件版本】V1.0
      7          【最后更新】2012年1月3日
      8          【相关信息参考下列地址】
      9          【网    站】http://www.lqist.cn
     10          【淘宝店铺】http://shop36265907.taobao.com
     11          ------------------------------------------------
     12          【dev.env.】CodeWarrior 10.1/IAR
     13          【Target  】K60X256
     14          【Crystal 】50.000Mhz
     15          【busclock】???.000MHz
     16          【pllclock】100.000MHz    
     17          ***************************
     18          ------------------------------------
     19            使用说明：
     20          下载程序后LED交替闪烁
     21          锁相环137.5M测试程序
     22            
     23           *********************************************************/
     24          #include "MK60N512VMD100.h"  
     25          #define A0_MASK 0x00000100
     26          #define RESET_MASK 0x00000400
     27          #define X_WIDTH 128
     28          #define Y_WIDTH 64
     29          typedef unsigned char		uint8;  /*  8 bits */
     30          typedef unsigned short int	uint16; /* 16 bits */
     31          typedef unsigned long int	uint32; /* 32 bits */
     32          typedef char			int8;   /*  8 bits */
     33          typedef short int	        int16;  /* 16 bits */
     34          typedef int		        int32;  /* 32 bits */

   \                                 In section .data, align 4
     35          uint32 pusher0=0x00010000;
   \                     pusher0:
   \   00000000   00000100           DC32 65536
     36          //======================================================
     37          // 128X64I液晶底层驱动[8X16]字体库
     38          // 设计者: powerint
     39          // 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
     40          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
     41          //======================================================

   \                                 In section .text, align 4, keep-with-next
     42          const uint8 F8X16[]=
   \                     F8X16:
   \   00000000                      ; Initializer data, 1552 bytes
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000000A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 248
   \              000000F8    
   \   00000014   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 51, 48, 0
   \              00333000    
   \   0000001E   000000100C06       DC8 0, 0, 0, 16, 12, 6, 16, 12, 6, 0
   \              100C0600    
   \   00000028   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 64, 192
   \              000040C0    
   \   00000032   7840C0784000       DC8 120, 64, 192, 120, 64, 0, 4, 63, 4, 4
   \              043F0404    
   \   0000003C   3F0404000070       DC8 63, 4, 4, 0, 0, 112, 136, 252, 8, 48
   \              88FC0830    
   \   00000046   0000001820FF       DC8 0, 0, 0, 24, 32, 255, 33, 30, 0, 0
   \              211E0000    
   \   00000050   F008F000E018       DC8 240, 8, 240, 0, 224, 24, 0, 0, 0, 33
   \              00000021    
   \   0000005A   1C031E211E00       DC8 28, 3, 30, 33, 30, 0, 0, 240, 8, 136
   \              00F00888    
   \   00000064   700000001E21       DC8 112, 0, 0, 0, 30, 33, 35, 36, 25, 39
   \              23241927    
   \   0000006E   211010160E00       DC8 33, 16, 16, 22, 14, 0, 0, 0, 0, 0
   \              00000000    
   \   00000078   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000082   00E018040200       DC8 0, 224, 24, 4, 2, 0, 0, 0, 0, 7
   \              00000007    
   \   0000008C   182040000002       DC8 24, 32, 64, 0, 0, 2, 4, 24, 224, 0
   \              0418E000    
   \   00000096   000000402018       DC8 0, 0, 0, 64, 32, 24, 7, 0, 0, 0
   \              07000000    
   \   000000A0   404080F08040       DC8 64, 64, 128, 240, 128, 64, 64, 0, 2, 2
   \              40000202    
   \   000000AA   010F01020200       DC8 1, 15, 1, 2, 2, 0, 0, 0, 0, 240
   \              000000F0    
   \   000000B4   000000000101       DC8 0, 0, 0, 0, 1, 1, 1, 31, 1, 1
   \              011F0101    
   \   000000BE   010000000000       DC8 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000000C8   80B070000000       DC8 128, 176, 112, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000000D2   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 1, 1, 1
   \              00010101    
   \   000000DC   010101010000       DC8 1, 1, 1, 1, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000000E6   000000303000       DC8 0, 0, 0, 48, 48, 0, 0, 0, 0, 0
   \              00000000    
   \   000000F0   000000008060       DC8 0, 0, 0, 0, 128, 96, 24, 4, 0, 96
   \              18040060    
   \   000000FA   180601000000       DC8 24, 6, 1, 0, 0, 0, 0, 224, 16, 8
   \              00E01008    
   \   00000104   0810E000000F       DC8 8, 16, 224, 0, 0, 15, 16, 32, 32, 16
   \              10202010    
   \   0000010E   0F00001010F8       DC8 15, 0, 0, 16, 16, 248, 0, 0, 0, 0
   \              00000000    
   \   00000118   0020203F2020       DC8 0, 32, 32, 63, 32, 32, 0, 0, 0, 112
   \              00000070    
   \   00000122   080808887000       DC8 8, 8, 8, 136, 112, 0, 0, 48, 40, 36
   \              00302824    
   \   0000012C   222130000030       DC8 34, 33, 48, 0, 0, 48, 8, 136, 136, 72
   \              08888848    
   \   00000136   300000182020       DC8 48, 0, 0, 24, 32, 32, 32, 17, 14, 0
   \              20110E00    
   \   00000140   0000C02010F8       DC8 0, 0, 192, 32, 16, 248, 0, 0, 0, 7
   \              00000007    
   \   0000014A   0424243F2400       DC8 4, 36, 36, 63, 36, 0, 0, 248, 8, 136
   \              00F80888    
   \   00000154   880808000019       DC8 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              21202011    
   \   0000015E   0E0000E01088       DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0
   \              88180000    
   \   00000168   000F11202011       DC8 0, 15, 17, 32, 32, 17, 14, 0, 0, 56
   \              0E000038    
   \   00000172   0808C8380800       DC8 8, 8, 200, 56, 8, 0, 0, 0, 0, 63
   \              0000003F    
   \   0000017C   000000000070       DC8 0, 0, 0, 0, 0, 112, 136, 8, 8, 136
   \              88080888    
   \   00000186   7000001C2221       DC8 112, 0, 0, 28, 34, 33, 33, 34, 28, 0
   \              21221C00    
   \   00000190   00E010080810       DC8 0, 224, 16, 8, 8, 16, 224, 0, 0, 0
   \              E0000000    
   \   0000019A   312222110F00       DC8 49, 34, 34, 17, 15, 0, 0, 0, 0, 192
   \              000000C0    
   \   000001A4   C00000000000       DC8 192, 0, 0, 0, 0, 0, 0, 48, 48, 0
   \              00303000    
   \   000001AE   000000000080       DC8 0, 0, 0, 0, 0, 128, 0, 0, 0, 0
   \              00000000    
   \   000001B8   000080600000       DC8 0, 0, 128, 96, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000001C2   804020100800       DC8 128, 64, 32, 16, 8, 0, 0, 1, 2, 4
   \              00010204    
   \   000001CC   081020004040       DC8 8, 16, 32, 0, 64, 64, 64, 64, 64, 64
   \              40404040    
   \   000001D6   400004040404       DC8 64, 0, 4, 4, 4, 4, 4, 4, 4, 0
   \              04040400    
   \   000001E0   000810204080       DC8 0, 8, 16, 32, 64, 128, 0, 0, 0, 32
   \              00000020    
   \   000001EA   100804020100       DC8 16, 8, 4, 2, 1, 0, 0, 112, 72, 8
   \              00704808    
   \   000001F4   0808F0000000       DC8 8, 8, 240, 0, 0, 0, 0, 48, 54, 1
   \              00303601    
   \   000001FE   0000C030C828       DC8 0, 0, 192, 48, 200, 40, 232, 16, 224, 0
   \              E810E000    
   \   00000208   071827242314       DC8 7, 24, 39, 36, 35, 20, 11, 0, 0, 0
   \              0B000000    
   \   00000212   C038E0000000       DC8 192, 56, 224, 0, 0, 0, 32, 60, 35, 2
   \              203C2302    
   \   0000021C   0227382008F8       DC8 2, 39, 56, 32, 8, 248, 136, 136, 136, 112
   \              88888870    
   \   00000226   0000203F2020       DC8 0, 0, 32, 63, 32, 32, 32, 17, 14, 0
   \              20110E00    
   \   00000230   C03008080808       DC8 192, 48, 8, 8, 8, 8, 56, 0, 7, 24
   \              38000718    
   \   0000023A   202020100800       DC8 32, 32, 32, 16, 8, 0, 8, 248, 8, 8
   \              08F80808    
   \   00000244   0810E000203F       DC8 8, 16, 224, 0, 32, 63, 32, 32, 32, 16
   \              20202010    
   \   0000024E   0F0008F88888       DC8 15, 0, 8, 248, 136, 136, 232, 8, 16, 0
   \              E8081000    
   \   00000258   203F20202320       DC8 32, 63, 32, 32, 35, 32, 24, 0, 8, 248
   \              180008F8    
   \   00000262   8888E8081000       DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 0
   \              203F2000    
   \   0000026C   03000000C030       DC8 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              08080838    
   \   00000276   000007182020       DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0
   \              221E0200    
   \   00000280   08F808000008       DC8 8, 248, 8, 0, 0, 8, 248, 8, 32, 63
   \              F808203F    
   \   0000028A   210101213F20       DC8 33, 1, 1, 33, 63, 32, 0, 8, 8, 248
   \              000808F8    
   \   00000294   080800000020       DC8 8, 8, 0, 0, 0, 32, 32, 63, 32, 32
   \              203F2020    
   \   0000029E   000000000808       DC8 0, 0, 0, 0, 8, 8, 248, 8, 8, 0
   \              F8080800    
   \   000002A8   C08080807F00       DC8 192, 128, 128, 128, 127, 0, 0, 0, 8, 248
   \              000008F8    
   \   000002B2   88C028180800       DC8 136, 192, 40, 24, 8, 0, 32, 63, 32, 1
   \              203F2001    
   \   000002BC   2638200008F8       DC8 38, 56, 32, 0, 8, 248, 8, 0, 0, 0
   \              08000000    
   \   000002C6   0000203F2020       DC8 0, 0, 32, 63, 32, 32, 32, 32, 48, 0
   \              20203000    
   \   000002D0   08F8F800F8F8       DC8 8, 248, 248, 0, 248, 248, 8, 0, 32, 63
   \              0800203F    
   \   000002DA   003F003F2000       DC8 0, 63, 0, 63, 32, 0, 8, 248, 48, 192
   \              08F830C0    
   \   000002E4   0008F808203F       DC8 0, 8, 248, 8, 32, 63, 32, 0, 7, 24
   \              20000718    
   \   000002EE   3F00E0100808       DC8 63, 0, 224, 16, 8, 8, 8, 16, 224, 0
   \              0810E000    
   \   000002F8   0F1020202010       DC8 15, 16, 32, 32, 32, 16, 15, 0, 8, 248
   \              0F0008F8    
   \   00000302   08080808F000       DC8 8, 8, 8, 8, 240, 0, 32, 63, 33, 1
   \              203F2101    
   \   0000030C   01010000E010       DC8 1, 1, 0, 0, 224, 16, 8, 8, 8, 16
   \              08080810    
   \   00000316   E0000F182424       DC8 224, 0, 15, 24, 36, 36, 56, 80, 79, 0
   \              38504F00    
   \   00000320   08F888888888       DC8 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              7000203F    
   \   0000032A   2000030C3020       DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8
   \              00708808    
   \   00000334   080838000038       DC8 8, 8, 56, 0, 0, 56, 32, 33, 33, 34
   \              20212122    
   \   0000033E   1C00180808F8       DC8 28, 0, 24, 8, 8, 248, 8, 8, 24, 0
   \              08081800    
   \   00000348   0000203F2000       DC8 0, 0, 32, 63, 32, 0, 0, 0, 8, 248
   \              000008F8    
   \   00000352   08000008F808       DC8 8, 0, 0, 8, 248, 8, 0, 31, 32, 32
   \              001F2020    
   \   0000035C   20201F000878       DC8 32, 32, 31, 0, 8, 120, 136, 0, 0, 200
   \              880000C8    
   \   00000366   380800000738       DC8 56, 8, 0, 0, 7, 56, 14, 1, 0, 0
   \              0E010000    
   \   00000370   F80800F80008       DC8 248, 8, 0, 248, 0, 8, 248, 0, 3, 60
   \              F800033C    
   \   0000037A   0700073C0300       DC8 7, 0, 7, 60, 3, 0, 8, 24, 104, 128
   \              08186880    
   \   00000384   806818082030       DC8 128, 104, 24, 8, 32, 48, 44, 3, 3, 44
   \              2C03032C    
   \   0000038E   30200838C800       DC8 48, 32, 8, 56, 200, 0, 200, 56, 8, 0
   \              C8380800    
   \   00000398   0000203F2000       DC8 0, 0, 32, 63, 32, 0, 0, 0, 16, 8
   \              00001008    
   \   000003A2   0808C8380800       DC8 8, 8, 200, 56, 8, 0, 32, 56, 38, 33
   \              20382621    
   \   000003AC   202018000000       DC8 32, 32, 24, 0, 0, 0, 0, 254, 2, 2
   \              00FE0202    
   \   000003B6   02000000007F       DC8 2, 0, 0, 0, 0, 127, 64, 64, 64, 0
   \              40404000    
   \   000003C0   000C30C00000       DC8 0, 12, 48, 192, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000003CA   00010638C000       DC8 0, 1, 6, 56, 192, 0, 0, 2, 2, 2
   \              00020202    
   \   000003D4   FE0000000040       DC8 254, 0, 0, 0, 0, 64, 64, 64, 127, 0
   \              40407F00    
   \   000003DE   000000000402       DC8 0, 0, 0, 0, 4, 2, 2, 2, 4, 0
   \              02020400    
   \   000003E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000003F2   000000000000       DC8 0, 0, 0, 0, 0, 0, 128, 128, 128, 128
   \              80808080    
   \   000003FC   808080800002       DC8 128, 128, 128, 128, 0, 2, 2, 4, 0, 0
   \              02040000    
   \   00000406   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000410   000080808080       DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 25
   \              00000019    
   \   0000041A   242222223F20       DC8 36, 34, 34, 34, 63, 32, 8, 248, 0, 128
   \              08F80080    
   \   00000424   80000000003F       DC8 128, 0, 0, 0, 0, 63, 17, 32, 32, 17
   \              11202011    
   \   0000042E   0E0000000080       DC8 14, 0, 0, 0, 0, 128, 128, 128, 0, 0
   \              80800000    
   \   00000438   000E11202020       DC8 0, 14, 17, 32, 32, 32, 17, 0, 0, 0
   \              11000000    
   \   00000442   00808088F800       DC8 0, 128, 128, 136, 248, 0, 0, 14, 17, 32
   \              000E1120    
   \   0000044C   20103F200000       DC8 32, 16, 63, 32, 0, 0, 128, 128, 128, 128
   \              80808080    
   \   00000456   0000001F2222       DC8 0, 0, 0, 31, 34, 34, 34, 34, 19, 0
   \              22221300    
   \   00000460   008080F08888       DC8 0, 128, 128, 240, 136, 136, 136, 24, 0, 32
   \              88180020    
   \   0000046A   203F20200000       DC8 32, 63, 32, 32, 0, 0, 0, 0, 128, 128
   \              00008080    
   \   00000474   80808000006B       DC8 128, 128, 128, 0, 0, 107, 148, 148, 148, 147
   \              94949493    
   \   0000047E   600008F80080       DC8 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              80800000    
   \   00000488   203F21000020       DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128
   \              3F200080    
   \   00000492   989800000000       DC8 152, 152, 0, 0, 0, 0, 0, 32, 32, 63
   \              0020203F    
   \   0000049C   202000000000       DC8 32, 32, 0, 0, 0, 0, 0, 128, 152, 152
   \              00809898    
   \   000004A6   000000C08080       DC8 0, 0, 0, 192, 128, 128, 128, 127, 0, 0
   \              807F0000    
   \   000004B0   08F800008080       DC8 8, 248, 0, 0, 128, 128, 128, 0, 32, 63
   \              8000203F    
   \   000004BA   24022D302000       DC8 36, 2, 45, 48, 32, 0, 0, 8, 8, 248
   \              000808F8    
   \   000004C4   000000000020       DC8 0, 0, 0, 0, 0, 32, 32, 63, 32, 32
   \              203F2020    
   \   000004CE   000080808080       DC8 0, 0, 128, 128, 128, 128, 128, 128, 128, 0
   \              80808000    
   \   000004D8   203F20003F20       DC8 32, 63, 32, 0, 63, 32, 0, 63, 128, 128
   \              003F8080    
   \   000004E2   008080800000       DC8 0, 128, 128, 128, 0, 0, 32, 63, 33, 0
   \              203F2100    
   \   000004EC   00203F200000       DC8 0, 32, 63, 32, 0, 0, 128, 128, 128, 128
   \              80808080    
   \   000004F6   0000001F2020       DC8 0, 0, 0, 31, 32, 32, 32, 32, 31, 0
   \              20201F00    
   \   00000500   808000808000       DC8 128, 128, 0, 128, 128, 0, 0, 0, 128, 255
   \              000080FF    
   \   0000050A   A12020110E00       DC8 161, 32, 32, 17, 14, 0, 0, 0, 0, 128
   \              00000080    
   \   00000514   80808000000E       DC8 128, 128, 128, 0, 0, 14, 17, 32, 32, 160
   \              112020A0    
   \   0000051E   FF8080808000       DC8 255, 128, 128, 128, 128, 0, 128, 128, 128, 0
   \              80808000    
   \   00000528   20203F212000       DC8 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              01000000    
   \   00000532   808080808000       DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36
   \              00332424    
   \   0000053C   242419000080       DC8 36, 36, 25, 0, 0, 128, 128, 224, 128, 128
   \              80E08080    
   \   00000546   00000000001F       DC8 0, 0, 0, 0, 0, 31, 32, 32, 0, 0
   \              20200000    
   \   00000550   808000000080       DC8 128, 128, 0, 0, 0, 128, 128, 0, 0, 31
   \              8000001F    
   \   0000055A   202020103F20       DC8 32, 32, 32, 16, 63, 32, 128, 128, 128, 0
   \              80808000    
   \   00000564   008080800001       DC8 0, 128, 128, 128, 0, 1, 14, 48, 8, 6
   \              0E300806    
   \   0000056E   010080800080       DC8 1, 0, 128, 128, 0, 128, 0, 128, 128, 128
   \              00808080    
   \   00000578   0F300C030C30       DC8 15, 48, 12, 3, 12, 48, 15, 0, 0, 128
   \              0F000080    
   \   00000582   800080808000       DC8 128, 0, 128, 128, 128, 0, 0, 32, 49, 46
   \              0020312E    
   \   0000058C   0E3120008080       DC8 14, 49, 32, 0, 128, 128, 128, 0, 0, 128
   \              80000080    
   \   00000596   808080818E70       DC8 128, 128, 128, 129, 142, 112, 24, 6, 1, 0
   \              18060100    
   \   000005A0   008080808080       DC8 0, 128, 128, 128, 128, 128, 128, 0, 0, 33
   \              80000021    
   \   000005AA   302C22213000       DC8 48, 44, 34, 33, 48, 0, 0, 0, 0, 0
   \              00000000    
   \   000005B4   807C02020000       DC8 128, 124, 2, 2, 0, 0, 0, 0, 0, 63
   \              0000003F    
   \   000005BE   404000000000       DC8 64, 64, 0, 0, 0, 0, 255, 0, 0, 0
   \              FF000000    
   \   000005C8   00000000FF00       DC8 0, 0, 0, 0, 255, 0, 0, 0, 0, 2
   \              00000002    
   \   000005D2   027C80000000       DC8 2, 124, 128, 0, 0, 0, 0, 64, 64, 63
   \              0040403F    
   \   000005DC   000000000006       DC8 0, 0, 0, 0, 0, 6, 1, 1, 2, 2
   \              01010202    
   \   000005E6   040400000000       DC8 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000005F0   00FFFFFFFFFF       DC8 0, 255, 255, 255, 255, 255, 255, 255, 0, 255
   \              FFFF00FF    
   \   000005FA   FFFFFFFFFFFF       DC8 255, 255, 255, 255, 255, 255, 255, 0, 0, 0
   \              FF000000    
   \   00000604   00000000FF00       DC8 0, 0, 0, 0, 255, 0, 0, 0, 0, 0
   \              00000000    
   \   0000060E   0000               DC8 0, 0
     43          {
     44          	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
     45            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
     46            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
     47            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
     48            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
     49            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
     50            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
     51            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
     52            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
     53            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
     54            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
     55            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
     56            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
     57            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
     58            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
     59            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
     60            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
     61            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
     62            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
     63            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
     64            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
     65            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
     66            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
     67            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
     68            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
     69            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
     70            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
     71            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
     72            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
     73            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
     74            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
     75            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
     76            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
     77            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
     78            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
     79            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
     80            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
     81            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
     82            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
     83            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
     84            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
     85            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
     86            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
     87            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
     88            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
     89            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
     90            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
     91            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
     92            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
     93            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
     94            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
     95            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
     96            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
     97            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
     98            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
     99            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
    100            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
    101            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
    102            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
    103            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
    104            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
    105            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
    106            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
    107            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
    108            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
    109            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
    110            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
    111            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
    112            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
    113            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
    114            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
    115            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
    116            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
    117            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
    118            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
    119            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
    120            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
    121            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
    122            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
    123            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
    124            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
    125            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
    126            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
    127            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
    128            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
    129            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//byte5
    130            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
    131            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
    132            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
    133            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
    134            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
    135            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
    136            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
    137            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
    138            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
    139            0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xff,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xff,//95
    140            0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00 ,//96
    141          
    142          };
    143          

   \                                 In section .text, align 4, keep-with-next
    144          const uint8 F14x16_Idx[] = 
   \                     F14x16_Idx:
   \   00000000                      ; Initializer data, 40 bytes
   \   00000000   B1B1BEA9C1AA       DC8 177, 177, 190, 169, 193, 170, 186, 207, 180, 243
   \              BACFB4F3    
   \   0000000A   D1A7CAB5D1B5       DC8 209, 167, 202, 181, 209, 181, 187, 249, 181, 216
   \              BBF9B5D8    
   \   00000014   C5CBB7E5D6C7       DC8 197, 203, 183, 229, 214, 199, 196, 220, 179, 181
   \              C4DCB3B5    
   \   0000001E   B0B4BCFCC3EB       DC8 176, 180, 188, 252, 195, 235, 0, 0, 0, 0
   \              00000000    
    145          {
    146          	"北京联合大学实训基地潘峰智能车按键秒"
    147          };
    148          
    149          /**************************************************
    150          PCTOLCD2002
    151          新宋体，宽14，高16，阴码，逆向，行列模式，c51格式，无行前缀和后缀
    152          ***************************************************/

   \                                 In section .text, align 4, keep-with-next
    153          const uint8 F14x16[] =
   \                     F14x16:
   \   00000000                      ; Initializer data, 504 bytes
   \   00000000   0000404040FC       DC8 0, 0, 64, 64, 64, 252, 0, 0, 252, 128
   \              0000FC80    
   \   0000000A   402020000030       DC8 64, 32, 32, 0, 0, 48, 16, 16, 8, 127
   \              1010087F    
   \   00000014   00007F404040       DC8 0, 0, 127, 64, 64, 64, 120, 0, 0, 0
   \              78000000    
   \   0000001E   10F050504A54       DC8 16, 240, 80, 80, 74, 84, 80, 80, 240, 8
   \              5050F008    
   \   00000028   080000402013       DC8 8, 0, 0, 64, 32, 19, 10, 66, 254, 2
   \              0A42FE02    
   \   00000032   020A13600000       DC8 2, 10, 19, 96, 0, 0, 0, 0, 248, 72
   \              0000F848    
   \   0000003C   F804242628F0       DC8 248, 4, 36, 38, 40, 240, 44, 34, 128, 0
   \              2C228000    
   \   00000046   00101F127F89       DC8 0, 16, 31, 18, 127, 137, 65, 33, 29, 7
   \              41211D07    
   \   00000050   192141000000       DC8 25, 33, 65, 0, 0, 0, 128, 64, 160, 144
   \              8040A090    
   \   0000005A   8E8890A040C0       DC8 142, 136, 144, 160, 64, 192, 128, 0, 0, 1
   \              80000001    
   \   00000064   007E44444444       DC8 0, 126, 68, 68, 68, 68, 68, 60, 1, 0
   \              443C0100    
   \   0000006E   000000202020       DC8 0, 0, 0, 32, 32, 32, 32, 32, 254, 160
   \              2020FEA0    
   \   00000078   202020202000       DC8 32, 32, 32, 32, 32, 0, 0, 128, 64, 32
   \              00804020    
   \   00000082   100C03030418       DC8 16, 12, 3, 3, 4, 24, 48, 96, 64, 0
   \              30604000    
   \   0000008C   00E020A498A0       DC8 0, 224, 32, 164, 152, 160, 156, 168, 144, 168
   \              9CA890A8    
   \   00000096   A66020000000       DC8 166, 96, 32, 0, 0, 0, 8, 8, 8, 72
   \              08080848    
   \   000000A0   7C0A09080804       DC8 124, 10, 9, 8, 8, 4, 0, 0, 0, 32
   \              00000020    
   \   000000AA   381030D00AD4       DC8 56, 16, 48, 208, 10, 212, 48, 16, 16, 16
   \              30101010    
   \   000000B4   180000848485       DC8 24, 0, 0, 132, 132, 133, 71, 36, 20, 15
   \              4724140F    
   \   000000BE   142424440400       DC8 20, 36, 36, 68, 4, 0, 0, 64, 68, 204
   \              004044CC    
   \   000000C8   0000FC00F800       DC8 0, 0, 252, 0, 248, 0, 0, 254, 0, 0
   \              00FE0000    
   \   000000D2   0000007F2818       DC8 0, 0, 0, 127, 40, 24, 7, 0, 15, 0
   \              07000F00    
   \   000000DC   007F00000008       DC8 0, 127, 0, 0, 0, 8, 8, 8, 254, 168
   \              0808FEA8    
   \   000000E6   A8A8A8FC0808       DC8 168, 168, 168, 252, 8, 8, 8, 0, 0, 18
   \              08000012    
   \   000000F0   4A4653527E52       DC8 74, 70, 83, 82, 126, 82, 82, 77, 74, 74
   \              524D4A4A    
   \   000000FA   19000040FC40       DC8 25, 0, 0, 64, 252, 64, 64, 128, 248, 128
   \              4080F880    
   \   00000104   FE4020F00000       DC8 254, 64, 32, 240, 0, 0, 0, 32, 31, 16
   \              00201F10    
   \   0000010E   10087F404F40       DC8 16, 8, 127, 64, 79, 64, 68, 71, 120, 0
   \              44477800    
   \   00000118   00408460402C       DC8 0, 64, 132, 96, 64, 44, 212, 68, 252, 116
   \              D444FC74    
   \   00000122   CA4020000008       DC8 202, 64, 32, 0, 0, 8, 127, 4, 2, 255
   \              7F0402FF    
   \   0000012C   54547D547E03       DC8 84, 84, 125, 84, 126, 3, 1, 0, 0, 240
   \              010000F0    
   \   00000136   00FCE020108C       DC8 0, 252, 224, 32, 16, 140, 90, 168, 88, 140
   \              5AA8588C    
   \   00000140   8000001F080F       DC8 128, 0, 0, 31, 8, 15, 6, 1, 1, 34
   \              06010122    
   \   0000014A   2A7F2A251000       DC8 42, 127, 42, 37, 16, 0, 0, 48, 40, 166
   \              003028A6    
   \   00000154   7868A428FC88       DC8 120, 104, 164, 40, 252, 136, 136, 248, 0, 0
   \              88F80000    
   \   0000015E   000201007E52       DC8 0, 2, 1, 0, 126, 82, 83, 82, 83, 82
   \              53525352    
   \   00000168   7E0000000070       DC8 126, 0, 0, 0, 0, 112, 168, 164, 160, 232
   \              A8A4A0E8    
   \   00000172   30007C908888       DC8 48, 0, 124, 144, 136, 136, 96, 0, 0, 0
   \              60000000    
   \   0000017C   7F0A4A7F0000       DC8 127, 10, 74, 127, 0, 0, 126, 72, 68, 66
   \              7E484442    
   \   00000186   7000000808C8       DC8 112, 0, 0, 8, 8, 200, 56, 12, 202, 40
   \              380CCA28    
   \   00000190   080888080800       DC8 8, 8, 136, 8, 8, 0, 0, 8, 8, 8
   \              00080808    
   \   0000019A   09090F790909       DC8 9, 9, 15, 121, 9, 9, 8, 8, 8, 0
   \              08080800    
   \   000001A4   000020FE9020       DC8 0, 0, 32, 254, 144, 32, 24, 144, 110, 16
   \              18906E10    
   \   000001AE   103018000042       DC8 16, 48, 24, 0, 0, 66, 66, 127, 128, 129
   \              427F8081    
   \   000001B8   474931191721       DC8 71, 73, 49, 25, 23, 33, 64, 0, 64, 48
   \              40004030    
   \   000001C2   CE5048E898A8       DC8 206, 80, 72, 232, 152, 168, 168, 254, 168, 248
   \              A8FEA8F8    
   \   000001CC   100000027FA2       DC8 16, 0, 0, 2, 127, 162, 82, 36, 30, 41
   \              52241E29    
   \   000001D6   4A7F4A494400       DC8 74, 127, 74, 73, 68, 0, 0, 0, 72, 252
   \              000048FC    
   \   000001E0   4420807000FE       DC8 68, 32, 128, 112, 0, 254, 0, 32, 224, 0
   \              0020E000    
   \   000001EA   0804037F8181       DC8 8, 4, 3, 127, 129, 129, 65, 64, 32, 23
   \              41402017    
   \   000001F4   08070200           DC8 8, 7, 2, 0
    154          {  
    155            0x00,0x00,0x40,0x40,0x40,0xFC,0x00,0x00,0xFC,0x80,0x40,0x20,0x20,0x00,
    156            0x00,0x30,0x10,0x10,0x08,0x7F,0x00,0x00,0x7F,0x40,0x40,0x40,0x78,0x00,/*"北",0*/
    157            0x00,0x00,0x10,0xF0,0x50,0x50,0x4A,0x54,0x50,0x50,0xF0,0x08,0x08,0x00,
    158            0x00,0x40,0x20,0x13,0x0A,0x42,0xFE,0x02,0x02,0x0A,0x13,0x60,0x00,0x00,/*"京",1*/
    159            0x00,0x00,0xF8,0x48,0xF8,0x04,0x24,0x26,0x28,0xF0,0x2C,0x22,0x80,0x00,
    160            0x00,0x10,0x1F,0x12,0x7F,0x89,0x41,0x21,0x1D,0x07,0x19,0x21,0x41,0x00,/*"联",2*/
    161            0x00,0x00,0x80,0x40,0xA0,0x90,0x8E,0x88,0x90,0xA0,0x40,0xC0,0x80,0x00,
    162            0x00,0x01,0x00,0x7E,0x44,0x44,0x44,0x44,0x44,0x3C,0x01,0x00,0x00,0x00,/*"合",3*/
    163            0x00,0x20,0x20,0x20,0x20,0x20,0xFE,0xA0,0x20,0x20,0x20,0x20,0x20,0x00,
    164            0x00,0x80,0x40,0x20,0x10,0x0C,0x03,0x03,0x04,0x18,0x30,0x60,0x40,0x00,/*"大",4*/
    165            0x00,0xE0,0x20,0xA4,0x98,0xA0,0x9C,0xA8,0x90,0xA8,0xA6,0x60,0x20,0x00,
    166            0x00,0x00,0x08,0x08,0x08,0x48,0x7C,0x0A,0x09,0x08,0x08,0x04,0x00,0x00,/*"学",5*/
    167            0x00,0x20,0x38,0x10,0x30,0xD0,0x0A,0xD4,0x30,0x10,0x10,0x10,0x18,0x00,
    168            0x00,0x84,0x84,0x85,0x47,0x24,0x14,0x0F,0x14,0x24,0x24,0x44,0x04,0x00,/*"实",0*/
    169            0x00,0x40,0x44,0xCC,0x00,0x00,0xFC,0x00,0xF8,0x00,0x00,0xFE,0x00,0x00,
    170            0x00,0x00,0x00,0x7F,0x28,0x18,0x07,0x00,0x0F,0x00,0x00,0x7F,0x00,0x00,/*"训",1*/
    171            0x00,0x08,0x08,0x08,0xFE,0xA8,0xA8,0xA8,0xA8,0xFC,0x08,0x08,0x08,0x00,
    172            0x00,0x12,0x4A,0x46,0x53,0x52,0x7E,0x52,0x52,0x4D,0x4A,0x4A,0x19,0x00,/*"基",2*/
    173            0x00,0x40,0xFC,0x40,0x40,0x80,0xF8,0x80,0xFE,0x40,0x20,0xF0,0x00,0x00,
    174            0x00,0x20,0x1F,0x10,0x10,0x08,0x7F,0x40,0x4F,0x40,0x44,0x47,0x78,0x00,/*"地",3*/
    175            0x00,0x40,0x84,0x60,0x40,0x2C,0xD4,0x44,0xFC,0x74,0xCA,0x40,0x20,0x00,
    176            0x00,0x08,0x7F,0x04,0x02,0xFF,0x54,0x54,0x7D,0x54,0x7E,0x03,0x01,0x00,/*"潘",4*/
    177            0x00,0xF0,0x00,0xFC,0xE0,0x20,0x10,0x8C,0x5A,0xA8,0x58,0x8C,0x80,0x00,
    178            0x00,0x1F,0x08,0x0F,0x06,0x01,0x01,0x22,0x2A,0x7F,0x2A,0x25,0x10,0x00,/*"峰",5*/
    179            0x00,0x30,0x28,0xA6,0x78,0x68,0xA4,0x28,0xFC,0x88,0x88,0xF8,0x00,0x00,
    180            0x00,0x02,0x01,0x00,0x7E,0x52,0x53,0x52,0x53,0x52,0x7E,0x00,0x00,0x00,/*"智",6*/
    181            0x00,0x70,0xA8,0xA4,0xA0,0xE8,0x30,0x00,0x7C,0x90,0x88,0x88,0x60,0x00,
    182            0x00,0x00,0x7F,0x0A,0x4A,0x7F,0x00,0x00,0x7E,0x48,0x44,0x42,0x70,0x00,/*"能",7*/
    183            0x00,0x08,0x08,0xC8,0x38,0x0C,0xCA,0x28,0x08,0x08,0x88,0x08,0x08,0x00,
    184            0x00,0x08,0x08,0x08,0x09,0x09,0x0F,0x79,0x09,0x09,0x08,0x08,0x08,0x00,/*"车",8*/
    185            0x00,0x00,0x20,0xFE,0x90,0x20,0x18,0x90,0x6E,0x10,0x10,0x30,0x18,0x00,
    186            0x00,0x42,0x42,0x7F,0x80,0x81,0x47,0x49,0x31,0x19,0x17,0x21,0x40,0x00,/*"按",9*/
    187            0x40,0x30,0xCE,0x50,0x48,0xE8,0x98,0xA8,0xA8,0xFE,0xA8,0xF8,0x10,0x00,
    188            0x00,0x02,0x7F,0xA2,0x52,0x24,0x1E,0x29,0x4A,0x7F,0x4A,0x49,0x44,0x00,/*"键",10*/
    189            0x00,0x00,0x48,0xFC,0x44,0x20,0x80,0x70,0x00,0xFE,0x00,0x20,0xE0,0x00,
    190            0x08,0x04,0x03,0x7F,0x81,0x81,0x41,0x40,0x20,0x17,0x08,0x07,0x02,0x00,/*"秒",11*/  
    191          };
    192          
    193          

   \                                 In section .text, align 2, keep-with-next
    194          void LCD_WrCmd(unsigned char cmd)
    195          {
    196          	GPIOC_PDOR&=~A0_MASK;//命令
   \                     LCD_WrCmd:
   \   00000000   ....               LDR.N    R1,??DataTable6  ;; 0x400ff080
   \   00000002   0968               LDR      R1,[R1, #+0]
   \   00000004   31F48071           BICS     R1,R1,#0x100
   \   00000008   ....               LDR.N    R2,??DataTable6  ;; 0x400ff080
   \   0000000A   1160               STR      R1,[R2, #+0]
    197          	SPI0_PUSHR=pusher0+cmd;
   \   0000000C   ....               LDR.N    R1,??DataTable6_1
   \   0000000E   0968               LDR      R1,[R1, #+0]
   \   00000010   51FA80F0           UXTAB    R0,R1,R0
   \   00000014   ....               LDR.N    R1,??DataTable6_2  ;; 0x4002c034
   \   00000016   0860               STR      R0,[R1, #+0]
    198          	while((SPI0_SR&SPI_SR_TCF_MASK)==0);//等待传送完成
   \                     ??LCD_WrCmd_0:
   \   00000018   ....               LDR.N    R0,??DataTable6_3  ;; 0x4002c02c
   \   0000001A   0068               LDR      R0,[R0, #+0]
   \   0000001C   0028               CMP      R0,#+0
   \   0000001E   FBD5               BPL.N    ??LCD_WrCmd_0
    199          	SPI0_SR|=SPI_SR_TCF_MASK;//清除标志	
   \   00000020   ....               LDR.N    R0,??DataTable6_3  ;; 0x4002c02c
   \   00000022   0068               LDR      R0,[R0, #+0]
   \   00000024   50F00040           ORRS     R0,R0,#0x80000000
   \   00000028   ....               LDR.N    R1,??DataTable6_3  ;; 0x4002c02c
   \   0000002A   0860               STR      R0,[R1, #+0]
    200          }
   \   0000002C   7047               BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    201          void LCD_WrDat(unsigned char data)
    202          {
    203          	GPIOC_PDOR|=A0_MASK;//数据
   \                     LCD_WrDat:
   \   00000000   ....               LDR.N    R1,??DataTable6  ;; 0x400ff080
   \   00000002   0968               LDR      R1,[R1, #+0]
   \   00000004   4FF48072           MOV      R2,#+256
   \   00000008   1143               ORRS     R1,R2,R1
   \   0000000A   ....               LDR.N    R2,??DataTable6  ;; 0x400ff080
   \   0000000C   1160               STR      R1,[R2, #+0]
    204          	SPI0_PUSHR=pusher0+data;
   \   0000000E   ....               LDR.N    R1,??DataTable6_1
   \   00000010   0968               LDR      R1,[R1, #+0]
   \   00000012   51FA80F0           UXTAB    R0,R1,R0
   \   00000016   ....               LDR.N    R1,??DataTable6_2  ;; 0x4002c034
   \   00000018   0860               STR      R0,[R1, #+0]
    205          	while((SPI0_SR&SPI_SR_TCF_MASK)==0);//等待传送完成
   \                     ??LCD_WrDat_0:
   \   0000001A   ....               LDR.N    R0,??DataTable6_3  ;; 0x4002c02c
   \   0000001C   0068               LDR      R0,[R0, #+0]
   \   0000001E   0028               CMP      R0,#+0
   \   00000020   FBD5               BPL.N    ??LCD_WrDat_0
    206          	SPI0_SR|=SPI_SR_TCF_MASK;//清除标志	
   \   00000022   ....               LDR.N    R0,??DataTable6_3  ;; 0x4002c02c
   \   00000024   0068               LDR      R0,[R0, #+0]
   \   00000026   50F00040           ORRS     R0,R0,#0x80000000
   \   0000002A   ....               LDR.N    R1,??DataTable6_3  ;; 0x4002c02c
   \   0000002C   0860               STR      R0,[R1, #+0]
    207          }
   \   0000002E   7047               BX       LR               ;; return
    208          

   \                                 In section .text, align 2, keep-with-next
    209          void LCD_Set_Pos(uint8 x, uint8 y)
    210          { 
   \                     LCD_Set_Pos:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
    211            LCD_WrCmd(0xb0+y);
   \   00000004   B1F15000           SUBS     R0,R1,#+80
   \   00000008   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   ........           BL       LCD_WrCmd
    212            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   0000000E   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   2009               LSRS     R0,R4,#+4
   \   00000012   50F01000           ORRS     R0,R0,#0x10
   \   00000016   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   ........           BL       LCD_WrCmd
    213            LCD_WrCmd((x&0x0f)); 
   \   0000001C   14F00F00           ANDS     R0,R4,#0xF
   \   00000020   ........           BL       LCD_WrCmd
    214          }
   \   00000024   10BD               POP      {R4,PC}          ;; return
    215          
    216           

   \                                 In section .text, align 2, keep-with-next
    217          void LCD_Fill(uint8 bmp_data)
    218          {
   \                     LCD_Fill:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
    219          	uint8 y,x;
    220          	
    221          	for(y=0;y<8;y++)
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   08E0               B.N      ??LCD_Fill_0
    222          	{
    223          		LCD_WrCmd(0xb0+y);
    224          		LCD_WrCmd(0x01);
    225          		LCD_WrCmd(0x10);
    226          		for(x=0;x<X_WIDTH;x++)
    227          			LCD_WrDat(bmp_data);
   \                     ??LCD_Fill_1:
   \   00000008   2000               MOVS     R0,R4
   \   0000000A   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   ........           BL       LCD_WrDat
   \   00000010   761C               ADDS     R6,R6,#+1
   \                     ??LCD_Fill_2:
   \   00000012   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000014   802E               CMP      R6,#+128
   \   00000016   F7D3               BCC.N    ??LCD_Fill_1
   \   00000018   6D1C               ADDS     R5,R5,#+1
   \                     ??LCD_Fill_0:
   \   0000001A   EDB2               UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   082D               CMP      R5,#+8
   \   0000001E   0CD2               BCS.N    ??LCD_Fill_3
   \   00000020   B5F15000           SUBS     R0,R5,#+80
   \   00000024   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   ........           BL       LCD_WrCmd
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   ........           BL       LCD_WrCmd
   \   00000030   1020               MOVS     R0,#+16
   \   00000032   ........           BL       LCD_WrCmd
   \   00000036   0026               MOVS     R6,#+0
   \   00000038   EBE7               B.N      ??LCD_Fill_2
    228          	}
    229          }
   \                     ??LCD_Fill_3:
   \   0000003A   70BD               POP      {R4-R6,PC}       ;; return
    230          
    231          
    232          
    233          

   \                                 In section .text, align 2, keep-with-next
    234          void LCD_DLY_ms(uint16 ms)
    235          {                         
   \                     LCD_DLY_ms:
   \   00000000   07E0               B.N      ??LCD_DLY_ms_0
    236            uint16 a;
    237            while(ms)
    238            {
    239              a=1335;
   \                     ??LCD_DLY_ms_1:
   \   00000002   40F23751           MOVW     R1,#+1335
    240              while(a--);
   \                     ??LCD_DLY_ms_2:
   \   00000006   0A00               MOVS     R2,R1
   \   00000008   511E               SUBS     R1,R2,#+1
   \   0000000A   92B2               UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000C   002A               CMP      R2,#+0
   \   0000000E   FAD1               BNE.N    ??LCD_DLY_ms_2
    241              ms--;
   \   00000010   401E               SUBS     R0,R0,#+1
    242            }
   \                     ??LCD_DLY_ms_0:
   \   00000012   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000014   0028               CMP      R0,#+0
   \   00000016   F4D1               BNE.N    ??LCD_DLY_ms_1
    243            return;
   \   00000018   7047               BX       LR               ;; return
    244          }

   \                                 In section .text, align 2, keep-with-next
    245          void LCD_Init(void)        
    246          {
   \                     LCD_Init:
   \   00000000   80B5               PUSH     {R7,LR}
    247          	LCD_DLY_ms(350);
   \   00000002   4FF4AF70           MOV      R0,#+350
   \   00000006   ........           BL       LCD_DLY_ms
    248          		
    249          	GPIOC_PDOR&=~RESET_MASK;
   \   0000000A   ....               LDR.N    R0,??DataTable6  ;; 0x400ff080
   \   0000000C   0068               LDR      R0,[R0, #+0]
   \   0000000E   30F48060           BICS     R0,R0,#0x400
   \   00000012   ....               LDR.N    R1,??DataTable6  ;; 0x400ff080
   \   00000014   0860               STR      R0,[R1, #+0]
    250          	LCD_DLY_ms(900);
   \   00000016   4FF46170           MOV      R0,#+900
   \   0000001A   ........           BL       LCD_DLY_ms
    251          	GPIOC_PDOR|=RESET_MASK;
   \   0000001E   ....               LDR.N    R0,??DataTable6  ;; 0x400ff080
   \   00000020   0068               LDR      R0,[R0, #+0]
   \   00000022   50F48060           ORRS     R0,R0,#0x400
   \   00000026   ....               LDR.N    R1,??DataTable6  ;; 0x400ff080
   \   00000028   0860               STR      R0,[R1, #+0]
    252          	LCD_DLY_ms(600); 	
   \   0000002A   4FF41670           MOV      R0,#+600
   \   0000002E   ........           BL       LCD_DLY_ms
    253          	LCD_WrCmd(0xaf);	//0xaf  LCD On
   \   00000032   AF20               MOVS     R0,#+175
   \   00000034   ........           BL       LCD_WrCmd
    254          	LCD_DLY_ms(600);
   \   00000038   4FF41670           MOV      R0,#+600
   \   0000003C   ........           BL       LCD_DLY_ms
    255          	LCD_WrCmd(0x2F);	//0x2f  设置上电控制模式
   \   00000040   2F20               MOVS     R0,#+47
   \   00000042   ........           BL       LCD_WrCmd
    256          	LCD_DLY_ms(200);  	
   \   00000046   C820               MOVS     R0,#+200
   \   00000048   ........           BL       LCD_DLY_ms
    257          	LCD_WrCmd(0x81);	//0x81  电量设置模式（显示亮度）
   \   0000004C   8120               MOVS     R0,#+129
   \   0000004E   ........           BL       LCD_WrCmd
    258          	LCD_WrCmd(0x20);	//指令数据0x0000~0x003f  	
   \   00000052   2020               MOVS     R0,#+32
   \   00000054   ........           BL       LCD_WrCmd
    259          	LCD_WrCmd(0x24);	//0x24  V5内部电压调节电阻设置
   \   00000058   2420               MOVS     R0,#+36
   \   0000005A   ........           BL       LCD_WrCmd
    260          	LCD_WrCmd(0xa2);	//0xa2 5V,0xa1 3V3     LCD偏压设置   	
   \   0000005E   A220               MOVS     R0,#+162
   \   00000060   ........           BL       LCD_WrCmd
    261          	LCD_WrCmd(0xc8);	//0xc8 正常,0xc0 倒置  Com 扫描方式设置
   \   00000064   C820               MOVS     R0,#+200
   \   00000066   ........           BL       LCD_WrCmd
    262          	LCD_WrCmd(0xa0);	//0xa0 正常,0xa1 反向  Segment方向选择
   \   0000006A   A020               MOVS     R0,#+160
   \   0000006C   ........           BL       LCD_WrCmd
    263          	LCD_WrCmd(0xa4);	//0xa4  全屏点亮/变暗指令
   \   00000070   A420               MOVS     R0,#+164
   \   00000072   ........           BL       LCD_WrCmd
    264          	LCD_WrCmd(0xa6);	//0xa6  正向反向显示控制指令   	
   \   00000076   A620               MOVS     R0,#+166
   \   00000078   ........           BL       LCD_WrCmd
    265          	LCD_WrCmd(0xac);	//0xac  关闭静态指示器
   \   0000007C   AC20               MOVS     R0,#+172
   \   0000007E   ........           BL       LCD_WrCmd
    266          	LCD_WrCmd(0x00);	//指令数据    	
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   ........           BL       LCD_WrCmd
    267          	LCD_WrCmd(0x40);	//0x40	设置显示起始行对应RAM
   \   00000088   4020               MOVS     R0,#+64
   \   0000008A   ........           BL       LCD_WrCmd
    268          	LCD_Fill(0x00);  //初始清屏
   \   0000008E   0020               MOVS     R0,#+0
   \   00000090   ........           BL       LCD_Fill
    269          	LCD_Set_Pos(0,0); 	
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   0020               MOVS     R0,#+0
   \   00000098   ........           BL       LCD_Set_Pos
    270          }
   \   0000009C   01BD               POP      {R0,PC}          ;; return
    271          
    272          //==============================================================
    273          //函数名：LCD_P8x16chr(byte x,byte  y,byte ch)
    274          //功能描述：写入一个标准ASCII字符
    275          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符
    276          //返回：无
    277          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    278          void LCD_P8x16chr(uint8 x,uint8  y,uint8 ch) 
    279          {
   \                     LCD_P8x16chr:
   \   00000000   F8B5               PUSH     {R3-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
    280            uint8 i;
    281            uint8 c ;
    282            c=ch-32;  
   \   00000006   B2F12006           SUBS     R6,R2,#+32
    283            LCD_Set_Pos(x,y);
   \   0000000A   2900               MOVS     R1,R5
   \   0000000C   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000E   2000               MOVS     R0,R4
   \   00000010   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   ........           BL       LCD_Set_Pos
    284            GPIOC_PDOR|=A0_MASK;//数据
   \   00000016   ....               LDR.N    R0,??DataTable6  ;; 0x400ff080
   \   00000018   0068               LDR      R0,[R0, #+0]
   \   0000001A   4FF48071           MOV      R1,#+256
   \   0000001E   0843               ORRS     R0,R1,R0
   \   00000020   ....               LDR.N    R1,??DataTable6  ;; 0x400ff080
   \   00000022   0860               STR      R0,[R1, #+0]
    285            for(i=0;i<8;i++)//显示字符上半部分
   \   00000024   0027               MOVS     R7,#+0
   \   00000026   09E0               B.N      ??LCD_P8x16chr_0
    286            {
    287          	  LCD_WrDat(F8X16[c*16+i]); 	  
   \                     ??LCD_P8x16chr_1:
   \   00000028   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   3001               LSLS     R0,R6,#+4
   \   0000002C   50FA87F0           UXTAB    R0,R0,R7
   \   00000030   ........           ADR.W    R1,F8X16
   \   00000034   405C               LDRB     R0,[R0, R1]
   \   00000036   ........           BL       LCD_WrDat
    288            }  
   \   0000003A   7F1C               ADDS     R7,R7,#+1
   \                     ??LCD_P8x16chr_0:
   \   0000003C   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000003E   082F               CMP      R7,#+8
   \   00000040   F2D3               BCC.N    ??LCD_P8x16chr_1
    289            LCD_Set_Pos(x,y+1);    
   \   00000042   691C               ADDS     R1,R5,#+1
   \   00000044   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   2000               MOVS     R0,R4
   \   00000048   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   ........           BL       LCD_Set_Pos
    290            for(i=0;i<8;i++) //显示字符下半部分    
   \   0000004E   0027               MOVS     R7,#+0
   \   00000050   0AE0               B.N      ??LCD_P8x16chr_2
    291            	  LCD_WrDat(F8X16[c*16+i+8]); 
   \                     ??LCD_P8x16chr_3:
   \   00000052   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000054   3001               LSLS     R0,R6,#+4
   \   00000056   50FA87F0           UXTAB    R0,R0,R7
   \   0000005A   ........           ADR.W    R1,F8X16
   \   0000005E   4018               ADDS     R0,R0,R1
   \   00000060   007A               LDRB     R0,[R0, #+8]
   \   00000062   ........           BL       LCD_WrDat
   \   00000066   7F1C               ADDS     R7,R7,#+1
   \                     ??LCD_P8x16chr_2:
   \   00000068   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000006A   082F               CMP      R7,#+8
   \   0000006C   F1D3               BCC.N    ??LCD_P8x16chr_3
    292          }
   \   0000006E   F1BD               POP      {R0,R4-R7,PC}    ;; return
    293          
    294          //==============================================================
    295          //函数名：LCD_P8x16Str(byte x,byte y,byte *p)
    296          //功能描述：写入一组标准ASCII字符串
    297          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    298          //返回：无
    299          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    300          void LCD_P8x16Str(uint8 x,uint8 y,char *ch)
    301          {
   \                     LCD_P8x16Str:
   \   00000000   2DE9F843           PUSH     {R3-R9,LR}
   \   00000004   0400               MOVS     R4,R0
   \   00000006   0D00               MOVS     R5,R1
   \   00000008   1600               MOVS     R6,R2
    302          	uint8 c=0,i=0,j=0;
   \   0000000A   0027               MOVS     R7,#+0
   \   0000000C   5FF00008           MOVS     R8,#+0
   \   00000010   5FF00009           MOVS     R9,#+0
   \   00000014   13E0               B.N      ??LCD_P8x16Str_0
    303                  
    304            while (ch[j]!='\0')
    305            {    
    306              c =ch[j]-32;
    307              if(x>120){x=0;y++;}
    308              LCD_Set_Pos(x,y);    
    309            	for(i=0;i<8;i++)     
    310            	  LCD_WrDat(F8X16[c*16+i]);
    311            	LCD_Set_Pos(x,y+1);    
    312            	for(i=0;i<8;i++)     
    313            	  LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16Str_1:
   \   00000016   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000018   3801               LSLS     R0,R7,#+4
   \   0000001A   50FA88F0           UXTAB    R0,R0,R8
   \   0000001E   ........           ADR.W    R1,F8X16
   \   00000022   4018               ADDS     R0,R0,R1
   \   00000024   007A               LDRB     R0,[R0, #+8]
   \   00000026   ........           BL       LCD_WrDat
   \   0000002A   18F10108           ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_2:
   \   0000002E   5FFA88F8           UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000032   B8F1080F           CMP      R8,#+8
   \   00000036   EED3               BCC.N    ??LCD_P8x16Str_1
    314            	x+=8;
   \   00000038   0834               ADDS     R4,R4,#+8
    315            	j++;
   \   0000003A   19F10109           ADDS     R9,R9,#+1
   \                     ??LCD_P8x16Str_0:
   \   0000003E   5FFA89F9           UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000042   19F80600           LDRB     R0,[R9, R6]
   \   00000046   0028               CMP      R0,#+0
   \   00000048   2CD0               BEQ.N    ??LCD_P8x16Str_3
   \   0000004A   5FFA89F9           UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004E   19F80600           LDRB     R0,[R9, R6]
   \   00000052   B0F12007           SUBS     R7,R0,#+32
   \   00000056   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   792C               CMP      R4,#+121
   \   0000005A   01D3               BCC.N    ??LCD_P8x16Str_4
   \   0000005C   0024               MOVS     R4,#+0
   \   0000005E   6D1C               ADDS     R5,R5,#+1
   \                     ??LCD_P8x16Str_4:
   \   00000060   2900               MOVS     R1,R5
   \   00000062   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000064   2000               MOVS     R0,R4
   \   00000066   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   ........           BL       LCD_Set_Pos
   \   0000006C   5FF00008           MOVS     R8,#+0
   \   00000070   0AE0               B.N      ??LCD_P8x16Str_5
   \                     ??LCD_P8x16Str_6:
   \   00000072   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000074   3801               LSLS     R0,R7,#+4
   \   00000076   50FA88F0           UXTAB    R0,R0,R8
   \   0000007A   ........           ADR.W    R1,F8X16
   \   0000007E   405C               LDRB     R0,[R0, R1]
   \   00000080   ........           BL       LCD_WrDat
   \   00000084   18F10108           ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_5:
   \   00000088   5FFA88F8           UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000008C   B8F1080F           CMP      R8,#+8
   \   00000090   EFD3               BCC.N    ??LCD_P8x16Str_6
   \   00000092   691C               ADDS     R1,R5,#+1
   \   00000094   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000096   2000               MOVS     R0,R4
   \   00000098   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009A   ........           BL       LCD_Set_Pos
   \   0000009E   5FF00008           MOVS     R8,#+0
   \   000000A2   C4E7               B.N      ??LCD_P8x16Str_2
    316            }
    317          }
   \                     ??LCD_P8x16Str_3:
   \   000000A4   BDE8F183           POP      {R0,R4-R9,PC}    ;; return
    318          //输出汉字字符串

   \                                 In section .text, align 2, keep-with-next
    319          void LCD_P14x16Str(uint8 x,uint8 y,uint8 ch[])
    320          {
   \                     LCD_P14x16Str:
   \   00000000   2DE9F843           PUSH     {R3-R9,LR}
   \   00000004   0600               MOVS     R6,R0
   \   00000006   0C00               MOVS     R4,R1
   \   00000008   1500               MOVS     R5,R2
    321          	uint8 wm=0,ii = 0;
   \   0000000A   5FF00009           MOVS     R9,#+0
   \   0000000E   0027               MOVS     R7,#+0
    322          	uint16 adder=1; 
   \   00000010   5FF00108           MOVS     R8,#+1
   \   00000014   0BE0               B.N      ??LCD_P14x16Str_0
    323          	
    324          	while(ch[ii] != '\0')
    325          	{
    326            	wm = 0;
    327            	adder = 1;
    328            	while(F14x16_Idx[wm] > 127)
    329            	{
    330            		if(F14x16_Idx[wm] == ch[ii])
    331            		{
    332            			if(F14x16_Idx[wm + 1] == ch[ii + 1])
    333            			{
    334            				adder = wm * 14;
    335            				break;
    336            			}
    337            		}
    338            		wm += 2;			
    339            	}
    340            	if(x>118){x=0;y++;}
    341            	LCD_Set_Pos(x , y); 
    342            	if(adder != 1)// 显示汉字					
    343            	{
    344            		LCD_Set_Pos(x , y);
    345            		for(wm = 0;wm < 14;wm++)               
    346            		{
    347            			LCD_WrDat(F14x16[adder]);	
    348            			adder += 1;
    349            		}      
    350            		LCD_Set_Pos(x,y + 1); 
    351            		for(wm = 0;wm < 14;wm++)          
    352            		{
    353            			LCD_WrDat(F14x16[adder]);
    354            			adder += 1;
    355            		}   		
    356            	}
    357            	else			  //显示空白字符			
    358            	{
    359            		ii += 1;
    360                LCD_Set_Pos(x,y);
    361            		for(wm = 0;wm < 16;wm++)
    362            		{
    363            				LCD_WrDat(0);
    364            		}
    365            		LCD_Set_Pos(x,y + 1);
    366            		for(wm = 0;wm < 16;wm++)
    367            		{   		
    368            				LCD_WrDat(0);	
   \                     ??LCD_P14x16Str_1:
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   ........           BL       LCD_WrDat
    369            		}
   \   0000001C   19F10109           ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_2:
   \   00000020   5FFA89F9           UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000024   B9F1100F           CMP      R9,#+16
   \   00000028   F5D3               BCC.N    ??LCD_P14x16Str_1
    370            	}
    371            	x += 14;
   \                     ??LCD_P14x16Str_3:
   \   0000002A   0E36               ADDS     R6,R6,#+14
    372            	ii += 2;
   \   0000002C   BF1C               ADDS     R7,R7,#+2
   \                     ??LCD_P14x16Str_0:
   \   0000002E   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000030   785D               LDRB     R0,[R7, R5]
   \   00000032   0028               CMP      R0,#+0
   \   00000034   00F08B80           BEQ.W    ??LCD_P14x16Str_4
   \   00000038   5FF00009           MOVS     R9,#+0
   \   0000003C   5FF00108           MOVS     R8,#+1
   \   00000040   01E0               B.N      ??LCD_P14x16Str_5
   \                     ??LCD_P14x16Str_6:
   \   00000042   19F10209           ADDS     R9,R9,#+2
   \                     ??LCD_P14x16Str_5:
   \   00000046   5FFA89F9           UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004A   ........           ADR.W    R0,F14x16_Idx
   \   0000004E   19F80000           LDRB     R0,[R9, R0]
   \   00000052   8028               CMP      R0,#+128
   \   00000054   1AD3               BCC.N    ??LCD_P14x16Str_7
   \   00000056   5FFA89F9           UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000005A   ........           ADR.W    R0,F14x16_Idx
   \   0000005E   19F80000           LDRB     R0,[R9, R0]
   \   00000062   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000064   795D               LDRB     R1,[R7, R5]
   \   00000066   8842               CMP      R0,R1
   \   00000068   EBD1               BNE.N    ??LCD_P14x16Str_6
   \   0000006A   5FFA89F9           UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000006E   ........           ADR.W    R0,F14x16_Idx
   \   00000072   19EB0000           ADDS     R0,R9,R0
   \   00000076   4078               LDRB     R0,[R0, #+1]
   \   00000078   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000007A   7919               ADDS     R1,R7,R5
   \   0000007C   4978               LDRB     R1,[R1, #+1]
   \   0000007E   8842               CMP      R0,R1
   \   00000080   DFD1               BNE.N    ??LCD_P14x16Str_6
   \   00000082   5FFA89F9           UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000086   0E20               MOVS     R0,#+14
   \   00000088   00FB09F8           MUL      R8,R0,R9
   \                     ??LCD_P14x16Str_7:
   \   0000008C   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000008E   772E               CMP      R6,#+119
   \   00000090   01D3               BCC.N    ??LCD_P14x16Str_8
   \   00000092   0026               MOVS     R6,#+0
   \   00000094   641C               ADDS     R4,R4,#+1
   \                     ??LCD_P14x16Str_8:
   \   00000096   2100               MOVS     R1,R4
   \   00000098   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009A   3000               MOVS     R0,R6
   \   0000009C   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009E   ........           BL       LCD_Set_Pos
   \   000000A2   1FFA88F8           UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000A6   B8F1010F           CMP      R8,#+1
   \   000000AA   33D0               BEQ.N    ??LCD_P14x16Str_9
   \   000000AC   2100               MOVS     R1,R4
   \   000000AE   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B0   3000               MOVS     R0,R6
   \   000000B2   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B4   ........           BL       LCD_Set_Pos
   \   000000B8   5FF00009           MOVS     R9,#+0
   \   000000BC   0BE0               B.N      ??LCD_P14x16Str_10
   \                     ??LCD_P14x16Str_11:
   \   000000BE   1FFA88F8           UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000C2   ........           ADR.W    R0,F14x16
   \   000000C6   18F80000           LDRB     R0,[R8, R0]
   \   000000CA   ........           BL       LCD_WrDat
   \   000000CE   18F10108           ADDS     R8,R8,#+1
   \   000000D2   19F10109           ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_10:
   \   000000D6   5FFA89F9           UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000DA   B9F10E0F           CMP      R9,#+14
   \   000000DE   EED3               BCC.N    ??LCD_P14x16Str_11
   \   000000E0   611C               ADDS     R1,R4,#+1
   \   000000E2   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E4   3000               MOVS     R0,R6
   \   000000E6   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E8   ........           BL       LCD_Set_Pos
   \   000000EC   5FF00009           MOVS     R9,#+0
   \                     ??LCD_P14x16Str_12:
   \   000000F0   5FFA89F9           UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000F4   B9F10E0F           CMP      R9,#+14
   \   000000F8   97D2               BCS.N    ??LCD_P14x16Str_3
   \   000000FA   1FFA88F8           UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000000FE   ........           ADR.W    R0,F14x16
   \   00000102   18F80000           LDRB     R0,[R8, R0]
   \   00000106   ........           BL       LCD_WrDat
   \   0000010A   18F10108           ADDS     R8,R8,#+1
   \   0000010E   19F10109           ADDS     R9,R9,#+1
   \   00000112   EDE7               B.N      ??LCD_P14x16Str_12
   \                     ??LCD_P14x16Str_9:
   \   00000114   7F1C               ADDS     R7,R7,#+1
   \   00000116   2100               MOVS     R1,R4
   \   00000118   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000011A   3000               MOVS     R0,R6
   \   0000011C   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011E   ........           BL       LCD_Set_Pos
   \   00000122   5FF00009           MOVS     R9,#+0
   \   00000126   04E0               B.N      ??LCD_P14x16Str_13
   \                     ??LCD_P14x16Str_14:
   \   00000128   0020               MOVS     R0,#+0
   \   0000012A   ........           BL       LCD_WrDat
   \   0000012E   19F10109           ADDS     R9,R9,#+1
   \                     ??LCD_P14x16Str_13:
   \   00000132   5FFA89F9           UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000136   B9F1100F           CMP      R9,#+16
   \   0000013A   F5D3               BCC.N    ??LCD_P14x16Str_14
   \   0000013C   611C               ADDS     R1,R4,#+1
   \   0000013E   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000140   3000               MOVS     R0,R6
   \   00000142   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000144   ........           BL       LCD_Set_Pos
   \   00000148   5FF00009           MOVS     R9,#+0
   \   0000014C   68E7               B.N      ??LCD_P14x16Str_2
    373          	}
    374          }
   \                     ??LCD_P14x16Str_4:
   \   0000014E   BDE8F183           POP      {R0,R4-R9,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    375          void displaypara(int val,unsigned char row,unsigned char x) 
    376          {
   \                     displaypara:
   \   00000000   30B5               PUSH     {R4,R5,LR}
   \   00000002   83B0               SUB      SP,SP,#+12
   \   00000004   0C00               MOVS     R4,R1
   \   00000006   1500               MOVS     R5,R2
    377            char n[5];
    378            if(val<0)//负数 
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   04D5               BPL.N    ??displaypara_0
    379            {
    380              n[4]='-'-48;
   \   0000000C   FD21               MOVS     R1,#+253
   \   0000000E   8DF80410           STRB     R1,[SP, #+4]
    381              val=-val;
   \   00000012   4042               RSBS     R0,R0,#+0
   \   00000014   05E0               B.N      ??displaypara_1
    382            } 
    383            else
    384            n[4]=(char)(val/10000); 
   \                     ??displaypara_0:
   \   00000016   42F21071           MOVW     R1,#+10000
   \   0000001A   90FBF1F1           SDIV     R1,R0,R1
   \   0000001E   8DF80410           STRB     R1,[SP, #+4]
    385            n[0]=(char)(val%10);
   \                     ??displaypara_1:
   \   00000022   0A21               MOVS     R1,#+10
   \   00000024   90FBF1F2           SDIV     R2,R0,R1
   \   00000028   01FB1201           MLS      R1,R1,R2,R0
   \   0000002C   8DF80010           STRB     R1,[SP, #+0]
    386            n[1]=(char)((val/10)%10);
   \   00000030   0A21               MOVS     R1,#+10
   \   00000032   90FBF1F1           SDIV     R1,R0,R1
   \   00000036   0A22               MOVS     R2,#+10
   \   00000038   91FBF2F3           SDIV     R3,R1,R2
   \   0000003C   02FB1311           MLS      R1,R2,R3,R1
   \   00000040   8DF80110           STRB     R1,[SP, #+1]
    387            n[2]=(char)((val/100)%10);
   \   00000044   6421               MOVS     R1,#+100
   \   00000046   90FBF1F1           SDIV     R1,R0,R1
   \   0000004A   0A22               MOVS     R2,#+10
   \   0000004C   91FBF2F3           SDIV     R3,R1,R2
   \   00000050   02FB1311           MLS      R1,R2,R3,R1
   \   00000054   8DF80210           STRB     R1,[SP, #+2]
    388            n[3]=(char)((val/1000)%10);
   \   00000058   4FF47A71           MOV      R1,#+1000
   \   0000005C   90FBF1F0           SDIV     R0,R0,R1
   \   00000060   0A21               MOVS     R1,#+10
   \   00000062   90FBF1F2           SDIV     R2,R0,R1
   \   00000066   01FB1200           MLS      R0,R1,R2,R0
   \   0000006A   8DF80300           STRB     R0,[SP, #+3]
    389              
    390            LCD_P8x16chr(x,row,n[4]+48);
   \   0000006E   9DF80400           LDRB     R0,[SP, #+4]
   \   00000072   10F13002           ADDS     R2,R0,#+48
   \   00000076   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000078   2100               MOVS     R1,R4
   \   0000007A   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007C   2800               MOVS     R0,R5
   \   0000007E   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000080   ........           BL       LCD_P8x16chr
    391            LCD_P8x16chr(x+8,row,n[3]+48);
   \   00000084   9DF80300           LDRB     R0,[SP, #+3]
   \   00000088   10F13002           ADDS     R2,R0,#+48
   \   0000008C   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000008E   2100               MOVS     R1,R4
   \   00000090   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000092   15F10800           ADDS     R0,R5,#+8
   \   00000096   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   ........           BL       LCD_P8x16chr
    392            LCD_P8x16chr(x+16,row,n[2]+48);
   \   0000009C   9DF80200           LDRB     R0,[SP, #+2]
   \   000000A0   10F13002           ADDS     R2,R0,#+48
   \   000000A4   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000A6   2100               MOVS     R1,R4
   \   000000A8   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AA   15F11000           ADDS     R0,R5,#+16
   \   000000AE   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B0   ........           BL       LCD_P8x16chr
    393            LCD_P8x16chr(x+24,row,n[1]+48);
   \   000000B4   9DF80100           LDRB     R0,[SP, #+1]
   \   000000B8   10F13002           ADDS     R2,R0,#+48
   \   000000BC   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000BE   2100               MOVS     R1,R4
   \   000000C0   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C2   15F11800           ADDS     R0,R5,#+24
   \   000000C6   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C8   ........           BL       LCD_P8x16chr
    394            LCD_P8x16chr(x+32,row,n[0]+48);
   \   000000CC   9DF80000           LDRB     R0,[SP, #+0]
   \   000000D0   10F13002           ADDS     R2,R0,#+48
   \   000000D4   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000D6   2100               MOVS     R1,R4
   \   000000D8   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000DA   15F12000           ADDS     R0,R5,#+32
   \   000000DE   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E0   ........           BL       LCD_P8x16chr
    395          }
   \   000000E4   37BD               POP      {R0-R2,R4,R5,PC}  ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   80F00F40           DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   ........           DC32     pusher0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   34C00240           DC32     0x4002c034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   2CC00240           DC32     0x4002c02c

   Maximum stack usage in bytes:

     Function      .cstack
     --------      -------
     LCD_DLY_ms         0
     LCD_Fill          16
     LCD_Init           8
     LCD_P14x16Str     32
     LCD_P8x16Str      32
     LCD_P8x16chr      24
     LCD_Set_Pos        8
     LCD_WrCmd          0
     LCD_WrDat          0
     displaypara       24


   Section sizes:

     Function/Label Bytes
     -------------- -----
     pusher0           4
     F8X16          1552
     F14x16_Idx       40
     F14x16          504
     LCD_WrCmd        46
     LCD_WrDat        48
     LCD_Set_Pos      38
     LCD_Fill         60
     LCD_DLY_ms       26
     LCD_Init        158
     LCD_P8x16chr    112
     LCD_P8x16Str    168
     LCD_P14x16Str   338
     displaypara     230
     ??DataTable6      4
     ??DataTable6_1    4
     ??DataTable6_2    4
     ??DataTable6_3    4

 
     4 bytes in section .data
 3 336 bytes in section .text
 
 3 336 bytes of CODE memory
     4 bytes of DATA memory

Errors: none
Warnings: 1
