###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     22/Aug/2013  15:19:18 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Administrator\Desktop\哈尔滨比赛程序\0822\src\m #
#                    ain.c                                                    #
#    Command line =  C:\Users\Administrator\Desktop\哈尔滨比赛程序\0822\src\m #
#                    ain.c -D IAR -D TWR_K60N512 -lCN                         #
#                    C:\Users\Administrator\Desktop\哈尔滨比赛程序\0822\bin\F #
#                    lash\List\ -lB C:\Users\Administrator\Desktop\哈尔滨比赛 #
#                    程序\0822\bin\Flash\List\ -o                             #
#                    C:\Users\Administrator\Desktop\哈尔滨比赛程序\0822\bin\F #
#                    lash\Obj\ --no_cse --no_unroll --no_inline               #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config                              #
#                    E:\学习程序\arm\INC\c\DLib_Config_Normal.h -I            #
#                    C:\Users\Administrator\Desktop\哈尔滨比赛程序\0822\src\S #
#                    ources\H\ -I C:\Users\Administrator\Desktop\哈尔滨比赛程 #
#                    序\0822\src\Sources\H\Component_H\ -I                    #
#                    C:\Users\Administrator\Desktop\哈尔滨比赛程序\0822\src\S #
#                    ources\H\Frame_H\ -Ol --use_c++_inline                   #
#    List file    =  C:\Users\Administrator\Desktop\哈尔滨比赛程序\0822\bin\F #
#                    lash\List\main.lst                                       #
#    Object file  =  C:\Users\Administrator\Desktop\哈尔滨比赛程序\0822\bin\F #
#                    lash\Obj\main.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\哈尔滨比赛程序\0822\src\main.c
      1          //使用B0~B7采集数字摄像头OV7620 8位灰度输入
      2          //A24引脚设置为GPIO模式，下降沿中断,场中断
      3          //B10引脚设置为GPIO模式，上升沿中断,行中断
      4          //B11引脚设置为GPIO模式，像素同步脉冲pclk，4分频后，上升沿触发DMA请求
      5          //共采集H行，每行V个点，dma传送到video数组
      6          //本代码仅供个人学习使用，请勿用于其他用途
      7          //舵机5V电压250Hz    电机10KHz  3.3V   摄像头5V供电 
      8          
      9          /********************************************************/
     10                  //给某个引脚设置高低电平的方法
     11                  //PORTD_PCR10=PORT_PCR_MUX(1);                 选择GPIO模式
     12                  //GPIOD_PDDR=GPIO_PDDR_PDD(GPIO_PIN(10));      选择输出模式
     13                  //GPIOD_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(10));  高电平
     14                  //GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(14));  低电平
     15                  /********************************************************/
     16          #include <stdio.h>
     17          #include "includes.h"
     18          #include "MK60N512VMD100.h"
     19          #include "uart.h"
     20          #include "keyboard.h"

   \                                 In section .data, align 4
   \   __absolute uint8 KeyCode[16]
   \                     KeyCode:
   \   00000000   0x40 0x41          DC8 64, 65, 66, 67, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91
   \              0x42 0x43    
   \              0x48 0x49    
   \              0x4A 0x4B    
   \              0x50 0x51    
   \              0x52 0x53    
   \              0x58 0x59    
   \              0x5A 0x5B    

   \                                 In section .data, align 1
   \   __absolute uint8 KeyValue
   \                     KeyValue:
   \   00000000   0x32               DC8 50

   \                                 In section .bss, align 1
   \   __absolute uint8 GetKeyValue
   \                     GetKeyValue:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void Delay(unsigned int)
   \                     Delay:
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0xE000             B.N      ??Delay_0
   \                     ??Delay_1:
   \   00000004   0x1C49             ADDS     R1,R1,#+1
   \                     ??Delay_0:
   \   00000006   0xEBB1 0x0F40      CMP      R1,R0, LSL #+1
   \   0000000A   0xD3FB             BCC.N    ??Delay_1
   \   0000000C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void CH451_WriteCommand(uint32)
   \                     CH451_WriteCommand:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x250C             MOVS     R5,#+12
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x2102             MOVS     R1,#+2
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   0000000E   0x.... 0x....      BL       gpio_ctrl
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x0005             MOVS     R5,R0
   \   00000016   0xE014             B.N      ??CH451_WriteCommand_0
   \                     ??CH451_WriteCommand_1:
   \   00000018   0xF014 0x0201      ANDS     R2,R4,#0x1
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000022   0x.... 0x....      BL       gpio_ctrl
   \   00000026   0x2200             MOVS     R2,#+0
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   0000002E   0x.... 0x....      BL       gpio_ctrl
   \   00000032   0x0864             LSRS     R4,R4,#+1
   \   00000034   0x2201             MOVS     R2,#+1
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   0000003C   0x.... 0x....      BL       gpio_ctrl
   \   00000040   0x1C6D             ADDS     R5,R5,#+1
   \                     ??CH451_WriteCommand_0:
   \   00000042   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000044   0x2D0C             CMP      R5,#+12
   \   00000046   0xD3E7             BCC.N    ??CH451_WriteCommand_1
   \   00000048   0x2201             MOVS     R2,#+1
   \   0000004A   0x2102             MOVS     R1,#+2
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000050   0x.... 0x....      BL       gpio_ctrl
   \   00000054   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void CH451_GetKeyValue(void)
   \                     CH451_GetKeyValue:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x2507             MOVS     R5,#+7
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable21_1
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x7001             STRB     R1,[R0, #+0]
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x2102             MOVS     R1,#+2
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000014   0x.... 0x....      BL       gpio_ctrl
   \   00000018   0x2400             MOVS     R4,#+0
   \   0000001A   0xE016             B.N      ??CH451_GetKeyValue_0
   \                     ??CH451_GetKeyValue_1:
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0xF015 0x0201      ANDS     R2,R5,#0x1
   \   00000022   0x2101             MOVS     R1,#+1
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000028   0x.... 0x....      BL       gpio_ctrl
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000034   0x.... 0x....      BL       gpio_ctrl
   \   00000038   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003A   0x086D             LSRS     R5,R5,#+1
   \   0000003C   0x2201             MOVS     R2,#+1
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000044   0x.... 0x....      BL       gpio_ctrl
   \   00000048   0x1C64             ADDS     R4,R4,#+1
   \                     ??CH451_GetKeyValue_0:
   \   0000004A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004C   0x2C04             CMP      R4,#+4
   \   0000004E   0xD3E5             BCC.N    ??CH451_GetKeyValue_1
   \   00000050   0x2201             MOVS     R2,#+1
   \   00000052   0x2102             MOVS     R1,#+2
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000058   0x.... 0x....      BL       gpio_ctrl
   \   0000005C   0x2400             MOVS     R4,#+0
   \   0000005E   0xE01F             B.N      ??CH451_GetKeyValue_2
   \                     ??CH451_GetKeyValue_3:
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable21_1
   \   00000064   0x7800             LDRB     R0,[R0, #+0]
   \   00000066   0x0040             LSLS     R0,R0,#+1
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable21_1
   \   0000006C   0x7008             STRB     R0,[R1, #+0]
   \   0000006E   0x2103             MOVS     R1,#+3
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000074   0x.... 0x....      BL       gpio_Get
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable21_1
   \   0000007C   0x7809             LDRB     R1,[R1, #+0]
   \   0000007E   0x4308             ORRS     R0,R0,R1
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable21_1
   \   00000084   0x7008             STRB     R0,[R1, #+0]
   \   00000086   0x2201             MOVS     R2,#+1
   \   00000088   0x2100             MOVS     R1,#+0
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   0000008E   0x.... 0x....      BL       gpio_ctrl
   \   00000092   0x2200             MOVS     R2,#+0
   \   00000094   0x2100             MOVS     R1,#+0
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   0000009A   0x.... 0x....      BL       gpio_ctrl
   \   0000009E   0x1C64             ADDS     R4,R4,#+1
   \                     ??CH451_GetKeyValue_2:
   \   000000A0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A2   0x2C07             CMP      R4,#+7
   \   000000A4   0xD3DC             BCC.N    ??CH451_GetKeyValue_3
   \   000000A6   0x2400             MOVS     R4,#+0
   \   000000A8   0xE000             B.N      ??CH451_GetKeyValue_4
   \                     ??CH451_GetKeyValue_5:
   \   000000AA   0x1C64             ADDS     R4,R4,#+1
   \                     ??CH451_GetKeyValue_4:
   \   000000AC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000AE   0x2C10             CMP      R4,#+16
   \   000000B0   0xD20B             BCS.N    ??CH451_GetKeyValue_6
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable21_1
   \   000000B6   0x7800             LDRB     R0,[R0, #+0]
   \   000000B8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable21_2
   \   000000BE   0x5C61             LDRB     R1,[R4, R1]
   \   000000C0   0x4288             CMP      R0,R1
   \   000000C2   0xD1F2             BNE.N    ??CH451_GetKeyValue_5
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   000000C8   0x7004             STRB     R4,[R0, #+0]
   \                     ??CH451_GetKeyValue_6:
   \   000000CA   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void CH451_ini(void)
   \                     CH451_ini:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   0000000A   0x.... 0x....      BL       gpio_ctrl
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0x2101             MOVS     R1,#+1
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000016   0x.... 0x....      BL       gpio_ctrl
   \   0000001A   0x2201             MOVS     R2,#+1
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000022   0x.... 0x....      BL       gpio_ctrl
   \   00000026   0xF240 0x2001      MOVW     R0,#+513
   \   0000002A   0x.... 0x....      BL       CH451_WriteCommand
   \   0000002E   0xF240 0x4003      MOVW     R0,#+1027
   \   00000032   0x.... 0x....      BL       CH451_WriteCommand
   \   00000036   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void JIANPAN_ini(void)
   \                     JIANPAN_ini:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable21_4  ;; 0x40049004
   \   00000006   0xF44F 0x7180      MOV      R1,#+256
   \   0000000A   0x6001             STR      R1,[R0, #+0]
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable21_5  ;; 0x40049008
   \   00000010   0xF44F 0x7180      MOV      R1,#+256
   \   00000014   0x6001             STR      R1,[R0, #+0]
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable21_6  ;; 0x4004900c
   \   0000001A   0xF44F 0x7180      MOV      R1,#+256
   \   0000001E   0x6001             STR      R1,[R0, #+0]
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable21_7  ;; 0x40049010
   \   00000024   0xF44F 0x7180      MOV      R1,#+256
   \   00000028   0x6001             STR      R1,[R0, #+0]
   \   0000002A   0x2301             MOVS     R3,#+1
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000034   0x.... 0x....      BL       gpio_init
   \   00000038   0x2301             MOVS     R3,#+1
   \   0000003A   0x2201             MOVS     R2,#+1
   \   0000003C   0x2101             MOVS     R1,#+1
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000042   0x.... 0x....      BL       gpio_init
   \   00000046   0x2301             MOVS     R3,#+1
   \   00000048   0x2201             MOVS     R2,#+1
   \   0000004A   0x2102             MOVS     R1,#+2
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   00000050   0x.... 0x....      BL       gpio_init
   \   00000054   0x2301             MOVS     R3,#+1
   \   00000056   0x2200             MOVS     R2,#+0
   \   00000058   0x2103             MOVS     R1,#+3
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable21  ;; 0x400ff000
   \   0000005E   0x.... 0x....      BL       gpio_init
   \   00000062   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void print_d(int)
   \                     print_d:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   \   0000000C   0x200A             MOVS     R0,#+10
   \   0000000E   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000012   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   0000001E   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000022   0x210A             MOVS     R1,#+10
   \   00000024   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000028   0x9001             STR      R0,[SP, #+4]
   \   0000002A   0x9800             LDR      R0,[SP, #+0]
   \   0000002C   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   00000030   0x.... 0x....      BL       CH451_WriteCommand
   \   00000034   0x9801             LDR      R0,[SP, #+4]
   \   00000036   0xF450 0x6010      ORRS     R0,R0,#0x900
   \   0000003A   0x.... 0x....      BL       CH451_WriteCommand
   \   0000003E   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void print_d1(int)
   \                     print_d1:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   \   0000000C   0x200A             MOVS     R0,#+10
   \   0000000E   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000012   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   0000001E   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000022   0x210A             MOVS     R1,#+10
   \   00000024   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000028   0x9001             STR      R0,[SP, #+4]
   \   0000002A   0x9800             LDR      R0,[SP, #+0]
   \   0000002C   0xF450 0x6020      ORRS     R0,R0,#0xA00
   \   00000030   0x.... 0x....      BL       CH451_WriteCommand
   \   00000034   0x9801             LDR      R0,[SP, #+4]
   \   00000036   0xF450 0x6030      ORRS     R0,R0,#0xB00
   \   0000003A   0x.... 0x....      BL       CH451_WriteCommand
   \   0000003E   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void print_dall(int)
   \                     print_dall:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   \   0000000C   0x200A             MOVS     R0,#+10
   \   0000000E   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000012   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   0000001E   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000022   0x210A             MOVS     R1,#+10
   \   00000024   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000028   0x9001             STR      R0,[SP, #+4]
   \   0000002A   0x2064             MOVS     R0,#+100
   \   0000002C   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000030   0x210A             MOVS     R1,#+10
   \   00000032   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000036   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000003A   0x9002             STR      R0,[SP, #+8]
   \   0000003C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000040   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000044   0x9003             STR      R0,[SP, #+12]
   \   00000046   0x9800             LDR      R0,[SP, #+0]
   \   00000048   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   0000004C   0x.... 0x....      BL       CH451_WriteCommand
   \   00000050   0x9801             LDR      R0,[SP, #+4]
   \   00000052   0xF450 0x6010      ORRS     R0,R0,#0x900
   \   00000056   0x.... 0x....      BL       CH451_WriteCommand
   \   0000005A   0x9802             LDR      R0,[SP, #+8]
   \   0000005C   0xF450 0x6020      ORRS     R0,R0,#0xA00
   \   00000060   0x.... 0x....      BL       CH451_WriteCommand
   \   00000064   0x9803             LDR      R0,[SP, #+12]
   \   00000066   0xF450 0x6030      ORRS     R0,R0,#0xB00
   \   0000006A   0x.... 0x....      BL       CH451_WriteCommand
   \   0000006E   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void print_t(int)
   \                     print_t:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   \   0000000C   0x200A             MOVS     R0,#+10
   \   0000000E   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000012   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   0000001E   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000022   0x210A             MOVS     R1,#+10
   \   00000024   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000028   0x9001             STR      R0,[SP, #+4]
   \   0000002A   0x9800             LDR      R0,[SP, #+0]
   \   0000002C   0xF450 0x6040      ORRS     R0,R0,#0xC00
   \   00000030   0x.... 0x....      BL       CH451_WriteCommand
   \   00000034   0x9801             LDR      R0,[SP, #+4]
   \   00000036   0xF450 0x6050      ORRS     R0,R0,#0xD00
   \   0000003A   0x.... 0x....      BL       CH451_WriteCommand
   \   0000003E   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void print_tall(int)
   \                     print_tall:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   \   0000000C   0x200A             MOVS     R0,#+10
   \   0000000E   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000012   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   0000001E   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000022   0x210A             MOVS     R1,#+10
   \   00000024   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000028   0x9001             STR      R0,[SP, #+4]
   \   0000002A   0x2064             MOVS     R0,#+100
   \   0000002C   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000030   0x210A             MOVS     R1,#+10
   \   00000032   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000036   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000003A   0x9002             STR      R0,[SP, #+8]
   \   0000003C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000040   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000044   0x9003             STR      R0,[SP, #+12]
   \   00000046   0x9800             LDR      R0,[SP, #+0]
   \   00000048   0xF450 0x6040      ORRS     R0,R0,#0xC00
   \   0000004C   0x.... 0x....      BL       CH451_WriteCommand
   \   00000050   0x9801             LDR      R0,[SP, #+4]
   \   00000052   0xF450 0x6050      ORRS     R0,R0,#0xD00
   \   00000056   0x.... 0x....      BL       CH451_WriteCommand
   \   0000005A   0x9802             LDR      R0,[SP, #+8]
   \   0000005C   0xF450 0x6060      ORRS     R0,R0,#0xE00
   \   00000060   0x.... 0x....      BL       CH451_WriteCommand
   \   00000064   0x9803             LDR      R0,[SP, #+12]
   \   00000066   0xF450 0x6070      ORRS     R0,R0,#0xF00
   \   0000006A   0x.... 0x....      BL       CH451_WriteCommand
   \   0000006E   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void print_t1(int)
   \                     print_t1:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   \   0000000C   0x200A             MOVS     R0,#+10
   \   0000000E   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000012   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   0000001E   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000022   0x210A             MOVS     R1,#+10
   \   00000024   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000028   0x9001             STR      R0,[SP, #+4]
   \   0000002A   0x9800             LDR      R0,[SP, #+0]
   \   0000002C   0xF450 0x6060      ORRS     R0,R0,#0xE00
   \   00000030   0x.... 0x....      BL       CH451_WriteCommand
   \   00000034   0x9801             LDR      R0,[SP, #+4]
   \   00000036   0xF450 0x6070      ORRS     R0,R0,#0xF00
   \   0000003A   0x.... 0x....      BL       CH451_WriteCommand
   \   0000003E   0xBD1F             POP      {R0-R4,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void print_hell()
   \                     print_hell:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0xF640 0x4038      MOVW     R0,#+3128
   \   00000006   0x.... 0x....      BL       CH451_WriteCommand
   \   0000000A   0xF640 0x5038      MOVW     R0,#+3384
   \   0000000E   0x.... 0x....      BL       CH451_WriteCommand
   \   00000012   0xF640 0x600E      MOVW     R0,#+3598
   \   00000016   0x.... 0x....      BL       CH451_WriteCommand
   \   0000001A   0xF640 0x7077      MOVW     R0,#+3959
   \   0000001E   0x.... 0x....      BL       CH451_WriteCommand
   \   00000022   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void print_fall(int)
   \                     print_fall:
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   \   0000000C   0x200A             MOVS     R0,#+10
   \   0000000E   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000012   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x2064             MOVS     R0,#+100
   \   0000001A   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   0000001E   0xFB00 0x4011      MLS      R0,R0,R1,R4
   \   00000022   0x210A             MOVS     R1,#+10
   \   00000024   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000028   0x9001             STR      R0,[SP, #+4]
   \   0000002A   0x2064             MOVS     R0,#+100
   \   0000002C   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000030   0x210A             MOVS     R1,#+10
   \   00000032   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000036   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000003A   0x9002             STR      R0,[SP, #+8]
   \   0000003C   0x9800             LDR      R0,[SP, #+0]
   \   0000003E   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   00000042   0x.... 0x....      BL       CH451_WriteCommand
   \   00000046   0x9801             LDR      R0,[SP, #+4]
   \   00000048   0xF450 0x6010      ORRS     R0,R0,#0x900
   \   0000004C   0x.... 0x....      BL       CH451_WriteCommand
   \   00000050   0x9802             LDR      R0,[SP, #+8]
   \   00000052   0xF450 0x6020      ORRS     R0,R0,#0xA00
   \   00000056   0x.... 0x....      BL       CH451_WriteCommand
   \   0000005A   0xF640 0x3012      MOVW     R0,#+2834
   \   0000005E   0x.... 0x....      BL       CH451_WriteCommand
   \   00000062   0xBD1F             POP      {R0-R4,PC}       ;; return
     21          #include "IR.h"

   \                                 In section .bss, align 2
   \   __absolute int16 irq_flag
   \                     irq_flag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \   __absolute int16 irq_count
   \                     irq_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \   __absolute int16 timer
   \                     timer:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \   __absolute int16 startflag
   \                     startflag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \   __absolute int16 bitnum
   \                     bitnum:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
   \   __absolute int16 bitdata[33]
   \                     bitdata:
   \   00000000                      DS8 68

   \                                 In section .bss, align 2
   \   __absolute int16 receive_flag
   \                     receive_flag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
   \   __absolute int16 data[4]
   \                     `data`:
   \   00000000                      DS8 8

   \                                 In section .bss, align 2
   \   __absolute int16 deal_flag
   \                     deal_flag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \   __absolute int16 irkey
   \                     irkey:
   \   00000000                      DS8 2

   \                                 In section .data, align 4
   \   __absolute int16 bianma[10]
   \                     bianma:
   \   00000000   0x0016 0x000C      DC16 22, 12, 24, 94, 8, 28, 90, 66, 82, 74
   \              0x0018 0x005E
   \              0x0008 0x001C
   \              0x005A 0x0042
   \              0x0052 0x004A

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void get_irkey()
   \                     get_irkey:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   00000006   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD005             BEQ.N    ??get_irkey_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x8001             STRH     R1,[R0, #+0]
   \   00000016   0x.... 0x....      BL       data_deal
   \                     ??get_irkey_0:
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable24
   \   0000001E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD014             BEQ.N    ??get_irkey_1
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xE00F             B.N      ??get_irkey_2
   \                     ??get_irkey_3:
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable23_2
   \   0000002E   0xF9B1 0x1004      LDRSH    R1,[R1, #+4]
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable23_3
   \   00000038   0xF932 0x2010      LDRSH    R2,[R2, R0, LSL #+1]
   \   0000003C   0x4291             CMP      R1,R2
   \   0000003E   0xD103             BNE.N    ??get_irkey_4
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable24_1
   \   00000044   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000046   0x8008             STRH     R0,[R1, #+0]
   \                     ??get_irkey_4:
   \   00000048   0x1C40             ADDS     R0,R0,#+1
   \                     ??get_irkey_2:
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004C   0x280A             CMP      R0,#+10
   \   0000004E   0xD3EC             BCC.N    ??get_irkey_3
   \                     ??get_irkey_1:
   \   00000050   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void data_deal(void)
   \                     data_deal:
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0x2201             MOVS     R2,#+1
   \   0000000A   0x2400             MOVS     R4,#+0
   \   0000000C   0x0021             MOVS     R1,R4
   \   0000000E   0xE016             B.N      ??data_deal_0
   \                     ??data_deal_1:
   \   00000010   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000012   0x085B             LSRS     R3,R3,#+1
   \   00000014   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000016   0x.... 0x....      LDR.W    R4,??DataTable23_4
   \   0000001A   0xF934 0x4012      LDRSH    R4,[R4, R2, LSL #+1]
   \   0000001E   0x2C06             CMP      R4,#+6
   \   00000020   0xDB01             BLT.N    ??data_deal_2
   \   00000022   0xF053 0x0380      ORRS     R3,R3,#0x80
   \                     ??data_deal_2:
   \   00000026   0x1C52             ADDS     R2,R2,#+1
   \   00000028   0x1C40             ADDS     R0,R0,#+1
   \                     ??data_deal_3:
   \   0000002A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000002C   0x2808             CMP      R0,#+8
   \   0000002E   0xDBEF             BLT.N    ??data_deal_1
   \   00000030   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable23_2
   \   00000036   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000038   0xF820 0x3011      STRH     R3,[R0, R1, LSL #+1]
   \   0000003C   0x1C49             ADDS     R1,R1,#+1
   \                     ??data_deal_0:
   \   0000003E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000040   0x2904             CMP      R1,#+4
   \   00000042   0xDA01             BGE.N    ??data_deal_4
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0xE7F0             B.N      ??data_deal_3
   \                     ??data_deal_4:
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable24
   \   0000004C   0x2101             MOVS     R1,#+1
   \   0000004E   0x8001             STRH     R1,[R0, #+0]
   \   00000050   0xBC10             POP      {R4}
   \   00000052   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void ir_deal(void)
   \                     ir_deal:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable23_5
   \   00000004   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD02E             BEQ.N    ??ir_deal_0
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable25
   \   00000010   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000014   0x281A             CMP      R0,#+26
   \   00000016   0xDB03             BLT.N    ??ir_deal_1
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable23_6
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x8001             STRH     R1,[R0, #+0]
   \                     ??ir_deal_1:
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable23_6
   \   00000024   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable23_4
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable25
   \   00000030   0x8812             LDRH     R2,[R2, #+0]
   \   00000032   0xF821 0x2010      STRH     R2,[R1, R0, LSL #+1]
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable25
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x8001             STRH     R1,[R0, #+0]
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable23_6
   \   00000042   0x8800             LDRH     R0,[R0, #+0]
   \   00000044   0x1C40             ADDS     R0,R0,#+1
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable23_6
   \   0000004A   0x8008             STRH     R0,[R1, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable23_6
   \   00000050   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000054   0x2821             CMP      R0,#+33
   \   00000056   0xD110             BNE.N    ??ir_deal_2
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable23_6
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x8001             STRH     R1,[R0, #+0]
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable23_1
   \   00000064   0x2101             MOVS     R1,#+1
   \   00000066   0x8001             STRH     R1,[R0, #+0]
   \   00000068   0xE007             B.N      ??ir_deal_2
   \                     ??ir_deal_0:
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable23_5
   \   0000006E   0x2101             MOVS     R1,#+1
   \   00000070   0x8001             STRH     R1,[R0, #+0]
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable25
   \   00000076   0x2100             MOVS     R1,#+0
   \   00000078   0x8001             STRH     R1,[R0, #+0]
   \                     ??ir_deal_2:
   \   0000007A   0x4770             BX       LR               ;; return
     22          #include "LQ12864.h" 
     23          #include "lptmr.h"

   \                                 In section .bss, align 1
   \   __absolute char LPTMR_INTERRUPT
   \                     LPTMR_INTERRUPT:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void lptmr_interrupt(void)
   \                     lptmr_interrupt:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xF241 0x3488      MOVW     R4,#+5000
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable24_2
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       lptmr_clear_registers
   \   00000012   0x2055             MOVS     R0,#+85
   \   00000014   0x.... 0x....      BL       enable_irq
   \   00000018   0xB2A0             UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable25_1  ;; 0x40040008
   \   0000001E   0x6008             STR      R0,[R1, #+0]
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable24_3  ;; 0x40040004
   \   00000024   0x2105             MOVS     R1,#+5
   \   00000026   0x6001             STR      R1,[R0, #+0]
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000002C   0x2140             MOVS     R1,#+64
   \   0000002E   0x6001             STR      R1,[R0, #+0]
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   0000003E   0x6008             STR      R0,[R1, #+0]
   \                     ??lptmr_interrupt_0:
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable24_2
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD0FA             BEQ.N    ??lptmr_interrupt_0
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x0840             LSRS     R0,R0,#+1
   \   00000052   0x0040             LSLS     R0,R0,#+1
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   00000058   0x6008             STR      R0,[R1, #+0]
   \   0000005A   0x.... 0x....      BL       lptmr_clear_registers
   \   0000005E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void lptmr_isr_example(void)
   \                     lptmr_isr_example:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   0000000E   0x6008             STR      R0,[R1, #+0]
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable24_2
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x7001             STRB     R1,[R0, #+0]
   \   00000018   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void lptmr_time_counter()
   \                     lptmr_time_counter:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xF241 0x3488      MOVW     R4,#+5000
   \   00000006   0x.... 0x....      BL       lptmr_clear_registers
   \   0000000A   0xB2A0             UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable25_1  ;; 0x40040008
   \   00000010   0x6008             STR      R0,[R1, #+0]
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable24_3  ;; 0x40040004
   \   00000016   0x2105             MOVS     R1,#+5
   \   00000018   0x6001             STR      R1,[R0, #+0]
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \                     ??lptmr_time_counter_0:
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x0600             LSLS     R0,R0,#+24
   \   00000032   0xD5FA             BPL.N    ??lptmr_time_counter_0
   \   00000034   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void lptmr_prescale()
   \                     lptmr_prescale:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x24FA             MOVS     R4,#+250
   \   00000004   0x.... 0x....      BL       lptmr_clear_registers
   \   00000008   0xB2A0             UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable25_1  ;; 0x40040008
   \   0000000E   0x6008             STR      R0,[R1, #+0]
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable24_3  ;; 0x40040004
   \   00000014   0x2121             MOVS     R1,#+33
   \   00000016   0x6001             STR      R1,[R0, #+0]
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   00000026   0x6008             STR      R0,[R1, #+0]
   \                     ??lptmr_prescale_0:
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x0600             LSLS     R0,R0,#+24
   \   00000030   0xD5FA             BPL.N    ??lptmr_prescale_0
   \   00000032   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void lptmr_internal_ref_input()
   \                     lptmr_internal_ref_input:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xF643 0x5409      MOVW     R4,#+15625
   \   00000006   0x.... 0x....      BL       lptmr_clear_registers
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable24_5  ;; 0x40064000
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable24_5  ;; 0x40064000
   \   00000018   0x7008             STRB     R0,[R1, #+0]
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable24_6  ;; 0x40064001
   \   0000001E   0x7800             LDRB     R0,[R0, #+0]
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable24_6  ;; 0x40064001
   \   00000028   0x7008             STRB     R0,[R1, #+0]
   \   0000002A   0xB2A0             UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable25_1  ;; 0x40040008
   \   00000030   0x6008             STR      R0,[R1, #+0]
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable24_3  ;; 0x40040004
   \   00000036   0x2140             MOVS     R1,#+64
   \   00000038   0x6001             STR      R1,[R0, #+0]
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   00000048   0x6008             STR      R0,[R1, #+0]
   \                     ??lptmr_internal_ref_input_0:
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x0600             LSLS     R0,R0,#+24
   \   00000052   0xD5FA             BPL.N    ??lptmr_internal_ref_input_0
   \   00000054   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void lptmr_external_clk_input()
   \                     lptmr_external_clk_input:
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x.... 0x....      BL       lptmr_clear_registers
   \   00000006   0xF641 0x50CE      MOVW     R0,#+7630
   \   0000000A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable25_1  ;; 0x40040008
   \   00000010   0x6008             STR      R0,[R1, #+0]
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable24_3  ;; 0x40040004
   \   00000016   0x217B             MOVS     R1,#+123
   \   00000018   0x6001             STR      R1,[R0, #+0]
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \                     ??lptmr_external_clk_input_0:
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x0600             LSLS     R0,R0,#+24
   \   00000032   0xD5FA             BPL.N    ??lptmr_external_clk_input_0
   \   00000034   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void lptmr_lpo_input()
   \                     lptmr_lpo_input:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xF44F 0x647A      MOV      R4,#+4000
   \   00000006   0x.... 0x....      BL       lptmr_clear_registers
   \   0000000A   0xB2A0             UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable25_1  ;; 0x40040008
   \   00000010   0x6008             STR      R0,[R1, #+0]
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable24_3  ;; 0x40040004
   \   00000016   0x2105             MOVS     R1,#+5
   \   00000018   0x6001             STR      R1,[R0, #+0]
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \                     ??lptmr_lpo_input_0:
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x0600             LSLS     R0,R0,#+24
   \   00000032   0xD5FA             BPL.N    ??lptmr_lpo_input_0
   \   00000034   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void lptmr_32khz_input()
   \                     lptmr_32khz_input:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xF44F 0x4400      MOV      R4,#+32768
   \   00000006   0x.... 0x....      BL       lptmr_clear_registers
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable25_2  ;; 0x4004803c
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF050 0x5000      ORRS     R0,R0,#0x20000000
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable25_2  ;; 0x4004803c
   \   00000018   0x6008             STR      R0,[R1, #+0]
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable25_3  ;; 0x4003d010
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF44F 0x7180      MOV      R1,#+256
   \   00000024   0x4308             ORRS     R0,R1,R0
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable25_3  ;; 0x4003d010
   \   0000002A   0x6008             STR      R0,[R1, #+0]
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable25_4  ;; 0x40047000
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable25_4  ;; 0x40047000
   \   0000003A   0x6008             STR      R0,[R1, #+0]
   \   0000003C   0xB2A0             UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable25_1  ;; 0x40040008
   \   00000042   0x6008             STR      R0,[R1, #+0]
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable24_3  ;; 0x40040004
   \   00000048   0x210A             MOVS     R1,#+10
   \   0000004A   0x6001             STR      R1,[R0, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   0000005A   0x6008             STR      R0,[R1, #+0]
   \                     ??lptmr_32khz_input_0:
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x0600             LSLS     R0,R0,#+24
   \   00000064   0xD5FA             BPL.N    ??lptmr_32khz_input_0
   \   00000066   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void lptmr_pulse_counter(char)
   \                     lptmr_pulse_counter:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xF242 0x7510      MOVW     R5,#+10000
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable25_5  ;; 0x40048038
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable25_5  ;; 0x40048038
   \   00000016   0x6008             STR      R0,[R1, #+0]
   \   00000018   0x.... 0x....      BL       lptmr_clear_registers
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0x2C01             CMP      R4,#+1
   \   00000020   0xD127             BNE.N    ??lptmr_pulse_counter_0
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable25_5  ;; 0x40048038
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF44F 0x7100      MOV      R1,#+512
   \   0000002C   0x4308             ORRS     R0,R1,R0
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable25_5  ;; 0x40048038
   \   00000032   0x6008             STR      R0,[R1, #+0]
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable25_6  ;; 0x4004904c
   \   00000038   0xF44F 0x61C0      MOV      R1,#+1536
   \   0000003C   0x6001             STR      R1,[R0, #+0]
   \                     ??lptmr_pulse_counter_1:
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable24_3  ;; 0x40040004
   \   00000042   0x2105             MOVS     R1,#+5
   \   00000044   0x6001             STR      R1,[R0, #+0]
   \   00000046   0xB2A8             UXTH     R0,R5            ;; ZeroExt  R0,R5,#+16,#+16
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable25_1  ;; 0x40040008
   \   0000004C   0x6008             STR      R0,[R1, #+0]
   \   0000004E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000050   0x0120             LSLS     R0,R4,#+4
   \   00000052   0xF010 0x0030      ANDS     R0,R0,#0x30
   \   00000056   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   0000005E   0x6008             STR      R0,[R1, #+0]
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable24_4  ;; 0x40040000
   \   0000006E   0x6008             STR      R0,[R1, #+0]
   \                     ??lptmr_pulse_counter_2:
   \   00000070   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \                     ??lptmr_pulse_counter_0:
   \   00000072   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000074   0x2C02             CMP      R4,#+2
   \   00000076   0xD10D             BNE.N    ??lptmr_pulse_counter_3
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable25_5  ;; 0x40048038
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable25_5  ;; 0x40048038
   \   00000086   0x6008             STR      R0,[R1, #+0]
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable27  ;; 0x4004b014
   \   0000008C   0xF44F 0x6180      MOV      R1,#+1024
   \   00000090   0x6001             STR      R1,[R0, #+0]
   \   00000092   0xE7D4             B.N      ??lptmr_pulse_counter_1
   \                     ??lptmr_pulse_counter_3:
   \   00000094   0xE7EC             B.N      ??lptmr_pulse_counter_2

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp uint16 get_counter_value()
   \                     get_counter_value:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable27_1  ;; 0x4004000c
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x6001             STR      R1,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable27_1  ;; 0x4004000c
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000010   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void lptmr_clear_registers()
   \                     lptmr_clear_registers:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable24_4  ;; 0x40040000
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x6001             STR      R1,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable24_3  ;; 0x40040004
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x6001             STR      R1,[R0, #+0]
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable25_1  ;; 0x40040008
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x6001             STR      R1,[R0, #+0]
   \   00000018   0x4770             BX       LR               ;; return
     24          #define READword(address)     ((unsigned int)(*(volatile unsigned int *)(address)))
     25          #define FLEXNVM_startline_ADDR 0X10000000
     26          #define FLEXRAM_startline_ADDR 0X14000000
     27          #define PIT0 0
     28          #define PIT1 1
     29          #define PIT2 2
     30          #define PIT3 3
     31          #define GPIO_PIN_MASK      0x1Fu    //0x1f=31,限制位数为0--31有效
     32          #define GPIO_PIN(x)        (((1)<<(x & GPIO_PIN_MASK)))  //把当前位置1                
     33          #define endlineROW  169        //OV7620，每场240行
     34          #define  IMG_ROWS 55
     35          #define  IMG_COLS 160
     36          #define  video_Middle  77/76//91偏左//85
     37          

   \                                 In section .data, align 2
     38          int16 Servo_Middle=8151;//8151;   //中间  8155
   \                     Servo_Middle:
   \   00000000   0x1FD7             DC16 8151

   \                                 In section .data, align 2
     39          int16 Servo_Left=9320;    //最左10475   250Hz  44%
   \                     Servo_Left:
   \   00000000   0x2468             DC16 9320

   \                                 In section .data, align 2
     40          int16 Servo_Right=7035;    //最右15575   250Hz  30.53%7035
   \                     Servo_Right:
   \   00000000   0x1B7B             DC16 7035
     41          
     42          #define  unclear  -100
     43          #define  ok        1
     44          #define  fail      0
     45          #define  position_mid   77      //中心位置
     46          

   \                                 In section .bss, align 4
     47          int tu_flag=0;
   \                     tu_flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     48          volatile int P_timer=0;
   \                     P_timer:
   \   00000000                      DS8 4
     49          

   \                                 In section .bss, align 4
     50          unsigned int row=0;//摄像头行计数，最大240
   \                     row:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     51          volatile uint8 ImageData[IMG_ROWS][IMG_COLS];//存放数据数组
   \                     ImageData:
   \   00000000                      DS8 8800

   \                                 In section .bss, align 4
     52          volatile uint8 ImageData2[IMG_ROWS][IMG_COLS];
   \                     ImageData2:
   \   00000000                      DS8 8800

   \                                 In section .bss, align 4
     53          volatile uint16 ption[160];
   \                     ption:
   \   00000000                      DS8 320

   \                                 In section .bss, align 4
     54          volatile int position[IMG_ROWS];//存放中心线
   \                     position:
   \   00000000                      DS8 220

   \                                 In section .bss, align 4
     55          volatile int backup[IMG_ROWS];//存放中心线
   \                     backup:
   \   00000000                      DS8 220

   \                                 In section .bss, align 1
     56          volatile uint8 Very_straight=0;//这个需要清零
   \                     Very_straight:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     57          volatile uint8 ramp_flag=0;//这个需要清零
   \                     ramp_flag:
   \   00000000                      DS8 1

   \                                 In section .data, align 2
     58          volatile int16 Judge_startline=150;
   \                     Judge_startline:
   \   00000000   0x0096             DC16 150

   \                                 In section .bss, align 4
     59          unsigned int imagerow=0;//采集行计数，最大H
   \                     imagerow:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     60          int16 dijihang=0;
   \                     dijihang:
   \   00000000                      DS8 2

   \                                 In section .rodata, align 4
     61          unsigned int const data_table[IMG_ROWS]={ 1,   3,   5,   7, 9,//2 
   \                     data_table:
   \   00000000   0x00000001         DC32 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 34, 37
   \              0x00000003   
   \              0x00000005   
   \              0x00000007   
   \              0x00000009   
   \              0x0000000B   
   \              0x0000000D   
   \              0x0000000F   
   \              0x00000011   
   \              0x00000013   
   \              0x00000015   
   \              0x00000017   
   \              0x00000019   
   \              0x0000001B   
   \              0x0000001D   
   \              0x0000001F   
   \              0x00000022   
   \              0x00000025   
   \   00000048   0x00000028         DC32 40, 43, 46, 49, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 88
   \              0x0000002B   
   \              0x0000002E   
   \              0x00000031   
   \              0x00000034   
   \              0x00000037   
   \              0x0000003A   
   \              0x0000003D   
   \              0x00000040   
   \              0x00000043   
   \              0x00000046   
   \              0x00000049   
   \              0x0000004C   
   \              0x0000004F   
   \              0x00000052   
   \              0x00000055   
   \              0x00000058   
   \   0000008C   0x0000005C         DC32 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144
   \              0x00000060   
   \              0x00000064   
   \              0x00000068   
   \              0x0000006C   
   \              0x00000070   
   \              0x00000074   
   \              0x00000078   
   \              0x0000007C   
   \              0x00000080   
   \              0x00000084   
   \              0x00000088   
   \              0x0000008C   
   \              0x00000090   
   \   000000C4   0x00000094         DC32 148, 152, 156, 160, 164, 168
   \              0x00000098   
   \              0x0000009C   
   \              0x000000A0   
   \              0x000000A4   
   \              0x000000A8   
     62                                             11,  13,  15,  17,  19,    //2
     63                                             21,  23,  25,  27,  29,    //2
     64                                             31,  34,  37,  40,  43,    //3
     65                                             46,  49,  52,  55,  58,    //3
     66                                             61,  64,  67,  70,  73,    //3
     67                                             76,  79,  82,  85,  88,    //3
     68                                             92,  96, 100, 104, 108,    //4
     69                                             112, 116, 120, 124, 128,    //4
     70                                             132, 136, 140, 144, 148,    //4
     71                                             152, 156, 160, 164, 168     //4         
     72                                             };
     73          
     74          

   \                                 In section .rodata, align 4
     75          const unsigned char Wspeed_diff[2][60]={{100,100,100,100,100,100,100,100,100,100,  //差速表
   \                     Wspeed_diff:
   \   00000000   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 99, 99, 99, 99
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x63 0x63    
   \              0x63 0x63    
   \   0000000E   0x62 0x62          DC8 98, 98, 98, 97, 97, 97, 97, 96, 96, 96, 95, 94, 93, 92, 91, 90, 89
   \              0x62 0x61    
   \              0x61 0x61    
   \              0x61 0x60    
   \              0x60 0x60    
   \              0x5F 0x5E    
   \              0x5D 0x5C    
   \              0x5B 0x5A    
   \              0x59         
   \   0000001F   0x58 0x57          DC8 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72
   \              0x56 0x55    
   \              0x54 0x53    
   \              0x52 0x51    
   \              0x50 0x4F    
   \              0x4E 0x4D    
   \              0x4C 0x4B    
   \              0x4A 0x49    
   \              0x48         
   \   00000030   0x47 0x46          DC8 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 100, 100, 100, 100
   \              0x45 0x44    
   \              0x43 0x42    
   \              0x41 0x40    
   \              0x3F 0x3E    
   \              0x3D 0x3C    
   \              0x64 0x64    
   \              0x64 0x64    
   \   00000040   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 101, 102, 103, 104, 105, 106, 107
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x65 0x66    
   \              0x67 0x68    
   \              0x69 0x6A    
   \              0x6B         
   \   0000004D   0x6C 0x6D          DC8 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 121, 122, 124
   \              0x6E 0x6F    
   \              0x70 0x71    
   \              0x72 0x73    
   \              0x75 0x77    
   \              0x79 0x7A    
   \              0x7C         
   \   0000005A   0x7E 0x80          DC8 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150
   \              0x82 0x84    
   \              0x86 0x88    
   \              0x8A 0x8C    
   \              0x8E 0x90    
   \              0x92 0x94    
   \              0x96         
   \   00000067   0x98 0x99          DC8 152, 153, 154, 155, 157, 159, 161, 163, 165, 167, 168, 169, 170
   \              0x9A 0x9B    
   \              0x9D 0x9F    
   \              0xA1 0xA3    
   \              0xA5 0xA7    
   \              0xA8 0xA9    
   \              0xAA         
   \   00000074   0xAC 0xAE          DC8 172, 174, 176, 178
   \              0xB0 0xB2    
     76                                                    99,99,99,99, 98, 98, 98, 97, 97, 97,     /////////自己注释
     77                                                    //96, 96, 96, 96, 95, 95, 94, 94, 94, 93,
     78                                                    97,96,96, 96, 95, 94, 93, 92,91,90,
     79                                                   //93, 93, 91, 91, 89, 89, 87, 87, 85, 85, 
     80                                                   89,88,87,86,85,84,83,82,81,80,
     81                                                    //, 83, 81, 81, 79, 79, 77, 77, 75, 75,
     82                                                    79,78,77,76,75,74,73,72,71,70, 
     83                                                  // 73, 73, 71, 71, 69, 67, 65, 63, 61, 59
     84                                                   69,68,67,66,65,64,63,62,61,60
     85                                                  },                                                                     
     86                                                 { 
     87                                                 //100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
     88                                                 100, 100, 100, 100, 100,100,100,100,100, 100,
     89                                                 //101, 101, 101, 101, 101, 101, 101, 101, 101, 103,
     90                                                  //104, 105, 106, 107, 108, 109, 110, 111, 112, 113,
     91                                                  101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
     92                                                  //114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
     93                                                   111, 112, 113, 114, 115, 117,119, 121, 122, 124,
     94                                                  //125, 127, 129, 131, 133, 135, 137, 139, 141, 143,
     95                                                  126,128,130,132,134,136,138,140,142,144,
     96                                                  // 128, 132, 137, 142, 148, 154, 160, 166, 170, 175,
     97                                                   146,148,150, 152,153,154,155,157,159,161,
     98                                                   163,165,167,168,169,170,172,174,176,178
     99                                                 }
    100                                                }; 
    101          
    102            //找根参数b
    103          //int b=48;

   \                                 In section .data, align 1
    104             uint8 black2_a1 = 145;//135 140
   \                     black2_a1:
   \   00000000   0x91               DC8 145

   \                                 In section .data, align 1
    105            uint8 black2_a2 = 155; //145 145
   \                     black2_a2:
   \   00000000   0x9B               DC8 155

   \                                 In section .data, align 1
    106            uint8 black2_a3 = 145;// 135 140
   \                     black2_a3:
   \   00000000   0x91               DC8 145

   \                                 In section .data, align 1
    107            uint8 black2_b1 = 165;//150 135
   \                     black2_b1:
   \   00000000   0xA5               DC8 165

   \                                 In section .data, align 1
    108            uint8 black2_b2 = 165;//150 140
   \                     black2_b2:
   \   00000000   0xA5               DC8 165

   \                                 In section .data, align 1
    109            uint8 black2_b3 = 165;//150 135
   \                     black2_b3:
   \   00000000   0xA5               DC8 165

   \                                 In section .data, align 1
    110            uint8 black2_c1 = 168;//145 154   132
   \                     black2_c1:
   \   00000000   0xA8               DC8 168

   \                                 In section .data, align 1
    111            uint8 black2_c2 = 169;//158 158     138
   \                     black2_c2:
   \   00000000   0xA9               DC8 169

   \                                 In section .data, align 1
    112            uint8 black2_c3 = 168;// 145 154     132
   \                     black2_c3:
   \   00000000   0xA8               DC8 168

   \                                 In section .data, align 1
    113            uint8 black2_d1 = 162;//152 157  130
   \                     black2_d1:
   \   00000000   0xA2               DC8 162

   \                                 In section .data, align 1
    114            uint8 black2_d2 = 163;//153 158  142
   \                     black2_d2:
   \   00000000   0xA3               DC8 163

   \                                 In section .data, align 1
    115            uint8 black2_d3 = 162; //152 157  130
   \                     black2_d3:
   \   00000000   0xA2               DC8 162
    116            
    117            
    118            

   \                                 In section .data, align 1
    119            uint8 black_a1 = 135;//140
   \                     black_a1:
   \   00000000   0x87               DC8 135

   \                                 In section .data, align 1
    120            uint8 black_a2 =135;//145
   \                     black_a2:
   \   00000000   0x87               DC8 135

   \                                 In section .data, align 1
    121            uint8 black_a3 = 135;//140
   \                     black_a3:
   \   00000000   0x87               DC8 135

   \                                 In section .data, align 1
    122            uint8 black_b1 = 150;//135
   \                     black_b1:
   \   00000000   0x96               DC8 150

   \                                 In section .data, align 1
    123            uint8 black_b2 = 150;//140
   \                     black_b2:
   \   00000000   0x96               DC8 150

   \                                 In section .data, align 1
    124            uint8 black_b3 = 150;//135
   \                     black_b3:
   \   00000000   0x96               DC8 150

   \                                 In section .data, align 1
    125            uint8 black_c1 = 145;//154   132
   \                     black_c1:
   \   00000000   0x91               DC8 145

   \                                 In section .data, align 1
    126            uint8 black_c2 = 158;//158     138
   \                     black_c2:
   \   00000000   0x9E               DC8 158

   \                                 In section .data, align 1
    127            uint8 black_c3 = 145;//154     132
   \                     black_c3:
   \   00000000   0x91               DC8 145

   \                                 In section .data, align 1
    128            uint8 black_d1 = 152;//157  130
   \                     black_d1:
   \   00000000   0x98               DC8 152

   \                                 In section .data, align 1
    129            uint8 black_d2 = 153;//158  142
   \                     black_d2:
   \   00000000   0x99               DC8 153

   \                                 In section .data, align 1
    130            uint8 black_d3 = 152;//157  130
   \                     black_d3:
   \   00000000   0x98               DC8 152

   \                                 In section .bss, align 4
    131          uint8 row_F[IMG_ROWS];//该行采集完成标志
   \                     row_F:
   \   00000000                      DS8 56

   \                                 In section .bss, align 1
    132          char startline;//起始行
   \                     startline:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    133          char endline;//结束行
   \                     endline:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    134          char startline_F;//发现起始行
   \                     startline_F:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    135          char endline_F;//发现结束行
   \                     endline_F:
   \   00000000                      DS8 1
    136          

   \                                 In section .bss, align 1
    137          uint8 LCD_P1=0,LCD_P2=0,LCD_P3=0;
   \                     LCD_P1:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     LCD_P2:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     LCD_P3:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    138          volatile uint16 pulse=0,pulse2=0;
   \                     pulse:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     pulse2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    139          volatile uint8 finish=0;
   \                     finish:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    140           int start_position=0;
   \                     start_position:
   \   00000000                      DS8 4
    141          
    142          

   \                                 In section .bss, align 1
    143          volatile uint8 sai_dao_lei_xing=0;
   \                     sai_dao_lei_xing:
   \   00000000                      DS8 1
    144          

   \                                 In section .bss, align 2
    145          volatile int16 low_0=0,mid_0=0,high_0=0;
   \                     low_0:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     mid_0:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     high_0:
   \   00000000                      DS8 2
    146          

   \                                 In section .bss, align 2
    147          volatile int16 low=0,mid=0,high=0;
   \                     `low`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     mid:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     `high`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    148          volatile int16 topline=0;
   \                     topline:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    149          volatile int16 low_old=0,mid_old=0,high_old=0;
   \                     low_old:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     mid_old:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     high_old:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    150          volatile int16 position_now=0,position_diff=0,position_now_low=0;
   \                     position_now:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     position_diff:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     position_now_low:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    151          volatile int16 Servo_value=0,Servo_value_old=13015;//这里Servo_value_old的初始值要设置的和Servo_Middle一样，是用来限定的
   \                     Servo_value:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
   \                     Servo_value_old:
   \   00000000   0x32D7             DC16 13015

   \                                 In section .bss, align 2
    152          volatile int16 low_now=0,mid_now=0,high_now=0;
   \                     low_now:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     mid_now:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     high_now:
   \   00000000                      DS8 2
    153          

   \                                 In section .bss, align 2
    154          volatile int16 low_now_0=0,mid_now_0=0,high_now_0=0;
   \                     low_now_0:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     mid_now_0:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     high_now_0:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    155          volatile int16 END_0=0;
   \                     END_0:
   \   00000000                      DS8 2
    156          

   \                                 In section .bss, align 1
    157          volatile uint8 car_speed=0;
   \                     car_speed:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    158          volatile int16 speed_Very_straight,speed_top,speed_b,speed_m,speed_s,speed_ms;
   \                     speed_Very_straight:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     speed_top:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     speed_b:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     speed_m:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     speed_s:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     speed_ms:
   \   00000000                      DS8 2
    159          

   \                                 In section .bss, align 2
    160          volatile int16 time_m=0,speed_now=0;
   \                     time_m:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     speed_now:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    161          volatile int16 s_old=0;
   \                     s_old:
   \   00000000                      DS8 2
    162          //volatile int16 position_now_P=0,position_now_D=0;
    163          
    164          ////////////模糊控制///////////////
    165          #define MP_S      400//110  260  360
    166          #define MP_M      440//180  320  400
    167          #define MP_B      480//240  360  440
    168          
    169          #define MI_S      6//6 4
    170          #define MI_M      9//10 8 
    171          #define MI_B      12//15  10
    172          
    173          #define  motor_p      70//   45 50 55 60 65
    174          
    175          
    176          //////////////////////舵机参数////////////////////////////
    177          

   \                                 In section .data, align 1
    178          uint8 P_High=12;//uint8 P_High=11;//27  29
   \                     P_High:
   \   00000000   0x0C               DC8 12

   \                                 In section .data, align 1
    179          uint8 D_High=6;//uint8 D_High=0;//18  15
   \                     D_High:
   \   00000000   0x06               DC8 6

   \                                 In section .data, align 1
    180          uint8 H_High=17;//uint8 H_High=20;
   \                     H_High:
   \   00000000   0x11               DC8 17

   \                                 In section .data, align 1
    181          uint8 T_High=29;//41//uint8 T_High=25;
   \                     T_High:
   \   00000000   0x1D               DC8 29
    182          
    183          

   \                                 In section .data, align 1
    184          uint8 P_Mid=10;//18//15//12//13
   \                     P_Mid:
   \   00000000   0x0A               DC8 10

   \                                 In section .data, align 1
    185          uint8 D_Mid=16;//18//13//11//9//10
   \                     D_Mid:
   \   00000000   0x10               DC8 16

   \                                 In section .data, align 1
    186          uint8 H_Mid=15;//uint8 H_Mid=15;
   \                     H_Mid:
   \   00000000   0x0F               DC8 15

   \                                 In section .data, align 1
    187          uint8 T_Mid=45;//uint8 T_Mid=50;
   \                     T_Mid:
   \   00000000   0x2D               DC8 45
    188          
    189          

   \                                 In section .data, align 1
    190          uint8 P_Mid1=10;
   \                     P_Mid1:
   \   00000000   0x0A               DC8 10

   \                                 In section .data, align 1
    191          uint8 D_Mid1=21;
   \                     D_Mid1:
   \   00000000   0x15               DC8 21

   \                                 In section .data, align 1
    192          uint8 H_Mid1=30;
   \                     H_Mid1:
   \   00000000   0x1E               DC8 30

   \                                 In section .data, align 1
    193          uint8 T_Mid1=45;
   \                     T_Mid1:
   \   00000000   0x2D               DC8 45
    194          
    195          

   \                                 In section .data, align 1
    196          uint8 P_Low=25;//21//18//15//14//
   \                     P_Low:
   \   00000000   0x19               DC8 25

   \                                 In section .data, align 1
    197          uint8 D_Low=41;//21//15//11//13
   \                     D_Low:
   \   00000000   0x29               DC8 41

   \                                 In section .data, align 1
    198          uint8 H_Low=29;//H_Low=26;
   \                     H_Low:
   \   00000000   0x1D               DC8 29

   \                                 In section .data, align 1
    199          uint8 T_Low=50;//T_Low=50;
   \                     T_Low:
   \   00000000   0x32               DC8 50
    200          
    201          #include "keyboard_PD.h"

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void High_You(void)
   \                     High_You:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE019             B.N      ??High_You_0
   \                     ??High_You_1:
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   0000000A   0x2132             MOVS     R1,#+50
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_You_2:
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xD0F4             BEQ.N    ??High_You_1
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable25_7
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable25_7
   \   00000028   0x7008             STRB     R0,[R1, #+0]
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable25_7
   \   0000002E   0x7802             LDRB     R2,[R0, #+0]
   \   00000030   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000032   0x2103             MOVS     R1,#+3
   \   00000034   0x2048             MOVS     R0,#+72
   \   00000036   0x.... 0x....      BL       LCD_P6x8Str_3
   \                     ??High_You_0:
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x2C00             CMP      R4,#+0
   \   0000003E   0xD17B             BNE.N    ??High_You_3
   \   00000040   0x.... 0x....      BL       CH451_GetKeyValue
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   00000048   0x7800             LDRB     R0,[R0, #+0]
   \   0000004A   0x2801             CMP      R0,#+1
   \   0000004C   0xD0E1             BEQ.N    ??High_You_2
   \   0000004E   0x2802             CMP      R0,#+2
   \   00000050   0xD05F             BEQ.N    ??High_You_4
   \   00000052   0x2805             CMP      R0,#+5
   \   00000054   0xD027             BEQ.N    ??High_You_5
   \   00000056   0x2806             CMP      R0,#+6
   \   00000058   0xD067             BEQ.N    ??High_You_6
   \   0000005A   0x2809             CMP      R0,#+9
   \   0000005C   0xD008             BEQ.N    ??High_You_7
   \   0000005E   0x280A             CMP      R0,#+10
   \   00000060   0xD03C             BEQ.N    ??High_You_8
   \   00000062   0xE7EA             B.N      ??High_You_0
   \                     ??High_You_9:
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   00000068   0x2132             MOVS     R1,#+50
   \   0000006A   0x7001             STRB     R1,[R0, #+0]
   \   0000006C   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_You_7:
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x2809             CMP      R0,#+9
   \   00000078   0xD0F4             BEQ.N    ??High_You_9
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable25_8
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x1C40             ADDS     R0,R0,#+1
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable25_8
   \   00000086   0x7008             STRB     R0,[R1, #+0]
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable25_8
   \   0000008C   0x7802             LDRB     R2,[R0, #+0]
   \   0000008E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000090   0x2103             MOVS     R1,#+3
   \   00000092   0x205C             MOVS     R0,#+92
   \   00000094   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000098   0xE7CF             B.N      ??High_You_0
   \                     ??High_You_10:
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   0000009E   0x2132             MOVS     R1,#+50
   \   000000A0   0x7001             STRB     R1,[R0, #+0]
   \   000000A2   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_You_5:
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0x2805             CMP      R0,#+5
   \   000000AE   0xD0F4             BEQ.N    ??High_You_10
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable25_7
   \   000000B4   0x7800             LDRB     R0,[R0, #+0]
   \   000000B6   0x1E40             SUBS     R0,R0,#+1
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable25_7
   \   000000BC   0x7008             STRB     R0,[R1, #+0]
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable25_7
   \   000000C2   0x7802             LDRB     R2,[R0, #+0]
   \   000000C4   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000C6   0x2103             MOVS     R1,#+3
   \   000000C8   0x2048             MOVS     R0,#+72
   \   000000CA   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000000CE   0xE7B4             B.N      ??High_You_0
   \                     ??High_You_11:
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   000000D4   0x2132             MOVS     R1,#+50
   \   000000D6   0x7001             STRB     R1,[R0, #+0]
   \   000000D8   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_You_8:
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x280A             CMP      R0,#+10
   \   000000E4   0xD0F4             BEQ.N    ??High_You_11
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable25_8
   \   000000EA   0x7800             LDRB     R0,[R0, #+0]
   \   000000EC   0x1E40             SUBS     R0,R0,#+1
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable25_8
   \   000000F2   0x7008             STRB     R0,[R1, #+0]
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable25_8
   \   000000F8   0x7802             LDRB     R2,[R0, #+0]
   \   000000FA   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000FC   0x2103             MOVS     R1,#+3
   \   000000FE   0x205C             MOVS     R0,#+92
   \   00000100   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000104   0xE799             B.N      ??High_You_0
   \                     ??High_You_12:
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   0000010A   0x2132             MOVS     R1,#+50
   \   0000010C   0x7001             STRB     R1,[R0, #+0]
   \   0000010E   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_You_4:
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x2802             CMP      R0,#+2
   \   0000011A   0xD0F4             BEQ.N    ??High_You_12
   \   0000011C   0xE78D             B.N      ??High_You_0
   \                     ??High_You_13:
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   00000122   0x2132             MOVS     R1,#+50
   \   00000124   0x7001             STRB     R1,[R0, #+0]
   \   00000126   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_You_6:
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   0000012E   0x7800             LDRB     R0,[R0, #+0]
   \   00000130   0x2806             CMP      R0,#+6
   \   00000132   0xD0F4             BEQ.N    ??High_You_13
   \   00000134   0x2401             MOVS     R4,#+1
   \   00000136   0xE780             B.N      ??High_You_0
   \                     ??High_You_3:
   \   00000138   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void High_Wu(void)
   \                     High_Wu:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE019             B.N      ??High_Wu_0
   \                     ??High_Wu_1:
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   0000000A   0x2132             MOVS     R1,#+50
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Wu_2:
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xD0F4             BEQ.N    ??High_Wu_1
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable26
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable26
   \   00000028   0x7008             STRB     R0,[R1, #+0]
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable26
   \   0000002E   0x7802             LDRB     R2,[R0, #+0]
   \   00000030   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000032   0x2103             MOVS     R1,#+3
   \   00000034   0x2048             MOVS     R0,#+72
   \   00000036   0x.... 0x....      BL       LCD_P6x8Str_3
   \                     ??High_Wu_0:
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x2C00             CMP      R4,#+0
   \   0000003E   0xD171             BNE.N    ??High_Wu_3
   \   00000040   0x.... 0x....      BL       CH451_GetKeyValue
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable21_3
   \   00000048   0x7800             LDRB     R0,[R0, #+0]
   \   0000004A   0x2801             CMP      R0,#+1
   \   0000004C   0xD0E1             BEQ.N    ??High_Wu_2
   \   0000004E   0x2802             CMP      R0,#+2
   \   00000050   0xD058             BEQ.N    ??High_Wu_4
   \   00000052   0x2805             CMP      R0,#+5
   \   00000054   0xD024             BEQ.N    ??High_Wu_5
   \   00000056   0x2806             CMP      R0,#+6
   \   00000058   0xD05E             BEQ.N    ??High_Wu_6
   \   0000005A   0x2809             CMP      R0,#+9
   \   0000005C   0xD007             BEQ.N    ??High_Wu_7
   \   0000005E   0x280A             CMP      R0,#+10
   \   00000060   0xD037             BEQ.N    ??High_Wu_8
   \   00000062   0xE7EA             B.N      ??High_Wu_0
   \                     ??High_Wu_9:
   \   00000064   0x....             LDR.N    R0,??DataTable21_3
   \   00000066   0x2132             MOVS     R1,#+50
   \   00000068   0x7001             STRB     R1,[R0, #+0]
   \   0000006A   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Wu_7:
   \   0000006E   0x....             LDR.N    R0,??DataTable21_3
   \   00000070   0x7800             LDRB     R0,[R0, #+0]
   \   00000072   0x2809             CMP      R0,#+9
   \   00000074   0xD0F6             BEQ.N    ??High_Wu_9
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable26_1
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0x1C40             ADDS     R0,R0,#+1
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable26_1
   \   00000082   0x7008             STRB     R0,[R1, #+0]
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable26_1
   \   00000088   0x7802             LDRB     R2,[R0, #+0]
   \   0000008A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000008C   0x2103             MOVS     R1,#+3
   \   0000008E   0x205C             MOVS     R0,#+92
   \   00000090   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000094   0xE7D1             B.N      ??High_Wu_0
   \                     ??High_Wu_10:
   \   00000096   0x....             LDR.N    R0,??DataTable21_3
   \   00000098   0x2132             MOVS     R1,#+50
   \   0000009A   0x7001             STRB     R1,[R0, #+0]
   \   0000009C   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Wu_5:
   \   000000A0   0x....             LDR.N    R0,??DataTable21_3
   \   000000A2   0x7800             LDRB     R0,[R0, #+0]
   \   000000A4   0x2805             CMP      R0,#+5
   \   000000A6   0xD0F6             BEQ.N    ??High_Wu_10
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable26
   \   000000AC   0x7800             LDRB     R0,[R0, #+0]
   \   000000AE   0x1E40             SUBS     R0,R0,#+1
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable26
   \   000000B4   0x7008             STRB     R0,[R1, #+0]
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable26
   \   000000BA   0x7802             LDRB     R2,[R0, #+0]
   \   000000BC   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000BE   0x2103             MOVS     R1,#+3
   \   000000C0   0x2048             MOVS     R0,#+72
   \   000000C2   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000000C6   0xE7B8             B.N      ??High_Wu_0
   \                     ??High_Wu_11:
   \   000000C8   0x....             LDR.N    R0,??DataTable21_3
   \   000000CA   0x2132             MOVS     R1,#+50
   \   000000CC   0x7001             STRB     R1,[R0, #+0]
   \   000000CE   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Wu_8:
   \   000000D2   0x....             LDR.N    R0,??DataTable21_3
   \   000000D4   0x7800             LDRB     R0,[R0, #+0]
   \   000000D6   0x280A             CMP      R0,#+10
   \   000000D8   0xD0F6             BEQ.N    ??High_Wu_11
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable26_1
   \   000000DE   0x7800             LDRB     R0,[R0, #+0]
   \   000000E0   0x1E40             SUBS     R0,R0,#+1
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable26_1
   \   000000E6   0x7008             STRB     R0,[R1, #+0]
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable26_1
   \   000000EC   0x7802             LDRB     R2,[R0, #+0]
   \   000000EE   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000F0   0x2103             MOVS     R1,#+3
   \   000000F2   0x205C             MOVS     R0,#+92
   \   000000F4   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000000F8   0xE79F             B.N      ??High_Wu_0
   \                     ??High_Wu_12:
   \   000000FA   0x....             LDR.N    R0,??DataTable21_3
   \   000000FC   0x2132             MOVS     R1,#+50
   \   000000FE   0x7001             STRB     R1,[R0, #+0]
   \   00000100   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Wu_4:
   \   00000104   0x....             LDR.N    R0,??DataTable21_3
   \   00000106   0x7800             LDRB     R0,[R0, #+0]
   \   00000108   0x2802             CMP      R0,#+2
   \   0000010A   0xD0F6             BEQ.N    ??High_Wu_12
   \   0000010C   0xE795             B.N      ??High_Wu_0
   \                     ??High_Wu_13:
   \   0000010E   0x....             LDR.N    R0,??DataTable21_3
   \   00000110   0x2132             MOVS     R1,#+50
   \   00000112   0x7001             STRB     R1,[R0, #+0]
   \   00000114   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Wu_6:
   \   00000118   0x....             LDR.N    R0,??DataTable21_3
   \   0000011A   0x7800             LDRB     R0,[R0, #+0]
   \   0000011C   0x2806             CMP      R0,#+6
   \   0000011E   0xD0F6             BEQ.N    ??High_Wu_13
   \   00000120   0x2401             MOVS     R4,#+1
   \   00000122   0xE78A             B.N      ??High_Wu_0
   \                     ??High_Wu_3:
   \   00000124   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void High_Mid(void)
   \                     High_Mid:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE017             B.N      ??High_Mid_0
   \                     ??High_Mid_1:
   \   00000006   0x....             LDR.N    R0,??DataTable21_3
   \   00000008   0x2132             MOVS     R1,#+50
   \   0000000A   0x7001             STRB     R1,[R0, #+0]
   \   0000000C   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Mid_2:
   \   00000010   0x....             LDR.N    R0,??DataTable21_3
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2801             CMP      R0,#+1
   \   00000016   0xD0F6             BEQ.N    ??High_Mid_1
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable27_2
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x1C40             ADDS     R0,R0,#+1
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   00000024   0x7008             STRB     R0,[R1, #+0]
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable27_2
   \   0000002A   0x7802             LDRB     R2,[R0, #+0]
   \   0000002C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000002E   0x2103             MOVS     R1,#+3
   \   00000030   0x2048             MOVS     R0,#+72
   \   00000032   0x.... 0x....      BL       LCD_P6x8Str_3
   \                     ??High_Mid_0:
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0x2C00             CMP      R4,#+0
   \   0000003A   0xD170             BNE.N    ??High_Mid_3
   \   0000003C   0x.... 0x....      BL       CH451_GetKeyValue
   \   00000040   0x....             LDR.N    R0,??DataTable21_3
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x2801             CMP      R0,#+1
   \   00000046   0xD0E3             BEQ.N    ??High_Mid_2
   \   00000048   0x2802             CMP      R0,#+2
   \   0000004A   0xD058             BEQ.N    ??High_Mid_4
   \   0000004C   0x2805             CMP      R0,#+5
   \   0000004E   0xD024             BEQ.N    ??High_Mid_5
   \   00000050   0x2806             CMP      R0,#+6
   \   00000052   0xD05E             BEQ.N    ??High_Mid_6
   \   00000054   0x2809             CMP      R0,#+9
   \   00000056   0xD007             BEQ.N    ??High_Mid_7
   \   00000058   0x280A             CMP      R0,#+10
   \   0000005A   0xD037             BEQ.N    ??High_Mid_8
   \   0000005C   0xE7EB             B.N      ??High_Mid_0
   \                     ??High_Mid_9:
   \   0000005E   0x....             LDR.N    R0,??DataTable21_3
   \   00000060   0x2132             MOVS     R1,#+50
   \   00000062   0x7001             STRB     R1,[R0, #+0]
   \   00000064   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Mid_7:
   \   00000068   0x....             LDR.N    R0,??DataTable21_3
   \   0000006A   0x7800             LDRB     R0,[R0, #+0]
   \   0000006C   0x2809             CMP      R0,#+9
   \   0000006E   0xD0F6             BEQ.N    ??High_Mid_9
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable27_3
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x1C40             ADDS     R0,R0,#+1
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable27_3
   \   0000007C   0x7008             STRB     R0,[R1, #+0]
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable27_3
   \   00000082   0x7802             LDRB     R2,[R0, #+0]
   \   00000084   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000086   0x2103             MOVS     R1,#+3
   \   00000088   0x205C             MOVS     R0,#+92
   \   0000008A   0x.... 0x....      BL       LCD_P6x8Str_3
   \   0000008E   0xE7D2             B.N      ??High_Mid_0
   \                     ??High_Mid_10:
   \   00000090   0x....             LDR.N    R0,??DataTable21_3
   \   00000092   0x2132             MOVS     R1,#+50
   \   00000094   0x7001             STRB     R1,[R0, #+0]
   \   00000096   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Mid_5:
   \   0000009A   0x....             LDR.N    R0,??DataTable21_3
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x2805             CMP      R0,#+5
   \   000000A0   0xD0F6             BEQ.N    ??High_Mid_10
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable27_2
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x1E40             SUBS     R0,R0,#+1
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable27_2
   \   000000AE   0x7008             STRB     R0,[R1, #+0]
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable27_2
   \   000000B4   0x7802             LDRB     R2,[R0, #+0]
   \   000000B6   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000B8   0x2103             MOVS     R1,#+3
   \   000000BA   0x2048             MOVS     R0,#+72
   \   000000BC   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000000C0   0xE7B9             B.N      ??High_Mid_0
   \                     ??High_Mid_11:
   \   000000C2   0x....             LDR.N    R0,??DataTable21_3
   \   000000C4   0x2132             MOVS     R1,#+50
   \   000000C6   0x7001             STRB     R1,[R0, #+0]
   \   000000C8   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Mid_8:
   \   000000CC   0x....             LDR.N    R0,??DataTable21_3
   \   000000CE   0x7800             LDRB     R0,[R0, #+0]
   \   000000D0   0x280A             CMP      R0,#+10
   \   000000D2   0xD0F6             BEQ.N    ??High_Mid_11
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable27_3
   \   000000D8   0x7800             LDRB     R0,[R0, #+0]
   \   000000DA   0x1E40             SUBS     R0,R0,#+1
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable27_3
   \   000000E0   0x7008             STRB     R0,[R1, #+0]
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable27_3
   \   000000E6   0x7802             LDRB     R2,[R0, #+0]
   \   000000E8   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000EA   0x2103             MOVS     R1,#+3
   \   000000EC   0x205C             MOVS     R0,#+92
   \   000000EE   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000000F2   0xE7A0             B.N      ??High_Mid_0
   \                     ??High_Mid_12:
   \   000000F4   0x....             LDR.N    R0,??DataTable21_3
   \   000000F6   0x2132             MOVS     R1,#+50
   \   000000F8   0x7001             STRB     R1,[R0, #+0]
   \   000000FA   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Mid_4:
   \   000000FE   0x....             LDR.N    R0,??DataTable21_3
   \   00000100   0x7800             LDRB     R0,[R0, #+0]
   \   00000102   0x2802             CMP      R0,#+2
   \   00000104   0xD0F6             BEQ.N    ??High_Mid_12
   \   00000106   0xE796             B.N      ??High_Mid_0
   \                     ??High_Mid_13:
   \   00000108   0x....             LDR.N    R0,??DataTable21_3
   \   0000010A   0x2132             MOVS     R1,#+50
   \   0000010C   0x7001             STRB     R1,[R0, #+0]
   \   0000010E   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??High_Mid_6:
   \   00000112   0x....             LDR.N    R0,??DataTable21_3
   \   00000114   0x7800             LDRB     R0,[R0, #+0]
   \   00000116   0x2806             CMP      R0,#+6
   \   00000118   0xD0F6             BEQ.N    ??High_Mid_13
   \   0000011A   0x2401             MOVS     R4,#+1
   \   0000011C   0xE78B             B.N      ??High_Mid_0
   \                     ??High_Mid_3:
   \   0000011E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void Mid_Wu(void)
   \                     Mid_Wu:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE019             B.N      ??Mid_Wu_0
   \                     ??Mid_Wu_1:
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable34
   \   0000000A   0x2132             MOVS     R1,#+50
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Mid_Wu_2:
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xD0F4             BEQ.N    ??Mid_Wu_1
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable28
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable28
   \   00000028   0x7008             STRB     R0,[R1, #+0]
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable28
   \   0000002E   0x7802             LDRB     R2,[R0, #+0]
   \   00000030   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000032   0x2103             MOVS     R1,#+3
   \   00000034   0x2048             MOVS     R0,#+72
   \   00000036   0x.... 0x....      BL       LCD_P6x8Str_3
   \                     ??Mid_Wu_0:
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x2C00             CMP      R4,#+0
   \   0000003E   0xD17B             BNE.N    ??Mid_Wu_3
   \   00000040   0x.... 0x....      BL       CH451_GetKeyValue
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000048   0x7800             LDRB     R0,[R0, #+0]
   \   0000004A   0x2801             CMP      R0,#+1
   \   0000004C   0xD0E1             BEQ.N    ??Mid_Wu_2
   \   0000004E   0x2802             CMP      R0,#+2
   \   00000050   0xD05F             BEQ.N    ??Mid_Wu_4
   \   00000052   0x2805             CMP      R0,#+5
   \   00000054   0xD027             BEQ.N    ??Mid_Wu_5
   \   00000056   0x2806             CMP      R0,#+6
   \   00000058   0xD067             BEQ.N    ??Mid_Wu_6
   \   0000005A   0x2809             CMP      R0,#+9
   \   0000005C   0xD008             BEQ.N    ??Mid_Wu_7
   \   0000005E   0x280A             CMP      R0,#+10
   \   00000060   0xD03C             BEQ.N    ??Mid_Wu_8
   \   00000062   0xE7EA             B.N      ??Mid_Wu_0
   \                     ??Mid_Wu_9:
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000068   0x2132             MOVS     R1,#+50
   \   0000006A   0x7001             STRB     R1,[R0, #+0]
   \   0000006C   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Mid_Wu_7:
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x2809             CMP      R0,#+9
   \   00000078   0xD0F4             BEQ.N    ??Mid_Wu_9
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable29
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x1C40             ADDS     R0,R0,#+1
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable29
   \   00000086   0x7008             STRB     R0,[R1, #+0]
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable29
   \   0000008C   0x7802             LDRB     R2,[R0, #+0]
   \   0000008E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000090   0x2103             MOVS     R1,#+3
   \   00000092   0x205C             MOVS     R0,#+92
   \   00000094   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000098   0xE7CF             B.N      ??Mid_Wu_0
   \                     ??Mid_Wu_10:
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable34
   \   0000009E   0x2132             MOVS     R1,#+50
   \   000000A0   0x7001             STRB     R1,[R0, #+0]
   \   000000A2   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Mid_Wu_5:
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0x2805             CMP      R0,#+5
   \   000000AE   0xD0F4             BEQ.N    ??Mid_Wu_10
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable28
   \   000000B4   0x7800             LDRB     R0,[R0, #+0]
   \   000000B6   0x1E40             SUBS     R0,R0,#+1
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable28
   \   000000BC   0x7008             STRB     R0,[R1, #+0]
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable28
   \   000000C2   0x7802             LDRB     R2,[R0, #+0]
   \   000000C4   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000C6   0x2103             MOVS     R1,#+3
   \   000000C8   0x2048             MOVS     R0,#+72
   \   000000CA   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000000CE   0xE7B4             B.N      ??Mid_Wu_0
   \                     ??Mid_Wu_11:
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000D4   0x2132             MOVS     R1,#+50
   \   000000D6   0x7001             STRB     R1,[R0, #+0]
   \   000000D8   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Mid_Wu_8:
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x280A             CMP      R0,#+10
   \   000000E4   0xD0F4             BEQ.N    ??Mid_Wu_11
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable29
   \   000000EA   0x7800             LDRB     R0,[R0, #+0]
   \   000000EC   0x1E40             SUBS     R0,R0,#+1
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable29
   \   000000F2   0x7008             STRB     R0,[R1, #+0]
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable29
   \   000000F8   0x7802             LDRB     R2,[R0, #+0]
   \   000000FA   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000FC   0x2103             MOVS     R1,#+3
   \   000000FE   0x205C             MOVS     R0,#+92
   \   00000100   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000104   0xE799             B.N      ??Mid_Wu_0
   \                     ??Mid_Wu_12:
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable34
   \   0000010A   0x2132             MOVS     R1,#+50
   \   0000010C   0x7001             STRB     R1,[R0, #+0]
   \   0000010E   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Mid_Wu_4:
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x2802             CMP      R0,#+2
   \   0000011A   0xD0F4             BEQ.N    ??Mid_Wu_12
   \   0000011C   0xE78D             B.N      ??Mid_Wu_0
   \                     ??Mid_Wu_13:
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000122   0x2132             MOVS     R1,#+50
   \   00000124   0x7001             STRB     R1,[R0, #+0]
   \   00000126   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Mid_Wu_6:
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable34
   \   0000012E   0x7800             LDRB     R0,[R0, #+0]
   \   00000130   0x2806             CMP      R0,#+6
   \   00000132   0xD0F4             BEQ.N    ??Mid_Wu_13
   \   00000134   0x2401             MOVS     R4,#+1
   \   00000136   0xE780             B.N      ??Mid_Wu_0
   \                     ??Mid_Wu_3:
   \   00000138   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void Duo_Ji_PD(void)
   \                     Duo_Ji_PD:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x2500             MOVS     R5,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x0022             MOVS     R2,R4
   \   0000000A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000000C   0x2102             MOVS     R1,#+2
   \   0000000E   0x205A             MOVS     R0,#+90
   \   00000010   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000014   0xE012             B.N      ??Duo_Ji_PD_0
   \                     ??Duo_Ji_PD_1:
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable34
   \   0000001A   0x2132             MOVS     R1,#+50
   \   0000001C   0x7001             STRB     R1,[R0, #+0]
   \   0000001E   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Duo_Ji_PD_2:
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000026   0x7800             LDRB     R0,[R0, #+0]
   \   00000028   0x2801             CMP      R0,#+1
   \   0000002A   0xD0F4             BEQ.N    ??Duo_Ji_PD_1
   \   0000002C   0x1C64             ADDS     R4,R4,#+1
   \   0000002E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000030   0x0022             MOVS     R2,R4
   \   00000032   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000034   0x2102             MOVS     R1,#+2
   \   00000036   0x205A             MOVS     R0,#+90
   \   00000038   0x.... 0x....      BL       LCD_P6x8Str_3
   \                     ??Duo_Ji_PD_0:
   \   0000003C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003E   0x2D00             CMP      R5,#+0
   \   00000040   0xF040 0x80E3      BNE.W    ??Duo_Ji_PD_3
   \   00000044   0x.... 0x....      BL       CH451_GetKeyValue
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable34
   \   0000004C   0x7800             LDRB     R0,[R0, #+0]
   \   0000004E   0x2801             CMP      R0,#+1
   \   00000050   0xD0E7             BEQ.N    ??Duo_Ji_PD_2
   \   00000052   0x2802             CMP      R0,#+2
   \   00000054   0xD050             BEQ.N    ??Duo_Ji_PD_4
   \   00000056   0x2805             CMP      R0,#+5
   \   00000058   0xD026             BEQ.N    ??Duo_Ji_PD_5
   \   0000005A   0x2806             CMP      R0,#+6
   \   0000005C   0xD004             BEQ.N    ??Duo_Ji_PD_6
   \   0000005E   0x2809             CMP      R0,#+9
   \   00000060   0xD00E             BEQ.N    ??Duo_Ji_PD_7
   \   00000062   0x280A             CMP      R0,#+10
   \   00000064   0xD034             BEQ.N    ??Duo_Ji_PD_8
   \   00000066   0xE7E9             B.N      ??Duo_Ji_PD_0
   \                     ??Duo_Ji_PD_6:
   \   00000068   0x....             ADR.N    R2,??DataTable23  ;; 0x4F, 0x4B, 0x00, 0x00
   \   0000006A   0x2102             MOVS     R1,#+2
   \   0000006C   0x206E             MOVS     R0,#+110
   \   0000006E   0x.... 0x....      BL       LCD_P6x8Str
   \   00000072   0xE0C3             B.N      ??Duo_Ji_PD_9
   \                     ??Duo_Ji_PD_10:
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000078   0x2132             MOVS     R1,#+50
   \   0000007A   0x7001             STRB     R1,[R0, #+0]
   \   0000007C   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Duo_Ji_PD_7:
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x2809             CMP      R0,#+9
   \   00000088   0xD0F4             BEQ.N    ??Duo_Ji_PD_10
   \   0000008A   0x1CA4             ADDS     R4,R4,#+2
   \   0000008C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008E   0x0022             MOVS     R2,R4
   \   00000090   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000092   0x2102             MOVS     R1,#+2
   \   00000094   0x205A             MOVS     R0,#+90
   \   00000096   0x.... 0x....      BL       LCD_P6x8Str_3
   \   0000009A   0xE7CF             B.N      ??Duo_Ji_PD_0
   \                     ??Duo_Ji_PD_11:
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000A0   0x2132             MOVS     R1,#+50
   \   000000A2   0x7001             STRB     R1,[R0, #+0]
   \   000000A4   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Duo_Ji_PD_5:
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000AC   0x7800             LDRB     R0,[R0, #+0]
   \   000000AE   0x2805             CMP      R0,#+5
   \   000000B0   0xD0F4             BEQ.N    ??Duo_Ji_PD_11
   \   000000B2   0x1E64             SUBS     R4,R4,#+1
   \   000000B4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B6   0x0022             MOVS     R2,R4
   \   000000B8   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000BA   0x2102             MOVS     R1,#+2
   \   000000BC   0x205A             MOVS     R0,#+90
   \   000000BE   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000000C2   0xE7BB             B.N      ??Duo_Ji_PD_0
   \                     ??Duo_Ji_PD_12:
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000C8   0x2132             MOVS     R1,#+50
   \   000000CA   0x7001             STRB     R1,[R0, #+0]
   \   000000CC   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Duo_Ji_PD_8:
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000D4   0x7800             LDRB     R0,[R0, #+0]
   \   000000D6   0x280A             CMP      R0,#+10
   \   000000D8   0xD0F4             BEQ.N    ??Duo_Ji_PD_12
   \   000000DA   0x1EA4             SUBS     R4,R4,#+2
   \   000000DC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000DE   0x0022             MOVS     R2,R4
   \   000000E0   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000E2   0x2102             MOVS     R1,#+2
   \   000000E4   0x205A             MOVS     R0,#+90
   \   000000E6   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000000EA   0xE7A7             B.N      ??Duo_Ji_PD_0
   \                     ??Duo_Ji_PD_13:
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000F0   0x2132             MOVS     R1,#+50
   \   000000F2   0x7001             STRB     R1,[R0, #+0]
   \   000000F4   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Duo_Ji_PD_4:
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000FC   0x7800             LDRB     R0,[R0, #+0]
   \   000000FE   0x2802             CMP      R0,#+2
   \   00000100   0xD0F4             BEQ.N    ??Duo_Ji_PD_13
   \   00000102   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000104   0x2C04             CMP      R4,#+4
   \   00000106   0xD11A             BNE.N    ??Duo_Ji_PD_14
   \   00000108   0x2003             MOVS     R0,#+3
   \   0000010A   0x.... 0x....      BL       LCD_CLS2
   \   0000010E   0x.... 0x....      LDR.W    R2,??DataTable31
   \   00000112   0x2103             MOVS     R1,#+3
   \   00000114   0x2000             MOVS     R0,#+0
   \   00000116   0x.... 0x....      BL       LCD_P6x8Str
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable28
   \   0000011E   0x7802             LDRB     R2,[R0, #+0]
   \   00000120   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000122   0x2103             MOVS     R1,#+3
   \   00000124   0x2048             MOVS     R0,#+72
   \   00000126   0x.... 0x....      BL       LCD_P6x8Str_3
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable29
   \   0000012E   0x7802             LDRB     R2,[R0, #+0]
   \   00000130   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000132   0x2103             MOVS     R1,#+3
   \   00000134   0x205C             MOVS     R0,#+92
   \   00000136   0x.... 0x....      BL       LCD_P6x8Str_3
   \   0000013A   0x.... 0x....      BL       Mid_Wu
   \                     ??Duo_Ji_PD_14:
   \   0000013E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000140   0x2C02             CMP      R4,#+2
   \   00000142   0xD11A             BNE.N    ??Duo_Ji_PD_15
   \   00000144   0x2003             MOVS     R0,#+3
   \   00000146   0x.... 0x....      BL       LCD_CLS2
   \   0000014A   0x.... 0x....      LDR.W    R2,??DataTable31_1
   \   0000014E   0x2103             MOVS     R1,#+3
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0x.... 0x....      BL       LCD_P6x8Str
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable26
   \   0000015A   0x7802             LDRB     R2,[R0, #+0]
   \   0000015C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000015E   0x2103             MOVS     R1,#+3
   \   00000160   0x2048             MOVS     R0,#+72
   \   00000162   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable26_1
   \   0000016A   0x7802             LDRB     R2,[R0, #+0]
   \   0000016C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000016E   0x2103             MOVS     R1,#+3
   \   00000170   0x205C             MOVS     R0,#+92
   \   00000172   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000176   0x.... 0x....      BL       High_Wu
   \                     ??Duo_Ji_PD_15:
   \   0000017A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000017C   0x2C03             CMP      R4,#+3
   \   0000017E   0xD11A             BNE.N    ??Duo_Ji_PD_16
   \   00000180   0x2003             MOVS     R0,#+3
   \   00000182   0x.... 0x....      BL       LCD_CLS2
   \   00000186   0x.... 0x....      LDR.W    R2,??DataTable32
   \   0000018A   0x2103             MOVS     R1,#+3
   \   0000018C   0x2000             MOVS     R0,#+0
   \   0000018E   0x.... 0x....      BL       LCD_P6x8Str
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable27_2
   \   00000196   0x7802             LDRB     R2,[R0, #+0]
   \   00000198   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000019A   0x2103             MOVS     R1,#+3
   \   0000019C   0x2048             MOVS     R0,#+72
   \   0000019E   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000001A2   0x.... 0x....      LDR.W    R0,??DataTable27_3
   \   000001A6   0x7802             LDRB     R2,[R0, #+0]
   \   000001A8   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000001AA   0x2103             MOVS     R1,#+3
   \   000001AC   0x205C             MOVS     R0,#+92
   \   000001AE   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000001B2   0x.... 0x....      BL       High_Mid
   \                     ??Duo_Ji_PD_16:
   \   000001B6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001B8   0x2C01             CMP      R4,#+1
   \   000001BA   0xD118             BNE.N    ??Duo_Ji_PD_17
   \   000001BC   0x2003             MOVS     R0,#+3
   \   000001BE   0x.... 0x....      BL       LCD_CLS2
   \   000001C2   0x.... 0x....      LDR.W    R2,??DataTable33
   \   000001C6   0x2103             MOVS     R1,#+3
   \   000001C8   0x2000             MOVS     R0,#+0
   \   000001CA   0x.... 0x....      BL       LCD_P6x8Str
   \   000001CE   0x....             LDR.N    R0,??DataTable25_7
   \   000001D0   0x7802             LDRB     R2,[R0, #+0]
   \   000001D2   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000001D4   0x2103             MOVS     R1,#+3
   \   000001D6   0x2048             MOVS     R0,#+72
   \   000001D8   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000001DC   0x....             LDR.N    R0,??DataTable25_8
   \   000001DE   0x7802             LDRB     R2,[R0, #+0]
   \   000001E0   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000001E2   0x2103             MOVS     R1,#+3
   \   000001E4   0x205C             MOVS     R0,#+92
   \   000001E6   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000001EA   0x.... 0x....      BL       High_You
   \                     ??Duo_Ji_PD_17:
   \   000001EE   0xE725             B.N      ??Duo_Ji_PD_0
   \                     ??Duo_Ji_PD_18:
   \   000001F0   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000001F4   0x2132             MOVS     R1,#+50
   \   000001F6   0x7001             STRB     R1,[R0, #+0]
   \   000001F8   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Duo_Ji_PD_9:
   \   000001FC   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000200   0x7800             LDRB     R0,[R0, #+0]
   \   00000202   0x2806             CMP      R0,#+6
   \   00000204   0xD0F4             BEQ.N    ??Duo_Ji_PD_18
   \   00000206   0x2501             MOVS     R5,#+1
   \   00000208   0xE718             B.N      ??Duo_Ji_PD_0
   \                     ??Duo_Ji_PD_3:
   \   0000020A   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void Car_Speed(void)
   \                     Car_Speed:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE019             B.N      ??Car_Speed_0
   \                     ??Car_Speed_1:
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable34
   \   0000000A   0x2132             MOVS     R1,#+50
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Car_Speed_2:
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xD0F4             BEQ.N    ??Car_Speed_1
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable35
   \   00000028   0x7008             STRB     R0,[R1, #+0]
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000002E   0x7802             LDRB     R2,[R0, #+0]
   \   00000030   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x2024             MOVS     R0,#+36
   \   00000036   0x.... 0x....      BL       LCD_P6x8Str_3
   \                     ??Car_Speed_0:
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x2C00             CMP      R4,#+0
   \   0000003E   0xD172             BNE.N    ??Car_Speed_3
   \   00000040   0x.... 0x....      BL       CH451_GetKeyValue
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000048   0x7800             LDRB     R0,[R0, #+0]
   \   0000004A   0x2801             CMP      R0,#+1
   \   0000004C   0xD0E1             BEQ.N    ??Car_Speed_2
   \   0000004E   0x2802             CMP      R0,#+2
   \   00000050   0xD05D             BEQ.N    ??Car_Speed_4
   \   00000052   0x2805             CMP      R0,#+5
   \   00000054   0xD00A             BEQ.N    ??Car_Speed_5
   \   00000056   0x2809             CMP      R0,#+9
   \   00000058   0xD023             BEQ.N    ??Car_Speed_6
   \   0000005A   0x280A             CMP      R0,#+10
   \   0000005C   0xD03C             BEQ.N    ??Car_Speed_7
   \   0000005E   0xE7EC             B.N      ??Car_Speed_0
   \                     ??Car_Speed_8:
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000064   0x2132             MOVS     R1,#+50
   \   00000066   0x7001             STRB     R1,[R0, #+0]
   \   00000068   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Car_Speed_5:
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000070   0x7800             LDRB     R0,[R0, #+0]
   \   00000072   0x2805             CMP      R0,#+5
   \   00000074   0xD0F4             BEQ.N    ??Car_Speed_8
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable35
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0x1E40             SUBS     R0,R0,#+1
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable35
   \   00000082   0x7008             STRB     R0,[R1, #+0]
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable35
   \   00000088   0x7802             LDRB     R2,[R0, #+0]
   \   0000008A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000008C   0x2100             MOVS     R1,#+0
   \   0000008E   0x2024             MOVS     R0,#+36
   \   00000090   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000094   0xE7D1             B.N      ??Car_Speed_0
   \                     ??Car_Speed_9:
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable34
   \   0000009A   0x2132             MOVS     R1,#+50
   \   0000009C   0x7001             STRB     R1,[R0, #+0]
   \   0000009E   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Car_Speed_6:
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x2809             CMP      R0,#+9
   \   000000AA   0xD0F4             BEQ.N    ??Car_Speed_9
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable36
   \   000000B0   0x8800             LDRH     R0,[R0, #+0]
   \   000000B2   0x300A             ADDS     R0,R0,#+10
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable36
   \   000000B8   0x8008             STRH     R0,[R1, #+0]
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable36
   \   000000BE   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000C2   0x2107             MOVS     R1,#+7
   \   000000C4   0x2032             MOVS     R0,#+50
   \   000000C6   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000000CA   0xE7B6             B.N      ??Car_Speed_0
   \                     ??Car_Speed_10:
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000D0   0x2132             MOVS     R1,#+50
   \   000000D2   0x7001             STRB     R1,[R0, #+0]
   \   000000D4   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Car_Speed_7:
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable34
   \   000000DC   0x7800             LDRB     R0,[R0, #+0]
   \   000000DE   0x280A             CMP      R0,#+10
   \   000000E0   0xD0F4             BEQ.N    ??Car_Speed_10
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable36
   \   000000E6   0x8800             LDRH     R0,[R0, #+0]
   \   000000E8   0x380A             SUBS     R0,R0,#+10
   \   000000EA   0x.... 0x....      LDR.W    R1,??DataTable36
   \   000000EE   0x8008             STRH     R0,[R1, #+0]
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable36
   \   000000F4   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000F8   0x2107             MOVS     R1,#+7
   \   000000FA   0x2032             MOVS     R0,#+50
   \   000000FC   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000100   0xE79B             B.N      ??Car_Speed_0
   \                     ??Car_Speed_11:
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000106   0x2132             MOVS     R1,#+50
   \   00000108   0x7001             STRB     R1,[R0, #+0]
   \   0000010A   0x.... 0x....      BL       CH451_GetKeyValue
   \                     ??Car_Speed_4:
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable34
   \   00000112   0x7800             LDRB     R0,[R0, #+0]
   \   00000114   0x2802             CMP      R0,#+2
   \   00000116   0xD0F4             BEQ.N    ??Car_Speed_11
   \   00000118   0x....             ADR.N    R2,??DataTable23  ;; 0x4F, 0x4B, 0x00, 0x00
   \   0000011A   0x2100             MOVS     R1,#+0
   \   0000011C   0x203C             MOVS     R0,#+60
   \   0000011E   0x.... 0x....      BL       LCD_P6x8Str
   \   00000122   0x2401             MOVS     R4,#+1
   \   00000124   0xE789             B.N      ??Car_Speed_0
   \                     ??Car_Speed_3:
   \   00000126   0xBD10             POP      {R4,PC}          ;; return
    202          
    203          /*******************point结构体*********************/
    204          struct point_position{
    205            volatile byte x;
    206            volatile byte y;
    207            volatile byte i;//
    208            volatile byte j;//

   \                                 In section .bss, align 4
    209          }point;
   \                     point:
   \   00000000                      DS8 4
    210          /*******************point结构体END*********************/
    211          struct PID_proportion{
    212            volatile int16 P;
    213            volatile int16 I;
    214            volatile int16 D;

   \                                 In section .bss, align 4
    215          }Servo,Motor;
   \                     Servo:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
   \                     Motor:
   \   00000000                      DS8 8
    216          
    217          struct range
    218          {
    219            int16 head;
    220            int16 tail;

   \                                 In section .bss, align 4
    221          }servo;
   \                     servo:
   \   00000000                      DS8 4
    222          
    223          struct membership_grade
    224          {
    225            int16 s;
    226            int16 m;
    227            int16 b;

   \                                 In section .bss, align 4
    228          }sub;
   \                     `sub`:
   \   00000000                      DS8 8
    229          
    230          
    231          /***********************系统、总线频率设置**********************/

   \                                 In section .text, align 2, keep-with-next
    232          void pllinit180M(void)
    233          {
    234          	uint32_t temp_reg;
    235                  //使能IO端口时钟    
    236              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    237                                        | SIM_SCGC5_PORTB_MASK
    238                                        | SIM_SCGC5_PORTC_MASK
    239                                        | SIM_SCGC5_PORTD_MASK
    240                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit180M:
   \   00000000   0x....             LDR.N    R0,??DataTable25_5  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   00000008   0x....             LDR.N    R1,??DataTable25_5  ;; 0x40048038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    241              //这里处在默认的FEI模式
    242              //首先移动到FBE模式
    243              MCG_C2 = 0;  
   \   0000000C   0x....             LDR.N    R0,??DataTable24_6  ;; 0x40064001
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    244              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    245              //初始化晶振后释放锁定状态的振荡器和GPIO
    246              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable39  ;; 0x40048034
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable39  ;; 0x40048034
   \   00000020   0x6008             STR      R0,[R1, #+0]
    247              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable39_1  ;; 0x4007c008
   \   00000026   0x7800             LDRB     R0,[R0, #+0]
   \   00000028   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable39_1  ;; 0x4007c008
   \   00000030   0x7008             STRB     R0,[R1, #+0]
    248              
    249              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    250              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    251              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   00000032   0x....             LDR.N    R0,??DataTable24_5  ;; 0x40064000
   \   00000034   0x2198             MOVS     R1,#+152
   \   00000036   0x7001             STRB     R1,[R0, #+0]
    252              
    253              //等待晶振稳定	    
    254              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    255              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit180M_0:
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable44  ;; 0x40064006
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x06C0             LSLS     R0,R0,#+27
   \   00000040   0xD4FA             BMI.N    ??pllinit180M_0
    256              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit180M_1:
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable44  ;; 0x40064006
   \   00000046   0x7800             LDRB     R0,[R0, #+0]
   \   00000048   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x2802             CMP      R0,#+2
   \   00000050   0xD1F7             BNE.N    ??pllinit180M_1
    257              //进入FBE模式,
    258              MCG_C5 = MCG_C5_PRDIV(0x0e);//分频在2~4MHz之间，分频后频率=晶振频率/(PRDIV+1) 3.3MHz                
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable39_2  ;; 0x40064004
   \   00000056   0x210E             MOVS     R1,#+14
   \   00000058   0x7001             STRB     R1,[R0, #+0]
    259              MCG_C6 = 0x0;//确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable39_3  ;; 0x40064005
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x7001             STRB     R1,[R0, #+0]
    260              temp_reg = FMC_PFAPR;//保存FMC_PFAPR当前的值
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable39_4  ;; 0x4001f000
   \   00000066   0x6800             LDR      R0,[R0, #+0]
    261              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    262                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    263                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK; //通过M&PFD置位M0PFD来禁止预取功能   
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable39_4  ;; 0x4001f000
   \   0000006C   0x6809             LDR      R1,[R1, #+0]
   \   0000006E   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   00000072   0x.... 0x....      LDR.W    R2,??DataTable39_4  ;; 0x4001f000
   \   00000076   0x6011             STR      R1,[R2, #+0]
    264              ///设置系统分频器
    265              //MCG=PLL, core = MCG, bus = MCG/3, FlexBus = MCG/3, Flash clock= MCG/8
    266              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(3) 
    267                           | SIM_CLKDIV1_OUTDIV3(2) | SIM_CLKDIV1_OUTDIV4(7);       
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable39_5  ;; 0x40048044
   \   0000007C   0x.... 0x....      LDR.W    R2,??DataTable39_6  ;; 0x3270000
   \   00000080   0x600A             STR      R2,[R1, #+0]
    268              FMC_PFAPR = temp_reg;//从新存FMC_PFAPR的原始值 
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable39_4  ;; 0x4001f000
   \   00000086   0x6008             STR      R0,[R1, #+0]
    269              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    270              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(30);  //VDIV = 31 (x55)
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable39_3  ;; 0x40064005
   \   0000008C   0x215E             MOVS     R1,#+94
   \   0000008E   0x7001             STRB     R1,[R0, #+0]
    271                                                            //VDIV = 26 (x50)
    272              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit180M_2:
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable44  ;; 0x40064006
   \   00000094   0x7800             LDRB     R0,[R0, #+0]
   \   00000096   0x0680             LSLS     R0,R0,#+26
   \   00000098   0xD5FA             BPL.N    ??pllinit180M_2
    273              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit180M_3:
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable44  ;; 0x40064006
   \   0000009E   0x7800             LDRB     R0,[R0, #+0]
   \   000000A0   0x0640             LSLS     R0,R0,#+25
   \   000000A2   0xD5FA             BPL.N    ??pllinit180M_3
    274              //进入PBE模式    
    275              //通过清零CLKS位来进入PEE模式
    276              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    277              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   000000A4   0x....             LDR.N    R0,??DataTable24_5  ;; 0x40064000
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   000000AC   0x....             LDR.N    R1,??DataTable24_5  ;; 0x40064000
   \   000000AE   0x7008             STRB     R0,[R1, #+0]
    278              //等待时钟状态位更新
    279              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit180M_4:
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable44  ;; 0x40064006
   \   000000B4   0x7800             LDRB     R0,[R0, #+0]
   \   000000B6   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   000000BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BC   0x2803             CMP      R0,#+3
   \   000000BE   0xD1F7             BNE.N    ??pllinit180M_4
    280          }
   \   000000C0   0x4770             BX       LR               ;; return
    281          /***********************系统、总线频率设置END**********************/
    282          
    283          /************************舵机控制输出PWM模块***********************/

   \                                 In section .text, align 2, keep-with-next
    284          void hw_FTM1_init(void)
    285              {      	
    286                //SIM_SOPT4|=SIM_SOPT4_FTM1FLT0_MASK;        
    287                /* Turn on all port clocks */
    288                SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
   \                     hw_FTM1_init:
   \   00000000   0x....             LDR.N    R0,??DataTable25_5  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF44F 0x7100      MOV      R1,#+512
   \   00000008   0x4308             ORRS     R0,R1,R0
   \   0000000A   0x....             LDR.N    R1,??DataTable25_5  ;; 0x40048038
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    289                  
    290                /* Enable the function on PTA8 */
    291                PORTA_PCR8 = PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK;; // FTM is alt3 function for this pin         
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable41  ;; 0x40049020
   \   00000012   0xF44F 0x7150      MOV      R1,#+832
   \   00000016   0x6001             STR      R1,[R0, #+0]
    292              
    293                SIM_SCGC6|=SIM_SCGC6_FTM1_MASK;         //使能FTM1时钟      
   \   00000018   0x....             LDR.N    R0,??DataTable25_2  ;; 0x4004803c
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000020   0x....             LDR.N    R1,??DataTable25_2  ;; 0x4004803c
   \   00000022   0x6008             STR      R0,[R1, #+0]
    294                
    295                //change MSnB = 1  
    296                FTM1_C0SC |= FTM_CnSC_ELSB_MASK;
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable41_1  ;; 0x4003900c
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable41_1  ;; 0x4003900c
   \   00000032   0x6008             STR      R0,[R1, #+0]
    297                FTM1_C0SC &= ~FTM_CnSC_ELSA_MASK;
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable41_1  ;; 0x4003900c
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF030 0x0004      BICS     R0,R0,#0x4
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable41_1  ;; 0x4003900c
   \   00000042   0x6008             STR      R0,[R1, #+0]
    298                FTM1_C0SC |= FTM_CnSC_MSB_MASK;     
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable41_1  ;; 0x4003900c
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable41_1  ;; 0x4003900c
   \   00000052   0x6008             STR      R0,[R1, #+0]
    299                
    300                //FTM1_SC = FTM_SC_PS(0) | FTM_SC_CLKS(1);
    301                //FTM1_SC=0X0F;     
    302                FTM1_SC = 0xb; //not enable the interrupt mask向上计数模式
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable41_2  ;; 0x40039000
   \   00000058   0x210B             MOVS     R1,#+11
   \   0000005A   0x6001             STR      R1,[R0, #+0]
    303                //FTM1_SC=0X1F;       //BIT5  0 FTM counter operates in up counting mode.
    304                                      //1 FTM counter operates in up-down counting mode.      
    305                //BIT43 FTM1_SC|=FTM1_SC_CLKS_MASK;
    306                                      //00 No clock selected (This in effect disables the FTM counter.)
    307                                      //01 System clock
    308                                      //10 Fixed frequency clock
    309                                      //11 External clock
    310                //BIT210 FTM1_SC|=FTM1_SC_PS_MASK; 
    311                                      //100M          MOD=2000;     MOD=4000;   MOD=1000; 
    312                                      //000 Divide by 1---12KHZ     6K          24k
    313                                      //001 Divide by 2--- 6KHZ
    314                                      //010 Divide by 4--- 3K
    315                                      //011 Divide by 8--- 1.5K
    316                                      //100 Divide by 16---750
    317                                      //101 Divide by 32---375
    318                                      //110 Divide by 64---187.5HZ
    319                                      //111 Divide by 128--93.75hz             
    320                
    321                FTM1_MODE |= FTM_MODE_WPDIS_MASK;      
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable41_3  ;; 0x40039054
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable41_3  ;; 0x40039054
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    322                 //BIT1   Initialize the Channels Output
    323                //FTMEN is bit 0, need to set to zero so DECAPEN can be set to 0
    324                FTM1_MODE &= ~1;
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable41_3  ;; 0x40039054
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0x0840             LSRS     R0,R0,#+1
   \   00000074   0x0040             LSLS     R0,R0,#+1
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable41_3  ;; 0x40039054
   \   0000007A   0x6008             STR      R0,[R1, #+0]
    325                 //BIT0   FTM Enable
    326                 //0 Only the TPM-compatible registers (first set of registers) can be used without any restriction. Do not use the FTM-specific registers.
    327                 //1 All registers including the FTM-specific registers (second set of registers) are available for use with no restrictions.
    328                
    329                FTM1_OUTMASK=0xFE;   //0 Channel output is not masked. It continues to operate normally.
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable41_4  ;; 0x40039060
   \   00000080   0x21FE             MOVS     R1,#+254
   \   00000082   0x6001             STR      R1,[R0, #+0]
    330                                     //1 Channel output is masked. It is forced to its inactive state.
    331                
    332                FTM1_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable41_5  ;; 0x40039064
   \   00000088   0x2100             MOVS     R1,#+0
   \   0000008A   0x6001             STR      R1,[R0, #+0]
    333                FTM1_OUTINIT=0;
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable41_6  ;; 0x4003905c
   \   00000090   0x2100             MOVS     R1,#+0
   \   00000092   0x6001             STR      R1,[R0, #+0]
    334                FTM1_EXTTRIG=0;      //FTM External Trigger (FTMx_EXTTRIG)
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable41_7  ;; 0x4003906c
   \   00000098   0x2100             MOVS     R1,#+0
   \   0000009A   0x6001             STR      R1,[R0, #+0]
    335                FTM1_POL=0;          //Channels Polarity (FTMx_POL)
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable41_8  ;; 0x40039070
   \   000000A0   0x2100             MOVS     R1,#+0
   \   000000A2   0x6001             STR      R1,[R0, #+0]
    336                                     //0 The channel polarity is active high.
    337                                     //1 The channel polarity is active low.     
    338                //Set Edge Aligned PWM
    339                FTM1_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable41_9  ;; 0x40039080
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x0840             LSRS     R0,R0,#+1
   \   000000AC   0x0040             LSLS     R0,R0,#+1
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable41_9  ;; 0x40039080
   \   000000B2   0x6008             STR      R0,[R1, #+0]
    340                //QUADEN is Bit 1, Set Quadrature Decoder Mode (QUADEN) Enable to 0,   (disabled)
    341                //FTM0_SC = 0x16; //Center Aligned PWM Select = 0, sets FTM Counter to operate in up counting mode,
    342                //it is field 5 of FTMx_SC (status control) - also setting the pre-scale bits here
    343                
    344                FTM1_INVCTRL=0;     //反转控制
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable41_10  ;; 0x40039090
   \   000000B8   0x2100             MOVS     R1,#+0
   \   000000BA   0x6001             STR      R1,[R0, #+0]
    345                FTM1_SWOCTRL=0;     //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable41_11  ;; 0x40039094
   \   000000C0   0x2100             MOVS     R1,#+0
   \   000000C2   0x6001             STR      R1,[R0, #+0]
    346                FTM1_PWMLOAD=0;     //FTM PWM Load
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable41_12  ;; 0x40039098
   \   000000C8   0x2100             MOVS     R1,#+0
   \   000000CA   0x6001             STR      R1,[R0, #+0]
    347                                    //BIT9: 0 Loading updated values is disabled.
    348                                    //1 Loading updated values is enabled.
    349                FTM1_CNTIN=0;        //Counter Initial Value      
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable41_13  ;; 0x4003904c
   \   000000D0   0x2100             MOVS     R1,#+0
   \   000000D2   0x6001             STR      R1,[R0, #+0]
    350                FTM1_MOD=62500;//56250       //Modulo value,The EPWM period is determined by (MOD - CNTIN + 0x0001) 
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable41_14  ;; 0x40039008
   \   000000D8   0xF24F 0x4124      MOVW     R1,#+62500
   \   000000DC   0x6001             STR      R1,[R0, #+0]
    351                                     //采用龙丘时钟初始化函数，可以得到4分频的频率，系统60M频率时，PWM频率是15M,以此类推
    352                                     //PMW频率=X系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD
    353                FTM1_C0V=Servo_Middle;        //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable41_15  ;; 0x40039010
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable41_16
   \   000000E6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000EA   0x6001             STR      R1,[R0, #+0]
    354                FTM1_CNT=0;          //只有低16位可用
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable45  ;; 0x40039004
   \   000000F0   0x2100             MOVS     R1,#+0
   \   000000F2   0x6001             STR      R1,[R0, #+0]
    355          }
   \   000000F4   0x4770             BX       LR               ;; return
    356          /************************舵机控制输出PWM模块END***********************/
    357          
    358          /*********************电机正反转  C1口C3口输出PWM波*************/

   \                                 In section .text, align 2, keep-with-next
    359          void hw_FTM0_init(void)
    360              {      	
    361                
    362                SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK | SIM_SCGC5_PORTD_MASK;
   \                     hw_FTM0_init:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable41_17  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x50C0      ORRS     R0,R0,#0x1800
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable41_17  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    363                  
    364                
    365                PORTC_PCR1 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; // FTM is alt4 function for this pin         
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable41_18  ;; 0x4004b004
   \   00000014   0xF44F 0x6188      MOV      R1,#+1088
   \   00000018   0x6001             STR      R1,[R0, #+0]
    366                PORTC_PCR4 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable41_19  ;; 0x4004b010
   \   0000001E   0xF44F 0x6188      MOV      R1,#+1088
   \   00000022   0x6001             STR      R1,[R0, #+0]
    367                PORTC_PCR2 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable41_20  ;; 0x4004b008
   \   00000028   0xF44F 0x6188      MOV      R1,#+1088
   \   0000002C   0x6001             STR      R1,[R0, #+0]
    368                
    369                PORTD_PCR4 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; // FTM is alt4 function for this pin         
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable41_21  ;; 0x4004c010
   \   00000032   0xF44F 0x6188      MOV      R1,#+1088
   \   00000036   0x6001             STR      R1,[R0, #+0]
    370                PORTD_PCR5 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable41_22  ;; 0x4004c014
   \   0000003C   0xF44F 0x6188      MOV      R1,#+1088
   \   00000040   0x6001             STR      R1,[R0, #+0]
    371                PORTD_PCR6 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable41_23  ;; 0x4004c018
   \   00000046   0xF44F 0x6188      MOV      R1,#+1088
   \   0000004A   0x6001             STR      R1,[R0, #+0]
    372                
    373                SIM_SCGC6|=SIM_SCGC6_FTM0_MASK;         //使能FTM0时钟      
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable41_24  ;; 0x4004803c
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable41_24  ;; 0x4004803c
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    374                
    375                
    376                //电机1
    377                //C0口 
    378                FTM0_C0SC |= FTM_CnSC_ELSB_MASK;//ELSB=1，ELSA=0，左对齐，先高后低
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable41_25  ;; 0x4003800c
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable41_25  ;; 0x4003800c
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    379                FTM0_C0SC &= ~FTM_CnSC_ELSA_MASK;
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable41_25  ;; 0x4003800c
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable41_25  ;; 0x4003800c
   \   0000007A   0x6008             STR      R0,[R1, #+0]
    380                FTM0_C0SC |= FTM_CnSC_MSB_MASK;    //MSB=1，模式选择边沿对齐
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable41_25  ;; 0x4003800c
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable41_25  ;; 0x4003800c
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    381                //C3口
    382                FTM0_C3SC |= FTM_CnSC_ELSB_MASK;
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable42  ;; 0x40038024
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable42  ;; 0x40038024
   \   0000009A   0x6008             STR      R0,[R1, #+0]
    383                FTM0_C3SC &= ~FTM_CnSC_ELSA_MASK;
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable42  ;; 0x40038024
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0xF030 0x0004      BICS     R0,R0,#0x4
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable42  ;; 0x40038024
   \   000000AA   0x6008             STR      R0,[R1, #+0]
    384                FTM0_C3SC |= FTM_CnSC_MSB_MASK;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable42  ;; 0x40038024
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable42  ;; 0x40038024
   \   000000BA   0x6008             STR      R0,[R1, #+0]
    385                //C1口 电机控制长期高电压
    386                FTM0_C1SC |= FTM_CnSC_ELSB_MASK;
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable42_1  ;; 0x40038014
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable42_1  ;; 0x40038014
   \   000000CA   0x6008             STR      R0,[R1, #+0]
    387                FTM0_C1SC &= ~FTM_CnSC_ELSA_MASK;
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable42_1  ;; 0x40038014
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0xF030 0x0004      BICS     R0,R0,#0x4
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable42_1  ;; 0x40038014
   \   000000DA   0x6008             STR      R0,[R1, #+0]
    388                FTM0_C1SC |= FTM_CnSC_MSB_MASK;    
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable42_1  ;; 0x40038014
   \   000000E0   0x6800             LDR      R0,[R0, #+0]
   \   000000E2   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable42_1  ;; 0x40038014
   \   000000EA   0x6008             STR      R0,[R1, #+0]
    389                
    390                //电机2
    391                 FTM0_C4SC |= FTM_CnSC_ELSB_MASK;//ELSB=1，ELSA=0，左对齐，先高后低
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable43  ;; 0x4003802c
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable43  ;; 0x4003802c
   \   000000FA   0x6008             STR      R0,[R1, #+0]
    392                FTM0_C4SC &= ~FTM_CnSC_ELSA_MASK;
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable43  ;; 0x4003802c
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable43  ;; 0x4003802c
   \   0000010A   0x6008             STR      R0,[R1, #+0]
    393                FTM0_C4SC |= FTM_CnSC_MSB_MASK;    //MSB=1，模式选择边沿对齐
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable43  ;; 0x4003802c
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000116   0x.... 0x....      LDR.W    R1,??DataTable43  ;; 0x4003802c
   \   0000011A   0x6008             STR      R0,[R1, #+0]
    394                //C3口
    395                FTM0_C5SC |= FTM_CnSC_ELSB_MASK;
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable43_1  ;; 0x40038034
   \   00000120   0x6800             LDR      R0,[R0, #+0]
   \   00000122   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000126   0x.... 0x....      LDR.W    R1,??DataTable43_1  ;; 0x40038034
   \   0000012A   0x6008             STR      R0,[R1, #+0]
    396                FTM0_C5SC &= ~FTM_CnSC_ELSA_MASK;
   \   0000012C   0x.... 0x....      LDR.W    R0,??DataTable43_1  ;; 0x40038034
   \   00000130   0x6800             LDR      R0,[R0, #+0]
   \   00000132   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable43_1  ;; 0x40038034
   \   0000013A   0x6008             STR      R0,[R1, #+0]
    397                FTM0_C5SC |= FTM_CnSC_MSB_MASK;
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable43_1  ;; 0x40038034
   \   00000140   0x6800             LDR      R0,[R0, #+0]
   \   00000142   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000146   0x.... 0x....      LDR.W    R1,??DataTable43_1  ;; 0x40038034
   \   0000014A   0x6008             STR      R0,[R1, #+0]
    398                //C1口 电机控制长期高电压
    399                FTM0_C6SC |= FTM_CnSC_ELSB_MASK;
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable44_1  ;; 0x4003803c
   \   00000150   0x6800             LDR      R0,[R0, #+0]
   \   00000152   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable44_1  ;; 0x4003803c
   \   0000015A   0x6008             STR      R0,[R1, #+0]
    400                FTM0_C6SC &= ~FTM_CnSC_ELSA_MASK;
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable44_1  ;; 0x4003803c
   \   00000160   0x6800             LDR      R0,[R0, #+0]
   \   00000162   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable44_1  ;; 0x4003803c
   \   0000016A   0x6008             STR      R0,[R1, #+0]
    401                FTM0_C6SC |= FTM_CnSC_MSB_MASK;    
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable44_1  ;; 0x4003803c
   \   00000170   0x6800             LDR      R0,[R0, #+0]
   \   00000172   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable44_1  ;; 0x4003803c
   \   0000017A   0x6008             STR      R0,[R1, #+0]
    402                FTM0_SC = 0xC; //not enable the interrupt mask向上计数模式
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable44_2  ;; 0x40038000
   \   00000180   0x210C             MOVS     R1,#+12
   \   00000182   0x6001             STR      R1,[R0, #+0]
    403                               //中断禁止，时钟源来自总线时钟60MHz，16分频后得到3.75MHz，CLKS=01，PS=100,CPWMS=0，递增计数
    404                FTM0_MODE |= FTM_MODE_WPDIS_MASK;  //写保护禁止    
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable44_3  ;; 0x40038054
   \   00000188   0x6800             LDR      R0,[R0, #+0]
   \   0000018A   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000018E   0x.... 0x....      LDR.W    R1,??DataTable44_3  ;; 0x40038054
   \   00000192   0x6008             STR      R0,[R1, #+0]
    405                 //BIT1   Initialize the Channels Output
    406                //FTMEN is bit 0, need to set to zero so DECAPEN can be set to 0
    407                FTM0_MODE &= ~1;  //FTM0使能
   \   00000194   0x.... 0x....      LDR.W    R0,??DataTable44_3  ;; 0x40038054
   \   00000198   0x6800             LDR      R0,[R0, #+0]
   \   0000019A   0x0840             LSRS     R0,R0,#+1
   \   0000019C   0x0040             LSLS     R0,R0,#+1
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable44_3  ;; 0x40038054
   \   000001A2   0x6008             STR      R0,[R1, #+0]
    408                 //BIT0   FTM Enable
    409                 //0 Only the TPM-compatible registers (first set of registers) can be used without any restriction. Do not use the FTM-specific registers.
    410                 //1 All registers including the FTM-specific registers (second set of registers) are available for use with no restrictions.
    411                
    412                FTM0_OUTMASK=0x84;   //0 Channel output is not masked. It continues to operate normally.
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable44_4  ;; 0x40038060
   \   000001A8   0x2184             MOVS     R1,#+132
   \   000001AA   0x6001             STR      R1,[R0, #+0]
    413                                     //1 Channel output is masked. It is forced to its inactive state.
    414                                     //通道3 1 0输出，其他通道屏蔽   
    415                FTM0_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)//DECAPEN=0，双边沿捕捉禁止，COMBINE=0，不级联
   \   000001AC   0x.... 0x....      LDR.W    R0,??DataTable44_5  ;; 0x40038064
   \   000001B0   0x2100             MOVS     R1,#+0
   \   000001B2   0x6001             STR      R1,[R0, #+0]
    416                FTM0_OUTINIT=0;
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable44_6  ;; 0x4003805c
   \   000001B8   0x2100             MOVS     R1,#+0
   \   000001BA   0x6001             STR      R1,[R0, #+0]
    417                FTM0_EXTTRIG=0;      //FTM External Trigger (FTMx_EXTTRIG)
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable44_7  ;; 0x4003806c
   \   000001C0   0x2100             MOVS     R1,#+0
   \   000001C2   0x6001             STR      R1,[R0, #+0]
    418                FTM0_POL=0;          //Channels Polarity (FTMx_POL)
   \   000001C4   0x.... 0x....      LDR.W    R0,??DataTable44_8  ;; 0x40038070
   \   000001C8   0x2100             MOVS     R1,#+0
   \   000001CA   0x6001             STR      R1,[R0, #+0]
    419                                     //0 The channel polarity is active high.
    420                                     //1 The channel polarity is active low.     
    421                //Set Edge Aligned PWM
    422                FTM0_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;//禁止正交解码模式
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable44_9  ;; 0x40038080
   \   000001D0   0x6800             LDR      R0,[R0, #+0]
   \   000001D2   0x0840             LSRS     R0,R0,#+1
   \   000001D4   0x0040             LSLS     R0,R0,#+1
   \   000001D6   0x.... 0x....      LDR.W    R1,??DataTable44_9  ;; 0x40038080
   \   000001DA   0x6008             STR      R0,[R1, #+0]
    423                //QUADEN is Bit 1, Set Quadrature Decoder Mode (QUADEN) Enable to 0,   (disabled)
    424                //FTM0_SC = 0x16; //Center Aligned PWM Select = 0, sets FTM Counter to operate in up counting mode,
    425                //it is field 5 of FTMx_SC (status control) - also setting the pre-scale bits here
    426                
    427                FTM0_INVCTRL=0;     //反转控制
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable44_10  ;; 0x40038090
   \   000001E0   0x2100             MOVS     R1,#+0
   \   000001E2   0x6001             STR      R1,[R0, #+0]
    428                FTM0_SWOCTRL=0;     //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable44_11  ;; 0x40038094
   \   000001E8   0x2100             MOVS     R1,#+0
   \   000001EA   0x6001             STR      R1,[R0, #+0]
    429                FTM0_PWMLOAD=0;     //FTM PWM Load
   \   000001EC   0x.... 0x....      LDR.W    R0,??DataTable44_12  ;; 0x40038098
   \   000001F0   0x2100             MOVS     R1,#+0
   \   000001F2   0x6001             STR      R1,[R0, #+0]
    430                                    //BIT9: 0 Loading updated values is disabled.
    431                                    //1 Loading updated values is enabled.
    432                FTM0_CNTIN=0;        //Counter Initial Value  初始技术值为0    
   \   000001F4   0x.... 0x....      LDR.W    R0,??DataTable44_13  ;; 0x4003804c
   \   000001F8   0x2100             MOVS     R1,#+0
   \   000001FA   0x6001             STR      R1,[R0, #+0]
    433                FTM0_MOD=375;       //375为10K 
   \   000001FC   0x.... 0x....      LDR.W    R0,??DataTable44_14  ;; 0x40038008
   \   00000200   0xF240 0x1177      MOVW     R1,#+375
   \   00000204   0x6001             STR      R1,[R0, #+0]
    434                                     //采用龙丘时钟初始化函数，可以得到4分频的频率，系统60M频率时，PWM频率是15M,以此类推
    435                                     //PMW频率=X系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD
    436                FTM0_C0V=0;//20;        //反转
   \   00000206   0x.... 0x....      LDR.W    R0,??DataTable44_15  ;; 0x40038010
   \   0000020A   0x2100             MOVS     R1,#+0
   \   0000020C   0x6001             STR      R1,[R0, #+0]
    437                FTM0_C1V=375;        //持续高电平
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable45_1  ;; 0x40038018
   \   00000212   0xF240 0x1177      MOVW     R1,#+375
   \   00000216   0x6001             STR      R1,[R0, #+0]
    438                FTM0_C3V=0;//80;           //正转
   \   00000218   0x.... 0x....      LDR.W    R0,??DataTable45_2  ;; 0x40038028
   \   0000021C   0x2100             MOVS     R1,#+0
   \   0000021E   0x6001             STR      R1,[R0, #+0]
    439                
    440                FTM0_C4V=0;//100;        //正转
   \   00000220   0x.... 0x....      LDR.W    R0,??DataTable45_3  ;; 0x40038030
   \   00000224   0x2100             MOVS     R1,#+0
   \   00000226   0x6001             STR      R1,[R0, #+0]
    441                FTM0_C5V=375;        //持续高电平
   \   00000228   0x.... 0x....      LDR.W    R0,??DataTable45_4  ;; 0x40038038
   \   0000022C   0xF240 0x1177      MOVW     R1,#+375
   \   00000230   0x6001             STR      R1,[R0, #+0]
    442                FTM0_C6V=0;//20;           //反转
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable45_5  ;; 0x40038040
   \   00000236   0x2100             MOVS     R1,#+0
   \   00000238   0x6001             STR      R1,[R0, #+0]
    443                
    444                FTM0_CNT=0;          //只有低16位可用
   \   0000023A   0x.... 0x....      LDR.W    R0,??DataTable45_6  ;; 0x40038004
   \   0000023E   0x2100             MOVS     R1,#+0
   \   00000240   0x6001             STR      R1,[R0, #+0]
    445          }
   \   00000242   0x4770             BX       LR               ;; return
    446          /*********************电机正反转  C1口C3口输出PWM波END*************/
    447          
    448          /****************FTM正交分解，用于电机1测脉冲数的   A10口*************/

   \                                 In section .text, align 2, keep-with-next
    449          void FTM2_QUAD_Init(void)  
    450          {  
    451            PORTA_PCR10    =  PORT_PCR_MUX(6);             // 设置引脚A10引脚为FTM2_PHA功能  
   \                     FTM2_QUAD_Init:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable45_7  ;; 0x40049028
   \   00000004   0xF44F 0x61C0      MOV      R1,#+1536
   \   00000008   0x6001             STR      R1,[R0, #+0]
    452            PORTA_PCR11    =  PORT_PCR_MUX(6);             // 设置引脚A11引脚为FTM2_PHB功能  
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable45_8  ;; 0x4004902c
   \   0000000E   0xF44F 0x61C0      MOV      R1,#+1536
   \   00000012   0x6001             STR      R1,[R0, #+0]
    453            PORT_PCR_REG(PORTA_BASE_PTR, 10) |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ; //开弱上拉
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable45_7  ;; 0x40049028
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable45_7  ;; 0x40049028
   \   00000022   0x6008             STR      R0,[R1, #+0]
    454            PORT_PCR_REG(PORTA_BASE_PTR, 11) |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ; //开弱上拉
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable45_8  ;; 0x4004902c
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable45_8  ;; 0x4004902c
   \   00000032   0x6008             STR      R0,[R1, #+0]
    455            SIM_SCGC3     |=  SIM_SCGC3_FTM2_MASK;                // 使能FTM2时钟  
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable45_9  ;; 0x40048030
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable45_9  ;; 0x40048030
   \   00000042   0x6008             STR      R0,[R1, #+0]
    456            FTM2_MODE     |=  FTM_MODE_WPDIS_MASK;                // 写保护禁止  
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable45_10  ;; 0x400b8054
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable45_10  ;; 0x400b8054
   \   00000052   0x6008             STR      R0,[R1, #+0]
    457            FTM2_QDCTRL   |=  FTM_QDCTRL_QUADMODE_MASK;          // AB相同时确定方向和计数值  
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable45_11  ;; 0x400b8080
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable45_11  ;; 0x400b8080
   \   00000062   0x6008             STR      R0,[R1, #+0]
    458            FTM2_CNTIN     =  0;                                 // FTM0计数器初始值为0  
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable45_12  ;; 0x400b804c
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x6001             STR      R1,[R0, #+0]
    459            FTM2_MOD       =  65535;                                 // 结束值  
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable45_13  ;; 0x400b8008
   \   00000070   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000074   0x6001             STR      R1,[R0, #+0]
    460            FTM2_QDCTRL   |=  FTM_QDCTRL_QUADEN_MASK;             // 启用FTM2正交解码模式  
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable45_11  ;; 0x400b8080
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable45_11  ;; 0x400b8080
   \   00000084   0x6008             STR      R0,[R1, #+0]
    461            FTM2_MODE     |=  FTM_MODE_FTMEN_MASK;                // FTM2EN=1    
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable45_10  ;; 0x400b8054
   \   0000008A   0x6800             LDR      R0,[R0, #+0]
   \   0000008C   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable45_10  ;; 0x400b8054
   \   00000094   0x6008             STR      R0,[R1, #+0]
    462            FTM2_CNT       =  0;  
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable45_14  ;; 0x400b8004
   \   0000009A   0x2100             MOVS     R1,#+0
   \   0000009C   0x6001             STR      R1,[R0, #+0]
    463          }  
   \   0000009E   0x4770             BX       LR               ;; return
    464          /****************FTM正交分解，用于测脉冲数的   A10口END*************/
    465          //电机2 DMA测脉冲数B18
    466          
    467          /**************************IO口初始化***********************/

   \                                 In section .text, align 2, keep-with-next
    468          void IO_Init()
    469          {
    470          	/* 打开各个端口的时钟源 */
    471          	SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK | SIM_SCGC5_PORTB_MASK | 
    472          	SIM_SCGC5_PORTC_MASK | SIM_SCGC5_PORTD_MASK | SIM_SCGC5_PORTE_MASK;
   \                     IO_Init:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable41_17  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable41_17  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    473          	PORTA_PCR14=PORT_PCR_MUX(1);//A14引脚设置为GPIO模式
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable45_15  ;; 0x40049038
   \   00000014   0xF44F 0x7180      MOV      R1,#+256
   \   00000018   0x6001             STR      R1,[R0, #+0]
    474          	PORTA_PCR15=PORT_PCR_MUX(1);//A15引脚设置为GPIO模式
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable45_16  ;; 0x4004903c
   \   0000001E   0xF44F 0x7180      MOV      R1,#+256
   \   00000022   0x6001             STR      R1,[R0, #+0]
    475          	PORTA_PCR16=PORT_PCR_MUX(1);//A16引脚设置为GPIO模式
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable45_17  ;; 0x40049040
   \   00000028   0xF44F 0x7180      MOV      R1,#+256
   \   0000002C   0x6001             STR      R1,[R0, #+0]
    476          	PORTA_PCR17=PORT_PCR_MUX(1);//A17引脚设置为GPIO模式
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable45_18  ;; 0x40049044
   \   00000032   0xF44F 0x7180      MOV      R1,#+256
   \   00000036   0x6001             STR      R1,[R0, #+0]
    477          	
    478          	//B0~B7设为GPIO输入模式，连接ov7260的8位灰度输入
    479          	PORTB_PCR0=PORT_PCR_MUX(1);//B0引脚设置为GPIO模式
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable45_19  ;; 0x4004a000
   \   0000003C   0xF44F 0x7180      MOV      R1,#+256
   \   00000040   0x6001             STR      R1,[R0, #+0]
    480          	PORTB_PCR1=PORT_PCR_MUX(1);//B1引脚设置为GPIO模式
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable45_20  ;; 0x4004a004
   \   00000046   0xF44F 0x7180      MOV      R1,#+256
   \   0000004A   0x6001             STR      R1,[R0, #+0]
    481          	PORTB_PCR2=PORT_PCR_MUX(1);//B2引脚设置为GPIO模式
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable45_21  ;; 0x4004a008
   \   00000050   0xF44F 0x7180      MOV      R1,#+256
   \   00000054   0x6001             STR      R1,[R0, #+0]
    482          	PORTB_PCR3=PORT_PCR_MUX(1);//B3引脚设置为GPIO模式
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable45_22  ;; 0x4004a00c
   \   0000005A   0xF44F 0x7180      MOV      R1,#+256
   \   0000005E   0x6001             STR      R1,[R0, #+0]
    483          	PORTB_PCR4=PORT_PCR_MUX(1);//B4引脚设置为GPIO模式
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable45_23  ;; 0x4004a010
   \   00000064   0xF44F 0x7180      MOV      R1,#+256
   \   00000068   0x6001             STR      R1,[R0, #+0]
    484          	PORTB_PCR5=PORT_PCR_MUX(1);//B5引脚设置为GPIO模式
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable45_24  ;; 0x4004a014
   \   0000006E   0xF44F 0x7180      MOV      R1,#+256
   \   00000072   0x6001             STR      R1,[R0, #+0]
    485          	PORTB_PCR6=PORT_PCR_MUX(1);//B6引脚设置为GPIO模式
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable45_25  ;; 0x4004a018
   \   00000078   0xF44F 0x7180      MOV      R1,#+256
   \   0000007C   0x6001             STR      R1,[R0, #+0]
    486          	PORTB_PCR7=PORT_PCR_MUX(1);//B7引脚设置为GPIO模式
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable45_26  ;; 0x4004a01c
   \   00000082   0xF44F 0x7180      MOV      R1,#+256
   \   00000086   0x6001             STR      R1,[R0, #+0]
    487          	GPIOB_PDDR&=0XFFFFFF00;//B0~B7设置为输入，数字摄像头8位灰度输入
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable45_27  ;; 0x400ff054
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0x0A00             LSRS     R0,R0,#+8
   \   00000090   0x0200             LSLS     R0,R0,#+8
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable45_27  ;; 0x400ff054
   \   00000096   0x6008             STR      R0,[R1, #+0]
    488          	
    489          	PORTA_PCR24=PORT_PCR_MUX(1)|PORT_PCR_IRQC(10);//A24引脚设置为GPIO模式，下降沿中断,场中断
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable45_28  ;; 0x40049060
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable45_29  ;; 0xa0100
   \   000000A0   0x6001             STR      R1,[R0, #+0]
    490          	
    491          	PORTB_PCR10=PORT_PCR_MUX(1)|PORT_PCR_IRQC(9);//B10引脚设置为GPIO模式，上升沿中断,行中断
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable45_30  ;; 0x4004a028
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable45_31  ;; 0x90100
   \   000000AA   0x6001             STR      R1,[R0, #+0]
    492          	
    493          	PORTB_PCR11=PORT_PCR_MUX(1)|PORT_PCR_IRQC(1);//B11引脚设置为GPIO模式，上升沿触发DMA请求
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable45_32  ;; 0x4004a02c
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable45_33  ;; 0x10100
   \   000000B4   0x6001             STR      R1,[R0, #+0]
    494          	
    495                  PORTC_PCR9=PORT_PCR_MUX(1)|PORT_PCR_IRQC(10);//C9引脚设置为GPIO模式，下降沿中断,红外遥控停车中断
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable45_34  ;; 0x4004b024
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable45_29  ;; 0xa0100
   \   000000BE   0x6001             STR      R1,[R0, #+0]
    496                  
    497                  
    498                  
    499          	GPIOA_PDDR=GPIO_PDDR_PDD(GPIO_PIN(14)|GPIO_PIN(16)|GPIO_PIN(17)|GPIO_PIN(26)|GPIO_PIN(28)); //A14为输出模式  P4灯闪烁证明进入PIT中断给脉冲计时
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable45_35  ;; 0x400ff014
   \   000000C4   0x.... 0x....      LDR.W    R1,??DataTable45_36  ;; 0x14034000
   \   000000C8   0x6001             STR      R1,[R0, #+0]
    500                  
    501                  PORTA_PCR28=PORT_PCR_MUX(1);//A17引脚设置为GPIO模式
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable45_37  ;; 0x40049070
   \   000000CE   0xF44F 0x7180      MOV      R1,#+256
   \   000000D2   0x6001             STR      R1,[R0, #+0]
    502                  PORTA_PCR26=PORT_PCR_MUX(1);//A17引脚设置为GPIO模式
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable45_38  ;; 0x40049068
   \   000000D8   0xF44F 0x7180      MOV      R1,#+256
   \   000000DC   0x6001             STR      R1,[R0, #+0]
    503          	//PORTC_PCR8=PORT_PCR_MUX(1);//C8引脚设置为GPIO模式，液晶命令/数据选择引脚
    504          	//PORTC_PCR10=PORT_PCR_MUX(1);//C10引脚设置为GPIO模式，液晶复位引脚
    505          	//GPIOC_PDDR|=0X00000500;//C8,C10设置为输出
    506          	//GPIOA_PDDR|=0X0003E000;//A14~A17设置为输出
    507          	//GPIOA_PCOR|=0X0003E000;//初始低电平输出
    508          	//PORTD_PCR2 = PORT_PCR_MUX(1)|PORT_PCR_IRQC(0x9);//IRQ|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
    509          	//PORTD_PCR2 = PORT_PCR_MUX(1)|PORT_PCR_IRQC(0x1);//DMA|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
    510          	//D2口GPIO功能，上升沿中断，PE启用拉电阻，PS上拉电阻
    511          }
   \   000000DE   0x4770             BX       LR               ;; return
    512          /**************************IO口初始化END***********************/
    513          
    514          
    515          /******************与上位机相连，用于看图像的*****************/

   \                                 In section .text, align 2, keep-with-next
    516          void SCI(void)
    517          {
   \                     SCI:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    518            volatile uint8 *uc_FramePoint;
    519            uint8 a=0;
   \   00000002   0x2400             MOVS     R4,#+0
    520            uint16 b=0;   
   \   00000004   0x2500             MOVS     R5,#+0
    521            
    522            uart_send1(UART0,0x01);
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable45_39  ;; 0x4006a000
   \   0000000C   0x.... 0x....      BL       uart_send1
    523            
    524            for(a=0;a<IMG_ROWS;a++)
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x0004             MOVS     R4,R0
   \   00000014   0xE011             B.N      ??SCI_0
    525            {
    526              for(b=0;b<IMG_COLS;b++)
    527              {
    528                uc_FramePoint=ImageData[a]+b;
   \                     ??SCI_1:
   \   00000016   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x20A0             MOVS     R0,#+160
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable45_40
   \   00000020   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000024   0x1828             ADDS     R0,R5,R0
    529                uart_send1(UART0,*uc_FramePoint);
   \   00000026   0x7801             LDRB     R1,[R0, #+0]
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable45_39  ;; 0x4006a000
   \   0000002C   0x.... 0x....      BL       uart_send1
    530              }
   \   00000030   0x1C6D             ADDS     R5,R5,#+1
   \                     ??SCI_2:
   \   00000032   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000034   0x2DA0             CMP      R5,#+160
   \   00000036   0xD3EE             BCC.N    ??SCI_1
   \   00000038   0x1C64             ADDS     R4,R4,#+1
   \                     ??SCI_0:
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x2C37             CMP      R4,#+55
   \   0000003E   0xD201             BCS.N    ??SCI_3
   \   00000040   0x2500             MOVS     R5,#+0
   \   00000042   0xE7F6             B.N      ??SCI_2
    531            }
    532           
    533            uart_send1(UART0,0x01);
   \                     ??SCI_3:
   \   00000044   0x2101             MOVS     R1,#+1
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable45_39  ;; 0x4006a000
   \   0000004A   0x.... 0x....      BL       uart_send1
    534            
    535            PORTA_PCR24|=PORT_PCR_ISF_MASK;//清除中断标志
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable45_28  ;; 0x40049060
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable45_28  ;; 0x40049060
   \   0000005C   0x6008             STR      R0,[R1, #+0]
    536          }
   \   0000005E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    537          /******************与上位机相连，用于看图像的END*****************/
    538          
    539          
    540          
    541          /********************串口模块波特率的设置*********************/
    542          //UART0初始化，使用PTD6为UART0_RX,PTD7为UART0_TX   D6接RXD  D7接TXD
    543          //波特率：115200

   \                                 In section .text, align 2, keep-with-next
    544          void UART0_Init(void)
    545          {
   \                     UART0_Init:
   \   00000000   0xB410             PUSH     {R4}
    546          	unsigned long uartclk_khz=180000;//时钟180MHz
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable45_41  ;; 0x2bf20
    547          	unsigned long baud=115200;//波特率256000
   \   00000006   0xF45F 0x31E1      MOVS     R1,#+115200
    548          	unsigned short sbr,brfa;
    549          	PORTB_PCR16|=PORT_PCR_MUX(3);//将D6引脚设置为模式3，即UART0_RX
   \   0000000A   0x.... 0x....      LDR.W    R2,??DataTable45_42  ;; 0x4004a040
   \   0000000E   0x6812             LDR      R2,[R2, #+0]
   \   00000010   0xF44F 0x7340      MOV      R3,#+768
   \   00000014   0x431A             ORRS     R2,R3,R2
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable45_42  ;; 0x4004a040
   \   0000001A   0x601A             STR      R2,[R3, #+0]
    550          	PORTB_PCR17|=PORT_PCR_MUX(3);//将D7引脚设置为模式3，即UART0_TX
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable45_43  ;; 0x4004a044
   \   00000020   0x6812             LDR      R2,[R2, #+0]
   \   00000022   0xF44F 0x7340      MOV      R3,#+768
   \   00000026   0x431A             ORRS     R2,R3,R2
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable45_43  ;; 0x4004a044
   \   0000002C   0x601A             STR      R2,[R3, #+0]
    551          	SIM_SCGC4|=SIM_SCGC4_UART0_MASK;//开启UART0时钟
   \   0000002E   0x....             LDR.N    R2,??DataTable39  ;; 0x40048034
   \   00000030   0x6812             LDR      R2,[R2, #+0]
   \   00000032   0xF452 0x6280      ORRS     R2,R2,#0x400
   \   00000036   0x....             LDR.N    R3,??DataTable39  ;; 0x40048034
   \   00000038   0x601A             STR      R2,[R3, #+0]
    552          	sbr=(unsigned short)((uartclk_khz*1000)/(baud*16));//计算并设置波特率
   \   0000003A   0xF44F 0x727A      MOV      R2,#+1000
   \   0000003E   0xFB02 0xF200      MUL      R2,R2,R0
   \   00000042   0x010B             LSLS     R3,R1,#+4
   \   00000044   0xFBB2 0xF2F3      UDIV     R2,R2,R3
    553          	
    554          	UART0_BDH=(unsigned char)((sbr&0x1F00)>>8);
   \   00000048   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000004A   0x1213             ASRS     R3,R2,#+8
   \   0000004C   0xF013 0x031F      ANDS     R3,R3,#0x1F
   \   00000050   0x.... 0x....      LDR.W    R4,??DataTable45_39  ;; 0x4006a000
   \   00000054   0x7023             STRB     R3,[R4, #+0]
    555          	UART0_BDL=(unsigned char)(sbr&0x00FF);
   \   00000056   0x.... 0x....      LDR.W    R3,??DataTable45_44  ;; 0x4006a001
   \   0000005A   0x701A             STRB     R2,[R3, #+0]
    556          	brfa = (((uartclk_khz*32000)/(baud*16))-(sbr*32));
   \   0000005C   0xF44F 0x43FA      MOV      R3,#+32000
   \   00000060   0x4358             MULS     R0,R3,R0
   \   00000062   0x0109             LSLS     R1,R1,#+4
   \   00000064   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000068   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000006A   0xEBB0 0x1042      SUBS     R0,R0,R2, LSL #+5
    557          	UART0_C4 = (unsigned char)(brfa & 0x001F);
   \   0000006E   0xF010 0x001F      ANDS     R0,R0,#0x1F
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable45_45  ;; 0x4006a00a
   \   00000076   0x7008             STRB     R0,[R1, #+0]
    558          	UART0_C2|=(UART_C2_TE_MASK|UART_C2_RE_MASK);
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable45_46  ;; 0x4006a003
   \   0000007C   0x7800             LDRB     R0,[R0, #+0]
   \   0000007E   0xF050 0x000C      ORRS     R0,R0,#0xC
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable45_46  ;; 0x4006a003
   \   00000086   0x7008             STRB     R0,[R1, #+0]
    559          	UART0_C1=0;	
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable45_47  ;; 0x4006a002
   \   0000008C   0x2100             MOVS     R1,#+0
   \   0000008E   0x7001             STRB     R1,[R0, #+0]
    560          }
   \   00000090   0xBC10             POP      {R4}
   \   00000092   0x4770             BX       LR               ;; return
    561          /********************串口模块波特率的设置END*********************/
    562          
    563          
    564          
    565          /****************************DMA初始化*****************************/
    566          //DMA初始化 使用PLCK经过4分频后与B11相连用于DMA外部中断

   \                                 In section .text, align 2, keep-with-next
    567          void DMA0_Init(void)
    568          {
    569          	SIM_SCGC6|=SIM_SCGC6_DMAMUX_MASK;//打开DMA多路复用器时钟
   \                     DMA0_Init:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable41_24  ;; 0x4004803c
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable41_24  ;; 0x4004803c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    570          	SIM_SCGC7|=SIM_SCGC7_DMA_MASK;//打开DMA模块时钟
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable45_48  ;; 0x40048040
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable45_48  ;; 0x40048040
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    571          	DMAMUX_CHCFG0=DMAMUX_CHCFG_SOURCE(50);//DMA通道0对应50号DMA请求，即PORTB	
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable45_49  ;; 0x40021000
   \   00000024   0x2132             MOVS     R1,#+50
   \   00000026   0x7001             STRB     R1,[R0, #+0]
    572          	
    573          	DMA_TCD0_CITER_ELINKNO=DMA_CITER_ELINKNO_CITER(IMG_COLS);//当前主循环次数,采集点数
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable45_50  ;; 0x40009016
   \   0000002C   0x21A0             MOVS     R1,#+160
   \   0000002E   0x8001             STRH     R1,[R0, #+0]
    574          	DMA_TCD0_BITER_ELINKNO=DMA_BITER_ELINKNO_BITER(IMG_COLS);//起始主循环次数，采集点数
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable45_51  ;; 0x4000901e
   \   00000034   0x21A0             MOVS     R1,#+160
   \   00000036   0x8001             STRH     R1,[R0, #+0]
    575          	DMA_TCD0_SADDR=(uint32)&GPIOB_PDIR;//设置源地址GPIO口，PORTB
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable45_52  ;; 0x40009000
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable45_53  ;; 0x400ff050
   \   00000040   0x6001             STR      R1,[R0, #+0]
    576          	DMA_TCD0_SOFF=0;//每次传送源地址不变
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable45_54  ;; 0x40009004
   \   00000046   0x2100             MOVS     R1,#+0
   \   00000048   0x8001             STRH     R1,[R0, #+0]
    577          	//DMA_TCD1_NBYTES_MLOFFYES=DMA_NBYTES_MLOFFYES_NBYTES(1)+DMA_NBYTES_MLOFFNO_SMLOE_MASK+DMA_NBYTES_MLOFFYES_MLOFF(-4);//传送4字节
    578          	DMA_TCD0_NBYTES_MLNO=DMA_NBYTES_MLNO_NBYTES(1);//每次读取一字节
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable45_55  ;; 0x40009008
   \   0000004E   0x2101             MOVS     R1,#+1
   \   00000050   0x6001             STR      R1,[R0, #+0]
    579          	DMA_TCD0_SLAST=0;//主循环结束后源地址0回写tcd
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable45_56  ;; 0x4000900c
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x6001             STR      R1,[R0, #+0]
    580          	DMA_TCD0_DLASTSGA=0;//主循环结束后目的地址0回写tcd
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable45_57  ;; 0x40009018
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x6001             STR      R1,[R0, #+0]
    581          	DMA_TCD0_DADDR=(uint32)ImageData;//设置目的地址，video数组第一个元素
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable45_58  ;; 0x40009010
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable45_40
   \   0000006A   0x6001             STR      R1,[R0, #+0]
    582          	DMA_TCD0_DOFF=1;//每次写目的地址加1
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable45_59  ;; 0x40009014
   \   00000070   0x2101             MOVS     R1,#+1
   \   00000072   0x8001             STRH     R1,[R0, #+0]
    583          	DMA_TCD0_ATTR=DMA_ATTR_SSIZE(0)+DMA_ATTR_DSIZE(0);//源数据宽度8bit，目的数据宽度8bit
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable45_60  ;; 0x40009006
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0x8001             STRH     R1,[R0, #+0]
    584          	DMA_TCD0_CSR=DMA_CSR_DREQ_MASK;//DMA通道0主循环结束后停止硬件请求
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable45_61  ;; 0x4000901c
   \   00000080   0x2108             MOVS     R1,#+8
   \   00000082   0x8001             STRH     R1,[R0, #+0]
    585          	DMA_TCD0_CSR|=DMA_CSR_INTMAJOR_MASK;//使能DMA0中断
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable45_61  ;; 0x4000901c
   \   00000088   0x8800             LDRH     R0,[R0, #+0]
   \   0000008A   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable45_61  ;; 0x4000901c
   \   00000092   0x8008             STRH     R0,[R1, #+0]
    586          	DMAMUX_CHCFG0|=DMAMUX_CHCFG_ENBL_MASK;//DMA通道0使能
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable45_49  ;; 0x40021000
   \   00000098   0x7800             LDRB     R0,[R0, #+0]
   \   0000009A   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable45_49  ;; 0x40021000
   \   000000A2   0x7008             STRB     R0,[R1, #+0]
    587          	
    588          	//DMA_TCD1_CSR|=DMA_CSR_INTMAJOR_MASK;//使能DMA中断
    589          	//DMA_TCD0_CSR|=DMA_CSR_startline_MASK;
    590          }
   \   000000A4   0x4770             BX       LR               ;; return
    591          /****************************DMA初始化END*****************************/
    592          
    593          
    594          
    595          //==========================================================================
    596          //函数名称: hw_pit_init                                                         
    597          //函数返回: 无                                          
    598          //参数说明: pitno:表示pit通道号。  
    599          //			timeout:表示定时溢出开始递减的值          
    600          //功能概要: 设置相关寄存器的值        
    601          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    602              void hw_pit_init(uint8 pitno,uint32 timeout)
    603              {
    604                SIM_SCGC6|=SIM_SCGC6_PIT_MASK;              //使能PIT时钟
   \                     hw_pit_init:
   \   00000000   0x....             LDR.N    R2,??DataTable41_24  ;; 0x4004803c
   \   00000002   0x6812             LDR      R2,[R2, #+0]
   \   00000004   0xF452 0x0200      ORRS     R2,R2,#0x800000
   \   00000008   0x....             LDR.N    R3,??DataTable41_24  ;; 0x4004803c
   \   0000000A   0x601A             STR      R2,[R3, #+0]
    605                PIT_MCR&=~(PIT_MCR_MDIS_MASK);              //调试模式下禁止
   \   0000000C   0x.... 0x....      LDR.W    R2,??DataTable45_62  ;; 0x40037000
   \   00000010   0x6812             LDR      R2,[R2, #+0]
   \   00000012   0xF032 0x0202      BICS     R2,R2,#0x2
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable45_62  ;; 0x40037000
   \   0000001A   0x601A             STR      R2,[R3, #+0]
    606                PIT_MCR|=PIT_MCR_FRZ_MASK;                  //使能PIT模块时钟
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable45_62  ;; 0x40037000
   \   00000020   0x6812             LDR      R2,[R2, #+0]
   \   00000022   0xF052 0x0201      ORRS     R2,R2,#0x1
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable45_62  ;; 0x40037000
   \   0000002A   0x601A             STR      R2,[R3, #+0]
    607                PIT_LDVAL(pitno)=timeout;                   //设置周期
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x0102             LSLS     R2,R0,#+4
   \   00000030   0x.... 0x....      LDR.W    R3,??DataTable45_63  ;; 0x40037100
   \   00000034   0x50D1             STR      R1,[R2, R3]
    608                PIT_TCTRL(pitno)|=PIT_TCTRL_TEN_MASK;       //使能pit模块运行
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable45_63  ;; 0x40037100
   \   0000003C   0xEB11 0x1100      ADDS     R1,R1,R0, LSL #+4
   \   00000040   0x6889             LDR      R1,[R1, #+8]
   \   00000042   0xF051 0x0101      ORRS     R1,R1,#0x1
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable45_63  ;; 0x40037100
   \   0000004C   0xEB12 0x1200      ADDS     R2,R2,R0, LSL #+4
   \   00000050   0x6091             STR      R1,[R2, #+8]
    609                PIT_TCTRL(pitno)&=~(PIT_TCTRL_TIE_MASK);    //关pit中断
   \   00000052   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable45_63  ;; 0x40037100
   \   00000058   0xEB11 0x1100      ADDS     R1,R1,R0, LSL #+4
   \   0000005C   0x6889             LDR      R1,[R1, #+8]
   \   0000005E   0xF031 0x0102      BICS     R1,R1,#0x2
   \   00000062   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000064   0x.... 0x....      LDR.W    R2,??DataTable45_63  ;; 0x40037100
   \   00000068   0xEB12 0x1000      ADDS     R0,R2,R0, LSL #+4
   \   0000006C   0x6081             STR      R1,[R0, #+8]
    610              }
   \   0000006E   0x4770             BX       LR               ;; return
    611             
    612          
    613          /*void binaryzation(){
    614           uint8 i=0,j=0;
    615            for(i=0;i<IMG_ROWS;i++)
    616            {
    617              if(i<8)
    618              {
    619                for(j=0;j<IMG_COLS;j++)
    620                {
    621                  if(j<50)
    622                  {
    623                    if(ImageData[i][j]<black_d1)ImageData[i][j]=0;
    624                    else ImageData[i][j]=255;
    625                  }
    626                  else if(j<110)
    627                  {
    628                    if(ImageData[i][j]<black_d2)ImageData[i][j]=0;
    629                    else ImageData[i][j]=255;
    630                  }
    631                  else
    632                  {
    633                    if(ImageData[i][j]<black_d3)ImageData[i][j]=0;
    634                    else ImageData[i][j]=255;
    635                  }
    636                }
    637              }
    638              else if(i<20)
    639              {
    640                for(j=0;j<IMG_COLS;j++)
    641                {
    642                  if(j<50)
    643                  {
    644                    if(ImageData[i][j]<black_c1)ImageData[i][j]=0;
    645                    else ImageData[i][j]=255;
    646                  }
    647                  else if(j<110)
    648                  {
    649                    if(ImageData[i][j]<black_c2)ImageData[i][j]=0;
    650                    else ImageData[i][j]=255;
    651                  }
    652                  else
    653                  {
    654                    if(ImageData[i][j]<black_c3)ImageData[i][j]=0;
    655                    else ImageData[i][j]=255;
    656                  }
    657                }
    658              }
    659              else if(i<34)
    660              {
    661                for(j=0;j<IMG_COLS;j++)
    662                {
    663                  if(j<50)
    664                  {
    665                    if(ImageData[i][j]<black_b1)ImageData[i][j]=0;
    666                    else ImageData[i][j]=255;
    667                  }
    668                  else if(j<110)
    669                  {
    670                    if(ImageData[i][j]<black_b2)ImageData[i][j]=0;
    671                    else ImageData[i][j]=255;
    672                  }
    673                  else
    674                  {
    675                    if(ImageData[i][j]<black_b3)ImageData[i][j]=0;
    676                    else ImageData[i][j]=255;
    677                  }
    678                }
    679              }
    680              else
    681              {
    682                for(j=0;j<IMG_COLS;j++)
    683                {
    684                  if(j<50)
    685                  {
    686                    if(ImageData[i][j]<black_a1)ImageData[i][j]=0;
    687                    else ImageData[i][j]=255;
    688                  }
    689                  else if(j<110)
    690                  {
    691                    if(ImageData[i][j]<black_a2)ImageData[i][j]=0;
    692                    else ImageData[i][j]=255;
    693                  }
    694                  else
    695                  {
    696                    if(ImageData[i][j]<black_a3)ImageData[i][j]=0;
    697                    else ImageData[i][j]=255;
    698                  }
    699                }
    700              }
    701            }
    702          }*/
    703          //==========================================================================
    704          //函数名: enable_pit_interrupt                                                     
    705          //函数返回: 无                                              
    706          //参数说明: pitno: 表示pit通道号      
    707          //功能概要: 开接收引脚的IRQ中断                                                                                                     
    708          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    709              void enable_pit_interrupt(uint8 pitno)
    710              {
   \                     enable_pit_interrupt:
   \   00000000   0xB580             PUSH     {R7,LR}
    711                PIT_TCTRL(pitno)|=(PIT_TCTRL_TIE_MASK); //开pit中断
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable45_63  ;; 0x40037100
   \   00000008   0xEB11 0x1100      ADDS     R1,R1,R0, LSL #+4
   \   0000000C   0x6889             LDR      R1,[R1, #+8]
   \   0000000E   0xF051 0x0102      ORRS     R1,R1,#0x2
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable45_63  ;; 0x40037100
   \   00000018   0xEB12 0x1200      ADDS     R2,R2,R0, LSL #+4
   \   0000001C   0x6091             STR      R1,[R2, #+8]
    712                switch(pitno)
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD005             BEQ.N    ??enable_pit_interrupt_0
   \   00000024   0x2802             CMP      R0,#+2
   \   00000026   0xD00B             BEQ.N    ??enable_pit_interrupt_1
   \   00000028   0xD306             BCC.N    ??enable_pit_interrupt_2
   \   0000002A   0x2803             CMP      R0,#+3
   \   0000002C   0xD00C             BEQ.N    ??enable_pit_interrupt_3
   \   0000002E   0xE00E             B.N      ??enable_pit_interrupt_4
    713                {
    714                case 0:
    715                  enable_irq(68);			      //开接收引脚的IRQ中断
   \                     ??enable_pit_interrupt_0:
   \   00000030   0x2044             MOVS     R0,#+68
   \   00000032   0x.... 0x....      BL       enable_irq
    716                  break;
   \   00000036   0xE00A             B.N      ??enable_pit_interrupt_4
    717                case 1:
    718                  enable_irq(69);			      //开接收引脚的IRQ中断
   \                     ??enable_pit_interrupt_2:
   \   00000038   0x2045             MOVS     R0,#+69
   \   0000003A   0x.... 0x....      BL       enable_irq
    719                  break;
   \   0000003E   0xE006             B.N      ??enable_pit_interrupt_4
    720                case 2:
    721                  enable_irq(70);			      //开接收引脚的IRQ中断
   \                     ??enable_pit_interrupt_1:
   \   00000040   0x2046             MOVS     R0,#+70
   \   00000042   0x.... 0x....      BL       enable_irq
    722                  break;
   \   00000046   0xE002             B.N      ??enable_pit_interrupt_4
    723                case 3:
    724                  enable_irq(71);			      //开接收引脚的IRQ中断
   \                     ??enable_pit_interrupt_3:
   \   00000048   0x2047             MOVS     R0,#+71
   \   0000004A   0x.... 0x....      BL       enable_irq
    725                  break;
    726                }
    727              }
   \                     ??enable_pit_interrupt_4:
   \   0000004E   0xBD01             POP      {R0,PC}          ;; return
    728          
    729          
    730          
    731          //==========================================================================
    732          //函数名: disable_pit_interrupt                                                     
    733          //函数返回: 无                                              
    734          //参数说明: pitno: 表示pit通道号      
    735          //功能概要: 开接收引脚的IRQ中断                                                                                                     
    736          //==========================================================================

   \                                 In section .text, align 2, keep-with-next
    737              void disable_pit_interrupt(uint8 pitno)
    738              {
   \                     disable_pit_interrupt:
   \   00000000   0xB580             PUSH     {R7,LR}
    739                PIT_TCTRL(pitno)&=~(PIT_TCTRL_TIE_MASK);//关pit中断
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable45_63  ;; 0x40037100
   \   00000008   0xEB11 0x1100      ADDS     R1,R1,R0, LSL #+4
   \   0000000C   0x6889             LDR      R1,[R1, #+8]
   \   0000000E   0xF031 0x0102      BICS     R1,R1,#0x2
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable45_63  ;; 0x40037100
   \   00000018   0xEB12 0x1200      ADDS     R2,R2,R0, LSL #+4
   \   0000001C   0x6091             STR      R1,[R2, #+8]
    740                switch(pitno)
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD005             BEQ.N    ??disable_pit_interrupt_0
   \   00000024   0x2802             CMP      R0,#+2
   \   00000026   0xD00B             BEQ.N    ??disable_pit_interrupt_1
   \   00000028   0xD306             BCC.N    ??disable_pit_interrupt_2
   \   0000002A   0x2803             CMP      R0,#+3
   \   0000002C   0xD00C             BEQ.N    ??disable_pit_interrupt_3
   \   0000002E   0xE00E             B.N      ??disable_pit_interrupt_4
    741                {
    742                case 0:
    743                  disable_irq(68);	              //关接收引脚的IRQ中断
   \                     ??disable_pit_interrupt_0:
   \   00000030   0x2044             MOVS     R0,#+68
   \   00000032   0x.... 0x....      BL       disable_irq
    744                  break;
   \   00000036   0xE00A             B.N      ??disable_pit_interrupt_4
    745                case 1:
    746                  disable_irq(69);		      //关接收引脚的IRQ中断
   \                     ??disable_pit_interrupt_2:
   \   00000038   0x2045             MOVS     R0,#+69
   \   0000003A   0x.... 0x....      BL       disable_irq
    747                  break;
   \   0000003E   0xE006             B.N      ??disable_pit_interrupt_4
    748                case 2:
    749                  disable_irq(70);		      //关接收引脚的IRQ中断
   \                     ??disable_pit_interrupt_1:
   \   00000040   0x2046             MOVS     R0,#+70
   \   00000042   0x.... 0x....      BL       disable_irq
    750                  break;
   \   00000046   0xE002             B.N      ??disable_pit_interrupt_4
    751                case 3:
    752                  disable_irq(71);		      //关接收引脚的IRQ中断
   \                     ??disable_pit_interrupt_3:
   \   00000048   0x2047             MOVS     R0,#+71
   \   0000004A   0x.... 0x....      BL       disable_irq
    753                  break;
    754                }
    755              }
   \                     ??disable_pit_interrupt_4:
   \   0000004E   0xBD01             POP      {R0,PC}          ;; return
    756          
    757          
    758          
    759          //*************************中断区*****************************//
    760          //DMA外部中断   B11口

   \                                 In section .text, align 4, keep-with-next
    761          void DMA_CHO_ISR(void)
    762          {
    763                  DisableInterrupts;
   \                     DMA_CHO_ISR:
   \   00000000   0xB672             CPSID i         
    764                  //DMA_INT&=~(DMA_INT_INT0_MASK);
    765          	DMA_INT|=DMA_INT_INT0_MASK;//清除通道0中断
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable46  ;; 0x40008024
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable46  ;; 0x40008024
   \   00000010   0x6008             STR      R0,[R1, #+0]
    766          	//putstr("DMA complete！");
    767          	//GPIOA_PTOR|=0X0003E000;//A14~A17设置为输出
    768          	row_F[imagerow]=1;//采集完成标志
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable46_2
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0x5442             STRB     R2,[R0, R1]
    769          	imagerow++;	
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x1C40             ADDS     R0,R0,#+1
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable46_1
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    770                  EnableInterrupts;   
   \   0000002E   0xB662             CPSIE i         
    771          }
   \   00000030   0x4770             BX       LR               ;; return
    772          
    773          

   \                                 In section .text, align 4, keep-with-next
    774          void porta_isr(void)//场中断，A24，下降沿中断
    775          { 
   \                     porta_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
    776            DisableInterrupts;
   \   00000002   0xB672             CPSID i         
    777            //PORTA_ISFR = 0xFFFFFFFF;  //Clear Port A ISR flags
    778            PORTA_PCR24|=PORT_PCR_ISF_MASK;//清除中断标志
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable45_28  ;; 0x40049060
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable45_28  ;; 0x40049060
   \   00000012   0x6008             STR      R0,[R1, #+0]
    779            DMA0_Init();
   \   00000014   0x.... 0x....      BL       DMA0_Init
    780            enable_irq(0);//使能DMA通道0完成中断
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       enable_irq
    781            row=0;//初始化行
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x6001             STR      R1,[R0, #+0]
    782            imagerow=0;//初始化采集行
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable46_1
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x6001             STR      R1,[R0, #+0]
    783            enable_irq (88);//使能B口中断 ，B10行中断
   \   0000002E   0x2058             MOVS     R0,#+88
   \   00000030   0x.... 0x....      BL       enable_irq
    784            EnableInterrupts;
   \   00000034   0xB662             CPSIE i         
    785            
    786            
    787          }
   \   00000036   0xBD01             POP      {R0,PC}          ;; return
    788          
    789          

   \                                 In section .text, align 4, keep-with-next
    790          void portb_isr(void)//行中断，B10，上升沿中断
    791          {
   \                     portb_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
    792            DisableInterrupts;
   \   00000002   0xB672             CPSID i         
    793            
    794            PORTB_PCR10|=PORT_PCR_ISF_MASK;//清除中断标志位
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable45_30  ;; 0x4004a028
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable45_30  ;; 0x4004a028
   \   00000012   0x6008             STR      R0,[R1, #+0]
    795            row++; //行计数
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x1C40             ADDS     R0,R0,#+1
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable46_3
   \   00000020   0x6008             STR      R0,[R1, #+0]
    796            
    797            //DMA_ERQ=0x1;//使能通道0硬件DMA请求    查看整场图像的时候用的
    798            if(row==data_table[imagerow])//如果当前行数据应该采集
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable46_1
   \   0000002C   0x6809             LDR      R1,[R1, #+0]
   \   0000002E   0x.... 0x....      LDR.W    R2,??DataTable46_4
   \   00000032   0xF852 0x1021      LDR      R1,[R2, R1, LSL #+2]
   \   00000036   0x4288             CMP      R0,R1
   \   00000038   0xD108             BNE.N    ??portb_isr_0
    799            {
    800              
    801              DMA_ERQ|=DMA_ERQ_ERQ0_MASK;//使能通道0硬件DMA请求  
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable46_5  ;; 0x4000800c
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable46_5  ;; 0x4000800c
   \   00000048   0x6008             STR      R0,[R1, #+0]
   \   0000004A   0xE01A             B.N      ??portb_isr_1
    802            } 
    803           
    804             else if(row>=endlineROW) //一场完成，关闭行中断
   \                     ??portb_isr_0:
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable46_3
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0x28A9             CMP      R0,#+169
   \   00000054   0xD315             BCC.N    ??portb_isr_1
    805            {  
    806              DMA_ERQ=0x00;
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable46_5  ;; 0x4000800c
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x6001             STR      R1,[R0, #+0]
    807              disable_irq(0);
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      BL       disable_irq
    808              disable_irq(88);
   \   00000064   0x2058             MOVS     R0,#+88
   \   00000066   0x.... 0x....      BL       disable_irq
    809              //binaryzation();
    810            // SCI();
    811              finish=1; 
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable46_6
   \   0000006E   0x2101             MOVS     R1,#+1
   \   00000070   0x7001             STRB     R1,[R0, #+0]
    812              GPIOA_PDOR=GPIOA_PDOR^(GPIO_PDOR_PDO(GPIO_PIN(28)));//对引脚某位进行取反操作
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable46_7  ;; 0x400ff000
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0xF090 0x5080      EORS     R0,R0,#0x10000000
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable46_7  ;; 0x400ff000
   \   00000080   0x6008             STR      R0,[R1, #+0]
    813            }
    814            EnableInterrupts;
   \                     ??portb_isr_1:
   \   00000082   0xB662             CPSIE i         
    815            
    816          }
   \   00000084   0xBD01             POP      {R0,PC}          ;; return
    817          

   \                                 In section .text, align 2, keep-with-next
    818          void pit1_isr(void)
    819          {
   \                     pit1_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
    820            PIT_TFLG(1)|=PIT_TFLG_TIF_MASK;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable46_8  ;; 0x4003711c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable46_8  ;; 0x4003711c
   \   00000010   0x6008             STR      R0,[R1, #+0]
    821            enable_pit_interrupt(1);
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0x.... 0x....      BL       enable_pit_interrupt
    822            timer++;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable46_9
   \   0000001C   0x8800             LDRH     R0,[R0, #+0]
   \   0000001E   0x1C40             ADDS     R0,R0,#+1
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable46_9
   \   00000024   0x8008             STRH     R0,[R1, #+0]
    823          }
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
    824            
    825          

   \                                 In section .text, align 4, keep-with-next
    826          void portc_isr(void)
    827          {
   \                     portc_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
    828            DisableInterrupts;
   \   00000002   0xB672             CPSID i         
    829            
    830            PORTC_PCR9|=PORT_PCR_ISF_MASK;//清除中断标志位
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable45_34  ;; 0x4004b024
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable45_34  ;; 0x4004b024
   \   00000012   0x6008             STR      R0,[R1, #+0]
    831            //light_change(Light_Run_PORT,Light_Run3);
    832            ir_deal();
   \   00000014   0x.... 0x....      BL       ir_deal
    833            EnableInterrupts;
   \   00000018   0xB662             CPSIE i         
    834          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
    835          
    836          

   \                                 In section .text, align 2, keep-with-next
    837          void pit0_isr(void)
    838          {  
   \                     pit0_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
    839            pulse=FTM2_CNT;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable46_10
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable45_14  ;; 0x400b8004
   \   0000000A   0x6809             LDR      R1,[R1, #+0]
   \   0000000C   0x8001             STRH     R1,[R0, #+0]
    840            FTM2_CNT=0;
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable45_14  ;; 0x400b8004
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x6001             STR      R1,[R0, #+0]
    841            pulse+=20;
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable46_10
   \   0000001A   0x8800             LDRH     R0,[R0, #+0]
   \   0000001C   0x3014             ADDS     R0,R0,#+20
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable46_10
   \   00000022   0x8008             STRH     R0,[R1, #+0]
    842            pulse2=get_counter_value();
   \   00000024   0x.... 0x....      BL       get_counter_value
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable46_11
   \   0000002C   0x8008             STRH     R0,[R1, #+0]
    843            lptmr_counter_clean();
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable46_12  ;; 0x40040000
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x0840             LSRS     R0,R0,#+1
   \   00000036   0x0040             LSLS     R0,R0,#+1
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable46_12  ;; 0x40040000
   \   0000003C   0x6008             STR      R0,[R1, #+0]
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable46_12  ;; 0x40040000
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable46_12  ;; 0x40040000
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    844            pulse=(pulse+pulse2)/2;
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable46_10
   \   00000052   0x8800             LDRH     R0,[R0, #+0]
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable46_11
   \   00000058   0x8809             LDRH     R1,[R1, #+0]
   \   0000005A   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   0000005E   0x2102             MOVS     R1,#+2
   \   00000060   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable46_10
   \   00000068   0x8008             STRH     R0,[R1, #+0]
    845            PIT_TFLG(0)|=PIT_TFLG_TIF_MASK;       //清标志
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable46_13  ;; 0x4003710c
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable46_13  ;; 0x4003710c
   \   00000078   0x6008             STR      R0,[R1, #+0]
    846            enable_pit_interrupt(0);
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x.... 0x....      BL       enable_pit_interrupt
    847          }
   \   00000080   0xBD01             POP      {R0,PC}          ;; return
    848          

   \                                 In section .text, align 2, keep-with-next
    849          void pit2_isr(void)
    850          {
   \                     pit2_isr:
   \   00000000   0xB580             PUSH     {R7,LR}
    851            P_timer++;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable46_14
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x1C40             ADDS     R0,R0,#+1
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable46_14
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    852            PIT_TFLG(2)|=PIT_TFLG_TIF_MASK;
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable46_15  ;; 0x4003712c
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable46_15  ;; 0x4003712c
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    853            enable_pit_interrupt(2);
   \   00000020   0x2002             MOVS     R0,#+2
   \   00000022   0x.... 0x....      BL       enable_pit_interrupt
    854          }
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
    855          
    856          /******************************************************************/
    857          //***********************中断区结束*********************************
    858          
    859          
    860          
    861          /*****************延时函数1s*****************/

   \                                 In section .text, align 2, keep-with-next
    862          void delays(int s)
    863          {
   \                     delays:
   \   00000000   0xB410             PUSH     {R4}
    864            int m=0,i=0,j=0;
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x2300             MOVS     R3,#+0
    865            for(m=0;m<s;m++)
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x0021             MOVS     R1,R4
   \   0000000C   0xE000             B.N      ??delays_0
   \                     ??delays_1:
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
   \                     ??delays_0:
   \   00000010   0x4281             CMP      R1,R0
   \   00000012   0xDA0D             BGE.N    ??delays_2
    866            {
    867              for(i=0;i<20000;i++)
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0xE005             B.N      ??delays_3
    868              {
    869                for(j=0;j<1000;j++);
   \                     ??delays_4:
   \   00000018   0x1C5B             ADDS     R3,R3,#+1
   \                     ??delays_5:
   \   0000001A   0xF44F 0x747A      MOV      R4,#+1000
   \   0000001E   0x42A3             CMP      R3,R4
   \   00000020   0xDBFA             BLT.N    ??delays_4
   \   00000022   0x1C52             ADDS     R2,R2,#+1
   \                     ??delays_3:
   \   00000024   0xF644 0x6320      MOVW     R3,#+20000
   \   00000028   0x429A             CMP      R2,R3
   \   0000002A   0xDAF0             BGE.N    ??delays_1
   \   0000002C   0x2300             MOVS     R3,#+0
   \   0000002E   0xE7F4             B.N      ??delays_5
    870              }
    871            }
    872          }
   \                     ??delays_2:
   \   00000030   0xBC10             POP      {R4}
   \   00000032   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    873          void delayms(int z)
    874          {
    875            int x,y;
    876            for(x=z;x>0;x--)
   \                     delayms:
   \   00000000   0xE003             B.N      ??delayms_0
    877              for(y=110;y>0;y--);
   \                     ??delayms_1:
   \   00000002   0x1E49             SUBS     R1,R1,#+1
   \                     ??delayms_2:
   \   00000004   0x2901             CMP      R1,#+1
   \   00000006   0xDAFC             BGE.N    ??delayms_1
   \   00000008   0x1E40             SUBS     R0,R0,#+1
   \                     ??delayms_0:
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xDB01             BLT.N    ??delayms_3
   \   0000000E   0x216E             MOVS     R1,#+110
   \   00000010   0xE7F8             B.N      ??delayms_2
    878          }
   \                     ??delayms_3:
   \   00000012   0x4770             BX       LR               ;; return
    879          

   \                                 In section .text, align 2, keep-with-next
    880          int16 abs(int16 a)
    881          {
    882            if(a>=0)return a;
   \                     abs:
   \   00000000   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD401             BMI.N    ??abs_0
   \   00000006   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000008   0xE002             B.N      ??abs_1
    883            
    884            else return -a;
   \                     ??abs_0:
   \   0000000A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000C   0x4240             RSBS     R0,R0,#+0
   \   0000000E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \                     ??abs_1:
   \   00000010   0x4770             BX       LR               ;; return
    885            
    886          }
    887          
    888          
    889          /******************************************************************/

   \                                 In section .text, align 2, keep-with-next
    890          int16 limit(int16 value,int16 top,int16 bottom)
    891          {
    892            if(value>top) value=top;
   \                     limit:
   \   00000000   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000002   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000004   0x4281             CMP      R1,R0
   \   00000006   0xDA00             BGE.N    ??limit_0
   \   00000008   0x0008             MOVS     R0,R1
    893            if(value<bottom) value=bottom;
   \                     ??limit_0:
   \   0000000A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000000E   0x4290             CMP      R0,R2
   \   00000010   0xDA00             BGE.N    ??limit_1
   \   00000012   0x0010             MOVS     R0,R2
    894            return value;
   \                     ??limit_1:
   \   00000014   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000016   0x4770             BX       LR               ;; return
    895          }
    896          

   \                                 In section .text, align 2, keep-with-next
    897          int16 max(int16 value1,int16 value2)
    898          {
    899            if(value1>value2)
   \                     max:
   \   00000000   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000002   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000004   0x4281             CMP      R1,R0
   \   00000006   0xDA01             BGE.N    ??max_0
    900              return value1;
   \   00000008   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000A   0xE001             B.N      ??max_1
    901            else 
    902              return value2;
   \                     ??max_0:
   \   0000000C   0x0008             MOVS     R0,R1
   \   0000000E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \                     ??max_1:
   \   00000010   0x4770             BX       LR               ;; return
    903          }
    904          

   \                                 In section .text, align 2, keep-with-next
    905          int16 min(int16 value1,int16 value2)
    906          {
    907            if(value1<value2)
   \                     min:
   \   00000000   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000002   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000004   0x4288             CMP      R0,R1
   \   00000006   0xDA01             BGE.N    ??min_0
    908              return value1;
   \   00000008   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000A   0xE001             B.N      ??min_1
    909            else 
    910              return value2;
   \                     ??min_0:
   \   0000000C   0x0008             MOVS     R0,R1
   \   0000000E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \                     ??min_1:
   \   00000010   0x4770             BX       LR               ;; return
    911          }
    912          
    913          
    914          //void set_speed(int16 speed_low)
    915          //{
    916          //
    917          //  FTM0_C0V=limit(188+speed_low/2,375,0);
    918          //  FTM0_C3V=limit(188-speed_low/2,375,0);
    919          //}
    920          

   \                                 In section .text, align 2, keep-with-next
    921          int set_speed(int speed_low)
    922          { 
   \                     set_speed:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    923            //int back_1,back_2;
    924            long int speed_1,speed_2;
    925            int speed_diff=0;
   \   00000004   0x2000             MOVS     R0,#+0
    926          
    927            speed_diff=Servo_value-Servo_Middle;
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable46_16
   \   0000000A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000000E   0x.... 0x....      LDR.W    R2,??DataTable46_17
   \   00000012   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000016   0x1A89             SUBS     R1,R1,R2
   \   00000018   0x0008             MOVS     R0,R1
    928            if(speed_diff>0)
   \   0000001A   0x2801             CMP      R0,#+1
   \   0000001C   0xDB4E             BLT.N    ??set_speed_0
    929            {      //左转
    930              speed_diff=speed_diff/20;//25
   \   0000001E   0x2114             MOVS     R1,#+20
   \   00000020   0xFB90 0xF0F1      SDIV     R0,R0,R1
    931              if(speed_diff>=60)
   \   00000024   0x283C             CMP      R0,#+60
   \   00000026   0xDB00             BLT.N    ??set_speed_1
    932               speed_diff=59;
   \   00000028   0x203B             MOVS     R0,#+59
    933              
    934              speed_1=(long)speed_low*Wspeed_diff[1][speed_diff]/100;
   \                     ??set_speed_1:
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable46_18
   \   0000002E   0x1841             ADDS     R1,R0,R1
   \   00000030   0xF891 0x103C      LDRB     R1,[R1, #+60]
   \   00000034   0xFB01 0xF104      MUL      R1,R1,R4
   \   00000038   0x2264             MOVS     R2,#+100
   \   0000003A   0xFB91 0xF5F2      SDIV     R5,R1,R2
    935              speed_2=(long)speed_low*Wspeed_diff[0][speed_diff]/100;  //+
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable46_18
   \   00000042   0x5C40             LDRB     R0,[R0, R1]
   \   00000044   0xFB00 0xF004      MUL      R0,R0,R4
   \   00000048   0x2164             MOVS     R1,#+100
   \   0000004A   0xFB90 0xF4F1      SDIV     R4,R0,R1
    936              
    937          
    938              FTM0_C0V=limit(188+speed_2/2,375,0);
   \   0000004E   0x2200             MOVS     R2,#+0
   \   00000050   0xF240 0x1177      MOVW     R1,#+375
   \   00000054   0x2002             MOVS     R0,#+2
   \   00000056   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   0000005A   0x30BC             ADDS     R0,R0,#+188
   \   0000005C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000005E   0x.... 0x....      BL       limit
   \   00000062   0x....             LDR.N    R1,??DataTable44_15  ;; 0x40038010
   \   00000064   0x6008             STR      R0,[R1, #+0]
    939              FTM0_C3V=limit(188-speed_2/2,375,0);
   \   00000066   0x2200             MOVS     R2,#+0
   \   00000068   0xF240 0x1177      MOVW     R1,#+375
   \   0000006C   0x2002             MOVS     R0,#+2
   \   0000006E   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000072   0xF1D0 0x00BC      RSBS     R0,R0,#+188
   \   00000076   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000078   0x.... 0x....      BL       limit
   \   0000007C   0x....             LDR.N    R1,??DataTable45_2  ;; 0x40038028
   \   0000007E   0x6008             STR      R0,[R1, #+0]
    940              
    941              FTM0_C4V=limit(188-speed_1/2,375,0);
   \   00000080   0x2200             MOVS     R2,#+0
   \   00000082   0xF240 0x1177      MOVW     R1,#+375
   \   00000086   0x2002             MOVS     R0,#+2
   \   00000088   0xFB95 0xF0F0      SDIV     R0,R5,R0
   \   0000008C   0xF1D0 0x00BC      RSBS     R0,R0,#+188
   \   00000090   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000092   0x.... 0x....      BL       limit
   \   00000096   0x....             LDR.N    R1,??DataTable45_3  ;; 0x40038030
   \   00000098   0x6008             STR      R0,[R1, #+0]
    942              FTM0_C5V=375;
   \   0000009A   0x....             LDR.N    R0,??DataTable45_4  ;; 0x40038038
   \   0000009C   0xF240 0x1177      MOVW     R1,#+375
   \   000000A0   0x6001             STR      R1,[R0, #+0]
    943              FTM0_C6V=limit(188+speed_1/2,375,0);
   \   000000A2   0x2200             MOVS     R2,#+0
   \   000000A4   0xF240 0x1177      MOVW     R1,#+375
   \   000000A8   0x2002             MOVS     R0,#+2
   \   000000AA   0xFB95 0xF0F0      SDIV     R0,R5,R0
   \   000000AE   0x30BC             ADDS     R0,R0,#+188
   \   000000B0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000B2   0x.... 0x....      BL       limit
   \   000000B6   0x....             LDR.N    R1,??DataTable45_5  ;; 0x40038040
   \   000000B8   0x6008             STR      R0,[R1, #+0]
   \   000000BA   0xE050             B.N      ??set_speed_2
    944              
    945           }else { 
    946                          //右转
    947               speed_diff=abs(speed_diff)/19;
   \                     ??set_speed_0:
   \   000000BC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000BE   0x.... 0x....      BL       abs
   \   000000C2   0x2113             MOVS     R1,#+19
   \   000000C4   0xFB90 0xF0F1      SDIV     R0,R0,R1
    948              if(speed_diff>=60)
   \   000000C8   0x283C             CMP      R0,#+60
   \   000000CA   0xDB00             BLT.N    ??set_speed_3
    949                speed_diff=59;
   \   000000CC   0x203B             MOVS     R0,#+59
    950              speed_1=(long)speed_low*Wspeed_diff[1][speed_diff]/100;
   \                     ??set_speed_3:
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable46_18
   \   000000D2   0x1841             ADDS     R1,R0,R1
   \   000000D4   0xF891 0x103C      LDRB     R1,[R1, #+60]
   \   000000D8   0xFB01 0xF104      MUL      R1,R1,R4
   \   000000DC   0x2264             MOVS     R2,#+100
   \   000000DE   0xFB91 0xF5F2      SDIV     R5,R1,R2
    951              speed_2=(long)speed_low*Wspeed_diff[0][speed_diff]/100; 
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable46_18
   \   000000E6   0x5C40             LDRB     R0,[R0, R1]
   \   000000E8   0xFB00 0xF004      MUL      R0,R0,R4
   \   000000EC   0x2164             MOVS     R1,#+100
   \   000000EE   0xFB90 0xF4F1      SDIV     R4,R0,R1
    952          
    953               FTM0_C0V=limit(188+speed_1/2,375,0);//198;
   \   000000F2   0x2200             MOVS     R2,#+0
   \   000000F4   0xF240 0x1177      MOVW     R1,#+375
   \   000000F8   0x2002             MOVS     R0,#+2
   \   000000FA   0xFB95 0xF0F0      SDIV     R0,R5,R0
   \   000000FE   0x30BC             ADDS     R0,R0,#+188
   \   00000100   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000102   0x.... 0x....      BL       limit
   \   00000106   0x....             LDR.N    R1,??DataTable44_15  ;; 0x40038010
   \   00000108   0x6008             STR      R0,[R1, #+0]
    954              FTM0_C3V=limit(188-speed_1/2,375,0);//0;
   \   0000010A   0x2200             MOVS     R2,#+0
   \   0000010C   0xF240 0x1177      MOVW     R1,#+375
   \   00000110   0x2002             MOVS     R0,#+2
   \   00000112   0xFB95 0xF0F0      SDIV     R0,R5,R0
   \   00000116   0xF1D0 0x00BC      RSBS     R0,R0,#+188
   \   0000011A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000011C   0x.... 0x....      BL       limit
   \   00000120   0x....             LDR.N    R1,??DataTable45_2  ;; 0x40038028
   \   00000122   0x6008             STR      R0,[R1, #+0]
    955          
    956              FTM0_C4V=limit(188-speed_2/2,375,0);//0;
   \   00000124   0x2200             MOVS     R2,#+0
   \   00000126   0xF240 0x1177      MOVW     R1,#+375
   \   0000012A   0x2002             MOVS     R0,#+2
   \   0000012C   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000130   0xF1D0 0x00BC      RSBS     R0,R0,#+188
   \   00000134   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000136   0x.... 0x....      BL       limit
   \   0000013A   0x....             LDR.N    R1,??DataTable45_3  ;; 0x40038030
   \   0000013C   0x6008             STR      R0,[R1, #+0]
    957               FTM0_C5V=375;
   \   0000013E   0x....             LDR.N    R0,??DataTable45_4  ;; 0x40038038
   \   00000140   0xF240 0x1177      MOVW     R1,#+375
   \   00000144   0x6001             STR      R1,[R0, #+0]
    958              FTM0_C6V=limit(188+speed_2/2,375,0);//190;
   \   00000146   0x2200             MOVS     R2,#+0
   \   00000148   0xF240 0x1177      MOVW     R1,#+375
   \   0000014C   0x2002             MOVS     R0,#+2
   \   0000014E   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000152   0x30BC             ADDS     R0,R0,#+188
   \   00000154   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000156   0x.... 0x....      BL       limit
   \   0000015A   0x....             LDR.N    R1,??DataTable45_5  ;; 0x40038040
   \   0000015C   0x6008             STR      R0,[R1, #+0]
    959           } 
    960            return ok;
   \                     ??set_speed_2:
   \   0000015E   0x2001             MOVS     R0,#+1
   \   00000160   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    961          }
    962            
    963          

   \                                 In section .text, align 2, keep-with-next
    964          int16 subjection_k(int16 *f,int16 i)
    965          {
   \                     subjection_k:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    966            int16 value;
    967            
    968            if(i>1)
   \   00000004   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000006   0x2902             CMP      R1,#+2
   \   00000008   0xDB05             BLT.N    ??subjection_k_0
    969             value=subjection_k(f+1,i-1);
   \   0000000A   0x1E49             SUBS     R1,R1,#+1
   \   0000000C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000000E   0x1CA0             ADDS     R0,R4,#+2
   \   00000010   0xF7FF 0xFFF6      BL       subjection_k
   \   00000014   0xE001             B.N      ??subjection_k_1
    970            else
    971             value=*f; 
   \                     ??subjection_k_0:
   \   00000016   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
    972             value=max(value,*(f+1));
   \                     ??subjection_k_1:
   \   0000001A   0xF9B4 0x1002      LDRSH    R1,[R4, #+2]
   \   0000001E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000020   0x.... 0x....      BL       max
    973            return value;
   \   00000024   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
    974          }
    975          
    976          
    977          /************************读取速度************************/

   \                                 In section .text, align 2, keep-with-next
    978          void get_speed(void)
    979          {
    980            pulse=FTM2_CNT;
   \                     get_speed:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable46_10
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable46_19  ;; 0x400b8004
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x8001             STRH     R1,[R0, #+0]
    981            FTM2_CNT=0;
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable46_19  ;; 0x400b8004
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x6001             STR      R1,[R0, #+0]
    982            //if(pulse==0)FTM0_C1V=0;     //如果电机没转那么电机就关掉
    983           //pulse2=get_counter_value();
    984          //lptmr_counter_clean(); 
    985          }
   \   00000014   0x4770             BX       LR               ;; return
    986          /************************读取速度END************************/
    987          
    988              
    989          /*************加权平均法对中心线的滤波平滑处理*************/

   \                                 In section .text, align 2, keep-with-next
    990          void center_filter(void)
    991          {
   \                     center_filter:
   \   00000000   0xB43C             PUSH     {R2-R5}
    992            char code_coe[5]={1,2,3,3,4};
   \   00000002   0xA800             ADD      R0,SP,#+0
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable47
   \   00000008   0xC90C             LDM      R1!,{R2,R3}
   \   0000000A   0xC00C             STM      R0!,{R2,R3}
   \   0000000C   0x3908             SUBS     R1,R1,#+8
   \   0000000E   0x3808             SUBS     R0,R0,#+8
    993            char code_coe_sum=13;
   \   00000010   0x200D             MOVS     R0,#+13
    994            int16 i=0,j=0,center_sum=0;
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x2300             MOVS     R3,#+0
    995            for(i=52;i>1;i--)
   \   00000018   0x2434             MOVS     R4,#+52
   \   0000001A   0x0021             MOVS     R1,R4
   \   0000001C   0xE01C             B.N      ??center_filter_0
    996            {
    997              if(position[i-2]>0)
    998              {
    999                center_sum=0;
   1000                for(j=0;j<5;j++)center_sum+=position[j+i-2]*code_coe[j];
   \                     ??center_filter_1:
   \   0000001E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000020   0xFA01 0xF482      SXTAH    R4,R1,R2
   \   00000024   0x.... 0x....      LDR.W    R5,??DataTable47_1
   \   00000028   0xEB15 0x0484      ADDS     R4,R5,R4, LSL #+2
   \   0000002C   0xF854 0x4C08      LDR      R4,[R4, #-8]
   \   00000030   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000032   0xAD00             ADD      R5,SP,#+0
   \   00000034   0x5D55             LDRB     R5,[R2, R5]
   \   00000036   0x436C             MULS     R4,R5,R4
   \   00000038   0xFA04 0xF383      SXTAH    R3,R4,R3
   \   0000003C   0x1C52             ADDS     R2,R2,#+1
   \                     ??center_filter_2:
   \   0000003E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000040   0x2A05             CMP      R2,#+5
   \   00000042   0xDBEC             BLT.N    ??center_filter_1
   1001                position[i]=(int)(center_sum/code_coe_sum);
   \   00000044   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0xFB93 0xF2F0      SDIV     R2,R3,R0
   \   0000004C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000004E   0x.... 0x....      LDR.W    R3,??DataTable47_1
   \   00000052   0xF843 0x2021      STR      R2,[R3, R1, LSL #+2]
   \                     ??center_filter_3:
   \   00000056   0x1E49             SUBS     R1,R1,#+1
   \                     ??center_filter_0:
   \   00000058   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000005A   0x2902             CMP      R1,#+2
   \   0000005C   0xDB0B             BLT.N    ??center_filter_4
   \   0000005E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000060   0x.... 0x....      LDR.W    R2,??DataTable47_1
   \   00000064   0xEB12 0x0281      ADDS     R2,R2,R1, LSL #+2
   \   00000068   0xF852 0x2C08      LDR      R2,[R2, #-8]
   \   0000006C   0x2A01             CMP      R2,#+1
   \   0000006E   0xDBF2             BLT.N    ??center_filter_3
   \   00000070   0x2300             MOVS     R3,#+0
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0xE7E3             B.N      ??center_filter_2
   1002              }
   1003            }  
   1004          }
   \                     ??center_filter_4:
   \   00000076   0xBC33             POP      {R0,R1,R4,R5}
   \   00000078   0x4770             BX       LR               ;; return
   1005          /*************加权平均法对中心线的滤波平滑处理*END************/
   1006          
   1007          

   \                                 In section .text, align 2, keep-with-next
   1008          void sub_e(uint8 value,uint8 S_end,uint8 M_start,uint8 M_end,uint8 B_start)//sub_e(E,35,30,50,45);
   1009          {
   \                     sub_e:
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x9C03             LDR      R4,[SP, #+12]
   1010            if(value<=M_start)
   \   00000004   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x4282             CMP      R2,R0
   \   0000000A   0xD30B             BCC.N    ??sub_e_0
   1011            {
   1012              sub.s=100;
   \   0000000C   0x.... 0x....      LDR.W    R5,??DataTable49
   \   00000010   0x2664             MOVS     R6,#+100
   \   00000012   0x802E             STRH     R6,[R5, #+0]
   1013              sub.m=0;
   \   00000014   0x.... 0x....      LDR.W    R5,??DataTable49
   \   00000018   0x2600             MOVS     R6,#+0
   \   0000001A   0x806E             STRH     R6,[R5, #+2]
   1014              sub.b=0;
   \   0000001C   0x.... 0x....      LDR.W    R5,??DataTable49
   \   00000020   0x2600             MOVS     R6,#+0
   \   00000022   0x80AE             STRH     R6,[R5, #+4]
   1015            }
   1016            if(value<S_end&&value>M_start)
   \                     ??sub_e_0:
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x4288             CMP      R0,R1
   \   0000002A   0xD221             BCS.N    ??sub_e_1
   \   0000002C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x4282             CMP      R2,R0
   \   00000032   0xD21D             BCS.N    ??sub_e_1
   1017            {
   1018              sub.s=100*(S_end-value)/(S_end-M_start);
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x1A0D             SUBS     R5,R1,R0
   \   0000003A   0x2664             MOVS     R6,#+100
   \   0000003C   0x4375             MULS     R5,R6,R5
   \   0000003E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000040   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000042   0x1A8E             SUBS     R6,R1,R2
   \   00000044   0xFB95 0xF5F6      SDIV     R5,R5,R6
   \   00000048   0x.... 0x....      LDR.W    R6,??DataTable49
   \   0000004C   0x8035             STRH     R5,[R6, #+0]
   1019              sub.m=100*(value-M_start)/(S_end-M_start);
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000052   0x1A85             SUBS     R5,R0,R2
   \   00000054   0x2664             MOVS     R6,#+100
   \   00000056   0x4375             MULS     R5,R6,R5
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005C   0x1A8A             SUBS     R2,R1,R2
   \   0000005E   0xFB95 0xF2F2      SDIV     R2,R5,R2
   \   00000062   0x.... 0x....      LDR.W    R5,??DataTable49
   \   00000066   0x806A             STRH     R2,[R5, #+2]
   1020              sub.b=0;
   \   00000068   0x.... 0x....      LDR.W    R2,??DataTable49
   \   0000006C   0x2500             MOVS     R5,#+0
   \   0000006E   0x8095             STRH     R5,[R2, #+4]
   1021            }
   1022            if(value>=S_end&&value<=B_start)
   \                     ??sub_e_1:
   \   00000070   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000072   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000074   0x4288             CMP      R0,R1
   \   00000076   0xD30F             BCC.N    ??sub_e_2
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007C   0x4284             CMP      R4,R0
   \   0000007E   0xD30B             BCC.N    ??sub_e_2
   1023            {
   1024              sub.s=0;
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable49
   \   00000084   0x2200             MOVS     R2,#+0
   \   00000086   0x800A             STRH     R2,[R1, #+0]
   1025              sub.m=100;
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable49
   \   0000008C   0x2264             MOVS     R2,#+100
   \   0000008E   0x804A             STRH     R2,[R1, #+2]
   1026              sub.b=0;
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable49
   \   00000094   0x2200             MOVS     R2,#+0
   \   00000096   0x808A             STRH     R2,[R1, #+4]
   1027            }
   1028            if(value<M_end&&value>B_start)
   \                     ??sub_e_2:
   \   00000098   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009A   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000009C   0x4298             CMP      R0,R3
   \   0000009E   0xD221             BCS.N    ??sub_e_3
   \   000000A0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A4   0x4284             CMP      R4,R0
   \   000000A6   0xD21D             BCS.N    ??sub_e_3
   1029            {
   1030              sub.s=0;
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable49
   \   000000AC   0x2200             MOVS     R2,#+0
   \   000000AE   0x800A             STRH     R2,[R1, #+0]
   1031              sub.m=100*(M_end-value)/(M_end-B_start);
   \   000000B0   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B4   0x1A19             SUBS     R1,R3,R0
   \   000000B6   0x2264             MOVS     R2,#+100
   \   000000B8   0x4351             MULS     R1,R2,R1
   \   000000BA   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000BC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000BE   0x1B1A             SUBS     R2,R3,R4
   \   000000C0   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000000C4   0x.... 0x....      LDR.W    R2,??DataTable49
   \   000000C8   0x8051             STRH     R1,[R2, #+2]
   1032              sub.b=100*(value-B_start)/(M_end-B_start);
   \   000000CA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000CE   0x1B01             SUBS     R1,R0,R4
   \   000000D0   0x2264             MOVS     R2,#+100
   \   000000D2   0x4351             MULS     R1,R2,R1
   \   000000D4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000D6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000D8   0x1B1A             SUBS     R2,R3,R4
   \   000000DA   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000000DE   0x.... 0x....      LDR.W    R2,??DataTable49
   \   000000E2   0x8091             STRH     R1,[R2, #+4]
   1033            }
   1034            if(value>=M_end)
   \                     ??sub_e_3:
   \   000000E4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E6   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000E8   0x4298             CMP      R0,R3
   \   000000EA   0xD30B             BCC.N    ??sub_e_4
   1035            {
   1036              sub.s=0;
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000F0   0x2100             MOVS     R1,#+0
   \   000000F2   0x8001             STRH     R1,[R0, #+0]
   1037              sub.m=0;
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000F8   0x2100             MOVS     R1,#+0
   \   000000FA   0x8041             STRH     R1,[R0, #+2]
   1038              sub.b=100;
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable49
   \   00000100   0x2164             MOVS     R1,#+100
   \   00000102   0x8081             STRH     R1,[R0, #+4]
   1039            }
   1040          }
   \                     ??sub_e_4:
   \   00000104   0xBC70             POP      {R4-R6}
   \   00000106   0x4770             BX       LR               ;; return
   1041          
   1042          

   \                                 In section .text, align 2, keep-with-next
   1043          int16 motor_fuzzy(int16 e,int16 ec,int16 S_end,int16 M_start,int16 M_end,int16 B_start,int16 Sc_end,int16 Mc_start,int16 Mc_end,int16 Bc_start)
   1044          {
   \                     motor_fuzzy:
   \   00000000   0xE92D 0x4FFC      PUSH     {R2-R11,LR}
   \   00000004   0xB095             SUB      SP,SP,#+84
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0xF9BD 0x6080      LDRSH    R6,[SP, #+128]
   \   0000000E   0xF9BD 0x7084      LDRSH    R7,[SP, #+132]
   \   00000012   0xF9BD 0x8088      LDRSH    R8,[SP, #+136]
   \   00000016   0xF9BD 0x908C      LDRSH    R9,[SP, #+140]
   \   0000001A   0xF9BD 0xA090      LDRSH    R10,[SP, #+144]
   \   0000001E   0xF9BD 0xB094      LDRSH    R11,[SP, #+148]
   1045            volatile int16 ib=0,im=0,is=0,iz=0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0xF8AD 0x0012      STRH     R0,[SP, #+18]
   1046            volatile int16 Se=0,Me=0,Be=0;
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0xF8AD 0x0010      STRH     R0,[SP, #+16]
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0xF8AD 0x000E      STRH     R0,[SP, #+14]
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0xF8AD 0x000C      STRH     R0,[SP, #+12]
   1047            volatile int16 Sc=0,Mc=0,Bc=0;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0xF8AD 0x000A      STRH     R0,[SP, #+10]
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1048            int16 vb[6]={0};
   \   0000005E   0xA80F             ADD      R0,SP,#+60
   \   00000060   0x2100             MOVS     R1,#+0
   \   00000062   0x2200             MOVS     R2,#+0
   \   00000064   0x2300             MOVS     R3,#+0
   \   00000066   0xC00E             STM      R0!,{R1-R3}
   \   00000068   0x380C             SUBS     R0,R0,#+12
   1049            int16 vm[6]={0};
   \   0000006A   0xA80C             ADD      R0,SP,#+48
   \   0000006C   0x2100             MOVS     R1,#+0
   \   0000006E   0x2200             MOVS     R2,#+0
   \   00000070   0x2300             MOVS     R3,#+0
   \   00000072   0xC00E             STM      R0!,{R1-R3}
   \   00000074   0x380C             SUBS     R0,R0,#+12
   1050            int16 vs[6]={0};
   \   00000076   0xA809             ADD      R0,SP,#+36
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0x2200             MOVS     R2,#+0
   \   0000007C   0x2300             MOVS     R3,#+0
   \   0000007E   0xC00E             STM      R0!,{R1-R3}
   \   00000080   0x380C             SUBS     R0,R0,#+12
   1051            int16 vz[6]={0};
   \   00000082   0xA812             ADD      R0,SP,#+72
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0x2200             MOVS     R2,#+0
   \   00000088   0x2300             MOVS     R3,#+0
   \   0000008A   0xC00E             STM      R0!,{R1-R3}
   \   0000008C   0x380C             SUBS     R0,R0,#+12
   1052            volatile long Ks=0,Km=0,Kb=0,Kz=0;
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x9007             STR      R0,[SP, #+28]
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x9006             STR      R0,[SP, #+24]
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x9005             STR      R0,[SP, #+20]
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0x9008             STR      R0,[SP, #+32]
   1053            int16 *f;
   1054            Motor.P=0;
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable50
   \   000000A2   0x2100             MOVS     R1,#+0
   \   000000A4   0x8001             STRH     R1,[R0, #+0]
   1055            Motor.I=0;
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable50
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0x8041             STRH     R1,[R0, #+2]
   1056          
   1057            e=abs(e);
   \   000000AE   0x0020             MOVS     R0,R4
   \   000000B0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000B2   0x.... 0x....      BL       abs
   \   000000B6   0x0004             MOVS     R4,R0
   1058            ec=abs(ec);
   \   000000B8   0x0028             MOVS     R0,R5
   \   000000BA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000BC   0x.... 0x....      BL       abs
   \   000000C0   0x0005             MOVS     R5,R0
   1059            
   1060            sub_e(e,S_end,M_start,M_end,B_start);
   \   000000C2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000C4   0x9700             STR      R7,[SP, #+0]
   \   000000C6   0x0033             MOVS     R3,R6
   \   000000C8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000CA   0xF8BD 0x2058      LDRH     R2,[SP, #+88]
   \   000000CE   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000D0   0xF8BD 0x1054      LDRH     R1,[SP, #+84]
   \   000000D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D6   0x0020             MOVS     R0,R4
   \   000000D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DA   0x.... 0x....      BL       sub_e
   1061           
   1062            Se=sub.s;
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000E2   0x8800             LDRH     R0,[R0, #+0]
   \   000000E4   0xF8AD 0x0010      STRH     R0,[SP, #+16]
   1063            Me=sub.m;
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000EC   0x8840             LDRH     R0,[R0, #+2]
   \   000000EE   0xF8AD 0x000E      STRH     R0,[SP, #+14]
   1064            Be=sub.b;
   \   000000F2   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000F6   0x8880             LDRH     R0,[R0, #+4]
   \   000000F8   0xF8AD 0x000C      STRH     R0,[SP, #+12]
   1065          
   1066            sub_e(ec,Sc_end,Mc_start,Mc_end,Bc_start);
   \   000000FC   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000100   0xF8CD 0xB000      STR      R11,[SP, #+0]
   \   00000104   0x4653             MOV      R3,R10
   \   00000106   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000108   0x464A             MOV      R2,R9
   \   0000010A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000010C   0x4641             MOV      R1,R8
   \   0000010E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000110   0x0028             MOVS     R0,R5
   \   00000112   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000114   0x.... 0x....      BL       sub_e
   1067           
   1068            Sc=sub.s;
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable49
   \   0000011C   0x8800             LDRH     R0,[R0, #+0]
   \   0000011E   0xF8AD 0x000A      STRH     R0,[SP, #+10]
   1069            Mc=sub.m;
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable49
   \   00000126   0x8840             LDRH     R0,[R0, #+2]
   \   00000128   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   1070            Bc=sub.b;
   \   0000012C   0x.... 0x....      LDR.W    R0,??DataTable49
   \   00000130   0x8880             LDRH     R0,[R0, #+4]
   \   00000132   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1071          
   1072          
   1073            if(Se&&Sc)  {vm[im]=min(Se,Sc);im++;}  //P建表
   \   00000136   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   0000013A   0x2800             CMP      R0,#+0
   \   0000013C   0xD014             BEQ.N    ??motor_fuzzy_0
   \   0000013E   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   00000142   0x2800             CMP      R0,#+0
   \   00000144   0xD010             BEQ.N    ??motor_fuzzy_0
   \   00000146   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   0000014A   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   0000014E   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000152   0x.... 0x....      BL       min
   \   00000156   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000158   0xA90C             ADD      R1,SP,#+48
   \   0000015A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000015E   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   00000162   0x1C40             ADDS     R0,R0,#+1
   \   00000164   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1074            if(Se&&Mc)  {vs[is]=min(Se,Mc);is++;}  
   \                     ??motor_fuzzy_0:
   \   00000168   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   0000016C   0x2800             CMP      R0,#+0
   \   0000016E   0xD014             BEQ.N    ??motor_fuzzy_1
   \   00000170   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000174   0x2800             CMP      R0,#+0
   \   00000176   0xD010             BEQ.N    ??motor_fuzzy_1
   \   00000178   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   0000017C   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   00000180   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000184   0x.... 0x....      BL       min
   \   00000188   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000018A   0xA909             ADD      R1,SP,#+36
   \   0000018C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000190   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000194   0x1C40             ADDS     R0,R0,#+1
   \   00000196   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1075            if(Se&&Bc)  {vs[is]=min(Se,Bc);is++;}
   \                     ??motor_fuzzy_1:
   \   0000019A   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   0000019E   0x2800             CMP      R0,#+0
   \   000001A0   0xD014             BEQ.N    ??motor_fuzzy_2
   \   000001A2   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000001A6   0x2800             CMP      R0,#+0
   \   000001A8   0xD010             BEQ.N    ??motor_fuzzy_2
   \   000001AA   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   000001AE   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   000001B2   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   000001B6   0x.... 0x....      BL       min
   \   000001BA   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000001BC   0xA909             ADD      R1,SP,#+36
   \   000001BE   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001C2   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000001C6   0x1C40             ADDS     R0,R0,#+1
   \   000001C8   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1076            if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
   \                     ??motor_fuzzy_2:
   \   000001CC   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000001D0   0x2800             CMP      R0,#+0
   \   000001D2   0xD014             BEQ.N    ??motor_fuzzy_3
   \   000001D4   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   000001D8   0x2800             CMP      R0,#+0
   \   000001DA   0xD010             BEQ.N    ??motor_fuzzy_3
   \   000001DC   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   000001E0   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   000001E4   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000001E8   0x.... 0x....      BL       min
   \   000001EC   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000001EE   0xA90C             ADD      R1,SP,#+48
   \   000001F0   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001F4   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   000001F8   0x1C40             ADDS     R0,R0,#+1
   \   000001FA   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1077            if(Me&&Mc)  {vm[im]=min(Me,Mc);im++;}
   \                     ??motor_fuzzy_3:
   \   000001FE   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   00000202   0x2800             CMP      R0,#+0
   \   00000204   0xD014             BEQ.N    ??motor_fuzzy_4
   \   00000206   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   0000020A   0x2800             CMP      R0,#+0
   \   0000020C   0xD010             BEQ.N    ??motor_fuzzy_4
   \   0000020E   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   00000212   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   00000216   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   0000021A   0x.... 0x....      BL       min
   \   0000021E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000220   0xA90C             ADD      R1,SP,#+48
   \   00000222   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000226   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   0000022A   0x1C40             ADDS     R0,R0,#+1
   \   0000022C   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1078            if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
   \                     ??motor_fuzzy_4:
   \   00000230   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   00000234   0x2800             CMP      R0,#+0
   \   00000236   0xD014             BEQ.N    ??motor_fuzzy_5
   \   00000238   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   0000023C   0x2800             CMP      R0,#+0
   \   0000023E   0xD010             BEQ.N    ??motor_fuzzy_5
   \   00000240   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   00000244   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   00000248   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   0000024C   0x.... 0x....      BL       min
   \   00000250   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000252   0xA909             ADD      R1,SP,#+36
   \   00000254   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000258   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   0000025C   0x1C40             ADDS     R0,R0,#+1
   \   0000025E   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1079            if(Be&&Sc)  {vb[ib]=min(Be,Sc);ib++;}
   \                     ??motor_fuzzy_5:
   \   00000262   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   00000266   0x2800             CMP      R0,#+0
   \   00000268   0xD014             BEQ.N    ??motor_fuzzy_6
   \   0000026A   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   0000026E   0x2800             CMP      R0,#+0
   \   00000270   0xD010             BEQ.N    ??motor_fuzzy_6
   \   00000272   0xF9BD 0x4008      LDRSH    R4,[SP, #+8]
   \   00000276   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   0000027A   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   0000027E   0x.... 0x....      BL       min
   \   00000282   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000284   0xA90F             ADD      R1,SP,#+60
   \   00000286   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000028A   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   0000028E   0x1C40             ADDS     R0,R0,#+1
   \   00000290   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1080            if(Be&&Mc)  {vb[ib]=min(Be,Mc);ib++;} 
   \                     ??motor_fuzzy_6:
   \   00000294   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   00000298   0x2800             CMP      R0,#+0
   \   0000029A   0xD014             BEQ.N    ??motor_fuzzy_7
   \   0000029C   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   000002A0   0x2800             CMP      R0,#+0
   \   000002A2   0xD010             BEQ.N    ??motor_fuzzy_7
   \   000002A4   0xF9BD 0x4008      LDRSH    R4,[SP, #+8]
   \   000002A8   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   000002AC   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   000002B0   0x.... 0x....      BL       min
   \   000002B4   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000002B6   0xA90F             ADD      R1,SP,#+60
   \   000002B8   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002BC   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   000002C0   0x1C40             ADDS     R0,R0,#+1
   \   000002C2   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1081            if(Be&&Bc)  {vm[im]=min(Be,Bc);im++;}
   \                     ??motor_fuzzy_7:
   \   000002C6   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   000002CA   0x2800             CMP      R0,#+0
   \   000002CC   0xD014             BEQ.N    ??motor_fuzzy_8
   \   000002CE   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000002D2   0x2800             CMP      R0,#+0
   \   000002D4   0xD010             BEQ.N    ??motor_fuzzy_8
   \   000002D6   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   000002DA   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   000002DE   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   000002E2   0x.... 0x....      BL       min
   \   000002E6   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000002E8   0xA90C             ADD      R1,SP,#+48
   \   000002EA   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002EE   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   000002F2   0x1C40             ADDS     R0,R0,#+1
   \   000002F4   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1082          
   1083          
   1084            if(vs[0]){
   \                     ??motor_fuzzy_8:
   \   000002F8   0xF9BD 0x0024      LDRSH    R0,[SP, #+36]
   \   000002FC   0x2800             CMP      R0,#+0
   \   000002FE   0xD005             BEQ.N    ??motor_fuzzy_9
   1085            f=&vs[0];
   \   00000300   0xA809             ADD      R0,SP,#+36
   1086            Ks=subjection_k(f,is);
   \   00000302   0xF9BD 0x1004      LDRSH    R1,[SP, #+4]
   \   00000306   0x.... 0x....      BL       subjection_k
   \   0000030A   0x9007             STR      R0,[SP, #+28]
   1087            }
   1088            if(vm[0]){
   \                     ??motor_fuzzy_9:
   \   0000030C   0xF9BD 0x0030      LDRSH    R0,[SP, #+48]
   \   00000310   0x2800             CMP      R0,#+0
   \   00000312   0xD005             BEQ.N    ??motor_fuzzy_10
   1089            f=&vm[0];
   \   00000314   0xA80C             ADD      R0,SP,#+48
   1090            Km=subjection_k(f,im); 
   \   00000316   0xF9BD 0x1006      LDRSH    R1,[SP, #+6]
   \   0000031A   0x.... 0x....      BL       subjection_k
   \   0000031E   0x9006             STR      R0,[SP, #+24]
   1091            }
   1092            if(vb[0]){
   \                     ??motor_fuzzy_10:
   \   00000320   0xF9BD 0x003C      LDRSH    R0,[SP, #+60]
   \   00000324   0x2800             CMP      R0,#+0
   \   00000326   0xD005             BEQ.N    ??motor_fuzzy_11
   1093            f=&vb[0];
   \   00000328   0xA80F             ADD      R0,SP,#+60
   1094            Kb=subjection_k(f,ib);
   \   0000032A   0xF9BD 0x1008      LDRSH    R1,[SP, #+8]
   \   0000032E   0x.... 0x....      BL       subjection_k
   \   00000332   0x9005             STR      R0,[SP, #+20]
   1095            }
   1096          
   1097            Motor.P=(MP_B*Kb+MP_M*Km+MP_S*Ks)/(Kb+Km+Ks);
   \                     ??motor_fuzzy_11:
   \   00000334   0x9805             LDR      R0,[SP, #+20]
   \   00000336   0xF44F 0x71F0      MOV      R1,#+480
   \   0000033A   0x9A06             LDR      R2,[SP, #+24]
   \   0000033C   0xF44F 0x73DC      MOV      R3,#+440
   \   00000340   0x435A             MULS     R2,R3,R2
   \   00000342   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000346   0x9907             LDR      R1,[SP, #+28]
   \   00000348   0xF44F 0x72C8      MOV      R2,#+400
   \   0000034C   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000350   0x9905             LDR      R1,[SP, #+20]
   \   00000352   0x9A06             LDR      R2,[SP, #+24]
   \   00000354   0x1851             ADDS     R1,R2,R1
   \   00000356   0x9A07             LDR      R2,[SP, #+28]
   \   00000358   0x1851             ADDS     R1,R2,R1
   \   0000035A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000035E   0x.... 0x....      LDR.W    R1,??DataTable50
   \   00000362   0x8008             STRH     R0,[R1, #+0]
   1098          
   1099            
   1100            for(is=0;is<6;is++){
   \   00000364   0x2000             MOVS     R0,#+0
   \   00000366   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   \   0000036A   0xE016             B.N      ??motor_fuzzy_12
   1101              vs[is]=0;
   \                     ??motor_fuzzy_13:
   \   0000036C   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   00000370   0xA909             ADD      R1,SP,#+36
   \   00000372   0x2200             MOVS     R2,#+0
   \   00000374   0xF821 0x2010      STRH     R2,[R1, R0, LSL #+1]
   1102              vm[is]=0;
   \   00000378   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   0000037C   0xA90C             ADD      R1,SP,#+48
   \   0000037E   0x2200             MOVS     R2,#+0
   \   00000380   0xF821 0x2010      STRH     R2,[R1, R0, LSL #+1]
   1103              vb[is]=0;
   \   00000384   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   00000388   0xA90F             ADD      R1,SP,#+60
   \   0000038A   0x2200             MOVS     R2,#+0
   \   0000038C   0xF821 0x2010      STRH     R2,[R1, R0, LSL #+1]
   1104            }
   \   00000390   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000394   0x1C40             ADDS     R0,R0,#+1
   \   00000396   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   \                     ??motor_fuzzy_12:
   \   0000039A   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   0000039E   0x2806             CMP      R0,#+6
   \   000003A0   0xDBE4             BLT.N    ??motor_fuzzy_13
   1105            is=0;
   \   000003A2   0x2000             MOVS     R0,#+0
   \   000003A4   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1106            im=0;
   \   000003A8   0x2000             MOVS     R0,#+0
   \   000003AA   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1107            ib=0;
   \   000003AE   0x2000             MOVS     R0,#+0
   \   000003B0   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1108            Ks=0;Km=0;Kb=0;Kz=0;
   \   000003B4   0x2000             MOVS     R0,#+0
   \   000003B6   0x9007             STR      R0,[SP, #+28]
   \   000003B8   0x2000             MOVS     R0,#+0
   \   000003BA   0x9006             STR      R0,[SP, #+24]
   \   000003BC   0x2000             MOVS     R0,#+0
   \   000003BE   0x9005             STR      R0,[SP, #+20]
   \   000003C0   0x2000             MOVS     R0,#+0
   \   000003C2   0x9008             STR      R0,[SP, #+32]
   1109            ///////////////////////////////////////I参数
   1110            if(Se&&Sc)  {vb[ib]=min(Se,Sc);ib++;}  //建表
   \   000003C4   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   000003C8   0x2800             CMP      R0,#+0
   \   000003CA   0xD014             BEQ.N    ??motor_fuzzy_14
   \   000003CC   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   000003D0   0x2800             CMP      R0,#+0
   \   000003D2   0xD010             BEQ.N    ??motor_fuzzy_14
   \   000003D4   0xF9BD 0x4008      LDRSH    R4,[SP, #+8]
   \   000003D8   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   000003DC   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   000003E0   0x.... 0x....      BL       min
   \   000003E4   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000003E6   0xA90F             ADD      R1,SP,#+60
   \   000003E8   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000003EC   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   000003F0   0x1C40             ADDS     R0,R0,#+1
   \   000003F2   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1111            if(Se&&Mc)  {vb[ib]=min(Se,Mc);ib++;}
   \                     ??motor_fuzzy_14:
   \   000003F6   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   000003FA   0x2800             CMP      R0,#+0
   \   000003FC   0xD014             BEQ.N    ??motor_fuzzy_15
   \   000003FE   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000402   0x2800             CMP      R0,#+0
   \   00000404   0xD010             BEQ.N    ??motor_fuzzy_15
   \   00000406   0xF9BD 0x4008      LDRSH    R4,[SP, #+8]
   \   0000040A   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   0000040E   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000412   0x.... 0x....      BL       min
   \   00000416   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000418   0xA90F             ADD      R1,SP,#+60
   \   0000041A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000041E   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   00000422   0x1C40             ADDS     R0,R0,#+1
   \   00000424   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1112            if(Se&&Bc)  {vm[im]=min(Se,Bc);im++;}
   \                     ??motor_fuzzy_15:
   \   00000428   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   0000042C   0x2800             CMP      R0,#+0
   \   0000042E   0xD014             BEQ.N    ??motor_fuzzy_16
   \   00000430   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000434   0x2800             CMP      R0,#+0
   \   00000436   0xD010             BEQ.N    ??motor_fuzzy_16
   \   00000438   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   0000043C   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   00000440   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000444   0x.... 0x....      BL       min
   \   00000448   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000044A   0xA90C             ADD      R1,SP,#+48
   \   0000044C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000450   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   00000454   0x1C40             ADDS     R0,R0,#+1
   \   00000456   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1113            if(Me&&Sc)  {vz[iz]=min(Me,Sc);iz++;}
   \                     ??motor_fuzzy_16:
   \   0000045A   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   0000045E   0x2800             CMP      R0,#+0
   \   00000460   0xD014             BEQ.N    ??motor_fuzzy_17
   \   00000462   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   00000466   0x2800             CMP      R0,#+0
   \   00000468   0xD010             BEQ.N    ??motor_fuzzy_17
   \   0000046A   0xF9BD 0x4012      LDRSH    R4,[SP, #+18]
   \   0000046E   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   00000472   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   00000476   0x.... 0x....      BL       min
   \   0000047A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000047C   0xA912             ADD      R1,SP,#+72
   \   0000047E   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000482   0xF8BD 0x0012      LDRH     R0,[SP, #+18]
   \   00000486   0x1C40             ADDS     R0,R0,#+1
   \   00000488   0xF8AD 0x0012      STRH     R0,[SP, #+18]
   1114            if(Me&&Mc)  {vs[is]=min(Me,Mc);is++;}
   \                     ??motor_fuzzy_17:
   \   0000048C   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   00000490   0x2800             CMP      R0,#+0
   \   00000492   0xD014             BEQ.N    ??motor_fuzzy_18
   \   00000494   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000498   0x2800             CMP      R0,#+0
   \   0000049A   0xD010             BEQ.N    ??motor_fuzzy_18
   \   0000049C   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   000004A0   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   000004A4   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000004A8   0x.... 0x....      BL       min
   \   000004AC   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000004AE   0xA909             ADD      R1,SP,#+36
   \   000004B0   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004B4   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000004B8   0x1C40             ADDS     R0,R0,#+1
   \   000004BA   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1115            if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
   \                     ??motor_fuzzy_18:
   \   000004BE   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000004C2   0x2800             CMP      R0,#+0
   \   000004C4   0xD014             BEQ.N    ??motor_fuzzy_19
   \   000004C6   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000004CA   0x2800             CMP      R0,#+0
   \   000004CC   0xD010             BEQ.N    ??motor_fuzzy_19
   \   000004CE   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   000004D2   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   000004D6   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000004DA   0x.... 0x....      BL       min
   \   000004DE   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000004E0   0xA909             ADD      R1,SP,#+36
   \   000004E2   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004E6   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000004EA   0x1C40             ADDS     R0,R0,#+1
   \   000004EC   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1116            if(Be&&Sc)  {vz[iz]=min(Be,Sc);iz++;}
   \                     ??motor_fuzzy_19:
   \   000004F0   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   000004F4   0x2800             CMP      R0,#+0
   \   000004F6   0xD014             BEQ.N    ??motor_fuzzy_20
   \   000004F8   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   000004FC   0x2800             CMP      R0,#+0
   \   000004FE   0xD010             BEQ.N    ??motor_fuzzy_20
   \   00000500   0xF9BD 0x4012      LDRSH    R4,[SP, #+18]
   \   00000504   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   00000508   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   0000050C   0x.... 0x....      BL       min
   \   00000510   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000512   0xA912             ADD      R1,SP,#+72
   \   00000514   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000518   0xF8BD 0x0012      LDRH     R0,[SP, #+18]
   \   0000051C   0x1C40             ADDS     R0,R0,#+1
   \   0000051E   0xF8AD 0x0012      STRH     R0,[SP, #+18]
   1117            if(Be&&Mc)  {vz[iz]=min(Be,Mc);iz++;} 
   \                     ??motor_fuzzy_20:
   \   00000522   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   00000526   0x2800             CMP      R0,#+0
   \   00000528   0xD014             BEQ.N    ??motor_fuzzy_21
   \   0000052A   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   0000052E   0x2800             CMP      R0,#+0
   \   00000530   0xD010             BEQ.N    ??motor_fuzzy_21
   \   00000532   0xF9BD 0x4012      LDRSH    R4,[SP, #+18]
   \   00000536   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   0000053A   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   0000053E   0x.... 0x....      BL       min
   \   00000542   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000544   0xA912             ADD      R1,SP,#+72
   \   00000546   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000054A   0xF8BD 0x0012      LDRH     R0,[SP, #+18]
   \   0000054E   0x1C40             ADDS     R0,R0,#+1
   \   00000550   0xF8AD 0x0012      STRH     R0,[SP, #+18]
   1118            if(Be&&Bc)  {vz[iz]=min(Be,Bc);iz++;}
   \                     ??motor_fuzzy_21:
   \   00000554   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   00000558   0x2800             CMP      R0,#+0
   \   0000055A   0xD014             BEQ.N    ??motor_fuzzy_22
   \   0000055C   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000560   0x2800             CMP      R0,#+0
   \   00000562   0xD010             BEQ.N    ??motor_fuzzy_22
   \   00000564   0xF9BD 0x4012      LDRSH    R4,[SP, #+18]
   \   00000568   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   0000056C   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   00000570   0x.... 0x....      BL       min
   \   00000574   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000576   0xA912             ADD      R1,SP,#+72
   \   00000578   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000057C   0xF8BD 0x0012      LDRH     R0,[SP, #+18]
   \   00000580   0x1C40             ADDS     R0,R0,#+1
   \   00000582   0xF8AD 0x0012      STRH     R0,[SP, #+18]
   1119          
   1120            if(vz[0]){
   \                     ??motor_fuzzy_22:
   \   00000586   0xF9BD 0x0048      LDRSH    R0,[SP, #+72]
   \   0000058A   0x2800             CMP      R0,#+0
   \   0000058C   0xD005             BEQ.N    ??motor_fuzzy_23
   1121            f=&vz[0];
   \   0000058E   0xA812             ADD      R0,SP,#+72
   1122            Kz=subjection_k(f,iz);
   \   00000590   0xF9BD 0x1012      LDRSH    R1,[SP, #+18]
   \   00000594   0x.... 0x....      BL       subjection_k
   \   00000598   0x9008             STR      R0,[SP, #+32]
   1123            }
   1124            if(vs[0]){
   \                     ??motor_fuzzy_23:
   \   0000059A   0xF9BD 0x0024      LDRSH    R0,[SP, #+36]
   \   0000059E   0x2800             CMP      R0,#+0
   \   000005A0   0xD005             BEQ.N    ??motor_fuzzy_24
   1125            f=&vs[0];
   \   000005A2   0xA809             ADD      R0,SP,#+36
   1126            Ks=subjection_k(f,is);
   \   000005A4   0xF9BD 0x1004      LDRSH    R1,[SP, #+4]
   \   000005A8   0x.... 0x....      BL       subjection_k
   \   000005AC   0x9007             STR      R0,[SP, #+28]
   1127            }
   1128            if(vm[0]){
   \                     ??motor_fuzzy_24:
   \   000005AE   0xF9BD 0x0030      LDRSH    R0,[SP, #+48]
   \   000005B2   0x2800             CMP      R0,#+0
   \   000005B4   0xD005             BEQ.N    ??motor_fuzzy_25
   1129            f=&vm[0];
   \   000005B6   0xA80C             ADD      R0,SP,#+48
   1130            Km=subjection_k(f,im);
   \   000005B8   0xF9BD 0x1006      LDRSH    R1,[SP, #+6]
   \   000005BC   0x.... 0x....      BL       subjection_k
   \   000005C0   0x9006             STR      R0,[SP, #+24]
   1131            }
   1132            if(vb[0]){
   \                     ??motor_fuzzy_25:
   \   000005C2   0xF9BD 0x003C      LDRSH    R0,[SP, #+60]
   \   000005C6   0x2800             CMP      R0,#+0
   \   000005C8   0xD005             BEQ.N    ??motor_fuzzy_26
   1133            f=&vb[0];
   \   000005CA   0xA80F             ADD      R0,SP,#+60
   1134            Kb=subjection_k(f,ib);
   \   000005CC   0xF9BD 0x1008      LDRSH    R1,[SP, #+8]
   \   000005D0   0x.... 0x....      BL       subjection_k
   \   000005D4   0x9005             STR      R0,[SP, #+20]
   1135            }
   1136            
   1137            Motor.I=(MI_B*Kb+MI_M*Km+MI_S*Ks)/(Kb+Km+Ks+Kz);
   \                     ??motor_fuzzy_26:
   \   000005D6   0x9805             LDR      R0,[SP, #+20]
   \   000005D8   0x210C             MOVS     R1,#+12
   \   000005DA   0x9A06             LDR      R2,[SP, #+24]
   \   000005DC   0x2309             MOVS     R3,#+9
   \   000005DE   0x435A             MULS     R2,R3,R2
   \   000005E0   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000005E4   0x9907             LDR      R1,[SP, #+28]
   \   000005E6   0x2206             MOVS     R2,#+6
   \   000005E8   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000005EC   0x9905             LDR      R1,[SP, #+20]
   \   000005EE   0x9A06             LDR      R2,[SP, #+24]
   \   000005F0   0x1851             ADDS     R1,R2,R1
   \   000005F2   0x9A07             LDR      R2,[SP, #+28]
   \   000005F4   0x1851             ADDS     R1,R2,R1
   \   000005F6   0x9A08             LDR      R2,[SP, #+32]
   \   000005F8   0x1851             ADDS     R1,R2,R1
   \   000005FA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000005FE   0x.... 0x....      LDR.W    R1,??DataTable50
   \   00000602   0x8048             STRH     R0,[R1, #+2]
   1138          
   1139          }
   \   00000604   0xB017             ADD      SP,SP,#+92
   \   00000606   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1140          //speed_fuzzy(E,Ec,35,30,50,45,3,1,7,5)

   \                                 In section .text, align 2, keep-with-next
   1141          int16 speed_fuzzy(int16 e,int16 ec,int16 s_end,int16 m_start,int16 b_start,int16 m_end,int16 sc_end,int16 mc_start,int16 bc_start,int16 mc_end)
   1142          {
   \                     speed_fuzzy:
   \   00000000   0xE92D 0x4FF5      PUSH     {R0,R2,R4-R11,LR}
   \   00000004   0xB095             SUB      SP,SP,#+84
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x001C             MOVS     R4,R3
   \   0000000A   0xF9BD 0xA080      LDRSH    R10,[SP, #+128]
   \   0000000E   0xF9BD 0xB084      LDRSH    R11,[SP, #+132]
   \   00000012   0xF9BD 0x6088      LDRSH    R6,[SP, #+136]
   \   00000016   0xF9BD 0x708C      LDRSH    R7,[SP, #+140]
   \   0000001A   0xF9BD 0x8090      LDRSH    R8,[SP, #+144]
   \   0000001E   0xF9BD 0x9094      LDRSH    R9,[SP, #+148]
   1143            volatile int16 ib=0,im=0,is=0,exspeed=0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1144            volatile int16 Se=0,Me=0,Be=0;
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0xF8AD 0x0010      STRH     R0,[SP, #+16]
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0xF8AD 0x000E      STRH     R0,[SP, #+14]
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0xF8AD 0x000C      STRH     R0,[SP, #+12]
   1145            volatile int16 Sc=0,Mc=0,Bc=0;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0xF8AD 0x000A      STRH     R0,[SP, #+10]
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1146            int16 vb[8]={0};
   \   0000005E   0xA80C             ADD      R0,SP,#+48
   \   00000060   0x2110             MOVS     R1,#+16
   \   00000062   0x.... 0x....      BL       __aeabi_memclr4
   1147            int16 vm[8]={0};
   \   00000066   0xA810             ADD      R0,SP,#+64
   \   00000068   0x2110             MOVS     R1,#+16
   \   0000006A   0x.... 0x....      BL       __aeabi_memclr4
   1148            int16 vs[8]={0};
   \   0000006E   0xA808             ADD      R0,SP,#+32
   \   00000070   0x2110             MOVS     R1,#+16
   \   00000072   0x.... 0x....      BL       __aeabi_memclr4
   1149            volatile long Ks=0,Km=0,Kb=0;
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x9007             STR      R0,[SP, #+28]
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x9006             STR      R0,[SP, #+24]
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x9005             STR      R0,[SP, #+20]
   1150            int16 *f;
   1151            
   1152            sub_e(e,s_end,m_start,b_start,m_end); //变化差
   \   00000082   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000086   0xF8CD 0xB000      STR      R11,[SP, #+0]
   \   0000008A   0x4653             MOV      R3,R10
   \   0000008C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000008E   0x0022             MOVS     R2,R4
   \   00000090   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000092   0xF8BD 0x1058      LDRH     R1,[SP, #+88]
   \   00000096   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000098   0xF8BD 0x0054      LDRH     R0,[SP, #+84]
   \   0000009C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009E   0x.... 0x....      BL       sub_e
   1153            Se=sub.s;
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000A6   0x8800             LDRH     R0,[R0, #+0]
   \   000000A8   0xF8AD 0x0010      STRH     R0,[SP, #+16]
   1154            Me=sub.m;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000B0   0x8840             LDRH     R0,[R0, #+2]
   \   000000B2   0xF8AD 0x000E      STRH     R0,[SP, #+14]
   1155            Be=sub.b;
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000BA   0x8880             LDRH     R0,[R0, #+4]
   \   000000BC   0xF8AD 0x000C      STRH     R0,[SP, #+12]
   1156            
   1157            sub_e(abs(ec),sc_end,mc_start,bc_start,mc_end);  //变化率
   \   000000C0   0x0028             MOVS     R0,R5
   \   000000C2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000C4   0x.... 0x....      BL       abs
   \   000000C8   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000CC   0xF8CD 0x9000      STR      R9,[SP, #+0]
   \   000000D0   0x4643             MOV      R3,R8
   \   000000D2   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000D4   0x003A             MOVS     R2,R7
   \   000000D6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000D8   0x0031             MOVS     R1,R6
   \   000000DA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000DC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DE   0x.... 0x....      BL       sub_e
   1158            Sc=sub.s;
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000E6   0x8800             LDRH     R0,[R0, #+0]
   \   000000E8   0xF8AD 0x000A      STRH     R0,[SP, #+10]
   1159            Mc=sub.m;
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000F0   0x8840             LDRH     R0,[R0, #+2]
   \   000000F2   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   1160            Bc=sub.b;
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable49
   \   000000FA   0x8880             LDRH     R0,[R0, #+4]
   \   000000FC   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1161            
   1162            
   1163            if(ec<0){                             //看到的点数在增加
   \   00000100   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000102   0x2D00             CMP      R5,#+0
   \   00000104   0xF140 0x811D      BPL.W    ??speed_fuzzy_0
   1164            
   1165            if(Se&&Sc)  {vs[is]=min(Se,Sc);is++;}  //建表
   \   00000108   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   0000010C   0x2800             CMP      R0,#+0
   \   0000010E   0xD014             BEQ.N    ??speed_fuzzy_1
   \   00000110   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xD010             BEQ.N    ??speed_fuzzy_1
   \   00000118   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   0000011C   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   00000120   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000124   0x.... 0x....      BL       min
   \   00000128   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000012A   0xA908             ADD      R1,SP,#+32
   \   0000012C   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000130   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000134   0x1C40             ADDS     R0,R0,#+1
   \   00000136   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1166            if(Se&&Mc)  {vm[im]=min(Se,Mc);im++;}  //b
   \                     ??speed_fuzzy_1:
   \   0000013A   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   0000013E   0x2800             CMP      R0,#+0
   \   00000140   0xD014             BEQ.N    ??speed_fuzzy_2
   \   00000142   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000146   0x2800             CMP      R0,#+0
   \   00000148   0xD010             BEQ.N    ??speed_fuzzy_2
   \   0000014A   0xF9BD 0x4008      LDRSH    R4,[SP, #+8]
   \   0000014E   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   00000152   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000156   0x.... 0x....      BL       min
   \   0000015A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000015C   0xA910             ADD      R1,SP,#+64
   \   0000015E   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000162   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   00000166   0x1C40             ADDS     R0,R0,#+1
   \   00000168   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1167            if(Se&&Bc)  {vb[ib]=min(Se,Bc);ib++;}
   \                     ??speed_fuzzy_2:
   \   0000016C   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000170   0x2800             CMP      R0,#+0
   \   00000172   0xD014             BEQ.N    ??speed_fuzzy_3
   \   00000174   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000178   0x2800             CMP      R0,#+0
   \   0000017A   0xD010             BEQ.N    ??speed_fuzzy_3
   \   0000017C   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   00000180   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   00000184   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000188   0x.... 0x....      BL       min
   \   0000018C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000018E   0xA90C             ADD      R1,SP,#+48
   \   00000190   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000194   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   00000198   0x1C40             ADDS     R0,R0,#+1
   \   0000019A   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1168            if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
   \                     ??speed_fuzzy_3:
   \   0000019E   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000001A2   0x2800             CMP      R0,#+0
   \   000001A4   0xD014             BEQ.N    ??speed_fuzzy_4
   \   000001A6   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   000001AA   0x2800             CMP      R0,#+0
   \   000001AC   0xD010             BEQ.N    ??speed_fuzzy_4
   \   000001AE   0xF9BD 0x4008      LDRSH    R4,[SP, #+8]
   \   000001B2   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   000001B6   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000001BA   0x.... 0x....      BL       min
   \   000001BE   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000001C0   0xA910             ADD      R1,SP,#+64
   \   000001C2   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001C6   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   000001CA   0x1C40             ADDS     R0,R0,#+1
   \   000001CC   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1169            if(Me&&Mc)  {vb[ib]=min(Me,Mc);ib++;}
   \                     ??speed_fuzzy_4:
   \   000001D0   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000001D4   0x2800             CMP      R0,#+0
   \   000001D6   0xD014             BEQ.N    ??speed_fuzzy_5
   \   000001D8   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   000001DC   0x2800             CMP      R0,#+0
   \   000001DE   0xD010             BEQ.N    ??speed_fuzzy_5
   \   000001E0   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   000001E4   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   000001E8   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000001EC   0x.... 0x....      BL       min
   \   000001F0   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000001F2   0xA90C             ADD      R1,SP,#+48
   \   000001F4   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000001F8   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   000001FC   0x1C40             ADDS     R0,R0,#+1
   \   000001FE   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1170            if(Me&&Bc)  {vb[ib]=min(Me,Bc);ib++;}
   \                     ??speed_fuzzy_5:
   \   00000202   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   00000206   0x2800             CMP      R0,#+0
   \   00000208   0xD014             BEQ.N    ??speed_fuzzy_6
   \   0000020A   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   0000020E   0x2800             CMP      R0,#+0
   \   00000210   0xD010             BEQ.N    ??speed_fuzzy_6
   \   00000212   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   00000216   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   0000021A   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   0000021E   0x.... 0x....      BL       min
   \   00000222   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000224   0xA90C             ADD      R1,SP,#+48
   \   00000226   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000022A   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   0000022E   0x1C40             ADDS     R0,R0,#+1
   \   00000230   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1171            if(Be&&Sc)  {vb[ib]=min(Be,Sc);ib++;}
   \                     ??speed_fuzzy_6:
   \   00000234   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   00000238   0x2800             CMP      R0,#+0
   \   0000023A   0xD014             BEQ.N    ??speed_fuzzy_7
   \   0000023C   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   00000240   0x2800             CMP      R0,#+0
   \   00000242   0xD010             BEQ.N    ??speed_fuzzy_7
   \   00000244   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   00000248   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   0000024C   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   00000250   0x.... 0x....      BL       min
   \   00000254   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000256   0xA90C             ADD      R1,SP,#+48
   \   00000258   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000025C   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   00000260   0x1C40             ADDS     R0,R0,#+1
   \   00000262   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1172            if(Be&&Mc)  {vb[ib]=min(Be,Mc);ib++;} 
   \                     ??speed_fuzzy_7:
   \   00000266   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   0000026A   0x2800             CMP      R0,#+0
   \   0000026C   0xD014             BEQ.N    ??speed_fuzzy_8
   \   0000026E   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000272   0x2800             CMP      R0,#+0
   \   00000274   0xD010             BEQ.N    ??speed_fuzzy_8
   \   00000276   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   0000027A   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   0000027E   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   00000282   0x.... 0x....      BL       min
   \   00000286   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000288   0xA90C             ADD      R1,SP,#+48
   \   0000028A   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000028E   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   00000292   0x1C40             ADDS     R0,R0,#+1
   \   00000294   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1173            if(Be&&Bc)  {vb[ib]=min(Be,Bc);ib++;} 
   \                     ??speed_fuzzy_8:
   \   00000298   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   0000029C   0x2800             CMP      R0,#+0
   \   0000029E   0xD014             BEQ.N    ??speed_fuzzy_9
   \   000002A0   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000002A4   0x2800             CMP      R0,#+0
   \   000002A6   0xD010             BEQ.N    ??speed_fuzzy_9
   \   000002A8   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   000002AC   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   000002B0   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   000002B4   0x.... 0x....      BL       min
   \   000002B8   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000002BA   0xA90C             ADD      R1,SP,#+48
   \   000002BC   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000002C0   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   000002C4   0x1C40             ADDS     R0,R0,#+1
   \   000002C6   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1174              if(vs[0]){
   \                     ??speed_fuzzy_9:
   \   000002CA   0xF9BD 0x0020      LDRSH    R0,[SP, #+32]
   \   000002CE   0x2800             CMP      R0,#+0
   \   000002D0   0xD005             BEQ.N    ??speed_fuzzy_10
   1175              f=&vs[0];
   \   000002D2   0xA808             ADD      R0,SP,#+32
   1176              Ks=subjection_k(f,is);
   \   000002D4   0xF9BD 0x1004      LDRSH    R1,[SP, #+4]
   \   000002D8   0x.... 0x....      BL       subjection_k
   \   000002DC   0x9007             STR      R0,[SP, #+28]
   1177              }
   1178              if(vm[0]){
   \                     ??speed_fuzzy_10:
   \   000002DE   0xF9BD 0x0040      LDRSH    R0,[SP, #+64]
   \   000002E2   0x2800             CMP      R0,#+0
   \   000002E4   0xD005             BEQ.N    ??speed_fuzzy_11
   1179              f=&vm[0];
   \   000002E6   0xA810             ADD      R0,SP,#+64
   1180              Km=subjection_k(f,im);
   \   000002E8   0xF9BD 0x1008      LDRSH    R1,[SP, #+8]
   \   000002EC   0x.... 0x....      BL       subjection_k
   \   000002F0   0x9006             STR      R0,[SP, #+24]
   1181              }
   1182              if(vb[0]){
   \                     ??speed_fuzzy_11:
   \   000002F2   0xF9BD 0x0030      LDRSH    R0,[SP, #+48]
   \   000002F6   0x2800             CMP      R0,#+0
   \   000002F8   0xD005             BEQ.N    ??speed_fuzzy_12
   1183              f=&vb[0];
   \   000002FA   0xA80C             ADD      R0,SP,#+48
   1184              Kb=subjection_k(f,ib);
   \   000002FC   0xF9BD 0x1006      LDRSH    R1,[SP, #+6]
   \   00000300   0x.... 0x....      BL       subjection_k
   \   00000304   0x9005             STR      R0,[SP, #+20]
   1185              }
   1186              
   1187              exspeed=(speed_b*Kb+speed_m*Km+speed_s*Ks)/(Kb+Km+Ks);
   \                     ??speed_fuzzy_12:
   \   00000306   0x.... 0x....      LDR.W    R0,??DataTable51
   \   0000030A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000030E   0x9905             LDR      R1,[SP, #+20]
   \   00000310   0x.... 0x....      LDR.W    R2,??DataTable51_1
   \   00000314   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000318   0x9B06             LDR      R3,[SP, #+24]
   \   0000031A   0x435A             MULS     R2,R3,R2
   \   0000031C   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000320   0x.... 0x....      LDR.W    R1,??DataTable51_2
   \   00000324   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000328   0x9A07             LDR      R2,[SP, #+28]
   \   0000032A   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000032E   0x9905             LDR      R1,[SP, #+20]
   \   00000330   0x9A06             LDR      R2,[SP, #+24]
   \   00000332   0x1851             ADDS     R1,R2,R1
   \   00000334   0x9A07             LDR      R2,[SP, #+28]
   \   00000336   0x1851             ADDS     R1,R2,R1
   \   00000338   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000033C   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   00000340   0xE11B             B.N      ??speed_fuzzy_13
   1188            }else{
   1189             
   1190            
   1191            if(Se&&Sc)  {vs[is]=min(Se,Sc);is++;}  //建表 4.10
   \                     ??speed_fuzzy_0:
   \   00000342   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000346   0x2800             CMP      R0,#+0
   \   00000348   0xD014             BEQ.N    ??speed_fuzzy_14
   \   0000034A   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   0000034E   0x2800             CMP      R0,#+0
   \   00000350   0xD010             BEQ.N    ??speed_fuzzy_14
   \   00000352   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   00000356   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   0000035A   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   0000035E   0x.... 0x....      BL       min
   \   00000362   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000364   0xA908             ADD      R1,SP,#+32
   \   00000366   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000036A   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   0000036E   0x1C40             ADDS     R0,R0,#+1
   \   00000370   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1192            if(Se&&Mc)  {vs[is]=min(Se,Mc);is++;}
   \                     ??speed_fuzzy_14:
   \   00000374   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000378   0x2800             CMP      R0,#+0
   \   0000037A   0xD014             BEQ.N    ??speed_fuzzy_15
   \   0000037C   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000380   0x2800             CMP      R0,#+0
   \   00000382   0xD010             BEQ.N    ??speed_fuzzy_15
   \   00000384   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   00000388   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   0000038C   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000390   0x.... 0x....      BL       min
   \   00000394   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000396   0xA908             ADD      R1,SP,#+32
   \   00000398   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   0000039C   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000003A0   0x1C40             ADDS     R0,R0,#+1
   \   000003A2   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1193            if(Se&&Bc)  {vs[is]=min(Se,Bc);is++;}
   \                     ??speed_fuzzy_15:
   \   000003A6   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   000003AA   0x2800             CMP      R0,#+0
   \   000003AC   0xD014             BEQ.N    ??speed_fuzzy_16
   \   000003AE   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000003B2   0x2800             CMP      R0,#+0
   \   000003B4   0xD010             BEQ.N    ??speed_fuzzy_16
   \   000003B6   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   000003BA   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   000003BE   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   000003C2   0x.... 0x....      BL       min
   \   000003C6   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000003C8   0xA908             ADD      R1,SP,#+32
   \   000003CA   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000003CE   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000003D2   0x1C40             ADDS     R0,R0,#+1
   \   000003D4   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1194            if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
   \                     ??speed_fuzzy_16:
   \   000003D8   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000003DC   0x2800             CMP      R0,#+0
   \   000003DE   0xD014             BEQ.N    ??speed_fuzzy_17
   \   000003E0   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   000003E4   0x2800             CMP      R0,#+0
   \   000003E6   0xD010             BEQ.N    ??speed_fuzzy_17
   \   000003E8   0xF9BD 0x4008      LDRSH    R4,[SP, #+8]
   \   000003EC   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   000003F0   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   000003F4   0x.... 0x....      BL       min
   \   000003F8   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000003FA   0xA910             ADD      R1,SP,#+64
   \   000003FC   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000400   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   00000404   0x1C40             ADDS     R0,R0,#+1
   \   00000406   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1195            if(Me&&Mc)  {vs[is]=min(Me,Mc);is++;}
   \                     ??speed_fuzzy_17:
   \   0000040A   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   0000040E   0x2800             CMP      R0,#+0
   \   00000410   0xD014             BEQ.N    ??speed_fuzzy_18
   \   00000412   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   00000416   0x2800             CMP      R0,#+0
   \   00000418   0xD010             BEQ.N    ??speed_fuzzy_18
   \   0000041A   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   0000041E   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   00000422   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   00000426   0x.... 0x....      BL       min
   \   0000042A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000042C   0xA908             ADD      R1,SP,#+32
   \   0000042E   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000432   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000436   0x1C40             ADDS     R0,R0,#+1
   \   00000438   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1196            if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
   \                     ??speed_fuzzy_18:
   \   0000043C   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   00000440   0x2800             CMP      R0,#+0
   \   00000442   0xD014             BEQ.N    ??speed_fuzzy_19
   \   00000444   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000448   0x2800             CMP      R0,#+0
   \   0000044A   0xD010             BEQ.N    ??speed_fuzzy_19
   \   0000044C   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   00000450   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   00000454   0xF9BD 0x000E      LDRSH    R0,[SP, #+14]
   \   00000458   0x.... 0x....      BL       min
   \   0000045C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000045E   0xA908             ADD      R1,SP,#+32
   \   00000460   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000464   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000468   0x1C40             ADDS     R0,R0,#+1
   \   0000046A   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1197            if(Be&&Sc)  {vb[ib]=min(Be,Sc);ib++;}
   \                     ??speed_fuzzy_19:
   \   0000046E   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   00000472   0x2800             CMP      R0,#+0
   \   00000474   0xD014             BEQ.N    ??speed_fuzzy_20
   \   00000476   0xF9BD 0x000A      LDRSH    R0,[SP, #+10]
   \   0000047A   0x2800             CMP      R0,#+0
   \   0000047C   0xD010             BEQ.N    ??speed_fuzzy_20
   \   0000047E   0xF9BD 0x4006      LDRSH    R4,[SP, #+6]
   \   00000482   0xF9BD 0x100A      LDRSH    R1,[SP, #+10]
   \   00000486   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   0000048A   0x.... 0x....      BL       min
   \   0000048E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000490   0xA90C             ADD      R1,SP,#+48
   \   00000492   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   00000496   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   0000049A   0x1C40             ADDS     R0,R0,#+1
   \   0000049C   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   1198            if(Be&&Mc)  {vm[im]=min(Be,Mc);im++;}
   \                     ??speed_fuzzy_20:
   \   000004A0   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   000004A4   0x2800             CMP      R0,#+0
   \   000004A6   0xD014             BEQ.N    ??speed_fuzzy_21
   \   000004A8   0xF9BD 0x0002      LDRSH    R0,[SP, #+2]
   \   000004AC   0x2800             CMP      R0,#+0
   \   000004AE   0xD010             BEQ.N    ??speed_fuzzy_21
   \   000004B0   0xF9BD 0x4008      LDRSH    R4,[SP, #+8]
   \   000004B4   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \   000004B8   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   000004BC   0x.... 0x....      BL       min
   \   000004C0   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000004C2   0xA910             ADD      R1,SP,#+64
   \   000004C4   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004C8   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   000004CC   0x1C40             ADDS     R0,R0,#+1
   \   000004CE   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1199            if(Be&&Bc)  {vs[is]=min(Be,Bc);is++;}
   \                     ??speed_fuzzy_21:
   \   000004D2   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   000004D6   0x2800             CMP      R0,#+0
   \   000004D8   0xD014             BEQ.N    ??speed_fuzzy_22
   \   000004DA   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   000004DE   0x2800             CMP      R0,#+0
   \   000004E0   0xD010             BEQ.N    ??speed_fuzzy_22
   \   000004E2   0xF9BD 0x4004      LDRSH    R4,[SP, #+4]
   \   000004E6   0xF9BD 0x1000      LDRSH    R1,[SP, #+0]
   \   000004EA   0xF9BD 0x000C      LDRSH    R0,[SP, #+12]
   \   000004EE   0x.... 0x....      BL       min
   \   000004F2   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000004F4   0xA908             ADD      R1,SP,#+32
   \   000004F6   0xF821 0x0014      STRH     R0,[R1, R4, LSL #+1]
   \   000004FA   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000004FE   0x1C40             ADDS     R0,R0,#+1
   \   00000500   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1200          
   1201              if(vs[0]){
   \                     ??speed_fuzzy_22:
   \   00000504   0xF9BD 0x0020      LDRSH    R0,[SP, #+32]
   \   00000508   0x2800             CMP      R0,#+0
   \   0000050A   0xD005             BEQ.N    ??speed_fuzzy_23
   1202              f=&vs[0];
   \   0000050C   0xA808             ADD      R0,SP,#+32
   1203              Ks=subjection_k(f,is);
   \   0000050E   0xF9BD 0x1004      LDRSH    R1,[SP, #+4]
   \   00000512   0x.... 0x....      BL       subjection_k
   \   00000516   0x9007             STR      R0,[SP, #+28]
   1204              }
   1205              if(vm[0]){
   \                     ??speed_fuzzy_23:
   \   00000518   0xF9BD 0x0040      LDRSH    R0,[SP, #+64]
   \   0000051C   0x2800             CMP      R0,#+0
   \   0000051E   0xD005             BEQ.N    ??speed_fuzzy_24
   1206              f=&vm[0];
   \   00000520   0xA810             ADD      R0,SP,#+64
   1207              Km=subjection_k(f,im);
   \   00000522   0xF9BD 0x1008      LDRSH    R1,[SP, #+8]
   \   00000526   0x.... 0x....      BL       subjection_k
   \   0000052A   0x9006             STR      R0,[SP, #+24]
   1208              }
   1209              if(vb[0]){
   \                     ??speed_fuzzy_24:
   \   0000052C   0xF9BD 0x0030      LDRSH    R0,[SP, #+48]
   \   00000530   0x2800             CMP      R0,#+0
   \   00000532   0xD005             BEQ.N    ??speed_fuzzy_25
   1210              f=&vb[0];
   \   00000534   0xA80C             ADD      R0,SP,#+48
   1211              Kb=subjection_k(f,ib);
   \   00000536   0xF9BD 0x1006      LDRSH    R1,[SP, #+6]
   \   0000053A   0x.... 0x....      BL       subjection_k
   \   0000053E   0x9005             STR      R0,[SP, #+20]
   1212              }
   1213              
   1214          
   1215              exspeed=(speed_b*Kb+speed_m*Km+speed_s*Ks)/(Kb+Km+Ks);
   \                     ??speed_fuzzy_25:
   \   00000540   0x.... 0x....      LDR.W    R0,??DataTable51
   \   00000544   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000548   0x9905             LDR      R1,[SP, #+20]
   \   0000054A   0x.... 0x....      LDR.W    R2,??DataTable51_1
   \   0000054E   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000552   0x9B06             LDR      R3,[SP, #+24]
   \   00000554   0x435A             MULS     R2,R3,R2
   \   00000556   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000055A   0x.... 0x....      LDR.W    R1,??DataTable51_2
   \   0000055E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000562   0x9A07             LDR      R2,[SP, #+28]
   \   00000564   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000568   0x9905             LDR      R1,[SP, #+20]
   \   0000056A   0x9A06             LDR      R2,[SP, #+24]
   \   0000056C   0x1851             ADDS     R1,R2,R1
   \   0000056E   0x9A07             LDR      R2,[SP, #+28]
   \   00000570   0x1851             ADDS     R1,R2,R1
   \   00000572   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000576   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1216            }
   1217            
   1218            return exspeed;
   \                     ??speed_fuzzy_13:
   \   0000057A   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   0000057E   0xB017             ADD      SP,SP,#+92
   \   00000580   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1219          }
   1220          
   1221          
   1222          /*****找到莫连续几行的中心线的最大最小值******/

   \                                 In section .text, align 2, keep-with-next
   1223          int16 line_min(uint8 *head,uint8 *tail){
   \                     line_min:
   \   00000000   0xB410             PUSH     {R4}
   1224            uint8 *p=NULL;
   \   00000002   0x2200             MOVS     R2,#+0
   1225            point.x=*head;
   \   00000004   0x.... 0x....      LDR.W    R3,??DataTable52
   \   00000008   0x7804             LDRB     R4,[R0, #+0]
   \   0000000A   0x701C             STRB     R4,[R3, #+0]
   1226            point.y=0;
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable52
   \   00000010   0x2400             MOVS     R4,#+0
   \   00000012   0x705C             STRB     R4,[R3, #+1]
   1227            for(p=head+1;p<=tail;p++){
   \   00000014   0x1C43             ADDS     R3,R0,#+1
   \   00000016   0x001A             MOVS     R2,R3
   \   00000018   0xE00E             B.N      ??line_min_0
   1228              if(*p<point.x){
   \                     ??line_min_1:
   \   0000001A   0x7813             LDRB     R3,[R2, #+0]
   \   0000001C   0x.... 0x....      LDR.W    R4,??DataTable52
   \   00000020   0x7824             LDRB     R4,[R4, #+0]
   \   00000022   0x42A3             CMP      R3,R4
   \   00000024   0xD207             BCS.N    ??line_min_2
   1229                point.x=*p;
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable52
   \   0000002A   0x7814             LDRB     R4,[R2, #+0]
   \   0000002C   0x701C             STRB     R4,[R3, #+0]
   1230          
   1231          
   1232          
   1233                 point.y=p-head;
   \   0000002E   0x1A13             SUBS     R3,R2,R0
   \   00000030   0x.... 0x....      LDR.W    R4,??DataTable52
   \   00000034   0x7063             STRB     R3,[R4, #+1]
   1234              }  
   1235            }
   \                     ??line_min_2:
   \   00000036   0x1C52             ADDS     R2,R2,#+1
   \                     ??line_min_0:
   \   00000038   0x4291             CMP      R1,R2
   \   0000003A   0xD2EE             BCS.N    ??line_min_1
   1236            return point.x;
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable52
   \   00000040   0x7800             LDRB     R0,[R0, #+0]
   \   00000042   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000044   0xBC10             POP      {R4}
   \   00000046   0x4770             BX       LR               ;; return
   1237          }                                                                       
   1238              
   1239            
   1240          

   \                                 In section .text, align 2, keep-with-next
   1241          int16 line_max(uint8 *head,uint8 *tail){
   \                     line_max:
   \   00000000   0xB410             PUSH     {R4}
   1242            uint8 *p=NULL;
   \   00000002   0x2200             MOVS     R2,#+0
   1243            
   1244            point.x=*head;
   \   00000004   0x.... 0x....      LDR.W    R3,??DataTable52
   \   00000008   0x7804             LDRB     R4,[R0, #+0]
   \   0000000A   0x701C             STRB     R4,[R3, #+0]
   1245            point.y=0;
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable52
   \   00000010   0x2400             MOVS     R4,#+0
   \   00000012   0x705C             STRB     R4,[R3, #+1]
   1246            for(p=head+1;p<=tail;p++){
   \   00000014   0x1C43             ADDS     R3,R0,#+1
   \   00000016   0x001A             MOVS     R2,R3
   \   00000018   0xE00E             B.N      ??line_max_0
   1247              if(*p>point.x){
   \                     ??line_max_1:
   \   0000001A   0x.... 0x....      LDR.W    R3,??DataTable52
   \   0000001E   0x781B             LDRB     R3,[R3, #+0]
   \   00000020   0x7814             LDRB     R4,[R2, #+0]
   \   00000022   0x42A3             CMP      R3,R4
   \   00000024   0xD207             BCS.N    ??line_max_2
   1248                point.x=*p;
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable52
   \   0000002A   0x7814             LDRB     R4,[R2, #+0]
   \   0000002C   0x701C             STRB     R4,[R3, #+0]
   1249                point.y=p-head;
   \   0000002E   0x1A13             SUBS     R3,R2,R0
   \   00000030   0x.... 0x....      LDR.W    R4,??DataTable52
   \   00000034   0x7063             STRB     R3,[R4, #+1]
   1250              }
   1251            }
   \                     ??line_max_2:
   \   00000036   0x1C52             ADDS     R2,R2,#+1
   \                     ??line_max_0:
   \   00000038   0x4291             CMP      R1,R2
   \   0000003A   0xD2EE             BCS.N    ??line_max_1
   1252            return point.x;
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable52
   \   00000040   0x7800             LDRB     R0,[R0, #+0]
   \   00000042   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000044   0xBC10             POP      {R4}
   \   00000046   0x4770             BX       LR               ;; return
   1253          }
   1254          

   \                                 In section .text, align 2, keep-with-next
   1255          int16 line(int16 value,int16 lenth){
   \                     line:
   \   00000000   0xB430             PUSH     {R4,R5}
   1256            static int16 line[30]={0},i=0;               //30
   1257            int16 sum=0,j=0,k=0;
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2400             MOVS     R4,#+0
   1258            
   1259            if(i==30) i=0;                                   
   \   00000008   0x.... 0x....      LDR.W    R5,??DataTable51_3
   \   0000000C   0xF9B5 0x5000      LDRSH    R5,[R5, #+0]
   \   00000010   0x2D1E             CMP      R5,#+30
   \   00000012   0xD103             BNE.N    ??line_1
   \   00000014   0x.... 0x....      LDR.W    R3,??DataTable51_3
   \   00000018   0x2400             MOVS     R4,#+0
   \   0000001A   0x801C             STRH     R4,[R3, #+0]
   1260            line[i]=value;
   \                     ??line_1:
   \   0000001C   0x.... 0x....      LDR.W    R3,??DataTable51_3
   \   00000020   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000024   0x.... 0x....      LDR.W    R4,??DataTable52_1
   \   00000028   0xF824 0x0013      STRH     R0,[R4, R3, LSL #+1]
   1261            k=i++;
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable51_3
   \   00000030   0xF9B0 0x4000      LDRSH    R4,[R0, #+0]
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable51_3
   \   00000038   0x8800             LDRH     R0,[R0, #+0]
   \   0000003A   0x1C40             ADDS     R0,R0,#+1
   \   0000003C   0x.... 0x....      LDR.W    R3,??DataTable51_3
   \   00000040   0x8018             STRH     R0,[R3, #+0]
   1262            for(j=0;j<lenth;j++){
   \   00000042   0x2300             MOVS     R3,#+0
   \   00000044   0xE00B             B.N      ??line_2
   1263              if(k<0) k=29;
   \                     ??line_3:
   \   00000046   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000048   0x2C00             CMP      R4,#+0
   \   0000004A   0xD500             BPL.N    ??line_4
   \   0000004C   0x241D             MOVS     R4,#+29
   1264              sum+=line[k];
   \                     ??line_4:
   \   0000004E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable52_1
   \   00000054   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000058   0x1882             ADDS     R2,R0,R2
   1265              k--;
   \   0000005A   0x1E64             SUBS     R4,R4,#+1
   1266            }
   \   0000005C   0x1C5B             ADDS     R3,R3,#+1
   \                     ??line_2:
   \   0000005E   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000060   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000062   0x428B             CMP      R3,R1
   \   00000064   0xDBEF             BLT.N    ??line_3
   1267            return sum;
   \   00000066   0x0010             MOVS     R0,R2
   \   00000068   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000006A   0xBC30             POP      {R4,R5}
   \   0000006C   0x4770             BX       LR               ;; return
   1268          }

   \                                 In section .bss, align 4
   \                     ??line:
   \   00000000                      DS8 60

   \                                 In section .bss, align 2
   \                     ??i:
   \   00000000                      DS8 2
   1269          
   1270          
   1271          

   \                                 In section .text, align 2, keep-with-next
   1272          int16 stages_P(int16 value,int16 parameter)
   1273          {
   1274            //if(!value) return unclear;
   1275          
   1276            if(value<=parameter)
   \                     stages_P:
   \   00000000   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000002   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000004   0x4281             CMP      R1,R0
   \   00000006   0xDB35             BLT.N    ??stages_P_0
   1277            {
   1278              if(value>=(parameter-6)){NULL;return(0);}
   \   00000008   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000000C   0x1F8A             SUBS     R2,R1,#+6
   \   0000000E   0x4290             CMP      R0,R2
   \   00000010   0xDB01             BLT.N    ??stages_P_1
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xE05D             B.N      ??stages_P_2
   1279              else if(value>=(parameter-12)){NULL;return(-1);}  
   \                     ??stages_P_1:
   \   00000016   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000018   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000001A   0xF1B1 0x020C      SUBS     R2,R1,#+12
   \   0000001E   0x4290             CMP      R0,R2
   \   00000020   0xDB02             BLT.N    ??stages_P_3
   \   00000022   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000026   0xE054             B.N      ??stages_P_2
   1280              else if(value>=(parameter-18)){NULL;return(-2);}    
   \                     ??stages_P_3:
   \   00000028   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000002A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000002C   0xF1B1 0x0212      SUBS     R2,R1,#+18
   \   00000030   0x4290             CMP      R0,R2
   \   00000032   0xDB02             BLT.N    ??stages_P_4
   \   00000034   0xF07F 0x0001      MVNS     R0,#+1
   \   00000038   0xE04B             B.N      ??stages_P_2
   1281              else if(value>=(parameter-24)){NULL;return(-3);}
   \                     ??stages_P_4:
   \   0000003A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000003C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000003E   0xF1B1 0x0218      SUBS     R2,R1,#+24
   \   00000042   0x4290             CMP      R0,R2
   \   00000044   0xDB02             BLT.N    ??stages_P_5
   \   00000046   0xF07F 0x0002      MVNS     R0,#+2
   \   0000004A   0xE042             B.N      ??stages_P_2
   1282              else if(value>=(parameter-30)){NULL;return(-4);}
   \                     ??stages_P_5:
   \   0000004C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000004E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000050   0xF1B1 0x021E      SUBS     R2,R1,#+30
   \   00000054   0x4290             CMP      R0,R2
   \   00000056   0xDB02             BLT.N    ??stages_P_6
   \   00000058   0xF07F 0x0003      MVNS     R0,#+3
   \   0000005C   0xE039             B.N      ??stages_P_2
   1283              else if(value>=(parameter-36)){NULL;return(-5);}
   \                     ??stages_P_6:
   \   0000005E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000060   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000062   0x3924             SUBS     R1,R1,#+36
   \   00000064   0x4288             CMP      R0,R1
   \   00000066   0xDB02             BLT.N    ??stages_P_7
   \   00000068   0xF07F 0x0004      MVNS     R0,#+4
   \   0000006C   0xE031             B.N      ??stages_P_2
   1284              else {NULL;return(-6);}
   \                     ??stages_P_7:
   \   0000006E   0xF07F 0x0005      MVNS     R0,#+5
   \   00000072   0xE02E             B.N      ??stages_P_2
   1285            }
   1286            else
   1287            {
   1288              if(value<=(parameter+6)){NULL;return(0);}
   \                     ??stages_P_0:
   \   00000074   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000076   0x1D8A             ADDS     R2,R1,#+6
   \   00000078   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000007A   0x4282             CMP      R2,R0
   \   0000007C   0xDB01             BLT.N    ??stages_P_8
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0xE027             B.N      ??stages_P_2
   1289              else if(value<=(parameter+12)){NULL;return(1);}  
   \                     ??stages_P_8:
   \   00000082   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000084   0xF111 0x020C      ADDS     R2,R1,#+12
   \   00000088   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000008A   0x4282             CMP      R2,R0
   \   0000008C   0xDB01             BLT.N    ??stages_P_9
   \   0000008E   0x2001             MOVS     R0,#+1
   \   00000090   0xE01F             B.N      ??stages_P_2
   1290              else if(value<=(parameter+18)){NULL;return(2);}    
   \                     ??stages_P_9:
   \   00000092   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000094   0xF111 0x0212      ADDS     R2,R1,#+18
   \   00000098   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000009A   0x4282             CMP      R2,R0
   \   0000009C   0xDB01             BLT.N    ??stages_P_10
   \   0000009E   0x2002             MOVS     R0,#+2
   \   000000A0   0xE017             B.N      ??stages_P_2
   1291              else if(value<=(parameter+24)){NULL;return(3);}
   \                     ??stages_P_10:
   \   000000A2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000000A4   0xF111 0x0218      ADDS     R2,R1,#+24
   \   000000A8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000AA   0x4282             CMP      R2,R0
   \   000000AC   0xDB01             BLT.N    ??stages_P_11
   \   000000AE   0x2003             MOVS     R0,#+3
   \   000000B0   0xE00F             B.N      ??stages_P_2
   1292              else if(value<=(parameter+30)){NULL;return(4);}
   \                     ??stages_P_11:
   \   000000B2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000000B4   0xF111 0x021E      ADDS     R2,R1,#+30
   \   000000B8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000BA   0x4282             CMP      R2,R0
   \   000000BC   0xDB01             BLT.N    ??stages_P_12
   \   000000BE   0x2004             MOVS     R0,#+4
   \   000000C0   0xE007             B.N      ??stages_P_2
   1293              else if(value<=(parameter+36)){NULL;return(5);}
   \                     ??stages_P_12:
   \   000000C2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000000C4   0x3124             ADDS     R1,R1,#+36
   \   000000C6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000C8   0x4281             CMP      R1,R0
   \   000000CA   0xDB01             BLT.N    ??stages_P_13
   \   000000CC   0x2005             MOVS     R0,#+5
   \   000000CE   0xE000             B.N      ??stages_P_2
   1294              else {NULL;return(6);}
   \                     ??stages_P_13:
   \   000000D0   0x2006             MOVS     R0,#+6
   \                     ??stages_P_2:
   \   000000D2   0x4770             BX       LR               ;; return
   1295            }
   1296          }
   1297          

   \                                 In section .text, align 2, keep-with-next
   1298          int16 stages_low_P(int16 value,int16 parameter)
   1299          {
   1300            //if(!value) return unclear;
   1301            if(value<=parameter)
   \                     stages_low_P:
   \   00000000   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000002   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000004   0x4281             CMP      R1,R0
   \   00000006   0xDB1A             BLT.N    ??stages_low_P_0
   1302            {
   1303              if(value>=(parameter-5)){NULL;return(0);}
   \   00000008   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000000C   0x1F4A             SUBS     R2,R1,#+5
   \   0000000E   0x4290             CMP      R0,R2
   \   00000010   0xDB01             BLT.N    ??stages_low_P_1
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xE02A             B.N      ??stages_low_P_2
   1304              else if(value>=(parameter-13)){NULL;return(-1);}  
   \                     ??stages_low_P_1:
   \   00000016   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000018   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000001A   0xF1B1 0x020D      SUBS     R2,R1,#+13
   \   0000001E   0x4290             CMP      R0,R2
   \   00000020   0xDB02             BLT.N    ??stages_low_P_3
   \   00000022   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000026   0xE021             B.N      ??stages_low_P_2
   1305              else if(value>=(parameter-23)){NULL;return(-2);}    
   \                     ??stages_low_P_3:
   \   00000028   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000002A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000002C   0x3917             SUBS     R1,R1,#+23
   \   0000002E   0x4288             CMP      R0,R1
   \   00000030   0xDB02             BLT.N    ??stages_low_P_4
   \   00000032   0xF07F 0x0001      MVNS     R0,#+1
   \   00000036   0xE019             B.N      ??stages_low_P_2
   1306              else {NULL;return(-3);}
   \                     ??stages_low_P_4:
   \   00000038   0xF07F 0x0002      MVNS     R0,#+2
   \   0000003C   0xE016             B.N      ??stages_low_P_2
   1307            }
   1308            else
   1309            {
   1310              if(value<=(parameter+5)){NULL;return(0);}
   \                     ??stages_low_P_0:
   \   0000003E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000040   0x1D4A             ADDS     R2,R1,#+5
   \   00000042   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000044   0x4282             CMP      R2,R0
   \   00000046   0xDB01             BLT.N    ??stages_low_P_5
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0xE00F             B.N      ??stages_low_P_2
   1311              else if(value<=(parameter+13)){NULL;return(1);}  
   \                     ??stages_low_P_5:
   \   0000004C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000004E   0xF111 0x020D      ADDS     R2,R1,#+13
   \   00000052   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000054   0x4282             CMP      R2,R0
   \   00000056   0xDB01             BLT.N    ??stages_low_P_6
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0xE007             B.N      ??stages_low_P_2
   1312              else if(value<=(parameter+23)){NULL;return(2);}    
   \                     ??stages_low_P_6:
   \   0000005C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000005E   0x3117             ADDS     R1,R1,#+23
   \   00000060   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000062   0x4281             CMP      R1,R0
   \   00000064   0xDB01             BLT.N    ??stages_low_P_7
   \   00000066   0x2002             MOVS     R0,#+2
   \   00000068   0xE000             B.N      ??stages_low_P_2
   1313              else {NULL;return(3);}
   \                     ??stages_low_P_7:
   \   0000006A   0x2003             MOVS     R0,#+3
   \                     ??stages_low_P_2:
   \   0000006C   0x4770             BX       LR               ;; return
   1314            }
   1315          }
   1316          

   \                                 In section .text, align 2, keep-with-next
   1317          int16 stages_D(int16 value)
   1318          {
   1319            if(value<=0)
   \                     stages_D:
   \   00000000   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xDA31             BGE.N    ??stages_D_0
   1320            {
   1321              if(value>=-6){NULL;return(0);}
   \   00000006   0xF07F 0x0105      MVNS     R1,#+5
   \   0000000A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000C   0x4288             CMP      R0,R1
   \   0000000E   0xDB01             BLT.N    ??stages_D_1
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xE049             B.N      ??stages_D_2
   1322              else if(value>=-12){NULL;return(-1);}  
   \                     ??stages_D_1:
   \   00000014   0xF07F 0x010B      MVNS     R1,#+11
   \   00000018   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000001A   0x4288             CMP      R0,R1
   \   0000001C   0xDB02             BLT.N    ??stages_D_3
   \   0000001E   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000022   0xE041             B.N      ??stages_D_2
   1323              else if(value>=-18){NULL;return(-2);}    
   \                     ??stages_D_3:
   \   00000024   0xF07F 0x0111      MVNS     R1,#+17
   \   00000028   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000002A   0x4288             CMP      R0,R1
   \   0000002C   0xDB02             BLT.N    ??stages_D_4
   \   0000002E   0xF07F 0x0001      MVNS     R0,#+1
   \   00000032   0xE039             B.N      ??stages_D_2
   1324              else if(value>=-24){NULL;return(-3);}
   \                     ??stages_D_4:
   \   00000034   0xF07F 0x0117      MVNS     R1,#+23
   \   00000038   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xDB02             BLT.N    ??stages_D_5
   \   0000003E   0xF07F 0x0002      MVNS     R0,#+2
   \   00000042   0xE031             B.N      ??stages_D_2
   1325              else if(value>=-30){NULL;return(-4);}
   \                     ??stages_D_5:
   \   00000044   0xF07F 0x011D      MVNS     R1,#+29
   \   00000048   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000004A   0x4288             CMP      R0,R1
   \   0000004C   0xDB02             BLT.N    ??stages_D_6
   \   0000004E   0xF07F 0x0003      MVNS     R0,#+3
   \   00000052   0xE029             B.N      ??stages_D_2
   1326              else if(value>=-36){NULL;return(-5);}
   \                     ??stages_D_6:
   \   00000054   0xF07F 0x0123      MVNS     R1,#+35
   \   00000058   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000005A   0x4288             CMP      R0,R1
   \   0000005C   0xDB02             BLT.N    ??stages_D_7
   \   0000005E   0xF07F 0x0004      MVNS     R0,#+4
   \   00000062   0xE021             B.N      ??stages_D_2
   1327              else {NULL;return(-6);}
   \                     ??stages_D_7:
   \   00000064   0xF07F 0x0005      MVNS     R0,#+5
   \   00000068   0xE01E             B.N      ??stages_D_2
   1328            }
   1329            else
   1330            {
   1331              if(value<=6){NULL;return(0);}
   \                     ??stages_D_0:
   \   0000006A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000006C   0x2807             CMP      R0,#+7
   \   0000006E   0xDA01             BGE.N    ??stages_D_8
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0xE019             B.N      ??stages_D_2
   1332              else if(value<=12){NULL;return(1);}  
   \                     ??stages_D_8:
   \   00000074   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000076   0x280D             CMP      R0,#+13
   \   00000078   0xDA01             BGE.N    ??stages_D_9
   \   0000007A   0x2001             MOVS     R0,#+1
   \   0000007C   0xE014             B.N      ??stages_D_2
   1333              else if(value<=18){NULL;return(2);}    
   \                     ??stages_D_9:
   \   0000007E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000080   0x2813             CMP      R0,#+19
   \   00000082   0xDA01             BGE.N    ??stages_D_10
   \   00000084   0x2002             MOVS     R0,#+2
   \   00000086   0xE00F             B.N      ??stages_D_2
   1334              else if(value<=24){NULL;return(3);}
   \                     ??stages_D_10:
   \   00000088   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000008A   0x2819             CMP      R0,#+25
   \   0000008C   0xDA01             BGE.N    ??stages_D_11
   \   0000008E   0x2003             MOVS     R0,#+3
   \   00000090   0xE00A             B.N      ??stages_D_2
   1335              else if(value<=30){NULL;return(4);}
   \                     ??stages_D_11:
   \   00000092   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000094   0x281F             CMP      R0,#+31
   \   00000096   0xDA01             BGE.N    ??stages_D_12
   \   00000098   0x2004             MOVS     R0,#+4
   \   0000009A   0xE005             B.N      ??stages_D_2
   1336              else if(value<=36){NULL;return(5);}
   \                     ??stages_D_12:
   \   0000009C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000009E   0x2825             CMP      R0,#+37
   \   000000A0   0xDA01             BGE.N    ??stages_D_13
   \   000000A2   0x2005             MOVS     R0,#+5
   \   000000A4   0xE000             B.N      ??stages_D_2
   1337              else {NULL;return(6);}
   \                     ??stages_D_13:
   \   000000A6   0x2006             MOVS     R0,#+6
   \                     ??stages_D_2:
   \   000000A8   0x4770             BX       LR               ;; return
   1338            }
   1339          }
   1340          /******************起始线二值化***************/

   \                                 In section .text, align 2, keep-with-next
   1341          void binaryzation2(){
   1342           uint8 i=0,j=0;
   \                     binaryzation2:
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x2100             MOVS     R1,#+0
   1343            for(i=0;i<IMG_ROWS;i++)
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x0010             MOVS     R0,R2
   \   00000008   0xE000             B.N      ??binaryzation2_0
   \                     ??binaryzation2_1:
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
   \                     ??binaryzation2_0:
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x2837             CMP      R0,#+55
   \   00000010   0xF080 0x834B      BCS.W    ??binaryzation2_2
   1344            {
   1345              if(i<8)
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x2808             CMP      R0,#+8
   \   00000018   0xF080 0x80CF      BCS.W    ??binaryzation2_3
   1346              {
   1347                for(j=0;j<IMG_COLS;j++)
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0xE009             B.N      ??binaryzation2_4
   1348                {
   1349                  if(j<50)
   1350                  {
   1351                    if(ImageData[i][j]<black2_d1)ImageData2[i][j]=0;
   1352                    else ImageData2[i][j]=255;
   1353                    if(ImageData[i][j]<black_d1)ImageData[i][j]=0;
   1354                    else ImageData[i][j]=255;
   1355                    
   1356                  }
   1357                  else if(j<110)
   1358                  {
   1359                    if(ImageData[i][j]<black2_d2)ImageData2[i][j]=0;
   1360                    else ImageData2[i][j]=255;
   1361                    if(ImageData[i][j]<black_d2)ImageData[i][j]=0;
   1362                    else ImageData[i][j]=255;
   1363                    
   1364                  }
   1365                  else
   1366                  {
   1367                     if(ImageData[i][j]<black2_d3)ImageData2[i][j]=0;
   1368                    else ImageData2[i][j]=255;
   1369                    if(ImageData[i][j]<black_d3)ImageData[i][j]=0;
   1370                    else ImageData[i][j]=255;
   \                     ??binaryzation2_5:
   \   00000020   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x22A0             MOVS     R2,#+160
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000002A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000002E   0x23FF             MOVS     R3,#+255
   \   00000030   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_6:
   \   00000032   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation2_4:
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0x29A0             CMP      R1,#+160
   \   00000038   0xD2E7             BCS.N    ??binaryzation2_1
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0x2932             CMP      R1,#+50
   \   0000003E   0xD240             BCS.N    ??binaryzation2_7
   \   00000040   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x22A0             MOVS     R2,#+160
   \   00000046   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000004A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000004E   0x5C8A             LDRB     R2,[R1, R2]
   \   00000050   0x.... 0x....      LDR.W    R3,??DataTable52_3
   \   00000054   0x781B             LDRB     R3,[R3, #+0]
   \   00000056   0x429A             CMP      R2,R3
   \   00000058   0xD209             BCS.N    ??binaryzation2_8
   \   0000005A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x22A0             MOVS     R2,#+160
   \   00000060   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000064   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000068   0x2300             MOVS     R3,#+0
   \   0000006A   0x548B             STRB     R3,[R1, R2]
   \   0000006C   0xE008             B.N      ??binaryzation2_9
   \                     ??binaryzation2_8:
   \   0000006E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000070   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000072   0x22A0             MOVS     R2,#+160
   \   00000074   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000078   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000007C   0x23FF             MOVS     R3,#+255
   \   0000007E   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_9:
   \   00000080   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000082   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000084   0x22A0             MOVS     R2,#+160
   \   00000086   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000008A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000008E   0x5C8A             LDRB     R2,[R1, R2]
   \   00000090   0x.... 0x....      LDR.W    R3,??DataTable52_5
   \   00000094   0x781B             LDRB     R3,[R3, #+0]
   \   00000096   0x429A             CMP      R2,R3
   \   00000098   0xD209             BCS.N    ??binaryzation2_10
   \   0000009A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009E   0x22A0             MOVS     R2,#+160
   \   000000A0   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000000A4   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000A8   0x2300             MOVS     R3,#+0
   \   000000AA   0x548B             STRB     R3,[R1, R2]
   \   000000AC   0xE7C1             B.N      ??binaryzation2_6
   \                     ??binaryzation2_10:
   \   000000AE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B2   0x22A0             MOVS     R2,#+160
   \   000000B4   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000000B8   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000BC   0x23FF             MOVS     R3,#+255
   \   000000BE   0x548B             STRB     R3,[R1, R2]
   \   000000C0   0xE7B7             B.N      ??binaryzation2_6
   \                     ??binaryzation2_7:
   \   000000C2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C4   0x296E             CMP      R1,#+110
   \   000000C6   0xD240             BCS.N    ??binaryzation2_11
   \   000000C8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CC   0x22A0             MOVS     R2,#+160
   \   000000CE   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000000D2   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000D6   0x5C8A             LDRB     R2,[R1, R2]
   \   000000D8   0x.... 0x....      LDR.W    R3,??DataTable52_6
   \   000000DC   0x781B             LDRB     R3,[R3, #+0]
   \   000000DE   0x429A             CMP      R2,R3
   \   000000E0   0xD209             BCS.N    ??binaryzation2_12
   \   000000E2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E6   0x22A0             MOVS     R2,#+160
   \   000000E8   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   000000EC   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000F0   0x2300             MOVS     R3,#+0
   \   000000F2   0x548B             STRB     R3,[R1, R2]
   \   000000F4   0xE008             B.N      ??binaryzation2_13
   \                     ??binaryzation2_12:
   \   000000F6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FA   0x22A0             MOVS     R2,#+160
   \   000000FC   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000100   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000104   0x23FF             MOVS     R3,#+255
   \   00000106   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_13:
   \   00000108   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000010A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000010C   0x22A0             MOVS     R2,#+160
   \   0000010E   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000112   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000116   0x5C8A             LDRB     R2,[R1, R2]
   \   00000118   0x.... 0x....      LDR.W    R3,??DataTable52_7
   \   0000011C   0x781B             LDRB     R3,[R3, #+0]
   \   0000011E   0x429A             CMP      R2,R3
   \   00000120   0xD209             BCS.N    ??binaryzation2_14
   \   00000122   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000124   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000126   0x22A0             MOVS     R2,#+160
   \   00000128   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000012C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000130   0x2300             MOVS     R3,#+0
   \   00000132   0x548B             STRB     R3,[R1, R2]
   \   00000134   0xE77D             B.N      ??binaryzation2_6
   \                     ??binaryzation2_14:
   \   00000136   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000138   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000013A   0x22A0             MOVS     R2,#+160
   \   0000013C   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000140   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000144   0x23FF             MOVS     R3,#+255
   \   00000146   0x548B             STRB     R3,[R1, R2]
   \   00000148   0xE773             B.N      ??binaryzation2_6
   \                     ??binaryzation2_11:
   \   0000014A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014E   0x22A0             MOVS     R2,#+160
   \   00000150   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000154   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000158   0x5C8A             LDRB     R2,[R1, R2]
   \   0000015A   0x.... 0x....      LDR.W    R3,??DataTable52_8
   \   0000015E   0x781B             LDRB     R3,[R3, #+0]
   \   00000160   0x429A             CMP      R2,R3
   \   00000162   0xD209             BCS.N    ??binaryzation2_15
   \   00000164   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000166   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000168   0x22A0             MOVS     R2,#+160
   \   0000016A   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   0000016E   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000172   0x2300             MOVS     R3,#+0
   \   00000174   0x548B             STRB     R3,[R1, R2]
   \   00000176   0xE008             B.N      ??binaryzation2_16
   \                     ??binaryzation2_15:
   \   00000178   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000017A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000017C   0x22A0             MOVS     R2,#+160
   \   0000017E   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000182   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000186   0x23FF             MOVS     R3,#+255
   \   00000188   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_16:
   \   0000018A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000018C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000018E   0x22A0             MOVS     R2,#+160
   \   00000190   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000194   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000198   0x5C8A             LDRB     R2,[R1, R2]
   \   0000019A   0x.... 0x....      LDR.W    R3,??DataTable52_9
   \   0000019E   0x781B             LDRB     R3,[R3, #+0]
   \   000001A0   0x429A             CMP      R2,R3
   \   000001A2   0xF4BF 0xAF3D      BCS.W    ??binaryzation2_5
   \   000001A6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001AA   0x22A0             MOVS     R2,#+160
   \   000001AC   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000001B0   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000001B4   0x2300             MOVS     R3,#+0
   \   000001B6   0x548B             STRB     R3,[R1, R2]
   \   000001B8   0xE73B             B.N      ??binaryzation2_6
   1371                   
   1372                  }
   1373                }
   1374              }
   1375              else if(i<20)
   \                     ??binaryzation2_3:
   \   000001BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BC   0x2814             CMP      R0,#+20
   \   000001BE   0xF080 0x80D0      BCS.W    ??binaryzation2_17
   1376              {
   1377                for(j=0;j<IMG_COLS;j++)
   \   000001C2   0x2100             MOVS     R1,#+0
   \   000001C4   0xE009             B.N      ??binaryzation2_18
   1378                {
   1379                  if(j<50)
   1380                  {
   1381                    if(ImageData[i][j]<black2_c1)ImageData2[i][j]=0;
   1382                    else ImageData2[i][j]=255;
   1383                    if(ImageData[i][j]<black_c1)ImageData[i][j]=0;
   1384                    else ImageData[i][j]=255; 
   1385                  }
   1386                  else if(j<110)
   1387                  {
   1388                    if(ImageData[i][j]<black2_c2)ImageData2[i][j]=0;
   1389                    else ImageData2[i][j]=255;
   1390                    if(ImageData[i][j]<black_c2)ImageData[i][j]=0;
   1391                    else ImageData[i][j]=255;
   1392                  }
   1393                  else
   1394                  {
   1395                     if(ImageData[i][j]<black2_c3)ImageData2[i][j]=0;
   1396                    else ImageData2[i][j]=255;
   1397                    if(ImageData[i][j]<black_c3)ImageData[i][j]=0;
   1398                    else ImageData[i][j]=255;
   \                     ??binaryzation2_19:
   \   000001C6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001CA   0x22A0             MOVS     R2,#+160
   \   000001CC   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000001D0   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000001D4   0x23FF             MOVS     R3,#+255
   \   000001D6   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_20:
   \   000001D8   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation2_18:
   \   000001DA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001DC   0x29A0             CMP      R1,#+160
   \   000001DE   0xF4BF 0xAF14      BCS.W    ??binaryzation2_1
   \   000001E2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001E4   0x2932             CMP      R1,#+50
   \   000001E6   0xD240             BCS.N    ??binaryzation2_21
   \   000001E8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001EA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001EC   0x22A0             MOVS     R2,#+160
   \   000001EE   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000001F2   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000001F6   0x5C8A             LDRB     R2,[R1, R2]
   \   000001F8   0x.... 0x....      LDR.W    R3,??DataTable52_10
   \   000001FC   0x781B             LDRB     R3,[R3, #+0]
   \   000001FE   0x429A             CMP      R2,R3
   \   00000200   0xD209             BCS.N    ??binaryzation2_22
   \   00000202   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000204   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000206   0x22A0             MOVS     R2,#+160
   \   00000208   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   0000020C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000210   0x2300             MOVS     R3,#+0
   \   00000212   0x548B             STRB     R3,[R1, R2]
   \   00000214   0xE008             B.N      ??binaryzation2_23
   \                     ??binaryzation2_22:
   \   00000216   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000218   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000021A   0x22A0             MOVS     R2,#+160
   \   0000021C   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000220   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000224   0x23FF             MOVS     R3,#+255
   \   00000226   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_23:
   \   00000228   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000022A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000022C   0x22A0             MOVS     R2,#+160
   \   0000022E   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000232   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000236   0x5C8A             LDRB     R2,[R1, R2]
   \   00000238   0x.... 0x....      LDR.W    R3,??DataTable53
   \   0000023C   0x781B             LDRB     R3,[R3, #+0]
   \   0000023E   0x429A             CMP      R2,R3
   \   00000240   0xD209             BCS.N    ??binaryzation2_24
   \   00000242   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000244   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000246   0x22A0             MOVS     R2,#+160
   \   00000248   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000024C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000250   0x2300             MOVS     R3,#+0
   \   00000252   0x548B             STRB     R3,[R1, R2]
   \   00000254   0xE7C0             B.N      ??binaryzation2_20
   \                     ??binaryzation2_24:
   \   00000256   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000258   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000025A   0x22A0             MOVS     R2,#+160
   \   0000025C   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000260   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000264   0x23FF             MOVS     R3,#+255
   \   00000266   0x548B             STRB     R3,[R1, R2]
   \   00000268   0xE7B6             B.N      ??binaryzation2_20
   \                     ??binaryzation2_21:
   \   0000026A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000026C   0x296E             CMP      R1,#+110
   \   0000026E   0xD240             BCS.N    ??binaryzation2_25
   \   00000270   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000272   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000274   0x22A0             MOVS     R2,#+160
   \   00000276   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000027A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000027E   0x5C8A             LDRB     R2,[R1, R2]
   \   00000280   0x.... 0x....      LDR.W    R3,??DataTable53_1
   \   00000284   0x781B             LDRB     R3,[R3, #+0]
   \   00000286   0x429A             CMP      R2,R3
   \   00000288   0xD209             BCS.N    ??binaryzation2_26
   \   0000028A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000028C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000028E   0x22A0             MOVS     R2,#+160
   \   00000290   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000294   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000298   0x2300             MOVS     R3,#+0
   \   0000029A   0x548B             STRB     R3,[R1, R2]
   \   0000029C   0xE008             B.N      ??binaryzation2_27
   \                     ??binaryzation2_26:
   \   0000029E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002A2   0x22A0             MOVS     R2,#+160
   \   000002A4   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   000002A8   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002AC   0x23FF             MOVS     R3,#+255
   \   000002AE   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_27:
   \   000002B0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002B4   0x22A0             MOVS     R2,#+160
   \   000002B6   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000002BA   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002BE   0x5C8A             LDRB     R2,[R1, R2]
   \   000002C0   0x.... 0x....      LDR.W    R3,??DataTable53_2
   \   000002C4   0x781B             LDRB     R3,[R3, #+0]
   \   000002C6   0x429A             CMP      R2,R3
   \   000002C8   0xD209             BCS.N    ??binaryzation2_28
   \   000002CA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002CC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002CE   0x22A0             MOVS     R2,#+160
   \   000002D0   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000002D4   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002D8   0x2300             MOVS     R3,#+0
   \   000002DA   0x548B             STRB     R3,[R1, R2]
   \   000002DC   0xE77C             B.N      ??binaryzation2_20
   \                     ??binaryzation2_28:
   \   000002DE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002E0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002E2   0x22A0             MOVS     R2,#+160
   \   000002E4   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000002E8   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002EC   0x23FF             MOVS     R3,#+255
   \   000002EE   0x548B             STRB     R3,[R1, R2]
   \   000002F0   0xE772             B.N      ??binaryzation2_20
   \                     ??binaryzation2_25:
   \   000002F2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002F4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002F6   0x22A0             MOVS     R2,#+160
   \   000002F8   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000002FC   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000300   0x5C8A             LDRB     R2,[R1, R2]
   \   00000302   0x.... 0x....      LDR.W    R3,??DataTable53_3
   \   00000306   0x781B             LDRB     R3,[R3, #+0]
   \   00000308   0x429A             CMP      R2,R3
   \   0000030A   0xD209             BCS.N    ??binaryzation2_29
   \   0000030C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000030E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000310   0x22A0             MOVS     R2,#+160
   \   00000312   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000316   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000031A   0x2300             MOVS     R3,#+0
   \   0000031C   0x548B             STRB     R3,[R1, R2]
   \   0000031E   0xE008             B.N      ??binaryzation2_30
   \                     ??binaryzation2_29:
   \   00000320   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000322   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000324   0x22A0             MOVS     R2,#+160
   \   00000326   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   0000032A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000032E   0x23FF             MOVS     R3,#+255
   \   00000330   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_30:
   \   00000332   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000334   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000336   0x22A0             MOVS     R2,#+160
   \   00000338   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000033C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000340   0x5C8A             LDRB     R2,[R1, R2]
   \   00000342   0x.... 0x....      LDR.W    R3,??DataTable53_4
   \   00000346   0x781B             LDRB     R3,[R3, #+0]
   \   00000348   0x429A             CMP      R2,R3
   \   0000034A   0xF4BF 0xAF3C      BCS.W    ??binaryzation2_19
   \   0000034E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000350   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000352   0x22A0             MOVS     R2,#+160
   \   00000354   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000358   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000035C   0x2300             MOVS     R3,#+0
   \   0000035E   0x548B             STRB     R3,[R1, R2]
   \   00000360   0xE73A             B.N      ??binaryzation2_20
   1399                   
   1400                  }
   1401                }
   1402              }
   1403              else if(i<34)
   \                     ??binaryzation2_17:
   \   00000362   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000364   0x2822             CMP      R0,#+34
   \   00000366   0xF080 0x80D0      BCS.W    ??binaryzation2_31
   1404              {
   1405                for(j=0;j<IMG_COLS;j++)
   \   0000036A   0x2100             MOVS     R1,#+0
   \   0000036C   0xE009             B.N      ??binaryzation2_32
   1406                {
   1407                  if(j<50)
   1408                  {
   1409                     if(ImageData[i][j]<black2_b1)ImageData2[i][j]=0;
   1410                    else ImageData2[i][j]=255;
   1411                    if(ImageData[i][j]<black_b1)ImageData[i][j]=0;
   1412                    else ImageData[i][j]=255;
   1413                   
   1414                  }
   1415                  else if(j<110)
   1416                  {
   1417                     if(ImageData[i][j]<black2_b2)ImageData2[i][j]=0;
   1418                    else ImageData2[i][j]=255;
   1419                    if(ImageData[i][j]<black_b2)ImageData[i][j]=0;
   1420                    else ImageData[i][j]=255;
   1421                   
   1422                  }
   1423                  else
   1424                  {
   1425                    if(ImageData[i][j]<black2_b3)ImageData2[i][j]=0;
   1426                    else ImageData2[i][j]=255;
   1427                    if(ImageData[i][j]<black_b3)ImageData[i][j]=0;
   1428                    else ImageData[i][j]=255;
   \                     ??binaryzation2_33:
   \   0000036E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000370   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000372   0x22A0             MOVS     R2,#+160
   \   00000374   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000378   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000037C   0x23FF             MOVS     R3,#+255
   \   0000037E   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_34:
   \   00000380   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation2_32:
   \   00000382   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000384   0x29A0             CMP      R1,#+160
   \   00000386   0xF4BF 0xAE40      BCS.W    ??binaryzation2_1
   \   0000038A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000038C   0x2932             CMP      R1,#+50
   \   0000038E   0xD240             BCS.N    ??binaryzation2_35
   \   00000390   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000392   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000394   0x22A0             MOVS     R2,#+160
   \   00000396   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000039A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000039E   0x5C8A             LDRB     R2,[R1, R2]
   \   000003A0   0x.... 0x....      LDR.W    R3,??DataTable53_5
   \   000003A4   0x781B             LDRB     R3,[R3, #+0]
   \   000003A6   0x429A             CMP      R2,R3
   \   000003A8   0xD209             BCS.N    ??binaryzation2_36
   \   000003AA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003AC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003AE   0x22A0             MOVS     R2,#+160
   \   000003B0   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   000003B4   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000003B8   0x2300             MOVS     R3,#+0
   \   000003BA   0x548B             STRB     R3,[R1, R2]
   \   000003BC   0xE008             B.N      ??binaryzation2_37
   \                     ??binaryzation2_36:
   \   000003BE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003C0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003C2   0x22A0             MOVS     R2,#+160
   \   000003C4   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   000003C8   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000003CC   0x23FF             MOVS     R3,#+255
   \   000003CE   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_37:
   \   000003D0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003D4   0x22A0             MOVS     R2,#+160
   \   000003D6   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000003DA   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000003DE   0x5C8A             LDRB     R2,[R1, R2]
   \   000003E0   0x.... 0x....      LDR.W    R3,??DataTable53_6
   \   000003E4   0x781B             LDRB     R3,[R3, #+0]
   \   000003E6   0x429A             CMP      R2,R3
   \   000003E8   0xD209             BCS.N    ??binaryzation2_38
   \   000003EA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003EE   0x22A0             MOVS     R2,#+160
   \   000003F0   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000003F4   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000003F8   0x2300             MOVS     R3,#+0
   \   000003FA   0x548B             STRB     R3,[R1, R2]
   \   000003FC   0xE7C0             B.N      ??binaryzation2_34
   \                     ??binaryzation2_38:
   \   000003FE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000400   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000402   0x22A0             MOVS     R2,#+160
   \   00000404   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000408   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000040C   0x23FF             MOVS     R3,#+255
   \   0000040E   0x548B             STRB     R3,[R1, R2]
   \   00000410   0xE7B6             B.N      ??binaryzation2_34
   \                     ??binaryzation2_35:
   \   00000412   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000414   0x296E             CMP      R1,#+110
   \   00000416   0xD240             BCS.N    ??binaryzation2_39
   \   00000418   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000041A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000041C   0x22A0             MOVS     R2,#+160
   \   0000041E   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000422   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000426   0x5C8A             LDRB     R2,[R1, R2]
   \   00000428   0x.... 0x....      LDR.W    R3,??DataTable53_7
   \   0000042C   0x781B             LDRB     R3,[R3, #+0]
   \   0000042E   0x429A             CMP      R2,R3
   \   00000430   0xD209             BCS.N    ??binaryzation2_40
   \   00000432   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000434   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000436   0x22A0             MOVS     R2,#+160
   \   00000438   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   0000043C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000440   0x2300             MOVS     R3,#+0
   \   00000442   0x548B             STRB     R3,[R1, R2]
   \   00000444   0xE008             B.N      ??binaryzation2_41
   \                     ??binaryzation2_40:
   \   00000446   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000448   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000044A   0x22A0             MOVS     R2,#+160
   \   0000044C   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000450   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000454   0x23FF             MOVS     R3,#+255
   \   00000456   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_41:
   \   00000458   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000045A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000045C   0x22A0             MOVS     R2,#+160
   \   0000045E   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000462   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000466   0x5C8A             LDRB     R2,[R1, R2]
   \   00000468   0x.... 0x....      LDR.W    R3,??DataTable53_8
   \   0000046C   0x781B             LDRB     R3,[R3, #+0]
   \   0000046E   0x429A             CMP      R2,R3
   \   00000470   0xD209             BCS.N    ??binaryzation2_42
   \   00000472   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000474   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000476   0x22A0             MOVS     R2,#+160
   \   00000478   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000047C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000480   0x2300             MOVS     R3,#+0
   \   00000482   0x548B             STRB     R3,[R1, R2]
   \   00000484   0xE77C             B.N      ??binaryzation2_34
   \                     ??binaryzation2_42:
   \   00000486   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000488   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000048A   0x22A0             MOVS     R2,#+160
   \   0000048C   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000490   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000494   0x23FF             MOVS     R3,#+255
   \   00000496   0x548B             STRB     R3,[R1, R2]
   \   00000498   0xE772             B.N      ??binaryzation2_34
   \                     ??binaryzation2_39:
   \   0000049A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000049C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000049E   0x22A0             MOVS     R2,#+160
   \   000004A0   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000004A4   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000004A8   0x5C8A             LDRB     R2,[R1, R2]
   \   000004AA   0x.... 0x....      LDR.W    R3,??DataTable53_9
   \   000004AE   0x781B             LDRB     R3,[R3, #+0]
   \   000004B0   0x429A             CMP      R2,R3
   \   000004B2   0xD209             BCS.N    ??binaryzation2_43
   \   000004B4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000004B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000004B8   0x22A0             MOVS     R2,#+160
   \   000004BA   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   000004BE   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000004C2   0x2300             MOVS     R3,#+0
   \   000004C4   0x548B             STRB     R3,[R1, R2]
   \   000004C6   0xE008             B.N      ??binaryzation2_44
   \                     ??binaryzation2_43:
   \   000004C8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000004CA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000004CC   0x22A0             MOVS     R2,#+160
   \   000004CE   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   000004D2   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000004D6   0x23FF             MOVS     R3,#+255
   \   000004D8   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_44:
   \   000004DA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000004DC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000004DE   0x22A0             MOVS     R2,#+160
   \   000004E0   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000004E4   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000004E8   0x5C8A             LDRB     R2,[R1, R2]
   \   000004EA   0x.... 0x....      LDR.W    R3,??DataTable53_10
   \   000004EE   0x781B             LDRB     R3,[R3, #+0]
   \   000004F0   0x429A             CMP      R2,R3
   \   000004F2   0xF4BF 0xAF3C      BCS.W    ??binaryzation2_33
   \   000004F6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000004F8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000004FA   0x22A0             MOVS     R2,#+160
   \   000004FC   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000500   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000504   0x2300             MOVS     R3,#+0
   \   00000506   0x548B             STRB     R3,[R1, R2]
   \   00000508   0xE73A             B.N      ??binaryzation2_34
   1429                  }
   1430                }
   1431              }
   1432              else
   1433              {
   1434                for(j=0;j<IMG_COLS;j++)
   \                     ??binaryzation2_31:
   \   0000050A   0x2100             MOVS     R1,#+0
   \   0000050C   0xE009             B.N      ??binaryzation2_45
   1435                {
   1436                  if(j<50)
   1437                  {
   1438                    if(ImageData[i][j]<black2_a1)ImageData2[i][j]=0;
   1439                    else ImageData2[i][j]=255;
   1440                    if(ImageData[i][j]<black_a1)ImageData[i][j]=0;
   1441                    else ImageData[i][j]=255;
   1442                  }
   1443                  else if(j<110)
   1444                  {
   1445                    if(ImageData[i][j]<black2_a2)ImageData2[i][j]=0;
   1446                    else ImageData2[i][j]=255;
   1447                    if(ImageData[i][j]<black_a2)ImageData[i][j]=0;
   1448                    else ImageData[i][j]=255;
   1449                  }
   1450                  else
   1451                  {
   1452                    if(ImageData[i][j]<black2_a3)ImageData2[i][j]=0;
   1453                    else ImageData2[i][j]=255;
   1454                    if(ImageData[i][j]<black_a3)ImageData[i][j]=0;
   1455                    else ImageData[i][j]=255;
   \                     ??binaryzation2_46:
   \   0000050E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000510   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000512   0x22A0             MOVS     R2,#+160
   \   00000514   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000518   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000051C   0x23FF             MOVS     R3,#+255
   \   0000051E   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_47:
   \   00000520   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation2_45:
   \   00000522   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000524   0x29A0             CMP      R1,#+160
   \   00000526   0xF4BF 0xAD70      BCS.W    ??binaryzation2_1
   \   0000052A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000052C   0x2932             CMP      R1,#+50
   \   0000052E   0xD240             BCS.N    ??binaryzation2_48
   \   00000530   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000532   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000534   0x22A0             MOVS     R2,#+160
   \   00000536   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000053A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000053E   0x5C8A             LDRB     R2,[R1, R2]
   \   00000540   0x.... 0x....      LDR.W    R3,??DataTable53_11
   \   00000544   0x781B             LDRB     R3,[R3, #+0]
   \   00000546   0x429A             CMP      R2,R3
   \   00000548   0xD209             BCS.N    ??binaryzation2_49
   \   0000054A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000054C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000054E   0x22A0             MOVS     R2,#+160
   \   00000550   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000554   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000558   0x2300             MOVS     R3,#+0
   \   0000055A   0x548B             STRB     R3,[R1, R2]
   \   0000055C   0xE008             B.N      ??binaryzation2_50
   \                     ??binaryzation2_49:
   \   0000055E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000560   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000562   0x22A0             MOVS     R2,#+160
   \   00000564   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000568   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000056C   0x23FF             MOVS     R3,#+255
   \   0000056E   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_50:
   \   00000570   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000572   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000574   0x22A0             MOVS     R2,#+160
   \   00000576   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000057A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000057E   0x5C8A             LDRB     R2,[R1, R2]
   \   00000580   0x.... 0x....      LDR.W    R3,??DataTable53_12
   \   00000584   0x781B             LDRB     R3,[R3, #+0]
   \   00000586   0x429A             CMP      R2,R3
   \   00000588   0xD209             BCS.N    ??binaryzation2_51
   \   0000058A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000058C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000058E   0x22A0             MOVS     R2,#+160
   \   00000590   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000594   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000598   0x2300             MOVS     R3,#+0
   \   0000059A   0x548B             STRB     R3,[R1, R2]
   \   0000059C   0xE7C0             B.N      ??binaryzation2_47
   \                     ??binaryzation2_51:
   \   0000059E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000005A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000005A2   0x22A0             MOVS     R2,#+160
   \   000005A4   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000005A8   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000005AC   0x23FF             MOVS     R3,#+255
   \   000005AE   0x548B             STRB     R3,[R1, R2]
   \   000005B0   0xE7B6             B.N      ??binaryzation2_47
   \                     ??binaryzation2_48:
   \   000005B2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000005B4   0x296E             CMP      R1,#+110
   \   000005B6   0xD240             BCS.N    ??binaryzation2_52
   \   000005B8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000005BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000005BC   0x22A0             MOVS     R2,#+160
   \   000005BE   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000005C2   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000005C6   0x5C8A             LDRB     R2,[R1, R2]
   \   000005C8   0x.... 0x....      LDR.W    R3,??DataTable53_13
   \   000005CC   0x781B             LDRB     R3,[R3, #+0]
   \   000005CE   0x429A             CMP      R2,R3
   \   000005D0   0xD209             BCS.N    ??binaryzation2_53
   \   000005D2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000005D4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000005D6   0x22A0             MOVS     R2,#+160
   \   000005D8   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   000005DC   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000005E0   0x2300             MOVS     R3,#+0
   \   000005E2   0x548B             STRB     R3,[R1, R2]
   \   000005E4   0xE008             B.N      ??binaryzation2_54
   \                     ??binaryzation2_53:
   \   000005E6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000005E8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000005EA   0x22A0             MOVS     R2,#+160
   \   000005EC   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   000005F0   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000005F4   0x23FF             MOVS     R3,#+255
   \   000005F6   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_54:
   \   000005F8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000005FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000005FC   0x22A0             MOVS     R2,#+160
   \   000005FE   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000602   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000606   0x5C8A             LDRB     R2,[R1, R2]
   \   00000608   0x.... 0x....      LDR.W    R3,??DataTable53_14
   \   0000060C   0x781B             LDRB     R3,[R3, #+0]
   \   0000060E   0x429A             CMP      R2,R3
   \   00000610   0xD209             BCS.N    ??binaryzation2_55
   \   00000612   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000614   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000616   0x22A0             MOVS     R2,#+160
   \   00000618   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   0000061C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000620   0x2300             MOVS     R3,#+0
   \   00000622   0x548B             STRB     R3,[R1, R2]
   \   00000624   0xE77C             B.N      ??binaryzation2_47
   \                     ??binaryzation2_55:
   \   00000626   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000628   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000062A   0x22A0             MOVS     R2,#+160
   \   0000062C   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000630   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000634   0x23FF             MOVS     R3,#+255
   \   00000636   0x548B             STRB     R3,[R1, R2]
   \   00000638   0xE772             B.N      ??binaryzation2_47
   \                     ??binaryzation2_52:
   \   0000063A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000063C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000063E   0x22A0             MOVS     R2,#+160
   \   00000640   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000644   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000648   0x5C8A             LDRB     R2,[R1, R2]
   \   0000064A   0x.... 0x....      LDR.W    R3,??DataTable54
   \   0000064E   0x781B             LDRB     R3,[R3, #+0]
   \   00000650   0x429A             CMP      R2,R3
   \   00000652   0xD209             BCS.N    ??binaryzation2_56
   \   00000654   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000656   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000658   0x22A0             MOVS     R2,#+160
   \   0000065A   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   0000065E   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000662   0x2300             MOVS     R3,#+0
   \   00000664   0x548B             STRB     R3,[R1, R2]
   \   00000666   0xE008             B.N      ??binaryzation2_57
   \                     ??binaryzation2_56:
   \   00000668   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000066A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000066C   0x22A0             MOVS     R2,#+160
   \   0000066E   0x.... 0x....      LDR.W    R3,??DataTable52_4
   \   00000672   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000676   0x23FF             MOVS     R3,#+255
   \   00000678   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation2_57:
   \   0000067A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000067C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000067E   0x22A0             MOVS     R2,#+160
   \   00000680   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000684   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000688   0x5C8A             LDRB     R2,[R1, R2]
   \   0000068A   0x.... 0x....      LDR.W    R3,??DataTable54_1
   \   0000068E   0x781B             LDRB     R3,[R3, #+0]
   \   00000690   0x429A             CMP      R2,R3
   \   00000692   0xF4BF 0xAF3C      BCS.W    ??binaryzation2_46
   \   00000696   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000698   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000069A   0x22A0             MOVS     R2,#+160
   \   0000069C   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   000006A0   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000006A4   0x2300             MOVS     R3,#+0
   \   000006A6   0x548B             STRB     R3,[R1, R2]
   \   000006A8   0xE73A             B.N      ??binaryzation2_47
   1456                  }
   1457                }
   1458              }
   1459            }
   1460          }
   \                     ??binaryzation2_2:
   \   000006AA   0x4770             BX       LR               ;; return
   1461          /****************二值化*****************/

   \                                 In section .text, align 2, keep-with-next
   1462          void binaryzation()
   1463          {
   1464           uint8 i=0,j=0;
   \                     binaryzation:
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x2100             MOVS     R1,#+0
   1465            for(i=0;i<IMG_ROWS;i++)
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x0010             MOVS     R0,R2
   \   00000008   0xE000             B.N      ??binaryzation_0
   \                     ??binaryzation_1:
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
   \                     ??binaryzation_0:
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x2837             CMP      R0,#+55
   \   00000010   0xF080 0x819D      BCS.W    ??binaryzation_2
   1466            {
   1467              if(i<8)
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x2808             CMP      R0,#+8
   \   00000018   0xD262             BCS.N    ??binaryzation_3
   1468              {
   1469                for(j=0;j<IMG_COLS;j++)
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0xE009             B.N      ??binaryzation_4
   1470                {
   1471                  if(j<50)
   1472                  {
   1473                    if(ImageData[i][j]<black_d1)ImageData[i][j]=0;
   1474                    else ImageData[i][j]=255;
   1475                  }
   1476                  else if(j<110)
   1477                  {
   1478                    if(ImageData[i][j]<black_d2)ImageData[i][j]=0;
   1479                    else ImageData[i][j]=255;
   1480                  }
   1481                  else
   1482                  {
   1483                    if(ImageData[i][j]<black_d3)ImageData[i][j]=0;
   1484                    else ImageData[i][j]=255;
   \                     ??binaryzation_5:
   \   0000001E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x22A0             MOVS     R2,#+160
   \   00000024   0x.... 0x....      LDR.W    R3,??DataTable52_2
   \   00000028   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000002C   0x23FF             MOVS     R3,#+255
   \   0000002E   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation_6:
   \   00000030   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation_4:
   \   00000032   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   0x29A0             CMP      R1,#+160
   \   00000036   0xD2E8             BCS.N    ??binaryzation_1
   \   00000038   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003A   0x2932             CMP      R1,#+50
   \   0000003C   0xD21C             BCS.N    ??binaryzation_7
   \   0000003E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x22A0             MOVS     R2,#+160
   \   00000044   0x....             LDR.N    R3,??DataTable52_2
   \   00000046   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000004A   0x5C8A             LDRB     R2,[R1, R2]
   \   0000004C   0x....             LDR.N    R3,??DataTable52_5
   \   0000004E   0x781B             LDRB     R3,[R3, #+0]
   \   00000050   0x429A             CMP      R2,R3
   \   00000052   0xD208             BCS.N    ??binaryzation_8
   \   00000054   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000056   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000058   0x22A0             MOVS     R2,#+160
   \   0000005A   0x....             LDR.N    R3,??DataTable52_2
   \   0000005C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000060   0x2300             MOVS     R3,#+0
   \   00000062   0x548B             STRB     R3,[R1, R2]
   \   00000064   0xE7E4             B.N      ??binaryzation_6
   \                     ??binaryzation_8:
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006A   0x22A0             MOVS     R2,#+160
   \   0000006C   0x....             LDR.N    R3,??DataTable52_2
   \   0000006E   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000072   0x23FF             MOVS     R3,#+255
   \   00000074   0x548B             STRB     R3,[R1, R2]
   \   00000076   0xE7DB             B.N      ??binaryzation_6
   \                     ??binaryzation_7:
   \   00000078   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007A   0x296E             CMP      R1,#+110
   \   0000007C   0xD21C             BCS.N    ??binaryzation_9
   \   0000007E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0x22A0             MOVS     R2,#+160
   \   00000084   0x....             LDR.N    R3,??DataTable52_2
   \   00000086   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000008A   0x5C8A             LDRB     R2,[R1, R2]
   \   0000008C   0x....             LDR.N    R3,??DataTable52_7
   \   0000008E   0x781B             LDRB     R3,[R3, #+0]
   \   00000090   0x429A             CMP      R2,R3
   \   00000092   0xD208             BCS.N    ??binaryzation_10
   \   00000094   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x22A0             MOVS     R2,#+160
   \   0000009A   0x....             LDR.N    R3,??DataTable52_2
   \   0000009C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000A0   0x2300             MOVS     R3,#+0
   \   000000A2   0x548B             STRB     R3,[R1, R2]
   \   000000A4   0xE7C4             B.N      ??binaryzation_6
   \                     ??binaryzation_10:
   \   000000A6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AA   0x22A0             MOVS     R2,#+160
   \   000000AC   0x....             LDR.N    R3,??DataTable52_2
   \   000000AE   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000B2   0x23FF             MOVS     R3,#+255
   \   000000B4   0x548B             STRB     R3,[R1, R2]
   \   000000B6   0xE7BB             B.N      ??binaryzation_6
   \                     ??binaryzation_9:
   \   000000B8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BC   0x22A0             MOVS     R2,#+160
   \   000000BE   0x....             LDR.N    R3,??DataTable52_2
   \   000000C0   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000C4   0x5C8A             LDRB     R2,[R1, R2]
   \   000000C6   0x....             LDR.N    R3,??DataTable52_9
   \   000000C8   0x781B             LDRB     R3,[R3, #+0]
   \   000000CA   0x429A             CMP      R2,R3
   \   000000CC   0xD2A7             BCS.N    ??binaryzation_5
   \   000000CE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D2   0x22A0             MOVS     R2,#+160
   \   000000D4   0x....             LDR.N    R3,??DataTable52_2
   \   000000D6   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000DA   0x2300             MOVS     R3,#+0
   \   000000DC   0x548B             STRB     R3,[R1, R2]
   \   000000DE   0xE7A7             B.N      ??binaryzation_6
   1485                  }
   1486                }
   1487              }
   1488              else if(i<20)
   \                     ??binaryzation_3:
   \   000000E0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E2   0x2814             CMP      R0,#+20
   \   000000E4   0xD264             BCS.N    ??binaryzation_11
   1489              {
   1490                for(j=0;j<IMG_COLS;j++)
   \   000000E6   0x2100             MOVS     R1,#+0
   \   000000E8   0xE008             B.N      ??binaryzation_12
   1491                {
   1492                  if(j<50)
   1493                  {
   1494                    if(ImageData[i][j]<black_c1)ImageData[i][j]=0;
   1495                    else ImageData[i][j]=255;
   1496                  }
   1497                  else if(j<110)
   1498                  {
   1499                    if(ImageData[i][j]<black_c2)ImageData[i][j]=0;
   1500                    else ImageData[i][j]=255;
   1501                  }
   1502                  else
   1503                  {
   1504                    if(ImageData[i][j]<black_c3)ImageData[i][j]=0;
   1505                    else ImageData[i][j]=255;
   \                     ??binaryzation_13:
   \   000000EA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EE   0x22A0             MOVS     R2,#+160
   \   000000F0   0x....             LDR.N    R3,??DataTable52_2
   \   000000F2   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000000F6   0x23FF             MOVS     R3,#+255
   \   000000F8   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation_14:
   \   000000FA   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation_12:
   \   000000FC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000FE   0x29A0             CMP      R1,#+160
   \   00000100   0xD283             BCS.N    ??binaryzation_1
   \   00000102   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000104   0x2932             CMP      R1,#+50
   \   00000106   0xD21D             BCS.N    ??binaryzation_15
   \   00000108   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000010A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000010C   0x22A0             MOVS     R2,#+160
   \   0000010E   0x....             LDR.N    R3,??DataTable52_2
   \   00000110   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000114   0x5C8A             LDRB     R2,[R1, R2]
   \   00000116   0x.... 0x....      LDR.W    R3,??DataTable53
   \   0000011A   0x781B             LDRB     R3,[R3, #+0]
   \   0000011C   0x429A             CMP      R2,R3
   \   0000011E   0xD208             BCS.N    ??binaryzation_16
   \   00000120   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000122   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000124   0x22A0             MOVS     R2,#+160
   \   00000126   0x....             LDR.N    R3,??DataTable52_2
   \   00000128   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000012C   0x2300             MOVS     R3,#+0
   \   0000012E   0x548B             STRB     R3,[R1, R2]
   \   00000130   0xE7E3             B.N      ??binaryzation_14
   \                     ??binaryzation_16:
   \   00000132   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000134   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000136   0x22A0             MOVS     R2,#+160
   \   00000138   0x....             LDR.N    R3,??DataTable52_2
   \   0000013A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000013E   0x23FF             MOVS     R3,#+255
   \   00000140   0x548B             STRB     R3,[R1, R2]
   \   00000142   0xE7DA             B.N      ??binaryzation_14
   \                     ??binaryzation_15:
   \   00000144   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000146   0x296E             CMP      R1,#+110
   \   00000148   0xD21D             BCS.N    ??binaryzation_17
   \   0000014A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014E   0x22A0             MOVS     R2,#+160
   \   00000150   0x....             LDR.N    R3,??DataTable52_2
   \   00000152   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000156   0x5C8A             LDRB     R2,[R1, R2]
   \   00000158   0x.... 0x....      LDR.W    R3,??DataTable53_2
   \   0000015C   0x781B             LDRB     R3,[R3, #+0]
   \   0000015E   0x429A             CMP      R2,R3
   \   00000160   0xD208             BCS.N    ??binaryzation_18
   \   00000162   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000164   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000166   0x22A0             MOVS     R2,#+160
   \   00000168   0x....             LDR.N    R3,??DataTable52_2
   \   0000016A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000016E   0x2300             MOVS     R3,#+0
   \   00000170   0x548B             STRB     R3,[R1, R2]
   \   00000172   0xE7C2             B.N      ??binaryzation_14
   \                     ??binaryzation_18:
   \   00000174   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000176   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000178   0x22A0             MOVS     R2,#+160
   \   0000017A   0x....             LDR.N    R3,??DataTable52_2
   \   0000017C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000180   0x23FF             MOVS     R3,#+255
   \   00000182   0x548B             STRB     R3,[R1, R2]
   \   00000184   0xE7B9             B.N      ??binaryzation_14
   \                     ??binaryzation_17:
   \   00000186   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000188   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000018A   0x22A0             MOVS     R2,#+160
   \   0000018C   0x....             LDR.N    R3,??DataTable52_2
   \   0000018E   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000192   0x5C8A             LDRB     R2,[R1, R2]
   \   00000194   0x.... 0x....      LDR.W    R3,??DataTable53_4
   \   00000198   0x781B             LDRB     R3,[R3, #+0]
   \   0000019A   0x429A             CMP      R2,R3
   \   0000019C   0xD2A5             BCS.N    ??binaryzation_13
   \   0000019E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001A0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001A2   0x22A0             MOVS     R2,#+160
   \   000001A4   0x....             LDR.N    R3,??DataTable52_2
   \   000001A6   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000001AA   0x2300             MOVS     R3,#+0
   \   000001AC   0x548B             STRB     R3,[R1, R2]
   \   000001AE   0xE7A4             B.N      ??binaryzation_14
   1506                  }
   1507                }
   1508              }
   1509              else if(i<34)
   \                     ??binaryzation_11:
   \   000001B0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001B2   0x2822             CMP      R0,#+34
   \   000001B4   0xD265             BCS.N    ??binaryzation_19
   1510              {
   1511                for(j=0;j<IMG_COLS;j++)
   \   000001B6   0x2100             MOVS     R1,#+0
   \   000001B8   0xE008             B.N      ??binaryzation_20
   1512                {
   1513                  if(j<50)
   1514                  {
   1515                    if(ImageData[i][j]<black_b1)ImageData[i][j]=0;
   1516                    else ImageData[i][j]=255;
   1517                  }
   1518                  else if(j<110)
   1519                  {
   1520                    if(ImageData[i][j]<black_b2)ImageData[i][j]=0;
   1521                    else ImageData[i][j]=255;
   1522                  }
   1523                  else
   1524                  {
   1525                    if(ImageData[i][j]<black_b3)ImageData[i][j]=0;
   1526                    else ImageData[i][j]=255;
   \                     ??binaryzation_21:
   \   000001BA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001BC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001BE   0x22A0             MOVS     R2,#+160
   \   000001C0   0x....             LDR.N    R3,??DataTable52_2
   \   000001C2   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000001C6   0x23FF             MOVS     R3,#+255
   \   000001C8   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation_22:
   \   000001CA   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation_20:
   \   000001CC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001CE   0x29A0             CMP      R1,#+160
   \   000001D0   0xF4BF 0xAF1B      BCS.W    ??binaryzation_1
   \   000001D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001D6   0x2932             CMP      R1,#+50
   \   000001D8   0xD21D             BCS.N    ??binaryzation_23
   \   000001DA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001DC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001DE   0x22A0             MOVS     R2,#+160
   \   000001E0   0x....             LDR.N    R3,??DataTable52_2
   \   000001E2   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000001E6   0x5C8A             LDRB     R2,[R1, R2]
   \   000001E8   0x.... 0x....      LDR.W    R3,??DataTable53_6
   \   000001EC   0x781B             LDRB     R3,[R3, #+0]
   \   000001EE   0x429A             CMP      R2,R3
   \   000001F0   0xD208             BCS.N    ??binaryzation_24
   \   000001F2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001F4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001F6   0x22A0             MOVS     R2,#+160
   \   000001F8   0x....             LDR.N    R3,??DataTable52_2
   \   000001FA   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000001FE   0x2300             MOVS     R3,#+0
   \   00000200   0x548B             STRB     R3,[R1, R2]
   \   00000202   0xE7E2             B.N      ??binaryzation_22
   \                     ??binaryzation_24:
   \   00000204   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000206   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000208   0x22A0             MOVS     R2,#+160
   \   0000020A   0x....             LDR.N    R3,??DataTable52_2
   \   0000020C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000210   0x23FF             MOVS     R3,#+255
   \   00000212   0x548B             STRB     R3,[R1, R2]
   \   00000214   0xE7D9             B.N      ??binaryzation_22
   \                     ??binaryzation_23:
   \   00000216   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000218   0x296E             CMP      R1,#+110
   \   0000021A   0xD21D             BCS.N    ??binaryzation_25
   \   0000021C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000021E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000220   0x22A0             MOVS     R2,#+160
   \   00000222   0x....             LDR.N    R3,??DataTable52_2
   \   00000224   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000228   0x5C8A             LDRB     R2,[R1, R2]
   \   0000022A   0x.... 0x....      LDR.W    R3,??DataTable53_8
   \   0000022E   0x781B             LDRB     R3,[R3, #+0]
   \   00000230   0x429A             CMP      R2,R3
   \   00000232   0xD208             BCS.N    ??binaryzation_26
   \   00000234   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000236   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000238   0x22A0             MOVS     R2,#+160
   \   0000023A   0x....             LDR.N    R3,??DataTable52_2
   \   0000023C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000240   0x2300             MOVS     R3,#+0
   \   00000242   0x548B             STRB     R3,[R1, R2]
   \   00000244   0xE7C1             B.N      ??binaryzation_22
   \                     ??binaryzation_26:
   \   00000246   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000248   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000024A   0x22A0             MOVS     R2,#+160
   \   0000024C   0x....             LDR.N    R3,??DataTable52_2
   \   0000024E   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000252   0x23FF             MOVS     R3,#+255
   \   00000254   0x548B             STRB     R3,[R1, R2]
   \   00000256   0xE7B8             B.N      ??binaryzation_22
   \                     ??binaryzation_25:
   \   00000258   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000025A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000025C   0x22A0             MOVS     R2,#+160
   \   0000025E   0x....             LDR.N    R3,??DataTable52_2
   \   00000260   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000264   0x5C8A             LDRB     R2,[R1, R2]
   \   00000266   0x.... 0x....      LDR.W    R3,??DataTable53_10
   \   0000026A   0x781B             LDRB     R3,[R3, #+0]
   \   0000026C   0x429A             CMP      R2,R3
   \   0000026E   0xD2A4             BCS.N    ??binaryzation_21
   \   00000270   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000272   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000274   0x22A0             MOVS     R2,#+160
   \   00000276   0x....             LDR.N    R3,??DataTable52_2
   \   00000278   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000027C   0x2300             MOVS     R3,#+0
   \   0000027E   0x548B             STRB     R3,[R1, R2]
   \   00000280   0xE7A3             B.N      ??binaryzation_22
   1527                  }
   1528                }
   1529              }
   1530              else
   1531              {
   1532                for(j=0;j<IMG_COLS;j++)
   \                     ??binaryzation_19:
   \   00000282   0x2100             MOVS     R1,#+0
   \   00000284   0xE008             B.N      ??binaryzation_27
   1533                {
   1534                  if(j<50)
   1535                  {
   1536                    if(ImageData[i][j]<black_a1)ImageData[i][j]=0;
   1537                    else ImageData[i][j]=255;
   1538                  }
   1539                  else if(j<110)
   1540                  {
   1541                    if(ImageData[i][j]<black_a2)ImageData[i][j]=0;
   1542                    else ImageData[i][j]=255;
   1543                  }
   1544                  else
   1545                  {
   1546                    if(ImageData[i][j]<black_a3)ImageData[i][j]=0;
   1547                    else ImageData[i][j]=255;
   \                     ??binaryzation_28:
   \   00000286   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000288   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000028A   0x22A0             MOVS     R2,#+160
   \   0000028C   0x....             LDR.N    R3,??DataTable52_2
   \   0000028E   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000292   0x23FF             MOVS     R3,#+255
   \   00000294   0x548B             STRB     R3,[R1, R2]
   \                     ??binaryzation_29:
   \   00000296   0x1C49             ADDS     R1,R1,#+1
   \                     ??binaryzation_27:
   \   00000298   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000029A   0x29A0             CMP      R1,#+160
   \   0000029C   0xF4BF 0xAEB5      BCS.W    ??binaryzation_1
   \   000002A0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002A2   0x2932             CMP      R1,#+50
   \   000002A4   0xD21D             BCS.N    ??binaryzation_30
   \   000002A6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002AA   0x22A0             MOVS     R2,#+160
   \   000002AC   0x....             LDR.N    R3,??DataTable52_2
   \   000002AE   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002B2   0x5C8A             LDRB     R2,[R1, R2]
   \   000002B4   0x.... 0x....      LDR.W    R3,??DataTable53_12
   \   000002B8   0x781B             LDRB     R3,[R3, #+0]
   \   000002BA   0x429A             CMP      R2,R3
   \   000002BC   0xD208             BCS.N    ??binaryzation_31
   \   000002BE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002C0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002C2   0x22A0             MOVS     R2,#+160
   \   000002C4   0x....             LDR.N    R3,??DataTable52_2
   \   000002C6   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002CA   0x2300             MOVS     R3,#+0
   \   000002CC   0x548B             STRB     R3,[R1, R2]
   \   000002CE   0xE7E2             B.N      ??binaryzation_29
   \                     ??binaryzation_31:
   \   000002D0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002D4   0x22A0             MOVS     R2,#+160
   \   000002D6   0x....             LDR.N    R3,??DataTable52_2
   \   000002D8   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002DC   0x23FF             MOVS     R3,#+255
   \   000002DE   0x548B             STRB     R3,[R1, R2]
   \   000002E0   0xE7D9             B.N      ??binaryzation_29
   \                     ??binaryzation_30:
   \   000002E2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002E4   0x296E             CMP      R1,#+110
   \   000002E6   0xD21D             BCS.N    ??binaryzation_32
   \   000002E8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002EA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002EC   0x22A0             MOVS     R2,#+160
   \   000002EE   0x....             LDR.N    R3,??DataTable52_2
   \   000002F0   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   000002F4   0x5C8A             LDRB     R2,[R1, R2]
   \   000002F6   0x.... 0x....      LDR.W    R3,??DataTable53_14
   \   000002FA   0x781B             LDRB     R3,[R3, #+0]
   \   000002FC   0x429A             CMP      R2,R3
   \   000002FE   0xD208             BCS.N    ??binaryzation_33
   \   00000300   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000302   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000304   0x22A0             MOVS     R2,#+160
   \   00000306   0x....             LDR.N    R3,??DataTable52_2
   \   00000308   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000030C   0x2300             MOVS     R3,#+0
   \   0000030E   0x548B             STRB     R3,[R1, R2]
   \   00000310   0xE7C1             B.N      ??binaryzation_29
   \                     ??binaryzation_33:
   \   00000312   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000314   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000316   0x22A0             MOVS     R2,#+160
   \   00000318   0x....             LDR.N    R3,??DataTable52_2
   \   0000031A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000031E   0x23FF             MOVS     R3,#+255
   \   00000320   0x548B             STRB     R3,[R1, R2]
   \   00000322   0xE7B8             B.N      ??binaryzation_29
   \                     ??binaryzation_32:
   \   00000324   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000326   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000328   0x22A0             MOVS     R2,#+160
   \   0000032A   0x....             LDR.N    R3,??DataTable52_2
   \   0000032C   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000330   0x5C8A             LDRB     R2,[R1, R2]
   \   00000332   0x.... 0x....      LDR.W    R3,??DataTable54_1
   \   00000336   0x781B             LDRB     R3,[R3, #+0]
   \   00000338   0x429A             CMP      R2,R3
   \   0000033A   0xD2A4             BCS.N    ??binaryzation_28
   \   0000033C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000033E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000340   0x22A0             MOVS     R2,#+160
   \   00000342   0x....             LDR.N    R3,??DataTable52_2
   \   00000344   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   00000348   0x2300             MOVS     R3,#+0
   \   0000034A   0x548B             STRB     R3,[R1, R2]
   \   0000034C   0xE7A3             B.N      ??binaryzation_29
   1548                  }
   1549                }
   1550              }
   1551            }
   1552              for(i=0;i<56;i++)
   \                     ??binaryzation_2:
   \   0000034E   0x2000             MOVS     R0,#+0
   \   00000350   0xE006             B.N      ??binaryzation_34
   1553              position[i]=0;  
   \                     ??binaryzation_35:
   \   00000352   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000354   0x.... 0x....      LDR.W    R1,??DataTable56
   \   00000358   0x2200             MOVS     R2,#+0
   \   0000035A   0xF841 0x2020      STR      R2,[R1, R0, LSL #+2]
   \   0000035E   0x1C40             ADDS     R0,R0,#+1
   \                     ??binaryzation_34:
   \   00000360   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000362   0x2838             CMP      R0,#+56
   \   00000364   0xD3F5             BCC.N    ??binaryzation_35
   1554          }
   \   00000366   0x4770             BX       LR               ;; return
   1555          

   \                                 In section .text, align 2, keep-with-next
   1556          int Judge_startline2(void)
   1557          {
   \                     Judge_startline2:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
   1558            int i,j,m=0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x9001             STR      R0,[SP, #+4]
   1559            int flag1=0,find_flag=0,num_l=0,num_r=0,startline=0,num_w1=0,num_w2=0,num_w=0;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x9003             STR      R0,[SP, #+12]
   \   0000000E   0xF05F 0x0C00      MOVS     R12,#+0
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x2300             MOVS     R3,#+0
   \   00000018   0x9300             STR      R3,[SP, #+0]
   \   0000001A   0x2400             MOVS     R4,#+0
   \   0000001C   0x2500             MOVS     R5,#+0
   \   0000001E   0x2200             MOVS     R2,#+0
   1560            int position_num=0,position_old=0,num=0,find_old_num=0,a;
   \   00000020   0x2600             MOVS     R6,#+0
   \   00000022   0x9601             STR      R6,[SP, #+4]
   \   00000024   0x2600             MOVS     R6,#+0
   \   00000026   0x9601             STR      R6,[SP, #+4]
   \   00000028   0x2600             MOVS     R6,#+0
   \   0000002A   0x2700             MOVS     R7,#+0
   \   0000002C   0x9701             STR      R7,[SP, #+4]
   1561            uint16 median=0,b=0,c=0,d=0,e=0,f=0;
   \   0000002E   0xF05F 0x0B00      MOVS     R11,#+0
   \   00000032   0x2700             MOVS     R7,#+0
   \   00000034   0xF05F 0x0800      MOVS     R8,#+0
   \   00000038   0xF05F 0x0900      MOVS     R9,#+0
   \   0000003C   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000040   0xF8AD 0xA008      STRH     R10,[SP, #+8]
   \   00000044   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000048   0xF8AD 0xA008      STRH     R10,[SP, #+8]
   1562            uint16 start_p;
   1563            j=15;
   \   0000004C   0xF05F 0x0A0F      MOVS     R10,#+15
   1564            i=0;
   \   00000050   0x2300             MOVS     R3,#+0
   \   00000052   0xE011             B.N      ??Judge_startline2_0
   1565            while(j<135)
   1566            {
   1567              find_flag=0;
   1568              ption[j]=0;
   1569              for(i=13;i<53;i++)
   1570              {
   1571                median=0;
   1572                num=0;
   1573                if(!ImageData2[i+2][j]&&ImageData2[i][j]&&ImageData2[i+1][j])
   1574                {
   1575                  for(i=i+2;i<55;i++)
   1576                  {
   1577                    if(i<23)
   1578                    {
   1579                      a=2;            
   1580                    }
   1581                    if(i>=23&&i<33)
   1582                    {
   1583                      a=3;
   1584                    }
   1585                    if(i>=33&&i<45)
   1586                    {
   1587                      a=4;
   1588                    }
   1589                    if(i>=45&&i<55)
   1590                    {
   1591                      a=4;
   1592                    }
   1593                    if(!ImageData2[i][j]&&i<54)
   1594                    {
   1595                      median+=i;
   1596                      num++;
   1597                    }
   1598                    else
   1599                    {
   1600                      if(num<=a&&num>0)
   1601                      {              
   1602                        median=median/num;
   1603                      }
   1604                      else 
   1605                        median=0;
   \                     ??Judge_startline2_1:
   \   00000054   0xF05F 0x0B00      MOVS     R11,#+0
   1606                      if(median)
   \                     ??Judge_startline2_2:
   \   00000058   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000005C   0xF1BB 0x0F00      CMP      R11,#+0
   \   00000060   0xD005             BEQ.N    ??Judge_startline2_3
   1607                      {
   1608                        ption[j]=median;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   00000066   0xF820 0xB01A      STRH     R11,[R0, R10, LSL #+1]
   1609                        find_flag=1;				
   \   0000006A   0xF05F 0x0C01      MOVS     R12,#+1
   1610                      }
   1611                      break;
   1612                    }
   1613                  }			
   1614                  if(find_flag)
   \                     ??Judge_startline2_3:
   \                     ??Judge_startline2_4:
   \   0000006E   0xF1BC 0x0F00      CMP      R12,#+0
   \   00000072   0xD00D             BEQ.N    ??Judge_startline2_5
   1615                    break;
   1616                }	
   1617              }
   1618              j++;
   \                     ??Judge_startline2_6:
   \   00000074   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Judge_startline2_0:
   \   00000078   0xF1BA 0x0F87      CMP      R10,#+135
   \   0000007C   0xDA5F             BGE.N    ??Judge_startline2_7
   \   0000007E   0xF05F 0x0C00      MOVS     R12,#+0
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0xF820 0x101A      STRH     R1,[R0, R10, LSL #+1]
   \   0000008C   0x230D             MOVS     R3,#+13
   \   0000008E   0xE000             B.N      ??Judge_startline2_8
   \                     ??Judge_startline2_5:
   \   00000090   0x1C5B             ADDS     R3,R3,#+1
   \                     ??Judge_startline2_8:
   \   00000092   0x2B35             CMP      R3,#+53
   \   00000094   0xDAEE             BGE.N    ??Judge_startline2_6
   \   00000096   0xF05F 0x0B00      MOVS     R11,#+0
   \   0000009A   0x2600             MOVS     R6,#+0
   \   0000009C   0x20A0             MOVS     R0,#+160
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable56_2
   \   000000A2   0xFB00 0x1003      MLA      R0,R0,R3,R1
   \   000000A6   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   000000AA   0xF890 0x0140      LDRB     R0,[R0, #+320]
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xD1EE             BNE.N    ??Judge_startline2_5
   \   000000B2   0x20A0             MOVS     R0,#+160
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable56_2
   \   000000B8   0xFB00 0x1003      MLA      R0,R0,R3,R1
   \   000000BC   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   000000C0   0x2800             CMP      R0,#+0
   \   000000C2   0xD0E5             BEQ.N    ??Judge_startline2_5
   \   000000C4   0x20A0             MOVS     R0,#+160
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable56_2
   \   000000CA   0xFB00 0x1003      MLA      R0,R0,R3,R1
   \   000000CE   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   000000D2   0xF890 0x00A0      LDRB     R0,[R0, #+160]
   \   000000D6   0x2800             CMP      R0,#+0
   \   000000D8   0xD0DA             BEQ.N    ??Judge_startline2_5
   \   000000DA   0x1C9B             ADDS     R3,R3,#+2
   \   000000DC   0xE003             B.N      ??Judge_startline2_9
   \                     ??Judge_startline2_10:
   \   000000DE   0xEB13 0x0B0B      ADDS     R11,R3,R11
   \   000000E2   0x1C76             ADDS     R6,R6,#+1
   \   000000E4   0x1C5B             ADDS     R3,R3,#+1
   \                     ??Judge_startline2_9:
   \   000000E6   0x2B37             CMP      R3,#+55
   \   000000E8   0xDAC1             BGE.N    ??Judge_startline2_4
   \   000000EA   0x2B17             CMP      R3,#+23
   \   000000EC   0xDA01             BGE.N    ??Judge_startline2_11
   \   000000EE   0xF05F 0x0E02      MOVS     LR,#+2
   \                     ??Judge_startline2_11:
   \   000000F2   0xF1B3 0x0017      SUBS     R0,R3,#+23
   \   000000F6   0x280A             CMP      R0,#+10
   \   000000F8   0xD201             BCS.N    ??Judge_startline2_12
   \   000000FA   0xF05F 0x0E03      MOVS     LR,#+3
   \                     ??Judge_startline2_12:
   \   000000FE   0xF1B3 0x0021      SUBS     R0,R3,#+33
   \   00000102   0x280C             CMP      R0,#+12
   \   00000104   0xD201             BCS.N    ??Judge_startline2_13
   \   00000106   0xF05F 0x0E04      MOVS     LR,#+4
   \                     ??Judge_startline2_13:
   \   0000010A   0xF1B3 0x002D      SUBS     R0,R3,#+45
   \   0000010E   0x280A             CMP      R0,#+10
   \   00000110   0xD201             BCS.N    ??Judge_startline2_14
   \   00000112   0xF05F 0x0E04      MOVS     LR,#+4
   \                     ??Judge_startline2_14:
   \   00000116   0x20A0             MOVS     R0,#+160
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable56_2
   \   0000011C   0xFB00 0x1003      MLA      R0,R0,R3,R1
   \   00000120   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   00000124   0x2800             CMP      R0,#+0
   \   00000126   0xD101             BNE.N    ??Judge_startline2_15
   \   00000128   0x2B36             CMP      R3,#+54
   \   0000012A   0xDBD8             BLT.N    ??Judge_startline2_10
   \                     ??Judge_startline2_15:
   \   0000012C   0x45B6             CMP      LR,R6
   \   0000012E   0xDB91             BLT.N    ??Judge_startline2_1
   \   00000130   0x2E01             CMP      R6,#+1
   \   00000132   0xDB8F             BLT.N    ??Judge_startline2_1
   \   00000134   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000138   0xFB9B 0xFBF6      SDIV     R11,R11,R6
   \   0000013C   0xE78C             B.N      ??Judge_startline2_2
   1619            }
   1620            num=0;
   \                     ??Judge_startline2_7:
   \   0000013E   0x2600             MOVS     R6,#+0
   1621            start_p=0;
   \   00000140   0xF05F 0x0B00      MOVS     R11,#+0
   1622            for(j=15;j<135;j++)
   \   00000144   0xF05F 0x0A0F      MOVS     R10,#+15
   \   00000148   0xE00E             B.N      ??Judge_startline2_16
   1623            {
   1624              if(ption[j])
   \                     ??Judge_startline2_17:
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   0000014E   0xF830 0x001A      LDRH     R0,[R0, R10, LSL #+1]
   \   00000152   0x2800             CMP      R0,#+0
   \   00000154   0xD006             BEQ.N    ??Judge_startline2_18
   1625              {
   1626                start_p+=ption[j];
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   0000015A   0xF830 0x001A      LDRH     R0,[R0, R10, LSL #+1]
   \   0000015E   0xEB10 0x0B0B      ADDS     R11,R0,R11
   1627                num++;
   \   00000162   0x1C76             ADDS     R6,R6,#+1
   1628              }
   1629            }
   \                     ??Judge_startline2_18:
   \   00000164   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Judge_startline2_16:
   \   00000168   0xF1BA 0x0F87      CMP      R10,#+135
   \   0000016C   0xDBED             BLT.N    ??Judge_startline2_17
   1630            if(num>15)
   \   0000016E   0x2E10             CMP      R6,#+16
   \   00000170   0xF2C0 0x8094      BLT.W    ??Judge_startline2_19
   1631            {
   1632              start_p=start_p/num;
   \   00000174   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000178   0xFB9B 0xFBF6      SDIV     R11,R11,R6
   1633              num=0;
   \   0000017C   0x2600             MOVS     R6,#+0
   1634              for(j=15;j<135;j++)
   \   0000017E   0xF05F 0x0A0F      MOVS     R10,#+15
   \   00000182   0xE03A             B.N      ??Judge_startline2_20
   1635              {
   1636                if(ption[j]&&abs(ption[j]-start_p)>4&&abs(j-position[start_p])<15)
   \                     ??Judge_startline2_21:
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   00000188   0xF830 0x001A      LDRH     R0,[R0, R10, LSL #+1]
   \   0000018C   0x2800             CMP      R0,#+0
   \   0000018E   0xD01C             BEQ.N    ??Judge_startline2_22
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   00000194   0xF930 0x001A      LDRSH    R0,[R0, R10, LSL #+1]
   \   00000198   0xEBB0 0x000B      SUBS     R0,R0,R11
   \   0000019C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000019E   0x.... 0x....      BL       abs
   \   000001A2   0x2805             CMP      R0,#+5
   \   000001A4   0xDB11             BLT.N    ??Judge_startline2_22
   \   000001A6   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   000001AA   0x.... 0x....      LDR.W    R0,??DataTable56
   \   000001AE   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   000001B2   0xEBBA 0x0000      SUBS     R0,R10,R0
   \   000001B6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001B8   0x.... 0x....      BL       abs
   \   000001BC   0x280F             CMP      R0,#+15
   \   000001BE   0xDA04             BGE.N    ??Judge_startline2_22
   1637                {
   1638                  ption[j]=0;
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   000001C4   0x2100             MOVS     R1,#+0
   \   000001C6   0xF820 0x101A      STRH     R1,[R0, R10, LSL #+1]
   1639                }
   1640                if(ption[j]&&abs(ption[j]-start_p)>25)
   \                     ??Judge_startline2_22:
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   000001CE   0xF830 0x001A      LDRH     R0,[R0, R10, LSL #+1]
   \   000001D2   0x2800             CMP      R0,#+0
   \   000001D4   0xD00F             BEQ.N    ??Judge_startline2_23
   \   000001D6   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   000001DA   0xF930 0x001A      LDRSH    R0,[R0, R10, LSL #+1]
   \   000001DE   0xEBB0 0x000B      SUBS     R0,R0,R11
   \   000001E2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001E4   0x.... 0x....      BL       abs
   \   000001E8   0x281A             CMP      R0,#+26
   \   000001EA   0xDB04             BLT.N    ??Judge_startline2_23
   1641                  ption[j]=0;
   \   000001EC   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   000001F0   0x2100             MOVS     R1,#+0
   \   000001F2   0xF820 0x101A      STRH     R1,[R0, R10, LSL #+1]
   1642              }
   \                     ??Judge_startline2_23:
   \   000001F6   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Judge_startline2_20:
   \   000001FA   0xF1BA 0x0F87      CMP      R10,#+135
   \   000001FE   0xDBC1             BLT.N    ??Judge_startline2_21
   1643              start_p=0;
   \   00000200   0xF05F 0x0B00      MOVS     R11,#+0
   1644              for(j=15;j<135;j++)
   \   00000204   0xF05F 0x0A0F      MOVS     R10,#+15
   \   00000208   0xE010             B.N      ??Judge_startline2_24
   1645              {
   1646                if(ption[j])
   \                     ??Judge_startline2_25:
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   0000020E   0xF830 0x001A      LDRH     R0,[R0, R10, LSL #+1]
   \   00000212   0x2800             CMP      R0,#+0
   \   00000214   0xD008             BEQ.N    ??Judge_startline2_26
   1647                {
   1648                  start_p+=ption[j];
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   0000021A   0xF830 0x001A      LDRH     R0,[R0, R10, LSL #+1]
   \   0000021E   0xEB10 0x0B0B      ADDS     R11,R0,R11
   1649                  num++;
   \   00000222   0x1C76             ADDS     R6,R6,#+1
   1650                  b+=j;
   \   00000224   0xEB1A 0x0707      ADDS     R7,R10,R7
   1651                }
   1652              }
   \                     ??Judge_startline2_26:
   \   00000228   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Judge_startline2_24:
   \   0000022C   0xF1BA 0x0F87      CMP      R10,#+135
   \   00000230   0xDBEB             BLT.N    ??Judge_startline2_25
   1653              if(num)
   \   00000232   0x2E00             CMP      R6,#+0
   \   00000234   0xD003             BEQ.N    ??Judge_startline2_27
   1654                start_p=start_p/num;
   \   00000236   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000023A   0xFB9B 0xFBF6      SDIV     R11,R11,R6
   1655              b=b/num;
   \                     ??Judge_startline2_27:
   \   0000023E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000240   0xFB97 0xF7F6      SDIV     R7,R7,R6
   1656              if(b<52&&b>106)  return 0;	
   \   00000244   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000246   0x2F34             CMP      R7,#+52
   \   00000248   0xD204             BCS.N    ??Judge_startline2_28
   \   0000024A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000024C   0x2F6B             CMP      R7,#+107
   \   0000024E   0xD301             BCC.N    ??Judge_startline2_28
   \   00000250   0x2000             MOVS     R0,#+0
   \   00000252   0xE0F2             B.N      ??Judge_startline2_29
   1657              if(start_p)
   \                     ??Judge_startline2_28:
   \   00000254   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000258   0xF1BB 0x0F00      CMP      R11,#+0
   \   0000025C   0xD019             BEQ.N    ??Judge_startline2_30
   1658              {
   1659                if(start_p<25)  f=13;
   \   0000025E   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000262   0xF1BB 0x0F19      CMP      R11,#+25
   \   00000266   0xD203             BCS.N    ??Judge_startline2_31
   \   00000268   0x200D             MOVS     R0,#+13
   \   0000026A   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \   0000026E   0xE010             B.N      ??Judge_startline2_30
   1660                else if(start_p<38) f=16;
   \                     ??Judge_startline2_31:
   \   00000270   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000274   0xF1BB 0x0F26      CMP      R11,#+38
   \   00000278   0xD203             BCS.N    ??Judge_startline2_32
   \   0000027A   0x2010             MOVS     R0,#+16
   \   0000027C   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   \   00000280   0xE007             B.N      ??Judge_startline2_30
   1661                else if(start_p<55) f=17;}
   \                     ??Judge_startline2_32:
   \   00000282   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000286   0xF1BB 0x0F37      CMP      R11,#+55
   \   0000028A   0xD202             BCS.N    ??Judge_startline2_30
   \   0000028C   0x2011             MOVS     R0,#+17
   \   0000028E   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   1662            }
   1663            else
   1664              return 0;
   1665            num=0;
   \                     ??Judge_startline2_30:
   \   00000292   0x2600             MOVS     R6,#+0
   1666            num_l=0;
   \   00000294   0x2000             MOVS     R0,#+0
   1667            for(j=15;j<=position[start_p];j++)
   \   00000296   0xF05F 0x0A0F      MOVS     R10,#+15
   \   0000029A   0xE010             B.N      ??Judge_startline2_33
   \                     ??Judge_startline2_19:
   \   0000029C   0x2000             MOVS     R0,#+0
   \   0000029E   0xE0CC             B.N      ??Judge_startline2_29
   1668            {
   1669              if(ption[j])
   \                     ??Judge_startline2_34:
   \   000002A0   0x.... 0x....      LDR.W    R1,??DataTable56_1
   \   000002A4   0xF831 0x101A      LDRH     R1,[R1, R10, LSL #+1]
   \   000002A8   0x2900             CMP      R1,#+0
   \   000002AA   0xD006             BEQ.N    ??Judge_startline2_35
   1670              {
   1671                c+=ption[j];
   \   000002AC   0x.... 0x....      LDR.W    R1,??DataTable56_1
   \   000002B0   0xF831 0x101A      LDRH     R1,[R1, R10, LSL #+1]
   \   000002B4   0xEB11 0x0808      ADDS     R8,R1,R8
   1672                num_l++;
   \   000002B8   0x1C40             ADDS     R0,R0,#+1
   1673              }
   1674            }
   \                     ??Judge_startline2_35:
   \   000002BA   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Judge_startline2_33:
   \   000002BE   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   000002C2   0x.... 0x....      LDR.W    R1,??DataTable56
   \   000002C6   0xF851 0x102B      LDR      R1,[R1, R11, LSL #+2]
   \   000002CA   0x4551             CMP      R1,R10
   \   000002CC   0xDAE8             BGE.N    ??Judge_startline2_34
   1675            c=c/num_l;
   \   000002CE   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   000002D2   0xFB98 0xF8F0      SDIV     R8,R8,R0
   1676            num_r=0;
   \   000002D6   0x2100             MOVS     R1,#+0
   1677            for(j=position[start_p];j<135;j++)
   \   000002D8   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   000002DC   0x.... 0x....      LDR.W    R2,??DataTable56
   \   000002E0   0xF852 0xA02B      LDR      R10,[R2, R11, LSL #+2]
   \   000002E4   0xE00E             B.N      ??Judge_startline2_36
   1678            {
   1679              if(ption[j])
   \                     ??Judge_startline2_37:
   \   000002E6   0x.... 0x....      LDR.W    R2,??DataTable56_1
   \   000002EA   0xF832 0x201A      LDRH     R2,[R2, R10, LSL #+1]
   \   000002EE   0x2A00             CMP      R2,#+0
   \   000002F0   0xD006             BEQ.N    ??Judge_startline2_38
   1680              {
   1681                d+=ption[j];
   \   000002F2   0x.... 0x....      LDR.W    R2,??DataTable56_1
   \   000002F6   0xF832 0x201A      LDRH     R2,[R2, R10, LSL #+1]
   \   000002FA   0xEB12 0x0909      ADDS     R9,R2,R9
   1682                num_r++;
   \   000002FE   0x1C49             ADDS     R1,R1,#+1
   1683              }
   1684            }
   \                     ??Judge_startline2_38:
   \   00000300   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Judge_startline2_36:
   \   00000304   0xF1BA 0x0F87      CMP      R10,#+135
   \   00000308   0xDBED             BLT.N    ??Judge_startline2_37
   1685            d=d/num_r;
   \   0000030A   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000030E   0xFB99 0xF9F1      SDIV     R9,R9,R1
   1686            if(start_p<=20)
   \   00000312   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000316   0xF1BB 0x0F15      CMP      R11,#+21
   \   0000031A   0xD210             BCS.N    ??Judge_startline2_39
   1687            {
   1688              if(num_l<20&&num_l>=10&&num_r<20&&num_r>=10)
   \   0000031C   0xF1B0 0x020A      SUBS     R2,R0,#+10
   \   00000320   0x2A0A             CMP      R2,#+10
   \   00000322   0xD248             BCS.N    ??Judge_startline2_40
   \   00000324   0xF1B1 0x020A      SUBS     R2,R1,#+10
   \   00000328   0x2A0A             CMP      R2,#+10
   \   0000032A   0xD244             BCS.N    ??Judge_startline2_40
   1689              {
   1690                if(abs(num_l-num_r)<5)
   \   0000032C   0x1A40             SUBS     R0,R0,R1
   \   0000032E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000330   0x.... 0x....      BL       abs
   \   00000334   0x2805             CMP      R0,#+5
   \   00000336   0xDA3E             BGE.N    ??Judge_startline2_40
   1691                {
   1692                  startline=1;
   \   00000338   0x2001             MOVS     R0,#+1
   \   0000033A   0x9000             STR      R0,[SP, #+0]
   \   0000033C   0xE03B             B.N      ??Judge_startline2_40
   1693                }
   1694              }
   1695            }
   1696            else
   1697              if(start_p<=30)
   \                     ??Judge_startline2_39:
   \   0000033E   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000342   0xF1BB 0x0F1F      CMP      R11,#+31
   \   00000346   0xD210             BCS.N    ??Judge_startline2_41
   1698              {
   1699                if(num_l<24&&num_l>13&&num_r<24&&num_r>13)
   \   00000348   0xF1B0 0x020E      SUBS     R2,R0,#+14
   \   0000034C   0x2A0A             CMP      R2,#+10
   \   0000034E   0xD232             BCS.N    ??Judge_startline2_40
   \   00000350   0xF1B1 0x020E      SUBS     R2,R1,#+14
   \   00000354   0x2A0A             CMP      R2,#+10
   \   00000356   0xD22E             BCS.N    ??Judge_startline2_40
   1700                {
   1701                  if(abs(num_l-num_r)<6)
   \   00000358   0x1A40             SUBS     R0,R0,R1
   \   0000035A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000035C   0x.... 0x....      BL       abs
   \   00000360   0x2806             CMP      R0,#+6
   \   00000362   0xDA28             BGE.N    ??Judge_startline2_40
   1702                  {
   1703                    startline=1;
   \   00000364   0x2001             MOVS     R0,#+1
   \   00000366   0x9000             STR      R0,[SP, #+0]
   \   00000368   0xE025             B.N      ??Judge_startline2_40
   1704                  }
   1705                }
   1706              }
   1707              else 
   1708                if(start_p<=38)
   \                     ??Judge_startline2_41:
   \   0000036A   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000036E   0xF1BB 0x0F27      CMP      R11,#+39
   \   00000372   0xD210             BCS.N    ??Judge_startline2_42
   1709                {
   1710          	if(num_l<33&&num_l>18&&num_r<33&&num_r>18)
   \   00000374   0xF1B0 0x0213      SUBS     R2,R0,#+19
   \   00000378   0x2A0E             CMP      R2,#+14
   \   0000037A   0xD21C             BCS.N    ??Judge_startline2_40
   \   0000037C   0xF1B1 0x0213      SUBS     R2,R1,#+19
   \   00000380   0x2A0E             CMP      R2,#+14
   \   00000382   0xD218             BCS.N    ??Judge_startline2_40
   1711          	{
   1712                    if(abs(num_l-num_r)<8)
   \   00000384   0x1A40             SUBS     R0,R0,R1
   \   00000386   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000388   0x.... 0x....      BL       abs
   \   0000038C   0x2808             CMP      R0,#+8
   \   0000038E   0xDA12             BGE.N    ??Judge_startline2_40
   1713                    {
   1714                      startline=1;
   \   00000390   0x2001             MOVS     R0,#+1
   \   00000392   0x9000             STR      R0,[SP, #+0]
   \   00000394   0xE00F             B.N      ??Judge_startline2_40
   1715                    }
   1716          	}
   1717                }
   1718            else 
   1719              {
   1720                if(num_l<36&&num_l>22&&num_r<36&&num_r>22)
   \                     ??Judge_startline2_42:
   \   00000396   0xF1B0 0x0217      SUBS     R2,R0,#+23
   \   0000039A   0x2A0D             CMP      R2,#+13
   \   0000039C   0xD20B             BCS.N    ??Judge_startline2_40
   \   0000039E   0xF1B1 0x0217      SUBS     R2,R1,#+23
   \   000003A2   0x2A0D             CMP      R2,#+13
   \   000003A4   0xD207             BCS.N    ??Judge_startline2_40
   1721                {
   1722                  if(abs(num_l-num_r)<8)
   \   000003A6   0x1A40             SUBS     R0,R0,R1
   \   000003A8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003AA   0x.... 0x....      BL       abs
   \   000003AE   0x2808             CMP      R0,#+8
   \   000003B0   0xDA01             BGE.N    ??Judge_startline2_40
   1723                  {
   1724                    startline=1;
   \   000003B2   0x2001             MOVS     R0,#+1
   \   000003B4   0x9000             STR      R0,[SP, #+0]
   1725                  }
   1726                }
   1727              }
   1728            if(startline==1&&start_p<40)
   \                     ??Judge_startline2_40:
   \   000003B6   0x9800             LDR      R0,[SP, #+0]
   \   000003B8   0x2801             CMP      R0,#+1
   \   000003BA   0xD13B             BNE.N    ??Judge_startline2_43
   \   000003BC   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   000003C0   0xF1BB 0x0F28      CMP      R11,#+40
   \   000003C4   0xD236             BCS.N    ??Judge_startline2_43
   1729            {
   1730              for(i=0;i<160;i++)
   \   000003C6   0x2300             MOVS     R3,#+0
   \   000003C8   0xE00B             B.N      ??Judge_startline2_44
   1731              {
   1732                if(!ImageData[start_p][i])
   \                     ??Judge_startline2_45:
   \   000003CA   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   000003CE   0x20A0             MOVS     R0,#+160
   \   000003D0   0x.... 0x....      LDR.W    R1,??DataTable55
   \   000003D4   0xFB00 0x100B      MLA      R0,R0,R11,R1
   \   000003D8   0x5C18             LDRB     R0,[R3, R0]
   \   000003DA   0x2800             CMP      R0,#+0
   \   000003DC   0xD100             BNE.N    ??Judge_startline2_46
   1733                  num_w1++;
   \   000003DE   0x1C64             ADDS     R4,R4,#+1
   1734              }
   \                     ??Judge_startline2_46:
   \   000003E0   0x1C5B             ADDS     R3,R3,#+1
   \                     ??Judge_startline2_44:
   \   000003E2   0x2BA0             CMP      R3,#+160
   \   000003E4   0xDBF1             BLT.N    ??Judge_startline2_45
   1735              for(i=15;i<135;i++)
   \   000003E6   0x230F             MOVS     R3,#+15
   \   000003E8   0xE009             B.N      ??Judge_startline2_47
   1736              {
   1737                if(ption[i]==start_p)
   \                     ??Judge_startline2_48:
   \   000003EA   0x.... 0x....      LDR.W    R0,??DataTable56_1
   \   000003EE   0xF830 0x0013      LDRH     R0,[R0, R3, LSL #+1]
   \   000003F2   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   000003F6   0x4558             CMP      R0,R11
   \   000003F8   0xD100             BNE.N    ??Judge_startline2_49
   1738                  num_w2++;
   \   000003FA   0x1C6D             ADDS     R5,R5,#+1
   1739              }
   \                     ??Judge_startline2_49:
   \   000003FC   0x1C5B             ADDS     R3,R3,#+1
   \                     ??Judge_startline2_47:
   \   000003FE   0x2B87             CMP      R3,#+135
   \   00000400   0xDBF3             BLT.N    ??Judge_startline2_48
   1740              num_w=num_w1-num_w2;
   \   00000402   0x1B62             SUBS     R2,R4,R5
   1741              if(start_p<22)
   \   00000404   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000408   0xF1BB 0x0F16      CMP      R11,#+22
   \   0000040C   0xD204             BCS.N    ??Judge_startline2_50
   1742              {
   1743                if(num_w<50)
   \   0000040E   0x2A32             CMP      R2,#+50
   \   00000410   0xDA10             BGE.N    ??Judge_startline2_43
   1744                  startline=0;
   \   00000412   0x2000             MOVS     R0,#+0
   \   00000414   0x9000             STR      R0,[SP, #+0]
   \   00000416   0xE00D             B.N      ??Judge_startline2_43
   1745              }
   1746              else 
   1747                if(start_p<34)
   \                     ??Judge_startline2_50:
   \   00000418   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000041C   0xF1BB 0x0F22      CMP      R11,#+34
   \   00000420   0xD204             BCS.N    ??Judge_startline2_51
   1748                {
   1749                  if(num_w<33)
   \   00000422   0x2A21             CMP      R2,#+33
   \   00000424   0xDA06             BGE.N    ??Judge_startline2_43
   1750                    startline=0;
   \   00000426   0x2000             MOVS     R0,#+0
   \   00000428   0x9000             STR      R0,[SP, #+0]
   \   0000042A   0xE003             B.N      ??Judge_startline2_43
   1751                }
   1752                else
   1753                {
   1754                  if(num_w<14)
   \                     ??Judge_startline2_51:
   \   0000042C   0x2A0E             CMP      R2,#+14
   \   0000042E   0xDA01             BGE.N    ??Judge_startline2_43
   1755                    startline=0;
   \   00000430   0x2000             MOVS     R0,#+0
   \   00000432   0x9000             STR      R0,[SP, #+0]
   1756                }
   1757            }
   1758                     flag1=startline;
   \                     ??Judge_startline2_43:
   \   00000434   0x9800             LDR      R0,[SP, #+0]
   \   00000436   0x9003             STR      R0,[SP, #+12]
   1759                     return flag1;
   \   00000438   0x9803             LDR      R0,[SP, #+12]
   \                     ??Judge_startline2_29:
   \   0000043A   0xB005             ADD      SP,SP,#+20
   \   0000043C   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1760          }
   1761          

   \                                 In section .text, align 2, keep-with-next
   1762          int get_root()
   1763          {
   \                     get_root:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   1764            uint8 i=0,j=0,position_old=0,start=0,windage=28,endR=0,endL=0,cuo_root=0,cuo_root1=0;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0xF05F 0x0A00      MOVS     R10,#+0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   00000016   0x201C             MOVS     R0,#+28
   \   00000018   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   0000001C   0xF05F 0x0B00      MOVS     R11,#+0
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0xF88D 0x0001      STRB     R0,[SP, #+1]
   \   00000026   0x2500             MOVS     R5,#+0
   \   00000028   0x2600             MOVS     R6,#+0
   1765            uint8 find_num=0,find_flag=0,hang_num=0,num=0;
   \   0000002A   0x2700             MOVS     R7,#+0
   \   0000002C   0xF05F 0x0900      MOVS     R9,#+0
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0xF05F 0x0800      MOVS     R8,#+0
   1766            for(i=54;i>=45;i--)
   \   00000036   0x2136             MOVS     R1,#+54
   \   00000038   0x000C             MOVS     R4,R1
   \   0000003A   0xE006             B.N      ??get_root_0
   1767              {
   1768                if(start==1)
   1769          	{
   1770                    find_flag=0;
   1771                    endL=limit(position_old-windage,158,1);
   1772                    endR= limit(position_old+windage,158,1);	
   1773          	  for(j=endL;j<=endR;j++)
   1774          	   {
   1775          	      if(!find_flag&&ImageData[i][j]&&ImageData[i][j+1]&&!ImageData[i][j+2])
   1776          		{
   1777                            for(j+=2;j<endR;j++)
   1778                            {
   1779                              if(!ImageData[i][j]&&j<endR-1)
   1780                              {
   1781                                position[i]+=j;
   1782                                find_num++;
   1783                                find_flag=1;	
   1784                              }
   1785                              else
   1786                              {
   1787                                if(ImageData[i][j]||(j==endR-1))
   1788                                  {
   1789          	                  if(j==endR-1)
   1790                                      {
   1791                                        if(!ImageData[i][j])
   1792                                          {
   1793                                              for(j=endR;j<=limit(endR+20,158,1);j++)
   1794                                                {
   1795                                                  if(!ImageData[i][j])
   1796                                                    {
   1797                                                      position[i]+=j;
   1798                                                      find_num++;
   1799                                                    } 
   1800                                                  else
   1801                                                    break;
   1802                                                }
   1803                                          }
   1804                                      }   
   1805                                    if(!ImageData[i][j])
   1806                                      {
   1807                                         position[i]=0;
   1808                                         find_num=0;
   1809                                         break;
   1810                                      }
   1811                                    if(find_num>2&&find_num<16) 
   1812                                    {
   1813                                      cuo_root1=0;
   1814                                      position[i]=position[i]/find_num;
   1815                                      find_num=0;
   1816                                    }
   1817                                  else
   1818                                    {
   1819                                      if(find_num>=16)//十字交叉处理
   1820          			      {
   1821                                          position[i]=0;
   1822                                          find_num=0;
   1823                                          cuo_root1=1;
   1824                                        }	 
   1825                                      position[i]=0;
   1826                                      find_num=0;
   1827                                    }
   1828                                  }
   1829                                if(position[i]&&abs(position[i]-position_old)>15) 
   1830                                  {
   1831                                    position[i]=0;										   
   1832                                  }
   1833                                if(cuo_root1==0)
   1834                                break;
   1835                              }
   1836                             }
   1837          	        }
   1838          	      }
   1839                    }
   1840                else
   1841          	{	find_flag=0;
   1842          	  for(j=4;j<155;j++)
   1843          	    {
   1844          	      if(!find_flag&&ImageData[i][j-1]&&ImageData[i][j]&&ImageData[i][j+1]&&!ImageData[i][j+2])
   1845          	        {
   1846          	          for(j+=2;j<153;j++)
   1847          	            {
   1848          		      if(!ImageData[i][j]&&j<152)
   1849          			{
   1850                                    position[i]+=j;
   1851                                    find_num++;
   1852                                    find_flag=1;
   1853          		        }
   1854          		      else
   1855          			{
   1856          			  if(find_num>2&&find_num<15) //中线黑点数大概9个左右
   1857          			    {
   1858                        
   1859                                          cuo_root=0;
   1860                                          position[i]=position[i]/find_num; 
   1861                                          find_num=0;
   1862                                     
   1863          			    }
   1864          			  else
   1865          			    {
   1866          			      if(find_num>=15)
   1867          				{
   1868          				  position[i]=0;
   1869          				  find_num=0;
   1870          				   cuo_root=1;
   1871          			        }	 
   1872          				position[i]=0;
   1873          			        find_num=0;
   1874          			    }
   1875                                     if(cuo_root==0)
   1876                                     break; 
   1877          		          } 
   1878          		    }
   1879          	         }
   1880                      }
   1881          	}
   1882          	if(position[i])
   1883                    {
   1884                      position_old=position[i]; 
   1885                      start=1;
   1886                    }
   1887          	else
   1888          	  position[i]=0;
   \                     ??get_root_1:
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable56
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   \                     ??get_root_2:
   \   00000048   0x1E64             SUBS     R4,R4,#+1
   \                     ??get_root_0:
   \   0000004A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004C   0x2C2D             CMP      R4,#+45
   \   0000004E   0xF0C0 0x81C6      BCC.W    ??get_root_3
   \   00000052   0xF89D 0x0003      LDRB     R0,[SP, #+3]
   \   00000056   0x2801             CMP      R0,#+1
   \   00000058   0xF040 0x8123      BNE.W    ??get_root_4
   \   0000005C   0xF05F 0x0900      MOVS     R9,#+0
   \   00000060   0x2201             MOVS     R2,#+1
   \   00000062   0x219E             MOVS     R1,#+158
   \   00000064   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000068   0xF89D 0x3002      LDRB     R3,[SP, #+2]
   \   0000006C   0x1AC0             SUBS     R0,R0,R3
   \   0000006E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000070   0x.... 0x....      BL       limit
   \   00000074   0xF88D 0x0001      STRB     R0,[SP, #+1]
   \   00000078   0x2201             MOVS     R2,#+1
   \   0000007A   0x219E             MOVS     R1,#+158
   \   0000007C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000080   0xF89D 0x3002      LDRB     R3,[SP, #+2]
   \   00000084   0xFA53 0xF080      UXTAB    R0,R3,R0
   \   00000088   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000008A   0x.... 0x....      BL       limit
   \   0000008E   0x4683             MOV      R11,R0
   \   00000090   0xF89D 0xA001      LDRB     R10,[SP, #+1]
   \   00000094   0xE030             B.N      ??get_root_5
   \                     ??get_root_6:
   \   00000096   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000098   0x2F10             CMP      R7,#+16
   \   0000009A   0xD307             BCC.N    ??get_root_7
   \   0000009C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable56
   \   000000A2   0x2100             MOVS     R1,#+0
   \   000000A4   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   \   000000A8   0x2700             MOVS     R7,#+0
   \   000000AA   0x2601             MOVS     R6,#+1
   \                     ??get_root_7:
   \   000000AC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable56
   \   000000B2   0x2100             MOVS     R1,#+0
   \   000000B4   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   \   000000B8   0x2700             MOVS     R7,#+0
   \                     ??get_root_8:
   \   000000BA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable56
   \   000000C0   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000000C4   0x2800             CMP      R0,#+0
   \   000000C6   0xD012             BEQ.N    ??get_root_9
   \   000000C8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable56
   \   000000CE   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000000D2   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   000000D6   0x1A40             SUBS     R0,R0,R1
   \   000000D8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000DA   0x.... 0x....      BL       abs
   \   000000DE   0x2810             CMP      R0,#+16
   \   000000E0   0xDB05             BLT.N    ??get_root_9
   \   000000E2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable56
   \   000000E8   0x2100             MOVS     R1,#+0
   \   000000EA   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   \                     ??get_root_9:
   \   000000EE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000F0   0x2E00             CMP      R6,#+0
   \   000000F2   0xD14D             BNE.N    ??get_root_10
   \                     ??get_root_11:
   \   000000F4   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??get_root_5:
   \   000000F8   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   000000FC   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000100   0x45D3             CMP      R11,R10
   \   00000102   0xF0C0 0x815B      BCC.W    ??get_root_12
   \   00000106   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000010A   0xF1B9 0x0F00      CMP      R9,#+0
   \   0000010E   0xD1F1             BNE.N    ??get_root_11
   \   00000110   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000114   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000116   0x20A0             MOVS     R0,#+160
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable55
   \   0000011C   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000120   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   00000124   0x2800             CMP      R0,#+0
   \   00000126   0xD0E5             BEQ.N    ??get_root_11
   \   00000128   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000012C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000012E   0x20A0             MOVS     R0,#+160
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable55
   \   00000134   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000138   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   0000013C   0x7840             LDRB     R0,[R0, #+1]
   \   0000013E   0x2800             CMP      R0,#+0
   \   00000140   0xD0D8             BEQ.N    ??get_root_11
   \   00000142   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000146   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000148   0x20A0             MOVS     R0,#+160
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable55
   \   0000014E   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000152   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   00000156   0x7880             LDRB     R0,[R0, #+2]
   \   00000158   0x2800             CMP      R0,#+0
   \   0000015A   0xD1CB             BNE.N    ??get_root_11
   \   0000015C   0xF11A 0x0A02      ADDS     R10,R10,#+2
   \   00000160   0xE018             B.N      ??get_root_13
   \                     ??get_root_14:
   \   00000162   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000166   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000016A   0xF1BB 0x0001      SUBS     R0,R11,#+1
   \   0000016E   0x4582             CMP      R10,R0
   \   00000170   0xDA21             BGE.N    ??get_root_15
   \   00000172   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable56
   \   00000178   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000017C   0xFA50 0xF08A      UXTAB    R0,R0,R10
   \   00000180   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000182   0x.... 0x....      LDR.W    R1,??DataTable56
   \   00000186   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
   \   0000018A   0x1C7F             ADDS     R7,R7,#+1
   \   0000018C   0xF05F 0x0901      MOVS     R9,#+1
   \                     ??get_root_10:
   \   00000190   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??get_root_13:
   \   00000194   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000198   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000019C   0x45DA             CMP      R10,R11
   \   0000019E   0xD2A9             BCS.N    ??get_root_11
   \   000001A0   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000001A4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001A6   0x20A0             MOVS     R0,#+160
   \   000001A8   0x....             LDR.N    R1,??DataTable55
   \   000001AA   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   000001AE   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   000001B2   0x2800             CMP      R0,#+0
   \   000001B4   0xD0D5             BEQ.N    ??get_root_14
   \                     ??get_root_15:
   \   000001B6   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000001BA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001BC   0x20A0             MOVS     R0,#+160
   \   000001BE   0x....             LDR.N    R1,??DataTable55
   \   000001C0   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   000001C4   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   000001C8   0x2800             CMP      R0,#+0
   \   000001CA   0xD108             BNE.N    ??get_root_16
   \   000001CC   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000001D0   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   000001D4   0xF1BB 0x0001      SUBS     R0,R11,#+1
   \   000001D8   0x4582             CMP      R10,R0
   \   000001DA   0xF47F 0xAF6E      BNE.W    ??get_root_8
   \                     ??get_root_16:
   \   000001DE   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000001E2   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   000001E6   0xF1BB 0x0001      SUBS     R0,R11,#+1
   \   000001EA   0x4582             CMP      R10,R0
   \   000001EC   0xD134             BNE.N    ??get_root_17
   \   000001EE   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000001F2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001F4   0x20A0             MOVS     R0,#+160
   \   000001F6   0x....             LDR.N    R1,??DataTable55
   \   000001F8   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   000001FC   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   00000200   0x2800             CMP      R0,#+0
   \   00000202   0xD129             BNE.N    ??get_root_17
   \   00000204   0x46DA             MOV      R10,R11
   \   00000206   0xE00E             B.N      ??get_root_18
   \                     ??get_root_19:
   \   00000208   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable56
   \   0000020E   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000212   0xFA50 0xF08A      UXTAB    R0,R0,R10
   \   00000216   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000218   0x.... 0x....      LDR.W    R1,??DataTable56
   \   0000021C   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
   \   00000220   0x1C7F             ADDS     R7,R7,#+1
   \   00000222   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??get_root_18:
   \   00000226   0x2201             MOVS     R2,#+1
   \   00000228   0x219E             MOVS     R1,#+158
   \   0000022A   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000022E   0xF11B 0x0014      ADDS     R0,R11,#+20
   \   00000232   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000234   0x.... 0x....      BL       limit
   \   00000238   0x4651             MOV      R1,R10
   \   0000023A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000023C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000023E   0x4288             CMP      R0,R1
   \   00000240   0xDB0A             BLT.N    ??get_root_17
   \   00000242   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000246   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000248   0x20A0             MOVS     R0,#+160
   \   0000024A   0x....             LDR.N    R1,??DataTable55
   \   0000024C   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000250   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   00000254   0x2800             CMP      R0,#+0
   \   00000256   0xD0D7             BEQ.N    ??get_root_19
   \                     ??get_root_17:
   \   00000258   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000025C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000025E   0x20A0             MOVS     R0,#+160
   \   00000260   0x....             LDR.N    R1,??DataTable55
   \   00000262   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000266   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   0000026A   0x2800             CMP      R0,#+0
   \   0000026C   0xD106             BNE.N    ??get_root_20
   \   0000026E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000270   0x....             LDR.N    R0,??DataTable56
   \   00000272   0x2100             MOVS     R1,#+0
   \   00000274   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   \   00000278   0x2700             MOVS     R7,#+0
   \   0000027A   0xE73B             B.N      ??get_root_11
   \                     ??get_root_20:
   \   0000027C   0x1EF8             SUBS     R0,R7,#+3
   \   0000027E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000280   0x280D             CMP      R0,#+13
   \   00000282   0xF4BF 0xAF08      BCS.W    ??get_root_6
   \   00000286   0x2600             MOVS     R6,#+0
   \   00000288   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000028A   0x....             LDR.N    R0,??DataTable56
   \   0000028C   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000290   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000292   0xFB90 0xF0F7      SDIV     R0,R0,R7
   \   00000296   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000298   0x....             LDR.N    R1,??DataTable56
   \   0000029A   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
   \   0000029E   0x2700             MOVS     R7,#+0
   \   000002A0   0xE70B             B.N      ??get_root_8
   \                     ??get_root_4:
   \   000002A2   0xF05F 0x0900      MOVS     R9,#+0
   \   000002A6   0xF05F 0x0A04      MOVS     R10,#+4
   \   000002AA   0xE014             B.N      ??get_root_21
   \                     ??get_root_22:
   \   000002AC   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002AE   0x2F0F             CMP      R7,#+15
   \   000002B0   0xD306             BCC.N    ??get_root_23
   \   000002B2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002B4   0x....             LDR.N    R0,??DataTable56
   \   000002B6   0x2100             MOVS     R1,#+0
   \   000002B8   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   \   000002BC   0x2700             MOVS     R7,#+0
   \   000002BE   0x2501             MOVS     R5,#+1
   \                     ??get_root_23:
   \   000002C0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002C2   0x....             LDR.N    R0,??DataTable56
   \   000002C4   0x2100             MOVS     R1,#+0
   \   000002C6   0xF840 0x1024      STR      R1,[R0, R4, LSL #+2]
   \   000002CA   0x2700             MOVS     R7,#+0
   \                     ??get_root_24:
   \   000002CC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002CE   0x2D00             CMP      R5,#+0
   \   000002D0   0xD150             BNE.N    ??get_root_25
   \                     ??get_root_26:
   \   000002D2   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??get_root_21:
   \   000002D6   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000002DA   0xF1BA 0x0F9B      CMP      R10,#+155
   \   000002DE   0xD26D             BCS.N    ??get_root_12
   \   000002E0   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000002E4   0xF1B9 0x0F00      CMP      R9,#+0
   \   000002E8   0xD1F3             BNE.N    ??get_root_26
   \   000002EA   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000002EE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002F0   0x20A0             MOVS     R0,#+160
   \   000002F2   0x....             LDR.N    R1,??DataTable55
   \   000002F4   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   000002F8   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   000002FC   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000300   0x2800             CMP      R0,#+0
   \   00000302   0xD0E6             BEQ.N    ??get_root_26
   \   00000304   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000308   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000030A   0x20A0             MOVS     R0,#+160
   \   0000030C   0x....             LDR.N    R1,??DataTable55
   \   0000030E   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000312   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   00000316   0x2800             CMP      R0,#+0
   \   00000318   0xD0DB             BEQ.N    ??get_root_26
   \   0000031A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000031E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000320   0x20A0             MOVS     R0,#+160
   \   00000322   0x....             LDR.N    R1,??DataTable55
   \   00000324   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000328   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   0000032C   0x7840             LDRB     R0,[R0, #+1]
   \   0000032E   0x2800             CMP      R0,#+0
   \   00000330   0xD0CF             BEQ.N    ??get_root_26
   \   00000332   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000336   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000338   0x20A0             MOVS     R0,#+160
   \   0000033A   0x....             LDR.N    R1,??DataTable55
   \   0000033C   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000340   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   00000344   0x7880             LDRB     R0,[R0, #+2]
   \   00000346   0x2800             CMP      R0,#+0
   \   00000348   0xD1C3             BNE.N    ??get_root_26
   \   0000034A   0xF11A 0x0A02      ADDS     R10,R10,#+2
   \   0000034E   0xE013             B.N      ??get_root_27
   \                     ??get_root_28:
   \   00000350   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000354   0xF1BA 0x0F98      CMP      R10,#+152
   \   00000358   0xD21E             BCS.N    ??get_root_29
   \   0000035A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000035C   0x....             LDR.N    R0,??DataTable56
   \   0000035E   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000362   0xFA50 0xF08A      UXTAB    R0,R0,R10
   \   00000366   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000368   0x....             LDR.N    R1,??DataTable56
   \   0000036A   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
   \   0000036E   0x1C7F             ADDS     R7,R7,#+1
   \   00000370   0xF05F 0x0901      MOVS     R9,#+1
   \                     ??get_root_25:
   \   00000374   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??get_root_27:
   \   00000378   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000037C   0xF1BA 0x0F99      CMP      R10,#+153
   \   00000380   0xD2A7             BCS.N    ??get_root_26
   \   00000382   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000386   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000388   0x20A0             MOVS     R0,#+160
   \   0000038A   0x....             LDR.N    R1,??DataTable55
   \   0000038C   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \   00000390   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   00000394   0x2800             CMP      R0,#+0
   \   00000396   0xD0DB             BEQ.N    ??get_root_28
   \                     ??get_root_29:
   \   00000398   0x1EF8             SUBS     R0,R7,#+3
   \   0000039A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000039C   0x280C             CMP      R0,#+12
   \   0000039E   0xD285             BCS.N    ??get_root_22
   \   000003A0   0x2500             MOVS     R5,#+0
   \   000003A2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003A4   0x....             LDR.N    R0,??DataTable56
   \   000003A6   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000003AA   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000003AC   0xFB90 0xF0F7      SDIV     R0,R0,R7
   \   000003B0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003B2   0x....             LDR.N    R1,??DataTable56
   \   000003B4   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
   \   000003B8   0x2700             MOVS     R7,#+0
   \   000003BA   0xE787             B.N      ??get_root_24
   \                     ??get_root_12:
   \   000003BC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003BE   0x....             LDR.N    R0,??DataTable56
   \   000003C0   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000003C4   0x2800             CMP      R0,#+0
   \   000003C6   0xF43F 0xAE39      BEQ.W    ??get_root_1
   \   000003CA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003CC   0x....             LDR.N    R0,??DataTable56
   \   000003CE   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000003D2   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   000003D6   0x2001             MOVS     R0,#+1
   \   000003D8   0xF88D 0x0003      STRB     R0,[SP, #+3]
   \   000003DC   0xE634             B.N      ??get_root_2
   1889            }
   1890          
   1891          	
   1892          	for(i=54;i>=45;i--)
   \                     ??get_root_3:
   \   000003DE   0x2436             MOVS     R4,#+54
   \   000003E0   0xE00F             B.N      ??get_root_30
   1893                    {
   1894                       if(position[i])
   \                     ??get_root_31:
   \   000003E2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003E4   0x....             LDR.N    R0,??DataTable56
   \   000003E6   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000003EA   0x2800             CMP      R0,#+0
   \   000003EC   0xD008             BEQ.N    ??get_root_32
   1895                       {
   1896                        start_position=position[i];
   \   000003EE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003F0   0x....             LDR.N    R0,??DataTable56
   \   000003F2   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000003F6   0x.... 0x....      LDR.W    R1,??DataTable57
   \   000003FA   0x6008             STR      R0,[R1, #+0]
   1897                        num++;
   \   000003FC   0xF118 0x0801      ADDS     R8,R8,#+1
   1898                       }
   1899                    } 
   \                     ??get_root_32:
   \   00000400   0x1E64             SUBS     R4,R4,#+1
   \                     ??get_root_30:
   \   00000402   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000404   0x2C2D             CMP      R4,#+45
   \   00000406   0xD2EC             BCS.N    ??get_root_31
   1900          	if(num>1)
   \   00000408   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000040C   0xF1B8 0x0F02      CMP      R8,#+2
   \   00000410   0xD301             BCC.N    ??get_root_33
   1901          	return ok;
   \   00000412   0x2001             MOVS     R0,#+1
   \   00000414   0xE000             B.N      ??get_root_34
   1902          	else
   1903             return fail;
   \                     ??get_root_33:
   \   00000416   0x2000             MOVS     R0,#+0
   \                     ??get_root_34:
   \   00000418   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
   1904            
   1905                 
   1906          }
   1907          

   \                                 In section .text, align 2, keep-with-next
   1908          int Judge_end(unsigned char end_hang)
   1909          {
   \                     Judge_end:
   \   00000000   0xB430             PUSH     {R4,R5}
   1910          	unsigned char black_num=0,i=0,j=0,black_flag1=0,black_flag2=0;
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x2500             MOVS     R5,#+0
   1911          	if(end_hang<=19)
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x2814             CMP      R0,#+20
   \   00000010   0xD20F             BCS.N    ??Judge_end_0
   1912                    {
   1913                      for(i=end_hang-1;i>=end_hang-1;i--)
   \   00000012   0x1E42             SUBS     R2,R0,#+1
   \                     ??Judge_end_1:
   \   00000014   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x1E43             SUBS     R3,R0,#+1
   \   0000001A   0x429A             CMP      R2,R3
   \   0000001C   0xDB35             BLT.N    ??Judge_end_2
   1914                        {
   1915                          if(!position[i])
   \   0000001E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000020   0x.... 0x....      LDR.W    R3,??DataTable57_1
   \   00000024   0xF853 0x3022      LDR      R3,[R3, R2, LSL #+2]
   \   00000028   0x2B00             CMP      R3,#+0
   \   0000002A   0xD100             BNE.N    ??Judge_end_3
   1916                          black_num++;  
   \   0000002C   0x1C49             ADDS     R1,R1,#+1
   1917                        }	
   \                     ??Judge_end_3:
   \   0000002E   0x1E52             SUBS     R2,R2,#+1
   \   00000030   0xE7F0             B.N      ??Judge_end_1
   1918                    }
   1919          	else 
   1920                    if(end_hang<=28)
   \                     ??Judge_end_0:
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0x281D             CMP      R0,#+29
   \   00000036   0xD214             BCS.N    ??Judge_end_4
   1921                    {
   1922                      for(i=end_hang-1;i>=end_hang-2;i--)
   \   00000038   0x1E42             SUBS     R2,R0,#+1
   \   0000003A   0xE008             B.N      ??Judge_end_5
   1923                        {
   1924                          if(!position[i])
   \                     ??Judge_end_6:
   \   0000003C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000003E   0x.... 0x....      LDR.W    R3,??DataTable57_1
   \   00000042   0xF853 0x3022      LDR      R3,[R3, R2, LSL #+2]
   \   00000046   0x2B00             CMP      R3,#+0
   \   00000048   0xD100             BNE.N    ??Judge_end_7
   1925                          black_num++;  
   \   0000004A   0x1C49             ADDS     R1,R1,#+1
   1926                        }
   \                     ??Judge_end_7:
   \   0000004C   0x1E52             SUBS     R2,R2,#+1
   \                     ??Judge_end_5:
   \   0000004E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000050   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000052   0x1E83             SUBS     R3,R0,#+2
   \   00000054   0x429A             CMP      R2,R3
   \   00000056   0xDAF1             BGE.N    ??Judge_end_6
   1927                      if(black_num<2)
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x2902             CMP      R1,#+2
   \   0000005C   0xD215             BCS.N    ??Judge_end_2
   1928                      black_num=0;
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0xE013             B.N      ??Judge_end_2
   1929                    }
   1930                  else
   1931                    {
   1932                      for(i=end_hang-1;i>=end_hang-4;i--)
   \                     ??Judge_end_4:
   \   00000062   0x1E42             SUBS     R2,R0,#+1
   \   00000064   0xE008             B.N      ??Judge_end_8
   1933                        {
   1934                          if(!position[i])
   \                     ??Judge_end_9:
   \   00000066   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000068   0x.... 0x....      LDR.W    R3,??DataTable57_1
   \   0000006C   0xF853 0x3022      LDR      R3,[R3, R2, LSL #+2]
   \   00000070   0x2B00             CMP      R3,#+0
   \   00000072   0xD100             BNE.N    ??Judge_end_10
   1935                          black_num++;  
   \   00000074   0x1C49             ADDS     R1,R1,#+1
   1936                        }
   \                     ??Judge_end_10:
   \   00000076   0x1E52             SUBS     R2,R2,#+1
   \                     ??Judge_end_8:
   \   00000078   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000007A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007C   0x1F03             SUBS     R3,R0,#+4
   \   0000007E   0x429A             CMP      R2,R3
   \   00000080   0xDAF1             BGE.N    ??Judge_end_9
   1937                      if(black_num<4)
   \   00000082   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000084   0x2904             CMP      R1,#+4
   \   00000086   0xD200             BCS.N    ??Judge_end_2
   1938                      black_num=0;
   \   00000088   0x2100             MOVS     R1,#+0
   1939                    }
   1940                    
   1941          	if((black_num==1)||(black_num==2)||(black_num==4))
   \                     ??Judge_end_2:
   \   0000008A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008C   0x2901             CMP      R1,#+1
   \   0000008E   0xD005             BEQ.N    ??Judge_end_11
   \   00000090   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000092   0x2902             CMP      R1,#+2
   \   00000094   0xD002             BEQ.N    ??Judge_end_11
   \   00000096   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000098   0x2904             CMP      R1,#+4
   \   0000009A   0xD101             BNE.N    ??Judge_end_12
   1942          	  return ok;
   \                     ??Judge_end_11:
   \   0000009C   0x2001             MOVS     R0,#+1
   \   0000009E   0xE000             B.N      ??Judge_end_13
   1943          	else
   1944                    return fail;
   \                     ??Judge_end_12:
   \   000000A0   0x2000             MOVS     R0,#+0
   \                     ??Judge_end_13:
   \   000000A2   0xBC30             POP      {R4,R5}
   \   000000A4   0x4770             BX       LR               ;; return
   1945          }
   1946          
   1947          
   1948          

   \                                 In section .text, align 2, keep-with-next
   1949          void  position_youhua()
   1950          {
   \                     position_youhua:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1951              int m=0,end_flag=0,num=0,i=0;
   \   00000002   0x2500             MOVS     R5,#+0
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x2100             MOVS     R1,#+0
   1952          	for(m=44;m>2;m--)
   \   0000000A   0x222C             MOVS     R2,#+44
   \   0000000C   0x0015             MOVS     R5,R2
   \   0000000E   0xE008             B.N      ??position_youhua_0
   1953                  {
   1954          	   if(!position[m])
   1955                     {
   1956          		end_flag=Judge_end(m);
   1957          		if(end_flag)
   1958                          {
   1959          		  for(;m>=3;m--)
   1960                            {
   1961          		    position[m]=0;
   \                     ??position_youhua_1:
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable57_1
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0xF840 0x1025      STR      R1,[R0, R5, LSL #+2]
   1962          		  }
   \   0000001A   0x1E6D             SUBS     R5,R5,#+1
   \                     ??position_youhua_2:
   \   0000001C   0x2D03             CMP      R5,#+3
   \   0000001E   0xDAF7             BGE.N    ??position_youhua_1
   1963          		}
   \                     ??position_youhua_3:
   \   00000020   0x1E6D             SUBS     R5,R5,#+1
   \                     ??position_youhua_0:
   \   00000022   0x2D03             CMP      R5,#+3
   \   00000024   0xDB0C             BLT.N    ??position_youhua_4
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable57_1
   \   0000002A   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD1F6             BNE.N    ??position_youhua_3
   \   00000032   0x0028             MOVS     R0,R5
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0x.... 0x....      BL       Judge_end
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD1EE             BNE.N    ??position_youhua_2
   \   0000003E   0xE7EF             B.N      ??position_youhua_3
   1964          		//break;
   1965          	   }
   1966                  } 	
   1967          	for(i=44;i>=0;i--)
   \                     ??position_youhua_4:
   \   00000040   0x212C             MOVS     R1,#+44
   \   00000042   0xE001             B.N      ??position_youhua_5
   1968                  {
   1969          	  if(!position[i])
   1970                      {
   1971                        if(i>=24)
   1972                        {
   1973          		num++;
   1974          	        if(num>4)
   1975                            {
   1976          		    for(;i>=0;i--)
   1977                               {
   1978          		        position[i]=0;
   1979          		     }
   1980          			break;
   1981          		  }
   1982                        }
   1983                        else
   1984                          {
   1985          		num++;
   1986          	        if(num>2)
   1987                            {
   1988          		    for(;i>=0;i--)
   1989                               {
   1990          		        position[i]=0;
   1991          		     }
   1992          			break;
   1993          		  }
   1994                        }
   1995          	   }                	
   1996                     else
   1997                          num=0;
   \                     ??position_youhua_6:
   \   00000044   0x2400             MOVS     R4,#+0
   \                     ??position_youhua_7:
   \   00000046   0x1E49             SUBS     R1,R1,#+1
   \                     ??position_youhua_5:
   \   00000048   0x2900             CMP      R1,#+0
   \   0000004A   0xD420             BMI.N    ??position_youhua_8
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable57_1
   \   00000050   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD1F5             BNE.N    ??position_youhua_6
   \   00000058   0x2918             CMP      R1,#+24
   \   0000005A   0xDB0C             BLT.N    ??position_youhua_9
   \   0000005C   0x1C64             ADDS     R4,R4,#+1
   \   0000005E   0x2C05             CMP      R4,#+5
   \   00000060   0xDBF1             BLT.N    ??position_youhua_7
   \                     ??position_youhua_10:
   \   00000062   0x2900             CMP      R1,#+0
   \   00000064   0xD406             BMI.N    ??position_youhua_11
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable57_1
   \   0000006A   0x2200             MOVS     R2,#+0
   \   0000006C   0xF840 0x2021      STR      R2,[R0, R1, LSL #+2]
   \   00000070   0x1E49             SUBS     R1,R1,#+1
   \   00000072   0xE7F6             B.N      ??position_youhua_10
   \                     ??position_youhua_11:
   \   00000074   0xE00B             B.N      ??position_youhua_8
   \                     ??position_youhua_9:
   \   00000076   0x1C64             ADDS     R4,R4,#+1
   \   00000078   0x2C03             CMP      R4,#+3
   \   0000007A   0xDBE4             BLT.N    ??position_youhua_7
   \                     ??position_youhua_12:
   \   0000007C   0x2900             CMP      R1,#+0
   \   0000007E   0xD406             BMI.N    ??position_youhua_13
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable57_1
   \   00000084   0x2200             MOVS     R2,#+0
   \   00000086   0xF840 0x2021      STR      R2,[R0, R1, LSL #+2]
   \   0000008A   0x1E49             SUBS     R1,R1,#+1
   \   0000008C   0xE7F6             B.N      ??position_youhua_12
   1998          	     
   1999          	}
   2000                  //center_filter();
   2001          }
   \                     ??position_youhua_13:
   \                     ??position_youhua_8:
   \   0000008E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   2002          /**********************二值化END*********************/
   2003          //////////////找黑线中心//////////////////

   \                                 In section .text, align 2, keep-with-next
   2004          int find_position()
   2005           {
   \                     find_position:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB087             SUB      SP,SP,#+28
   2006            int i=0,j=0,windage=0,root_flag=0;
   \   00000006   0xF05F 0x0800      MOVS     R8,#+0
   \   0000000A   0xF05F 0x0900      MOVS     R9,#+0
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x9002             STR      R0,[SP, #+8]
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9005             STR      R0,[SP, #+20]
   2007            int position_width=0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x9001             STR      R0,[SP, #+4]
   2008            int position_num=0,position_old=0;
   \   0000001A   0x2400             MOVS     R4,#+0
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x9000             STR      R0,[SP, #+0]
   2009            int endL=0,endR=0,num=0,ave=0,num1=0,cha=0,find_num=0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x9004             STR      R0,[SP, #+16]
   \   00000024   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000028   0x2500             MOVS     R5,#+0
   \   0000002A   0xF05F 0x0B00      MOVS     R11,#+0
   \   0000002E   0x2600             MOVS     R6,#+0
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x9003             STR      R0,[SP, #+12]
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x9006             STR      R0,[SP, #+24]
   2010            int median=0;
   \   00000038   0x2700             MOVS     R7,#+0
   2011            binaryzation2();
   \   0000003A   0x.... 0x....      BL       binaryzation2
   2012            root_flag=get_root(); //root_flag=0k;找根成功
   \   0000003E   0x.... 0x....      BL       get_root
   \   00000042   0x9005             STR      R0,[SP, #+20]
   2013            if(!root_flag)
   \   00000044   0x9805             LDR      R0,[SP, #+20]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD101             BNE.N    ??find_position_0
   2014            return fail;
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0xE208             B.N      ??find_position_1
   2015            i=44;
   \                     ??find_position_0:
   \   0000004E   0xF05F 0x082C      MOVS     R8,#+44
   \   00000052   0xE001             B.N      ??find_position_2
   2016            while(i>=0)
   2017               {
   2018                  position[i]=0;
   2019                  if(i>40)
   2020                  {
   2021                    windage=40;
   2022                    position_width=4;//22
   2023                  }
   2024                 else
   2025                 if(i>30)
   2026                  {
   2027                    windage=40;
   2028                    position_width=4;//20
   2029                  } 
   2030                  else
   2031                  if(i>20)
   2032                  {
   2033                    windage=38;
   2034                    position_width=3;//20
   2035                  } 
   2036                  else
   2037                  if(i>10)
   2038                  {
   2039                    //windage=23;
   2040                    windage=17;
   2041                    position_width=3;//10
   2042                  } 
   2043                  else
   2044                  {
   2045                    //windage=21;
   2046                    windage=17;
   2047                    position_width=3;//9
   2048                  }
   2049             if(i==44)
   2050             {
   2051               position_old=start_position; 
   2052               start_position=0;
   2053             }
   2054           
   2055               endL=limit(position_old-windage,158,1);
   2056               endR= limit(position_old+windage,158,1);
   2057               for(j=endL;j<=endR;j++)
   2058               {
   2059                  if(!ImageData[i][j+2]&&ImageData[i][j]&&ImageData[i][j+1])
   2060                  {
   2061                            for(j=j+2;j<=endR;j++)
   2062                            {
   2063                                if(!ImageData[i][j]&&j<endR)
   2064                                {
   2065                                  median+=j;
   2066                                   position_num++;
   2067                                }
   2068                                else
   2069                                {
   2070                                    if(ImageData[i][j]||(j==endR))
   2071                                    {
   2072          	                      if(j==endR)
   2073                                          {
   2074                                             if(!ImageData[i][j])
   2075                                               {
   2076                                                  for(j=endR;j<=limit(endR+20,158,1);j++)
   2077          	                                    {
   2078          	                                        if(!ImageData[i][j])
   2079          		                                  {
   2080          		                                     median+=j;
   2081          		                                     position_num++;
   2082          		                                  } 
   2083          		                                else
   2084          	                                          break;
   2085          	                                    }
   2086          	                             }
   2087          	                        }
   2088                                        if(!ImageData[i][j])
   2089                                          {
   2090                                             median=0;
   2091                                             position_num=0;
   2092                                             break;
   2093                                          }
   2094                                      if(position_num>position_width-3&&position_num<position_width+14) 
   2095                                      {
   2096                                         median=median/position_num;
   2097                                         position_num=0;
   2098                                       }
   2099                                      else
   2100                                      {
   2101                                       median=0;
   2102                                       position_num=0;	    			
   2103                                      }
   2104                                    }                 
   2105                                  if(median&&abs(median-position_old)>28) 
   2106                                      median=0;
   2107                                  else
   2108                                  {
   2109                                      if(median)
   2110                                      {			
   2111                                        if(!position[i])
   2112                                        {
   2113                                                position[i]=median;
   2114                                                median=0; 
   2115                                                position_num=0;
   2116                                                 //break;
   2117                                        }
   2118                                        else
   2119                                        {
   2120                                             if(abs(position[i]-position_old)>abs(median-position_old))
   2121                                               {
   2122                                                  position[i]=median;
   2123                                                  median=0;
   2124                                                  break;
   2125                                               }
   2126                                             else
   2127                                               {
   2128                                                 median=0;
   2129                                                 break;
   2130                                               }
   2131                                        }
   2132                                      }
   2133                                   }
   2134                               }                     
   2135                       } 
   2136                  }
   2137               }
   2138               if(position[i])
   2139               position_old=position[i];
   2140               if(position[i]&&(position[i]<3||position[i]>157))
   2141              {
   2142                     for(;i>=0;i--)
   2143                     {
   2144                         position[i]=0;
   2145                     }
   2146                    break;
   2147             }
   2148              i--;
   \                     ??find_position_3:
   \   00000054   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \                     ??find_position_2:
   \   00000058   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000005C   0xF100 0x8119      BMI.W    ??find_position_4
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable57_1
   \   00000064   0x2100             MOVS     R1,#+0
   \   00000066   0xF840 0x1028      STR      R1,[R0, R8, LSL #+2]
   \   0000006A   0xF1B8 0x0F29      CMP      R8,#+41
   \   0000006E   0xDB04             BLT.N    ??find_position_5
   \   00000070   0x2028             MOVS     R0,#+40
   \   00000072   0x9002             STR      R0,[SP, #+8]
   \   00000074   0x2004             MOVS     R0,#+4
   \   00000076   0x9001             STR      R0,[SP, #+4]
   \   00000078   0xE01B             B.N      ??find_position_6
   \                     ??find_position_5:
   \   0000007A   0xF1B8 0x0F1F      CMP      R8,#+31
   \   0000007E   0xDB04             BLT.N    ??find_position_7
   \   00000080   0x2028             MOVS     R0,#+40
   \   00000082   0x9002             STR      R0,[SP, #+8]
   \   00000084   0x2004             MOVS     R0,#+4
   \   00000086   0x9001             STR      R0,[SP, #+4]
   \   00000088   0xE013             B.N      ??find_position_6
   \                     ??find_position_7:
   \   0000008A   0xF1B8 0x0F15      CMP      R8,#+21
   \   0000008E   0xDB04             BLT.N    ??find_position_8
   \   00000090   0x2026             MOVS     R0,#+38
   \   00000092   0x9002             STR      R0,[SP, #+8]
   \   00000094   0x2003             MOVS     R0,#+3
   \   00000096   0x9001             STR      R0,[SP, #+4]
   \   00000098   0xE00B             B.N      ??find_position_6
   \                     ??find_position_8:
   \   0000009A   0xF1B8 0x0F0B      CMP      R8,#+11
   \   0000009E   0xDB04             BLT.N    ??find_position_9
   \   000000A0   0x2011             MOVS     R0,#+17
   \   000000A2   0x9002             STR      R0,[SP, #+8]
   \   000000A4   0x2003             MOVS     R0,#+3
   \   000000A6   0x9001             STR      R0,[SP, #+4]
   \   000000A8   0xE003             B.N      ??find_position_6
   \                     ??find_position_9:
   \   000000AA   0x2011             MOVS     R0,#+17
   \   000000AC   0x9002             STR      R0,[SP, #+8]
   \   000000AE   0x2003             MOVS     R0,#+3
   \   000000B0   0x9001             STR      R0,[SP, #+4]
   \                     ??find_position_6:
   \   000000B2   0xF1B8 0x0F2C      CMP      R8,#+44
   \   000000B6   0xD107             BNE.N    ??find_position_10
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable57
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0x9000             STR      R0,[SP, #+0]
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable57
   \   000000C4   0x2100             MOVS     R1,#+0
   \   000000C6   0x6001             STR      R1,[R0, #+0]
   \                     ??find_position_10:
   \   000000C8   0x2201             MOVS     R2,#+1
   \   000000CA   0x219E             MOVS     R1,#+158
   \   000000CC   0x9800             LDR      R0,[SP, #+0]
   \   000000CE   0x9B02             LDR      R3,[SP, #+8]
   \   000000D0   0x1AC0             SUBS     R0,R0,R3
   \   000000D2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000D4   0x.... 0x....      BL       limit
   \   000000D8   0x9004             STR      R0,[SP, #+16]
   \   000000DA   0x2201             MOVS     R2,#+1
   \   000000DC   0x219E             MOVS     R1,#+158
   \   000000DE   0x9800             LDR      R0,[SP, #+0]
   \   000000E0   0x9B02             LDR      R3,[SP, #+8]
   \   000000E2   0x1818             ADDS     R0,R3,R0
   \   000000E4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000E6   0x.... 0x....      BL       limit
   \   000000EA   0x4682             MOV      R10,R0
   \   000000EC   0xF8DD 0x9010      LDR      R9,[SP, #+16]
   \   000000F0   0xE002             B.N      ??find_position_11
   \                     ??find_position_12:
   \   000000F2   0x2700             MOVS     R7,#+0
   \                     ??find_position_13:
   \   000000F4   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??find_position_11:
   \   000000F8   0x45CA             CMP      R10,R9
   \   000000FA   0xF2C0 0x80A6      BLT.W    ??find_position_14
   \   000000FE   0x20A0             MOVS     R0,#+160
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable57_2
   \   00000104   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   00000108   0xEB19 0x0000      ADDS     R0,R9,R0
   \   0000010C   0x7880             LDRB     R0,[R0, #+2]
   \   0000010E   0x2800             CMP      R0,#+0
   \   00000110   0xD1F0             BNE.N    ??find_position_13
   \   00000112   0x20A0             MOVS     R0,#+160
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable57_2
   \   00000118   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   0000011C   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   00000120   0x2800             CMP      R0,#+0
   \   00000122   0xD0E7             BEQ.N    ??find_position_13
   \   00000124   0x20A0             MOVS     R0,#+160
   \   00000126   0x.... 0x....      LDR.W    R1,??DataTable57_2
   \   0000012A   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   0000012E   0xEB19 0x0000      ADDS     R0,R9,R0
   \   00000132   0x7840             LDRB     R0,[R0, #+1]
   \   00000134   0x2800             CMP      R0,#+0
   \   00000136   0xD0DD             BEQ.N    ??find_position_13
   \   00000138   0xF119 0x0902      ADDS     R9,R9,#+2
   \   0000013C   0xE006             B.N      ??find_position_15
   \                     ??find_position_16:
   \   0000013E   0x45D1             CMP      R9,R10
   \   00000140   0xDA0E             BGE.N    ??find_position_17
   \   00000142   0xEB19 0x0707      ADDS     R7,R9,R7
   \   00000146   0x1C64             ADDS     R4,R4,#+1
   \                     ??find_position_18:
   \   00000148   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??find_position_15:
   \   0000014C   0x45CA             CMP      R10,R9
   \   0000014E   0xDBD1             BLT.N    ??find_position_13
   \   00000150   0x20A0             MOVS     R0,#+160
   \   00000152   0x....             LDR.N    R1,??DataTable57_2
   \   00000154   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   00000158   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   0000015C   0x2800             CMP      R0,#+0
   \   0000015E   0xD0EE             BEQ.N    ??find_position_16
   \                     ??find_position_17:
   \   00000160   0x20A0             MOVS     R0,#+160
   \   00000162   0x....             LDR.N    R1,??DataTable57_2
   \   00000164   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   00000168   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   0000016C   0x2800             CMP      R0,#+0
   \   0000016E   0xD101             BNE.N    ??find_position_19
   \   00000170   0x45D1             CMP      R9,R10
   \   00000172   0xD13A             BNE.N    ??find_position_20
   \                     ??find_position_19:
   \   00000174   0x45D1             CMP      R9,R10
   \   00000176   0xD11F             BNE.N    ??find_position_21
   \   00000178   0x20A0             MOVS     R0,#+160
   \   0000017A   0x....             LDR.N    R1,??DataTable57_2
   \   0000017C   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   00000180   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   00000184   0x2800             CMP      R0,#+0
   \   00000186   0xD117             BNE.N    ??find_position_21
   \   00000188   0x46D1             MOV      R9,R10
   \   0000018A   0xE004             B.N      ??find_position_22
   \                     ??find_position_23:
   \   0000018C   0xEB19 0x0707      ADDS     R7,R9,R7
   \   00000190   0x1C64             ADDS     R4,R4,#+1
   \   00000192   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??find_position_22:
   \   00000196   0x2201             MOVS     R2,#+1
   \   00000198   0x219E             MOVS     R1,#+158
   \   0000019A   0xF11A 0x0014      ADDS     R0,R10,#+20
   \   0000019E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001A0   0x.... 0x....      BL       limit
   \   000001A4   0x4548             CMP      R0,R9
   \   000001A6   0xDB07             BLT.N    ??find_position_21
   \   000001A8   0x20A0             MOVS     R0,#+160
   \   000001AA   0x....             LDR.N    R1,??DataTable57_2
   \   000001AC   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   000001B0   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   000001B4   0x2800             CMP      R0,#+0
   \   000001B6   0xD0E9             BEQ.N    ??find_position_23
   \                     ??find_position_21:
   \   000001B8   0x20A0             MOVS     R0,#+160
   \   000001BA   0x....             LDR.N    R1,??DataTable57_2
   \   000001BC   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   000001C0   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   000001C4   0x2800             CMP      R0,#+0
   \   000001C6   0xD102             BNE.N    ??find_position_24
   \   000001C8   0x2700             MOVS     R7,#+0
   \   000001CA   0x2400             MOVS     R4,#+0
   \   000001CC   0xE792             B.N      ??find_position_13
   \                     ??find_position_24:
   \   000001CE   0x9801             LDR      R0,[SP, #+4]
   \   000001D0   0x1EC0             SUBS     R0,R0,#+3
   \   000001D2   0x42A0             CMP      R0,R4
   \   000001D4   0xDA07             BGE.N    ??find_position_25
   \   000001D6   0x9801             LDR      R0,[SP, #+4]
   \   000001D8   0x300E             ADDS     R0,R0,#+14
   \   000001DA   0x4284             CMP      R4,R0
   \   000001DC   0xDA03             BGE.N    ??find_position_25
   \   000001DE   0xFB97 0xF7F4      SDIV     R7,R7,R4
   \   000001E2   0x2400             MOVS     R4,#+0
   \   000001E4   0xE001             B.N      ??find_position_20
   \                     ??find_position_25:
   \   000001E6   0x2700             MOVS     R7,#+0
   \   000001E8   0x2400             MOVS     R4,#+0
   \                     ??find_position_20:
   \   000001EA   0x2F00             CMP      R7,#+0
   \   000001EC   0xD008             BEQ.N    ??find_position_26
   \   000001EE   0x9800             LDR      R0,[SP, #+0]
   \   000001F0   0x1A38             SUBS     R0,R7,R0
   \   000001F2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001F4   0x.... 0x....      BL       abs
   \   000001F8   0x281D             CMP      R0,#+29
   \   000001FA   0xDB01             BLT.N    ??find_position_26
   \   000001FC   0x2700             MOVS     R7,#+0
   \   000001FE   0xE7A3             B.N      ??find_position_18
   \                     ??find_position_26:
   \   00000200   0x2F00             CMP      R7,#+0
   \   00000202   0xD0A1             BEQ.N    ??find_position_18
   \   00000204   0x....             LDR.N    R0,??DataTable57_1
   \   00000206   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000020A   0x2800             CMP      R0,#+0
   \   0000020C   0xD105             BNE.N    ??find_position_27
   \   0000020E   0x....             LDR.N    R0,??DataTable57_1
   \   00000210   0xF840 0x7028      STR      R7,[R0, R8, LSL #+2]
   \   00000214   0x2700             MOVS     R7,#+0
   \   00000216   0x2400             MOVS     R4,#+0
   \   00000218   0xE796             B.N      ??find_position_18
   \                     ??find_position_27:
   \   0000021A   0x9800             LDR      R0,[SP, #+0]
   \   0000021C   0x1A38             SUBS     R0,R7,R0
   \   0000021E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000220   0x.... 0x....      BL       abs
   \   00000224   0x4683             MOV      R11,R0
   \   00000226   0x....             LDR.N    R0,??DataTable57_1
   \   00000228   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000022C   0x9900             LDR      R1,[SP, #+0]
   \   0000022E   0x1A40             SUBS     R0,R0,R1
   \   00000230   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000232   0x.... 0x....      BL       abs
   \   00000236   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000023A   0x4583             CMP      R11,R0
   \   0000023C   0xF6BF 0xAF59      BGE.W    ??find_position_12
   \   00000240   0x....             LDR.N    R0,??DataTable57_1
   \   00000242   0xF840 0x7028      STR      R7,[R0, R8, LSL #+2]
   \   00000246   0x2700             MOVS     R7,#+0
   \   00000248   0xE754             B.N      ??find_position_13
   \                     ??find_position_14:
   \   0000024A   0x....             LDR.N    R0,??DataTable57_1
   \   0000024C   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   00000250   0x2800             CMP      R0,#+0
   \   00000252   0xD003             BEQ.N    ??find_position_28
   \   00000254   0x....             LDR.N    R0,??DataTable57_1
   \   00000256   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000025A   0x9000             STR      R0,[SP, #+0]
   \                     ??find_position_28:
   \   0000025C   0x....             LDR.N    R0,??DataTable57_1
   \   0000025E   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   00000262   0x2800             CMP      R0,#+0
   \   00000264   0xF43F 0xAEF6      BEQ.W    ??find_position_3
   \   00000268   0x....             LDR.N    R0,??DataTable57_1
   \   0000026A   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000026E   0x2803             CMP      R0,#+3
   \   00000270   0xDB05             BLT.N    ??find_position_29
   \   00000272   0x....             LDR.N    R0,??DataTable57_1
   \   00000274   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   00000278   0x289E             CMP      R0,#+158
   \   0000027A   0xF6FF 0xAEEB      BLT.W    ??find_position_3
   \                     ??find_position_29:
   \   0000027E   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000282   0xD406             BMI.N    ??find_position_30
   \   00000284   0x....             LDR.N    R0,??DataTable57_1
   \   00000286   0x2100             MOVS     R1,#+0
   \   00000288   0xF840 0x1028      STR      R1,[R0, R8, LSL #+2]
   \   0000028C   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   00000290   0xE7F5             B.N      ??find_position_29
   2149            }
   2150            position_youhua();
   \                     ??find_position_30:
   \                     ??find_position_4:
   \   00000292   0x.... 0x....      BL       position_youhua
   2151            for(i=54;i>=4;i--)//补线
   \   00000296   0xF05F 0x0836      MOVS     R8,#+54
   \   0000029A   0xE013             B.N      ??find_position_31
   2152              {
   2153                if(!position[i]&&(i==54))
   2154                {
   2155                  while(!position[i])
   2156                    {
   2157                      i--;
   2158                      num1++;
   2159                    }
   2160                  if(position[i]&&num1<5)
   2161                    {
   2162                      ave=abs(position[i]-position[i-1]);
   2163                      if(position[i]>position[i-1])
   2164                        {
   2165                          for(;i<54;i++)
   2166                            {
   2167                              position[i+1]=position[i]+ave;
   2168                            }
   2169                        }
   2170                      else
   2171                        {
   2172                          for(;i<54;i++)
   2173                            {
   2174                              position[i+1]=position[i]-ave;
   2175                            }	
   2176                        }
   2177                    }
   2178                  i=i-num1+1;
   2179                  num1=0;
   2180                }
   2181                if(position[i]&&!position[i-1])
   2182                  {				
   2183                    while(!position[i-1])
   2184                      {
   2185                        i--;
   2186                        num++;
   2187                      }
   2188                    if(position[i-1])
   2189                      {
   2190                        if(num<5)
   2191                          {
   2192                            ave=abs((position[i+num]-position[i-1])/num);
   2193                            if(position[i+num]<position[i-1])  
   2194                              {	
   2195                                for(;num>0;num--)
   2196                                  {
   2197                                    position[i+num-1]=position[i+num]+ave;
   2198                                  }
   2199                                num=0;
   2200                              }
   2201                            else
   2202                              {
   2203                                for(;num>0;num--)
   2204                                  {
   2205                                    position[i+num-1]=position[i+num]-ave;
   \                     ??find_position_32:
   \   0000029C   0xEB15 0x0008      ADDS     R0,R5,R8
   \   000002A0   0x....             LDR.N    R1,??DataTable57_1
   \   000002A2   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   000002A6   0xEB15 0x0108      ADDS     R1,R5,R8
   \   000002AA   0x....             LDR.N    R2,??DataTable57_1
   \   000002AC   0xF852 0x1021      LDR      R1,[R2, R1, LSL #+2]
   \   000002B0   0xEBB1 0x010B      SUBS     R1,R1,R11
   \   000002B4   0xF840 0x1C04      STR      R1,[R0, #-4]
   2206                                  }
   \   000002B8   0x1E6D             SUBS     R5,R5,#+1
   \                     ??find_position_33:
   \   000002BA   0x2D01             CMP      R5,#+1
   \   000002BC   0xDAEE             BGE.N    ??find_position_32
   2207                                num=0;	
   \   000002BE   0x2500             MOVS     R5,#+0
   2208                              }
   \                     ??find_position_34:
   \   000002C0   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \                     ??find_position_31:
   \   000002C4   0xF1B8 0x0F04      CMP      R8,#+4
   \   000002C8   0xF2C0 0x80A3      BLT.W    ??find_position_35
   \   000002CC   0x....             LDR.N    R0,??DataTable57_1
   \   000002CE   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000002D2   0x2800             CMP      R0,#+0
   \   000002D4   0xD14B             BNE.N    ??find_position_36
   \   000002D6   0xF1B8 0x0F36      CMP      R8,#+54
   \   000002DA   0xD148             BNE.N    ??find_position_36
   \   000002DC   0xE002             B.N      ??find_position_37
   \                     ??find_position_38:
   \   000002DE   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   000002E2   0x1C76             ADDS     R6,R6,#+1
   \                     ??find_position_37:
   \   000002E4   0x....             LDR.N    R0,??DataTable57_1
   \   000002E6   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000002EA   0x2800             CMP      R0,#+0
   \   000002EC   0xD0F7             BEQ.N    ??find_position_38
   \   000002EE   0x....             LDR.N    R0,??DataTable57_1
   \   000002F0   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000002F4   0x2800             CMP      R0,#+0
   \   000002F6   0xD035             BEQ.N    ??find_position_39
   \   000002F8   0x2E05             CMP      R6,#+5
   \   000002FA   0xDA33             BGE.N    ??find_position_39
   \   000002FC   0x....             LDR.N    R0,??DataTable57_1
   \   000002FE   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   00000302   0x....             LDR.N    R1,??DataTable57_1
   \   00000304   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   00000308   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   0000030C   0x1A40             SUBS     R0,R0,R1
   \   0000030E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000310   0x.... 0x....      BL       abs
   \   00000314   0x4683             MOV      R11,R0
   \   00000316   0x....             LDR.N    R0,??DataTable57_1
   \   00000318   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   0000031C   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   00000320   0x....             LDR.N    R1,??DataTable57_1
   \   00000322   0xF851 0x1028      LDR      R1,[R1, R8, LSL #+2]
   \   00000326   0x4288             CMP      R0,R1
   \   00000328   0xDA19             BGE.N    ??find_position_40
   \                     ??find_position_41:
   \   0000032A   0xF1B8 0x0F36      CMP      R8,#+54
   \   0000032E   0xDA19             BGE.N    ??find_position_39
   \   00000330   0x....             LDR.N    R0,??DataTable57_1
   \   00000332   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   00000336   0xEB1B 0x0000      ADDS     R0,R11,R0
   \   0000033A   0x....             LDR.N    R1,??DataTable57_1
   \   0000033C   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   00000340   0x6048             STR      R0,[R1, #+4]
   \   00000342   0xF118 0x0801      ADDS     R8,R8,#+1
   \   00000346   0xE7F0             B.N      ??find_position_41
   \                     ??find_position_42:
   \   00000348   0x....             LDR.N    R0,??DataTable57_1
   \   0000034A   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000034E   0xEBB0 0x000B      SUBS     R0,R0,R11
   \   00000352   0x....             LDR.N    R1,??DataTable57_1
   \   00000354   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   00000358   0x6048             STR      R0,[R1, #+4]
   \   0000035A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??find_position_40:
   \   0000035E   0xF1B8 0x0F36      CMP      R8,#+54
   \   00000362   0xDBF1             BLT.N    ??find_position_42
   \                     ??find_position_39:
   \   00000364   0xEBB8 0x0006      SUBS     R0,R8,R6
   \   00000368   0xF110 0x0801      ADDS     R8,R0,#+1
   \   0000036C   0x2600             MOVS     R6,#+0
   \                     ??find_position_36:
   \   0000036E   0x....             LDR.N    R0,??DataTable57_1
   \   00000370   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   00000374   0x2800             CMP      R0,#+0
   \   00000376   0xD0A3             BEQ.N    ??find_position_34
   \   00000378   0x....             LDR.N    R0,??DataTable57_1
   \   0000037A   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   0000037E   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   00000382   0x2800             CMP      R0,#+0
   \   00000384   0xD19C             BNE.N    ??find_position_34
   \   00000386   0xE002             B.N      ??find_position_43
   \                     ??find_position_44:
   \   00000388   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   0000038C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??find_position_43:
   \   0000038E   0x....             LDR.N    R0,??DataTable57_1
   \   00000390   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   00000394   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   00000398   0x2800             CMP      R0,#+0
   \   0000039A   0xD0F5             BEQ.N    ??find_position_44
   \   0000039C   0x....             LDR.N    R0,??DataTable57_1
   \   0000039E   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   000003A2   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   000003A6   0x2800             CMP      R0,#+0
   \   000003A8   0xD08A             BEQ.N    ??find_position_34
   \   000003AA   0x2D05             CMP      R5,#+5
   \   000003AC   0xDA88             BGE.N    ??find_position_34
   \   000003AE   0xEB15 0x0008      ADDS     R0,R5,R8
   \   000003B2   0x....             LDR.N    R1,??DataTable57_1
   \   000003B4   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   000003B8   0x....             LDR.N    R1,??DataTable57_1
   \   000003BA   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   000003BE   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   000003C2   0x1A40             SUBS     R0,R0,R1
   \   000003C4   0xFB90 0xF0F5      SDIV     R0,R0,R5
   \   000003C8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003CA   0x.... 0x....      BL       abs
   \   000003CE   0x4683             MOV      R11,R0
   \   000003D0   0xEB15 0x0008      ADDS     R0,R5,R8
   \   000003D4   0x....             LDR.N    R1,??DataTable57_1
   \   000003D6   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   000003DA   0x....             LDR.N    R1,??DataTable57_1
   \   000003DC   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   000003E0   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   000003E4   0x4288             CMP      R0,R1
   \   000003E6   0xF6BF 0xAF68      BGE.W    ??find_position_33
   \   000003EA   0xE00E             B.N      ??find_position_45
   \                     ??find_position_46:
   \   000003EC   0xEB15 0x0008      ADDS     R0,R5,R8
   \   000003F0   0x....             LDR.N    R1,??DataTable57_1
   \   000003F2   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   000003F6   0xEB15 0x0108      ADDS     R1,R5,R8
   \   000003FA   0x....             LDR.N    R2,??DataTable57_1
   \   000003FC   0xF852 0x1021      LDR      R1,[R2, R1, LSL #+2]
   \   00000400   0xEB1B 0x0101      ADDS     R1,R11,R1
   \   00000404   0xF840 0x1C04      STR      R1,[R0, #-4]
   \   00000408   0x1E6D             SUBS     R5,R5,#+1
   \                     ??find_position_45:
   \   0000040A   0x2D01             CMP      R5,#+1
   \   0000040C   0xDAEE             BGE.N    ??find_position_46
   \   0000040E   0x2500             MOVS     R5,#+0
   \   00000410   0xE756             B.N      ??find_position_34
   2209                          }
   2210                      }
   2211                   }
   2212              }
   2213          for(i=6;i>0;i--)
   \                     ??find_position_35:
   \   00000412   0xF05F 0x0806      MOVS     R8,#+6
   \   00000416   0xE00C             B.N      ??find_position_47
   2214            {
   2215               cha=abs(position[i]-position[i-1]);
   2216               if(cha>6)
   2217               for(;i>0;i--)
   2218               position[i-1]=0;
   \                     ??find_position_48:
   \   00000418   0x....             LDR.N    R0,??DataTable57_1
   \   0000041A   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   0000041E   0x2100             MOVS     R1,#+0
   \   00000420   0xF840 0x1C04      STR      R1,[R0, #-4]
   \   00000424   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \                     ??find_position_49:
   \   00000428   0xF1B8 0x0F01      CMP      R8,#+1
   \   0000042C   0xDAF4             BGE.N    ??find_position_48
   \                     ??find_position_50:
   \   0000042E   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \                     ??find_position_47:
   \   00000432   0xF1B8 0x0F01      CMP      R8,#+1
   \   00000436   0xDB10             BLT.N    ??find_position_51
   \   00000438   0x....             LDR.N    R0,??DataTable57_1
   \   0000043A   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000043E   0x....             LDR.N    R1,??DataTable57_1
   \   00000440   0xEB11 0x0188      ADDS     R1,R1,R8, LSL #+2
   \   00000444   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   00000448   0x1A40             SUBS     R0,R0,R1
   \   0000044A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000044C   0x.... 0x....      BL       abs
   \   00000450   0x9003             STR      R0,[SP, #+12]
   \   00000452   0x9803             LDR      R0,[SP, #+12]
   \   00000454   0x2807             CMP      R0,#+7
   \   00000456   0xDBEA             BLT.N    ??find_position_50
   \   00000458   0xE7E6             B.N      ??find_position_49
   2219            }
   2220            center_filter();
   \                     ??find_position_51:
   \   0000045A   0x.... 0x....      BL       center_filter
   2221            return ok;
   \   0000045E   0x2001             MOVS     R0,#+1
   \                     ??find_position_1:
   \   00000460   0xB007             ADD      SP,SP,#+28
   \   00000462   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   2222          }
   2223              
   2224          
   2225          
   2226          

   \                                 In section .text, align 4, keep-with-next
   2227          int8 choose_PD()
   2228          {
   \                     choose_PD:
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   2229            int16 i=0,num=0;
   \   00000004   0xF05F 0x0C00      MOVS     R12,#+0
   \   00000008   0x2100             MOVS     R1,#+0
   2230            uint8 track_form=0;//j=0,
   \   0000000A   0x2400             MOVS     R4,#+0
   2231            int8 position_now_low_P=0,position_now_P=0,position_now_D=0;
   \   0000000C   0xF05F 0x0900      MOVS     R9,#+0
   \   00000010   0x2500             MOVS     R5,#+0
   \   00000012   0x2000             MOVS     R0,#+0
   2232            int16 line_head=0,line_end=54;//,line_mid=0;//line_head=30
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x2336             MOVS     R3,#+54
   2233            int16 line_mid_d=0,line_end_d=0;
   \   00000018   0xF05F 0x0800      MOVS     R8,#+0
   \   0000001C   0xF05F 0x0E00      MOVS     LR,#+0
   2234            int16 head=0,middle=0,end=0;
   \   00000020   0x2600             MOVS     R6,#+0
   \   00000022   0x2700             MOVS     R7,#+0
   \   00000024   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000028   0xE001             B.N      ??choose_PD_0
   2235            while(!position[i]&&i<IMG_ROWS)i++;
   \                     ??choose_PD_1:
   \   0000002A   0xF11C 0x0C01      ADDS     R12,R12,#+1
   \                     ??choose_PD_0:
   \   0000002E   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   00000032   0xF8DF 0x0704      LDR.W    R0,??choose_PD_2
   \   00000036   0xF850 0x002C      LDR      R0,[R0, R12, LSL #+2]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD104             BNE.N    ??choose_PD_3
   \   0000003E   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   00000042   0xF1BC 0x0F37      CMP      R12,#+55
   \   00000046   0xDBF0             BLT.N    ??choose_PD_1
   2236            dijihang=i;
   \                     ??choose_PD_3:
   \   00000048   0xF8DF 0x06F0      LDR.W    R0,??choose_PD_2+0x4
   \   0000004C   0xF8A0 0xC000      STRH     R12,[R0, #+0]
   2237          
   2238            if(i<7)
   \   00000050   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   00000054   0xF1BC 0x0F07      CMP      R12,#+7
   \   00000058   0xDA18             BGE.N    ??choose_PD_4
   2239            {
   2240              track_form=3;
   \   0000005A   0x2403             MOVS     R4,#+3
   2241              Servo.P=P_High;
   \   0000005C   0xF8DF 0x06E0      LDR.W    R0,??choose_PD_2+0x8
   \   00000060   0xF8DF 0x56E0      LDR.W    R5,??choose_PD_2+0xC
   \   00000064   0x782D             LDRB     R5,[R5, #+0]
   \   00000066   0x8005             STRH     R5,[R0, #+0]
   2242              Servo.D=D_High;
   \   00000068   0xF8DF 0x06D4      LDR.W    R0,??choose_PD_2+0x8
   \   0000006C   0xF8DF 0x56D8      LDR.W    R5,??choose_PD_2+0x10
   \   00000070   0x782D             LDRB     R5,[R5, #+0]
   \   00000072   0x8085             STRH     R5,[R0, #+4]
   2243              servo.head=H_High;
   \   00000074   0xF8DF 0x06D4      LDR.W    R0,??choose_PD_2+0x14
   \   00000078   0xF8DF 0x56D4      LDR.W    R5,??choose_PD_2+0x18
   \   0000007C   0x782D             LDRB     R5,[R5, #+0]
   \   0000007E   0x8005             STRH     R5,[R0, #+0]
   2244              servo.tail=T_High;
   \   00000080   0xF8DF 0x06C8      LDR.W    R0,??choose_PD_2+0x14
   \   00000084   0xF8DF 0x56CC      LDR.W    R5,??choose_PD_2+0x1C
   \   00000088   0x782D             LDRB     R5,[R5, #+0]
   \   0000008A   0x8045             STRH     R5,[R0, #+2]
   2245            }
   2246            if(i>=7&&i<22)
   \                     ??choose_PD_4:
   \   0000008C   0xF1BC 0x0007      SUBS     R0,R12,#+7
   \   00000090   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000092   0x280F             CMP      R0,#+15
   \   00000094   0xD218             BCS.N    ??choose_PD_5
   2247            {
   2248              track_form=2;
   \   00000096   0x2402             MOVS     R4,#+2
   2249              Servo.P=P_Mid;
   \   00000098   0xF8DF 0x06A4      LDR.W    R0,??choose_PD_2+0x8
   \   0000009C   0xF8DF 0x56B8      LDR.W    R5,??choose_PD_2+0x20
   \   000000A0   0x782D             LDRB     R5,[R5, #+0]
   \   000000A2   0x8005             STRH     R5,[R0, #+0]
   2250              Servo.D=D_Mid;
   \   000000A4   0xF8DF 0x0698      LDR.W    R0,??choose_PD_2+0x8
   \   000000A8   0xF8DF 0x56B0      LDR.W    R5,??choose_PD_2+0x24
   \   000000AC   0x782D             LDRB     R5,[R5, #+0]
   \   000000AE   0x8085             STRH     R5,[R0, #+4]
   2251              servo.head=H_Mid;
   \   000000B0   0xF8DF 0x0698      LDR.W    R0,??choose_PD_2+0x14
   \   000000B4   0xF8DF 0x56A8      LDR.W    R5,??choose_PD_2+0x28
   \   000000B8   0x782D             LDRB     R5,[R5, #+0]
   \   000000BA   0x8005             STRH     R5,[R0, #+0]
   2252              servo.tail=T_Mid;
   \   000000BC   0xF8DF 0x068C      LDR.W    R0,??choose_PD_2+0x14
   \   000000C0   0xF8DF 0x56A0      LDR.W    R5,??choose_PD_2+0x2C
   \   000000C4   0x782D             LDRB     R5,[R5, #+0]
   \   000000C6   0x8045             STRH     R5,[R0, #+2]
   2253            }
   2254            if(i>=22&&i<33)
   \                     ??choose_PD_5:
   \   000000C8   0xF1BC 0x0016      SUBS     R0,R12,#+22
   \   000000CC   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000CE   0x280B             CMP      R0,#+11
   \   000000D0   0xD218             BCS.N    ??choose_PD_6
   2255            {
   2256              track_form=2;
   \   000000D2   0x2402             MOVS     R4,#+2
   2257              Servo.P=P_Mid1;
   \   000000D4   0xF8DF 0x0668      LDR.W    R0,??choose_PD_2+0x8
   \   000000D8   0xF8DF 0x568C      LDR.W    R5,??choose_PD_2+0x30
   \   000000DC   0x782D             LDRB     R5,[R5, #+0]
   \   000000DE   0x8005             STRH     R5,[R0, #+0]
   2258              Servo.D=D_Mid1;
   \   000000E0   0xF8DF 0x065C      LDR.W    R0,??choose_PD_2+0x8
   \   000000E4   0xF8DF 0x5684      LDR.W    R5,??choose_PD_2+0x34
   \   000000E8   0x782D             LDRB     R5,[R5, #+0]
   \   000000EA   0x8085             STRH     R5,[R0, #+4]
   2259              servo.head=H_Mid1;
   \   000000EC   0xF8DF 0x065C      LDR.W    R0,??choose_PD_2+0x14
   \   000000F0   0xF8DF 0x567C      LDR.W    R5,??choose_PD_2+0x38
   \   000000F4   0x782D             LDRB     R5,[R5, #+0]
   \   000000F6   0x8005             STRH     R5,[R0, #+0]
   2260              servo.tail=T_Mid1;
   \   000000F8   0xF8DF 0x0650      LDR.W    R0,??choose_PD_2+0x14
   \   000000FC   0xF8DF 0x5674      LDR.W    R5,??choose_PD_2+0x3C
   \   00000100   0x782D             LDRB     R5,[R5, #+0]
   \   00000102   0x8045             STRH     R5,[R0, #+2]
   2261            }
   2262            if(i>=33)
   \                     ??choose_PD_6:
   \   00000104   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   00000108   0xF1BC 0x0F21      CMP      R12,#+33
   \   0000010C   0xDB18             BLT.N    ??choose_PD_7
   2263            {
   2264              track_form=1;
   \   0000010E   0x2401             MOVS     R4,#+1
   2265              Servo.P=P_Low;
   \   00000110   0xF8DF 0x062C      LDR.W    R0,??choose_PD_2+0x8
   \   00000114   0xF8DF 0x5660      LDR.W    R5,??choose_PD_2+0x40
   \   00000118   0x782D             LDRB     R5,[R5, #+0]
   \   0000011A   0x8005             STRH     R5,[R0, #+0]
   2266              Servo.D=D_Low;
   \   0000011C   0xF8DF 0x0620      LDR.W    R0,??choose_PD_2+0x8
   \   00000120   0xF8DF 0x5658      LDR.W    R5,??choose_PD_2+0x44
   \   00000124   0x782D             LDRB     R5,[R5, #+0]
   \   00000126   0x8085             STRH     R5,[R0, #+4]
   2267              servo.head=H_Low;
   \   00000128   0xF8DF 0x0620      LDR.W    R0,??choose_PD_2+0x14
   \   0000012C   0xF8DF 0x5650      LDR.W    R5,??choose_PD_2+0x48
   \   00000130   0x782D             LDRB     R5,[R5, #+0]
   \   00000132   0x8005             STRH     R5,[R0, #+0]
   2268              servo.tail=T_Low;
   \   00000134   0xF8DF 0x0614      LDR.W    R0,??choose_PD_2+0x14
   \   00000138   0xF8DF 0x5648      LDR.W    R5,??choose_PD_2+0x4C
   \   0000013C   0x782D             LDRB     R5,[R5, #+0]
   \   0000013E   0x8045             STRH     R5,[R0, #+2]
   2269            }
   2270              for(i=servo.head;i<servo.tail;i++)
   \                     ??choose_PD_7:
   \   00000140   0xF8DF 0x0608      LDR.W    R0,??choose_PD_2+0x14
   \   00000144   0xF9B0 0xC000      LDRSH    R12,[R0, #+0]
   \   00000148   0xE017             B.N      ??choose_PD_8
   2271              {
   2272                if(position[i])
   \                     ??choose_PD_9:
   \   0000014A   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   0000014E   0xF8DF 0x05E8      LDR.W    R0,??choose_PD_2
   \   00000152   0xF850 0x002C      LDR      R0,[R0, R12, LSL #+2]
   \   00000156   0x2800             CMP      R0,#+0
   \   00000158   0xD00D             BEQ.N    ??choose_PD_10
   2273                {
   2274                  num++;
   \   0000015A   0x1C49             ADDS     R1,R1,#+1
   2275                  position_now+=position[i];
   \   0000015C   0xF8DF 0x0628      LDR.W    R0,??choose_PD_2+0x50
   \   00000160   0x8800             LDRH     R0,[R0, #+0]
   \   00000162   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   00000166   0xF8DF 0x55D0      LDR.W    R5,??choose_PD_2
   \   0000016A   0xF855 0x502C      LDR      R5,[R5, R12, LSL #+2]
   \   0000016E   0x1828             ADDS     R0,R5,R0
   \   00000170   0xF8DF 0x5614      LDR.W    R5,??choose_PD_2+0x50
   \   00000174   0x8028             STRH     R0,[R5, #+0]
   2276                }  
   2277              }
   \                     ??choose_PD_10:
   \   00000176   0xF11C 0x0C01      ADDS     R12,R12,#+1
   \                     ??choose_PD_8:
   \   0000017A   0xF8DF 0x05D0      LDR.W    R0,??choose_PD_2+0x14
   \   0000017E   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \   00000182   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   00000186   0x4584             CMP      R12,R0
   \   00000188   0xDBDF             BLT.N    ??choose_PD_9
   2278              if(num!=0)
   \   0000018A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000018C   0x2900             CMP      R1,#+0
   \   0000018E   0xD00A             BEQ.N    ??choose_PD_11
   2279              {
   2280                position_now=position_now/num;   //算出当场的中心位置
   \   00000190   0xF8DF 0x05F4      LDR.W    R0,??choose_PD_2+0x50
   \   00000194   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000198   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000019A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000019E   0xF8DF 0x15E8      LDR.W    R1,??choose_PD_2+0x50
   \   000001A2   0x8008             STRH     R0,[R1, #+0]
   2281                num=0;
   \   000001A4   0x2100             MOVS     R1,#+0
   2282              }
   2283            // for(i=45;i<55;i++)
   2284                for(i=50;i<55;i++)
   \                     ??choose_PD_11:
   \   000001A6   0xF05F 0x0C32      MOVS     R12,#+50
   \   000001AA   0xE017             B.N      ??choose_PD_12
   2285              {
   2286                if(position[i])
   \                     ??choose_PD_13:
   \   000001AC   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   000001B0   0xF8DF 0x0584      LDR.W    R0,??choose_PD_2
   \   000001B4   0xF850 0x002C      LDR      R0,[R0, R12, LSL #+2]
   \   000001B8   0x2800             CMP      R0,#+0
   \   000001BA   0xD00D             BEQ.N    ??choose_PD_14
   2287                {
   2288                  num++;
   \   000001BC   0x1C49             ADDS     R1,R1,#+1
   2289                  position_now_low+=position[i];
   \   000001BE   0xF8DF 0x05CC      LDR.W    R0,??choose_PD_2+0x54
   \   000001C2   0x8800             LDRH     R0,[R0, #+0]
   \   000001C4   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   000001C8   0xF8DF 0x556C      LDR.W    R5,??choose_PD_2
   \   000001CC   0xF855 0x502C      LDR      R5,[R5, R12, LSL #+2]
   \   000001D0   0x1828             ADDS     R0,R5,R0
   \   000001D2   0xF8DF 0x55B8      LDR.W    R5,??choose_PD_2+0x54
   \   000001D6   0x8028             STRH     R0,[R5, #+0]
   2290                }  
   2291              }
   \                     ??choose_PD_14:
   \   000001D8   0xF11C 0x0C01      ADDS     R12,R12,#+1
   \                     ??choose_PD_12:
   \   000001DC   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   000001E0   0xF1BC 0x0F37      CMP      R12,#+55
   \   000001E4   0xDBE2             BLT.N    ??choose_PD_13
   2292              if(num!=0)
   \   000001E6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000001E8   0x2900             CMP      R1,#+0
   \   000001EA   0xD00A             BEQ.N    ??choose_PD_15
   2293              {
   2294                position_now_low=position_now_low/num;
   \   000001EC   0xF8DF 0x059C      LDR.W    R0,??choose_PD_2+0x54
   \   000001F0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001F4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000001F6   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001FA   0xF8DF 0x1590      LDR.W    R1,??choose_PD_2+0x54
   \   000001FE   0x8008             STRH     R0,[R1, #+0]
   2295                num=0;
   \   00000200   0x2100             MOVS     R1,#+0
   2296              }
   2297              if(!position_now)
   \                     ??choose_PD_15:
   \   00000202   0xF8DF 0x0584      LDR.W    R0,??choose_PD_2+0x50
   \   00000206   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000020A   0x2800             CMP      R0,#+0
   \   0000020C   0xD110             BNE.N    ??choose_PD_16
   2298              {
   2299                if(!position_now_low)
   \   0000020E   0xF8DF 0x057C      LDR.W    R0,??choose_PD_2+0x54
   \   00000212   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000216   0x2800             CMP      R0,#+0
   \   00000218   0xD106             BNE.N    ??choose_PD_17
   2300                  position_now=position_now_low;
   \   0000021A   0xF8DF 0x056C      LDR.W    R0,??choose_PD_2+0x50
   \   0000021E   0xF8DF 0x156C      LDR.W    R1,??choose_PD_2+0x54
   \   00000222   0x8809             LDRH     R1,[R1, #+0]
   \   00000224   0x8001             STRH     R1,[R0, #+0]
   \   00000226   0xE003             B.N      ??choose_PD_16
   2301                else
   2302                  return fail;
   \                     ??choose_PD_17:
   \   00000228   0x2000             MOVS     R0,#+0
   \   0000022A   0xF001 0xBA13      B.W      ??choose_PD_18
   2303              }
   2304              while(position[line_head]==0)  line_head++;
   \                     ??choose_PD_19:
   \   0000022E   0x1C52             ADDS     R2,R2,#+1
   \                     ??choose_PD_16:
   \   00000230   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000232   0xF8DF 0x0504      LDR.W    R0,??choose_PD_2
   \   00000236   0xF850 0x0022      LDR      R0,[R0, R2, LSL #+2]
   \   0000023A   0x2800             CMP      R0,#+0
   \   0000023C   0xD0F7             BEQ.N    ??choose_PD_19
   2305              while(position[line_end]==0)  line_end--;
   \                     ??choose_PD_20:
   \   0000023E   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000240   0xF8DF 0x04F4      LDR.W    R0,??choose_PD_2
   \   00000244   0xF850 0x0023      LDR      R0,[R0, R3, LSL #+2]
   \   00000248   0x2800             CMP      R0,#+0
   \   0000024A   0xD101             BNE.N    ??choose_PD_21
   \   0000024C   0x1E5B             SUBS     R3,R3,#+1
   \   0000024E   0xE7F6             B.N      ??choose_PD_20
   2306              line_end_d=(line_head+2*line_end)/3;
   \                     ??choose_PD_21:
   \   00000250   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000252   0x0058             LSLS     R0,R3,#+1
   \   00000254   0xFA00 0xF082      SXTAH    R0,R0,R2
   \   00000258   0x2103             MOVS     R1,#+3
   \   0000025A   0xFB90 0xFEF1      SDIV     LR,R0,R1
   2307              line_mid_d=(line_end+2*line_head)/3;
   \   0000025E   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000260   0x0050             LSLS     R0,R2,#+1
   \   00000262   0xFA00 0xF083      SXTAH    R0,R0,R3
   \   00000266   0x2103             MOVS     R1,#+3
   \   00000268   0xFB90 0xF8F1      SDIV     R8,R0,R1
   2308              for(i=line_head;i<line_mid_d;i++)head+=position[i];
   \   0000026C   0x4694             MOV      R12,R2
   \   0000026E   0xE008             B.N      ??choose_PD_22
   \                     ??choose_PD_23:
   \   00000270   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   00000274   0xF8DF 0x04C0      LDR.W    R0,??choose_PD_2
   \   00000278   0xF850 0x002C      LDR      R0,[R0, R12, LSL #+2]
   \   0000027C   0x1986             ADDS     R6,R0,R6
   \   0000027E   0xF11C 0x0C01      ADDS     R12,R12,#+1
   \                     ??choose_PD_22:
   \   00000282   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   00000286   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000028A   0x45C4             CMP      R12,R8
   \   0000028C   0xDBF0             BLT.N    ??choose_PD_23
   2309              head=head/(line_mid_d-line_head);
   \   0000028E   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000290   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000294   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000296   0xEBB8 0x0002      SUBS     R0,R8,R2
   \   0000029A   0xFB96 0xF6F0      SDIV     R6,R6,R0
   2310              for(i=line_mid_d;i<=line_end_d;i++)middle+=position[i];
   \   0000029E   0x46C4             MOV      R12,R8
   \   000002A0   0xE008             B.N      ??choose_PD_24
   \                     ??choose_PD_25:
   \   000002A2   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   000002A6   0xF8DF 0x0490      LDR.W    R0,??choose_PD_2
   \   000002AA   0xF850 0x002C      LDR      R0,[R0, R12, LSL #+2]
   \   000002AE   0x19C7             ADDS     R7,R0,R7
   \   000002B0   0xF11C 0x0C01      ADDS     R12,R12,#+1
   \                     ??choose_PD_24:
   \   000002B4   0xFA0F 0xFE8E      SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
   \   000002B8   0xFA0F 0xFC8C      SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
   \   000002BC   0x45E6             CMP      LR,R12
   \   000002BE   0xDAF0             BGE.N    ??choose_PD_25
   2311              middle=middle/(line_end_d-line_mid_d+1); 
   \   000002C0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002C2   0xFA0F 0xFE8E      SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
   \   000002C6   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000002CA   0xEBBE 0x0008      SUBS     R0,LR,R8
   \   000002CE   0x1C40             ADDS     R0,R0,#+1
   \   000002D0   0xFB97 0xF7F0      SDIV     R7,R7,R0
   2312             if(dijihang<=50)
   \   000002D4   0xF8DF 0x0464      LDR.W    R0,??choose_PD_2+0x4
   \   000002D8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002DC   0x2833             CMP      R0,#+51
   \   000002DE   0xDA0F             BGE.N    ??choose_PD_26
   2313             {
   2314               if(dijihang<=21)
   \   000002E0   0xF8DF 0x0458      LDR.W    R0,??choose_PD_2+0x4
   \   000002E4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002E8   0x2816             CMP      R0,#+22
   \   000002EA   0xDA04             BGE.N    ??choose_PD_27
   2315                position_diff=(middle-head); 
   \   000002EC   0x1BB8             SUBS     R0,R7,R6
   \   000002EE   0xF8DF 0x1B40      LDR.W    R1,??choose_PD_28
   \   000002F2   0x8008             STRH     R0,[R1, #+0]
   \   000002F4   0xE012             B.N      ??choose_PD_29
   2316               else
   2317                 position_diff=middle-head;
   \                     ??choose_PD_27:
   \   000002F6   0x1BB8             SUBS     R0,R7,R6
   \   000002F8   0xF8DF 0x1B34      LDR.W    R1,??choose_PD_28
   \   000002FC   0x8008             STRH     R0,[R1, #+0]
   \   000002FE   0xE00D             B.N      ??choose_PD_29
   2318             }
   2319              else
   2320               position_diff=position[line_end]-position[line_head];
   \                     ??choose_PD_26:
   \   00000300   0xB21B             SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
   \   00000302   0xF8DF 0x0434      LDR.W    R0,??choose_PD_2
   \   00000306   0xF850 0x0023      LDR      R0,[R0, R3, LSL #+2]
   \   0000030A   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000030C   0xF8DF 0x1428      LDR.W    R1,??choose_PD_2
   \   00000310   0xF851 0x1022      LDR      R1,[R1, R2, LSL #+2]
   \   00000314   0x1A40             SUBS     R0,R0,R1
   \   00000316   0xF8DF 0x1B18      LDR.W    R1,??choose_PD_28
   \   0000031A   0x8008             STRH     R0,[R1, #+0]
   2321                
   2322            
   2323              //position_now_low_P=stages_low_P(position_now_low,video_Middle);
   2324              position_now_P=stages_P(position_now,video_Middle);
   \                     ??choose_PD_29:
   \   0000031C   0x2101             MOVS     R1,#+1
   \   0000031E   0xF8DF 0x0468      LDR.W    R0,??choose_PD_2+0x50
   \   00000322   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000326   0x.... 0x....      BL       stages_P
   \   0000032A   0x0005             MOVS     R5,R0
   2325              position_now_D=stages_D(position_diff);
   \   0000032C   0xF8DF 0x0B00      LDR.W    R0,??choose_PD_28
   \   00000330   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000334   0x.... 0x....      BL       stages_D
   2326            switch(position_now_P)
   \   00000338   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000033A   0x2D00             CMP      R5,#+0
   \   0000033C   0xD010             BEQ.N    ??choose_PD_30
   \   0000033E   0x2D02             CMP      R5,#+2
   \   00000340   0xF000 0x867C      BEQ.W    ??choose_PD_31
   \   00000344   0xF0C0 0x87DF      BCC.W    ??choose_PD_32
   \   00000348   0x2D04             CMP      R5,#+4
   \   0000034A   0xF000 0x8408      BEQ.W    ??choose_PD_33
   \   0000034E   0xF0C0 0x851E      BCC.W    ??choose_PD_34
   \   00000352   0x2D06             CMP      R5,#+6
   \   00000354   0xF000 0x812F      BEQ.W    ??choose_PD_35
   \   00000358   0xF0C0 0x8294      BCC.W    ??choose_PD_36
   \   0000035C   0xF001 0xB93E      B.W      ??choose_PD_37
   2327            {
   2328            case -6:
   2329              {
   2330                switch(position_now_D)
   2331                {
   2332               case -6:
   2333                  {
   2334                    switch(track_form)
   2335                    {
   2336                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2337                    case 1:Servo.P+=4;Servo.D+=2;break;
   2338                    case 2:Servo.P+=3;Servo.D+=1;break;
   2339                    case 3:Servo.P+=2;Servo.D+=0;break;
   2340                    }
   2341                  }break;
   2342                case -5:
   2343                  {
   2344                    switch(track_form)
   2345                    {
   2346                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2347                    case 1:Servo.P+=4;Servo.D+=1;break;
   2348                    case 2:Servo.P+=3;Servo.D+=0;break;
   2349                    case 3:Servo.P+=2;Servo.D-=1;break;
   2350                    }
   2351                  }break;
   2352                case -4:
   2353                  {
   2354                    switch(track_form)
   2355                    {
   2356                      case 1:Servo.P+=4;Servo.D+=0;break;
   2357                      case 2:Servo.P+=3;Servo.D-=1;break;
   2358                      case 3:Servo.P+=2;Servo.D-=2;break;
   2359                    }
   2360                  }break;
   2361                case -3:
   2362                  {
   2363                    switch(track_form)
   2364                    {
   2365                    case 1:Servo.P+=4;Servo.D-=1;break;
   2366                    case 2:Servo.P+=3;Servo.D-=2;break;
   2367                    case 3:Servo.P+=2;Servo.D-=3;break;
   2368                    }
   2369                  }break;
   2370                case -2:
   2371                  {
   2372                    switch(track_form)
   2373                    {
   2374                    case 1:Servo.P+=4;Servo.D-=2;break;
   2375                    case 2:Servo.P+=3;Servo.D-=3;break;
   2376                    case 3:Servo.P+=2;Servo.D-=4;break;
   2377                    }
   2378                  }break;
   2379                case -1:
   2380                  {
   2381                    switch(track_form)
   2382                    {
   2383                    case 1:Servo.P+=4;Servo.D-=3;break;
   2384                    case 2:Servo.P+=3;Servo.D-=4;break;
   2385                    case 3:Servo.P+=2;Servo.D-=5;break;
   2386                    }
   2387                  }break;
   2388                case 0:
   2389                   {
   2390                    switch(track_form)
   2391                    {
   2392                    case 1:Servo.P+=4;break;
   2393                    case 2:Servo.P+=3;break;
   2394                    case 3:Servo.P+=2;break;
   2395                    }
   2396                  }break;
   2397                case 6:
   2398                  {
   2399                    switch(track_form)
   2400                    {
   2401                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2402                    case 1:Servo.P+=4;Servo.D+=2;break;
   2403                    case 2:Servo.P+=3;Servo.D+=1;break;
   2404                    case 3:Servo.P+=2;Servo.D+=0;break;
   2405                    }
   2406                  }break;
   2407                case 5:
   2408                  {
   2409                    switch(track_form)
   2410                    {
   2411                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2412                    case 1:Servo.P+=4;Servo.D+=1;break;
   2413                    case 2:Servo.P+=3;Servo.D+=0;break;
   2414                    case 3:Servo.P+=2;Servo.D-=1;break;
   2415                    }
   2416                  }break;
   2417                case 4:
   2418                  {
   2419                    switch(track_form)
   2420                    {
   2421                      case 1:Servo.P+=4;Servo.D+=0;break;
   2422                      case 2:Servo.P+=3;Servo.D-=1;break;
   2423                      case 3:Servo.P+=2;Servo.D-=2;break;
   2424                    }
   2425                  }break;
   2426                case 3:
   2427                  {
   2428                    switch(track_form)
   2429                    {
   2430                    case 1:Servo.P+=4;Servo.D-=1;break;
   2431                    case 2:Servo.P+=3;Servo.D-=2;break;
   2432                    case 3:Servo.P+=2;Servo.D-=3;break;
   2433                    }
   2434                  }break;
   2435                case 2:
   2436                  {
   2437                    switch(track_form)
   2438                    {
   2439                    case 1:Servo.P+=4;Servo.D-=2;break;
   2440                    case 2:Servo.P+=3;Servo.D-=3;break;
   2441                    case 3:Servo.P+=2;Servo.D-=4;break;
   2442                    }
   2443                  }break;
   2444                case 1:
   2445                  {
   2446                    switch(track_form)
   2447                    {
   2448                    case 1:Servo.P+=4;Servo.D-=3;break;
   2449                    case 2:Servo.P+=3;Servo.D-=4;break;
   2450                    case 3:Servo.P+=2;Servo.D-=5;break;
   2451                    }
   2452                  }break;
   2453                }
   2454              }break;
   2455            case -5:
   2456              {
   2457                switch(position_now_D)
   2458                {
   2459                case -6:
   2460                  {
   2461                    switch(track_form)
   2462                    {
   2463                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2464                    case 1:Servo.P+=3;Servo.D+=2;break;
   2465                    case 2:Servo.P+=2;Servo.D+=1;break;
   2466                    case 3:Servo.P+=1;Servo.D+=0;break;
   2467                    }
   2468                  }break;
   2469                case -5:
   2470                  {
   2471                    switch(track_form)
   2472                    {
   2473                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2474                    case 1:Servo.P+=3;Servo.D+=1;break;
   2475                    case 2:Servo.P+=2;Servo.D+=0;break;
   2476                    case 3:Servo.P+=1;Servo.D-=1;break;
   2477                    }
   2478                  }break;
   2479                case -4:
   2480                  {
   2481                    switch(track_form)
   2482                    {
   2483                      case 1:Servo.P+=3;Servo.D+=0;break;
   2484                      case 2:Servo.P+=2;Servo.D-=1;break;
   2485                      case 3:Servo.P+=1;Servo.D-=2;break;
   2486                    }
   2487                  }break;
   2488                case -3:
   2489                  {
   2490                    switch(track_form)
   2491                    {
   2492                    case 1:Servo.P+=3;Servo.D-=1;break;
   2493                    case 2:Servo.P+=2;Servo.D-=2;break;
   2494                    case 3:Servo.P+=1;Servo.D-=3;break;
   2495                    }
   2496                  }break;
   2497                case -2:
   2498                  {
   2499                    switch(track_form)
   2500                    {
   2501                    case 1:Servo.P+=3;Servo.D-=2;break;
   2502                    case 2:Servo.P+=2;Servo.D-=3;break;
   2503                    case 3:Servo.P+=1;Servo.D-=4;break;
   2504                    }
   2505                  }break;
   2506                case -1:
   2507                  {
   2508                    switch(track_form)
   2509                    {
   2510                    case 1:Servo.P+=3;Servo.D-=3;break;
   2511                    case 2:Servo.P+=2;Servo.D-=4;break;
   2512                    case 3:Servo.P+=1;Servo.D-=5;break;
   2513                    }
   2514                  }break;
   2515                case 0:
   2516                   {
   2517                    switch(track_form)
   2518                    {
   2519                    case 1:Servo.P+=3;break;
   2520                    case 2:Servo.P+=2;break;
   2521                    case 3:Servo.P+=1;break;
   2522                    }
   2523                  }break;
   2524                case 6:
   2525                  {
   2526                    switch(track_form)
   2527                    {
   2528                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2529                    case 1:Servo.P+=3;Servo.D+=2;break;
   2530                    case 2:Servo.P+=2;Servo.D+=1;break;
   2531                    case 3:Servo.P+=1;Servo.D+=0;break;
   2532                    }
   2533                  }break;
   2534                case 5:
   2535                  {
   2536                    switch(track_form)
   2537                    {
   2538                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2539                    case 1:Servo.P+=3;Servo.D+=1;break;
   2540                    case 2:Servo.P+=2;Servo.D+=0;break;
   2541                    case 3:Servo.P+=1;Servo.D-=1;break;
   2542                    }
   2543                  }break;
   2544                case 4:
   2545                  {
   2546                    switch(track_form)
   2547                    {
   2548                      case 1:Servo.P+=3;Servo.D+=0;break;
   2549                      case 2:Servo.P+=2;Servo.D-=1;break;
   2550                      case 3:Servo.P+=1;Servo.D-=2;break;
   2551                    }
   2552                  }break;
   2553                case 3:
   2554                  {
   2555                    switch(track_form)
   2556                    {
   2557                    case 1:Servo.P+=3;Servo.D-=1;break;
   2558                    case 2:Servo.P+=2;Servo.D-=2;break;
   2559                    case 3:Servo.P+=1;Servo.D-=3;break;
   2560                    }
   2561                  }break;
   2562                case 2:
   2563                  {
   2564                    switch(track_form)
   2565                    {
   2566                    case 1:Servo.P+=3;Servo.D-=2;break;
   2567                    case 2:Servo.P+=2;Servo.D-=3;break;
   2568                    case 3:Servo.P+=1;Servo.D-=4;break;
   2569                    }
   2570                  }break;
   2571                case 1:
   2572                  {
   2573                    switch(track_form)
   2574                    {
   2575                    case 1:Servo.P+=3;Servo.D-=3;break;
   2576                    case 2:Servo.P+=2;Servo.D-=4;break;
   2577                    case 3:Servo.P+=1;Servo.D-=5;break;
   2578                    }
   2579                  }break;
   2580                }
   2581              }break;
   2582            case -4:
   2583              {
   2584                switch(position_now_D)
   2585                {
   2586                   case -6:
   2587                  {
   2588                    switch(track_form)
   2589                    {
   2590                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2591                    case 1:Servo.P+=2;Servo.D+=2;break;
   2592                    case 2:Servo.P+=1;Servo.D+=1;break;
   2593                    case 3:Servo.P+=0;Servo.D+=0;break;
   2594                    }
   2595                  }break;
   2596                case -5:
   2597                  {
   2598                    switch(track_form)
   2599                    {
   2600                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2601                    case 1:Servo.P+=2;Servo.D+=1;break;
   2602                    case 2:Servo.P+=1;Servo.D+=0;break;
   2603                    case 3:Servo.P+=0;Servo.D-=1;break;
   2604                    }
   2605                  }break;
   2606                case -4:
   2607                  {
   2608                    switch(track_form)
   2609                    {
   2610                      case 1:Servo.P+=2;Servo.D+=0;break;
   2611                      case 2:Servo.P+=1;Servo.D-=1;break;
   2612                      case 3:Servo.P+=0;Servo.D-=2;break;
   2613                    }
   2614                  }break;
   2615                case -3:
   2616                  {
   2617                    switch(track_form)
   2618                    {
   2619                    case 1:Servo.P+=2;Servo.D-=1;break;
   2620                    case 2:Servo.P+=1;Servo.D-=2;break;
   2621                    case 3:Servo.P+=0;Servo.D-=3;break;
   2622                    }
   2623                  }break;
   2624                case -2:
   2625                  {
   2626                    switch(track_form)
   2627                    {
   2628                    case 1:Servo.P+=2;Servo.D-=2;break;
   2629                    case 2:Servo.P+=1;Servo.D-=3;break;
   2630                    case 3:Servo.P+=0;Servo.D-=4;break;
   2631                    }
   2632                  }break;
   2633                case -1:
   2634                  {
   2635                    switch(track_form)
   2636                    {
   2637                    case 1:Servo.P+=2;Servo.D-=3;break;
   2638                    case 2:Servo.P+=1;Servo.D-=4;break;
   2639                    case 3:Servo.P+=0;Servo.D-=5;break;
   2640                    }
   2641                  }break;
   2642                case 0:
   2643                   {
   2644                    switch(track_form)
   2645                    {
   2646                    case 1:Servo.P+=2;break;
   2647                    case 2:Servo.P+=1;break;
   2648                    case 3:Servo.P+=0;break;
   2649                    }
   2650                  }break;
   2651                case 6:
   2652                  {
   2653                    switch(track_form)
   2654                    {
   2655                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2656                    case 1:Servo.P+=2;Servo.D+=2;break;
   2657                    case 2:Servo.P+=1;Servo.D+=1;break;
   2658                    case 3:Servo.P+=0;Servo.D+=0;break;
   2659                    }
   2660                  }break;
   2661                case 5:
   2662                  {
   2663                    switch(track_form)
   2664                    {
   2665                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2666                    case 1:Servo.P+=2;Servo.D+=1;break;
   2667                    case 2:Servo.P+=1;Servo.D+=0;break;
   2668                    case 3:Servo.P+=0;Servo.D-=1;break;
   2669                    }
   2670                  }break;
   2671                case 4:
   2672                  {
   2673                    switch(track_form)
   2674                    {
   2675                      case 1:Servo.P+=2;Servo.D+=0;break;
   2676                      case 2:Servo.P+=1;Servo.D-=1;break;
   2677                      case 3:Servo.P+=0;Servo.D-=2;break;
   2678                    }
   2679                  }break;
   2680                case 3:
   2681                  {
   2682                    switch(track_form)
   2683                    {
   2684                    case 1:Servo.P+=2;Servo.D-=1;break;
   2685                    case 2:Servo.P+=1;Servo.D-=2;break;
   2686                    case 3:Servo.P+=0;Servo.D-=3;break;
   2687                    }
   2688                  }break;
   2689                case 2:
   2690                  {
   2691                    switch(track_form)
   2692                    {
   2693                    case 1:Servo.P+=2;Servo.D-=2;break;
   2694                    case 2:Servo.P+=1;Servo.D-=3;break;
   2695                    case 3:Servo.P+=0;Servo.D-=4;break;
   2696                    }
   2697                  }break;
   2698                case 1:
   2699                  {
   2700                    switch(track_form)
   2701                    {
   2702                    case 1:Servo.P+=2;Servo.D-=3;break;
   2703                    case 2:Servo.P+=1;Servo.D-=4;break;
   2704                    case 3:Servo.P+=0;Servo.D-=5;break;
   2705                    }
   2706                  }break;
   2707                }
   2708              }break;
   2709           case -3:
   2710              {
   2711                switch(position_now_D)
   2712                {
   2713             case -6:
   2714                  {
   2715                    switch(track_form)
   2716                    {
   2717                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2718                    case 1:Servo.P+=1;Servo.D+=2;break;
   2719                    case 2:Servo.P+=0;Servo.D+=1;break;
   2720                    case 3:Servo.P-=1;Servo.D+=0;break;
   2721                    }
   2722                  }break;
   2723                case -5:
   2724                  {
   2725                    switch(track_form)
   2726                    {
   2727                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2728                    case 1:Servo.P+=1;Servo.D+=1;break;
   2729                    case 2:Servo.P+=0;Servo.D+=0;break;
   2730                    case 3:Servo.P-=1;Servo.D-=1;break;
   2731                    }
   2732                  }break;
   2733                case -4:
   2734                  {
   2735                    switch(track_form)
   2736                    {
   2737                      case 1:Servo.P+=1;Servo.D+=0;break;
   2738                      case 2:Servo.P+=0;Servo.D-=1;break;
   2739                      case 3:Servo.P-=1;Servo.D-=2;break;
   2740                    }
   2741                  }break;
   2742                case -3:
   2743                  {
   2744                    switch(track_form)
   2745                    {
   2746                    case 1:Servo.P+=1;Servo.D-=1;break;
   2747                    case 2:Servo.P+=0;Servo.D-=2;break;
   2748                    case 3:Servo.P-=1;Servo.D-=3;break;
   2749                    }
   2750                  }break;
   2751                case -2:
   2752                  {
   2753                    switch(track_form)
   2754                    {
   2755                    case 1:Servo.P+=1;Servo.D-=2;break;
   2756                    case 2:Servo.P+=0;Servo.D-=3;break;
   2757                    case 3:Servo.P-=1;Servo.D-=4;break;
   2758                    }
   2759                  }break;
   2760                case -1:
   2761                  {
   2762                    switch(track_form)
   2763                    {
   2764                    case 1:Servo.P+=1;Servo.D-=3;break;
   2765                    case 2:Servo.P+=0;Servo.D-=4;break;
   2766                    case 3:Servo.P-=1;Servo.D-=5;break;
   2767                    }
   2768                  }break;
   2769                case 0:
   2770                   {
   2771                    switch(track_form)
   2772                    {
   2773                    case 1:Servo.P+=1;break;
   2774                    case 2:Servo.P+=0;break;
   2775                    case 3:Servo.P-=1;break;
   2776                    }
   2777                  }break;
   2778                case 6:
   2779                  {
   2780                    switch(track_form)
   2781                    {
   2782                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2783                    case 1:Servo.P+=1;Servo.D+=2;break;
   2784                    case 2:Servo.P+=0;Servo.D+=1;break;
   2785                    case 3:Servo.P-=1;Servo.D+=0;break;
   2786                    }
   2787                  }break;
   2788                case 5:
   2789                  {
   2790                    switch(track_form)
   2791                    {
   2792                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2793                    case 1:Servo.P+=1;Servo.D+=1;break;
   2794                    case 2:Servo.P+=0;Servo.D+=0;break;
   2795                    case 3:Servo.P-=1;Servo.D-=1;break;
   2796                    }
   2797                  }break;
   2798                case 4:
   2799                  {
   2800                    switch(track_form)
   2801                    {
   2802                      case 1:Servo.P+=1;Servo.D+=0;break;
   2803                      case 2:Servo.P+=0;Servo.D-=1;break;
   2804                      case 3:Servo.P-=1;Servo.D-=2;break;
   2805                    }
   2806                  }break;
   2807                case 3:
   2808                  {
   2809                    switch(track_form)
   2810                    {
   2811                    case 1:Servo.P+=1;Servo.D-=1;break;
   2812                    case 2:Servo.P+=0;Servo.D-=2;break;
   2813                    case 3:Servo.P-=1;Servo.D-=3;break;
   2814                    }
   2815                  }break;
   2816                case 2:
   2817                  {
   2818                    switch(track_form)
   2819                    {
   2820                    case 1:Servo.P+=1;Servo.D-=2;break;
   2821                    case 2:Servo.P+=0;Servo.D-=3;break;
   2822                    case 3:Servo.P-=1;Servo.D-=4;break;
   2823                    }
   2824                  }break;
   2825                case 1:
   2826                  {
   2827                    switch(track_form)
   2828                    {
   2829                    case 1:Servo.P+=1;Servo.D-=3;break;
   2830                    case 2:Servo.P+=0;Servo.D-=4;break;
   2831                    case 3:Servo.P-=1;Servo.D-=5;break;
   2832                    }
   2833                  }break;
   2834                }
   2835              }break;
   2836           case -2:
   2837              {
   2838                switch(position_now_D)
   2839                {
   2840               case -6:
   2841                  {
   2842                    switch(track_form)
   2843                    {
   2844                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2845                    case 1:Servo.P+=0;Servo.D+=2;break;
   2846                    case 2:Servo.P-=1;Servo.D+=1;break;
   2847                    case 3:Servo.P-=2;Servo.D+=0;break;
   2848                    }
   2849                  }break;
   2850                case -5:
   2851                  {
   2852                    switch(track_form)
   2853                    {
   2854                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2855                    case 1:Servo.P+=0;Servo.D+=1;break;
   2856                    case 2:Servo.P-=1;Servo.D+=0;break;
   2857                    case 3:Servo.P-=2;Servo.D-=1;break;
   2858                    }
   2859                  }break;
   2860                case -4:
   2861                  {
   2862                    switch(track_form)
   2863                    {
   2864                      case 1:Servo.P+=0;Servo.D+=0;break;
   2865                      case 2:Servo.P-=1;Servo.D-=1;break;
   2866                      case 3:Servo.P-=2;Servo.D-=2;break;
   2867                    }
   2868                  }break;
   2869                case -3:
   2870                  {
   2871                    switch(track_form)
   2872                    {
   2873                    case 1:Servo.P+=0;Servo.D-=1;break;
   2874                    case 2:Servo.P-=1;Servo.D-=2;break;
   2875                    case 3:Servo.P-=2;Servo.D-=3;break;
   2876                    }
   2877                  }break;
   2878                case -2:
   2879                  {
   2880                    switch(track_form)
   2881                    {
   2882                    case 1:Servo.P+=0;Servo.D-=2;break;
   2883                    case 2:Servo.P-=1;Servo.D-=3;break;
   2884                    case 3:Servo.P-=2;Servo.D-=4;break;
   2885                    }
   2886                  }break;
   2887                case -1:
   2888                  {
   2889                    switch(track_form)
   2890                    {
   2891                    case 1:Servo.P+=0;Servo.D-=3;break;
   2892                    case 2:Servo.P-=1;Servo.D-=4;break;
   2893                    case 3:Servo.P-=2;Servo.D-=5;break;
   2894                    }
   2895                  }break;      
   2896                case 0:
   2897                   {
   2898                    switch(track_form)
   2899                    {
   2900                    case 1:Servo.P+=0;break;
   2901                    case 2:Servo.P-=1;break;
   2902                    case 3:Servo.P-=2;break;
   2903                    }
   2904                  }break;
   2905                case 6:
   2906                  {
   2907                    switch(track_form)
   2908                    {
   2909                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2910                    case 1:Servo.P+=0;Servo.D+=2;break;
   2911                    case 2:Servo.P-=1;Servo.D+=1;break;
   2912                    case 3:Servo.P-=2;Servo.D+=0;break;
   2913                    }
   2914                  }break;
   2915                case 5:
   2916                  {
   2917                    switch(track_form)
   2918                    {
   2919                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2920                    case 1:Servo.P+=0;Servo.D+=1;break;
   2921                    case 2:Servo.P-=1;Servo.D+=0;break;
   2922                    case 3:Servo.P-=2;Servo.D-=1;break;
   2923                    }
   2924                  }break;
   2925                case 4:
   2926                  {
   2927                    switch(track_form)
   2928                    {
   2929                      case 1:Servo.P+=0;Servo.D+=0;break;
   2930                      case 2:Servo.P-=1;Servo.D-=1;break;
   2931                      case 3:Servo.P-=2;Servo.D-=2;break;
   2932                    }
   2933                  }break;
   2934                case 3:
   2935                  {
   2936                    switch(track_form)
   2937                    {
   2938                    case 1:Servo.P+=0;Servo.D-=1;break;
   2939                    case 2:Servo.P-=1;Servo.D-=2;break;
   2940                    case 3:Servo.P-=2;Servo.D-=3;break;
   2941                    }
   2942                  }break;
   2943                case 2:
   2944                  {
   2945                    switch(track_form)
   2946                    {
   2947                    case 1:Servo.P+=0;Servo.D-=2;break;
   2948                    case 2:Servo.P-=1;Servo.D-=3;break;
   2949                    case 3:Servo.P-=2;Servo.D-=4;break;
   2950                    }
   2951                  }break;
   2952                case 1:
   2953                  {
   2954                    switch(track_form)
   2955                    {
   2956                    case 1:Servo.P+=0;Servo.D-=3;break;
   2957                    case 2:Servo.P-=1;Servo.D-=4;break;
   2958                    case 3:Servo.P-=2;Servo.D-=5;break;
   2959                    }
   2960                  }break;
   2961                }
   2962              }break;
   2963          case -1:
   2964              {
   2965                switch(position_now_D)
   2966                {
   2967                 case -6:
   2968                  {
   2969                    switch(track_form)
   2970                    {
   2971                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   2972                    case 1:Servo.P-=1;Servo.D+=2;break;
   2973                    case 2:Servo.P-=2;Servo.D+=1;break;
   2974                    case 3:Servo.P-=3;Servo.D+=0;break;
   2975                    }
   2976                  }break;
   2977                case -5:
   2978                  {
   2979                    switch(track_form)
   2980                    {
   2981                      //case 1:Servo.P+=5;Servo.D+=1;break;
   2982                    case 1:Servo.P-=1;Servo.D+=1;break;
   2983                    case 2:Servo.P-=2;Servo.D+=0;break;
   2984                    case 3:Servo.P-=3;Servo.D-=1;break;
   2985                    }
   2986                  }break;
   2987                case -4:
   2988                  {
   2989                    switch(track_form)
   2990                    {
   2991                      case 1:Servo.P-=1;Servo.D+=0;break;
   2992                      case 2:Servo.P-=2;Servo.D-=1;break;
   2993                      case 3:Servo.P-=3;Servo.D-=2;break;
   2994                    }
   2995                  }break;
   2996                case -3:
   2997                  {
   2998                    switch(track_form)
   2999                    {
   3000                    case 1:Servo.P-=1;Servo.D-=1;break;
   3001                    case 2:Servo.P-=2;Servo.D-=2;break;
   3002                    case 3:Servo.P-=3;Servo.D-=3;break;
   3003                    }
   3004                  }break;
   3005                case -2:
   3006                  {
   3007                    switch(track_form)
   3008                    {
   3009                    case 1:Servo.P-=1;Servo.D-=2;break;
   3010                    case 2:Servo.P-=2;Servo.D-=3;break;
   3011                    case 3:Servo.P-=3;Servo.D-=4;break;
   3012                    }
   3013                  }break;
   3014                case -1:
   3015                  {
   3016                    switch(track_form)
   3017                    {
   3018                    case 1:Servo.P-=1;Servo.D-=3;break;
   3019                    case 2:Servo.P-=2;Servo.D-=4;break;
   3020                    case 3:Servo.P-=3;Servo.D-=5;break;
   3021                    }
   3022                  }break;
   3023                case 0:
   3024                   {
   3025                    switch(track_form)
   3026                    {
   3027                    case 1:Servo.P-=1;break;
   3028                    case 2:Servo.P-=2;break;
   3029                    case 3:Servo.P-=3;break;
   3030                    }
   3031                  }break;
   3032                case 6:
   3033                  {
   3034                    switch(track_form)
   3035                    {
   3036                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3037                    case 1:Servo.P-=1;Servo.D+=2;break;
   3038                    case 2:Servo.P-=2;Servo.D+=1;break;
   3039                    case 3:Servo.P-=3;Servo.D+=0;break;
   3040                    }
   3041                  }break;
   3042                case 5:
   3043                  {
   3044                    switch(track_form)
   3045                    {
   3046                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3047                    case 1:Servo.P-=1;Servo.D+=1;break;
   3048                    case 2:Servo.P-=2;Servo.D+=0;break;
   3049                    case 3:Servo.P-=3;Servo.D-=1;break;
   3050                    }
   3051                  }break;
   3052                case 4:
   3053                  {
   3054                    switch(track_form)
   3055                    {
   3056                      case 1:Servo.P-=1;Servo.D+=0;break;
   3057                      case 2:Servo.P-=2;Servo.D-=1;break;
   3058                      case 3:Servo.P-=3;Servo.D-=2;break;
   3059                    }
   3060                  }break;
   3061                case 3:
   3062                  {
   3063                    switch(track_form)
   3064                    {
   3065                    case 1:Servo.P-=1;Servo.D-=1;break;
   3066                    case 2:Servo.P-=2;Servo.D-=2;break;
   3067                    case 3:Servo.P-=3;Servo.D-=3;break;
   3068                    }
   3069                  }break;
   3070                case 2:
   3071                  {
   3072                    switch(track_form)
   3073                    {
   3074                    case 1:Servo.P-=1;Servo.D-=2;break;
   3075                    case 2:Servo.P-=2;Servo.D-=3;break;
   3076                    case 3:Servo.P-=3;Servo.D-=4;break;
   3077                    }
   3078                  }break;
   3079                case 1:
   3080                  {
   3081                    switch(track_form)
   3082                    {
   3083                    case 1:Servo.P-=1;Servo.D-=3;break;
   3084                    case 2:Servo.P-=2;Servo.D-=4;break;
   3085                    case 3:Servo.P-=3;Servo.D-=5;break;
   3086                    }
   3087                  }break;
   3088                }
   3089              }break;
   3090            case 0:
   3091              {
   3092                switch(position_now_D)
   \                     ??choose_PD_30:
   \   00000360   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000362   0x2800             CMP      R0,#+0
   \   00000364   0xD00D             BEQ.N    ??choose_PD_38
   \   00000366   0x2802             CMP      R0,#+2
   \   00000368   0xF000 0x80D8      BEQ.W    ??choose_PD_39
   \   0000036C   0xF0C0 0x80FC      BCC.W    ??choose_PD_40
   \   00000370   0x2804             CMP      R0,#+4
   \   00000372   0xF000 0x8085      BEQ.W    ??choose_PD_41
   \   00000376   0xF0C0 0x80AB      BCC.W    ??choose_PD_42
   \   0000037A   0x2806             CMP      R0,#+6
   \   0000037C   0xD01E             BEQ.N    ??choose_PD_43
   \   0000037E   0xD34E             BCC.N    ??choose_PD_44
   \   00000380   0xE117             B.N      ??choose_PD_45
   3093                {
   3094                case -6:
   3095                  {
   3096                    switch(track_form)
   3097                    {
   3098                    case 1:Servo.P+=0;Servo.D+=2;break;//p=0,d=6
   3099                    case 2:Servo.P+=0;Servo.D+=1;break;
   3100                    case 3:Servo.P+=0;Servo.D+=0;break;
   3101                    }
   3102                  }break;
   3103                case -5:
   3104                  {
   3105                    switch(track_form)
   3106                    {
   3107                    case 1:Servo.P+=0;Servo.D+=1;break;//0,5
   3108                    case 2:Servo.P+=0;Servo.D+=0;break;
   3109                    case 3:Servo.P+=0;Servo.D-=1;break; 
   3110                    }
   3111                  }break;
   3112                case -4:
   3113                  {
   3114                    switch(track_form)
   3115                    {
   3116                    case 1:Servo.P+=0;Servo.D+=0;break;//4
   3117                    case 2:Servo.P+=0;Servo.D-=1;break;
   3118                    case 3:Servo.P+=0;Servo.D-=2;break;
   3119                    }
   3120                  }break;
   3121                case -3:
   3122                  {
   3123                    switch(track_form)
   3124                    {
   3125                    case 1:Servo.P+=0;Servo.D-=1;break;//3
   3126                    case 2:Servo.P+=0;Servo.D-=2;break;
   3127                    case 3:Servo.P+=0;Servo.D-=3;break;
   3128                    }
   3129                  }break;
   3130                case -2:
   3131                  {
   3132                    switch(track_form)
   3133                    {
   3134                    case 1:Servo.P+=0;Servo.D-=2;break;//2
   3135                    case 2:Servo.P+=0;Servo.D-=3;break;
   3136                    case 3:Servo.P+=0;Servo.D-=4;break;
   3137                    }
   3138                  }break;
   3139                case -1:
   3140                  {
   3141                    switch(track_form)
   3142                    {
   3143                    case 1:Servo.P+=0;Servo.D-=3;break;//1
   3144                    case 2:Servo.P+=0;Servo.D-=4;break;
   3145                    case 3:Servo.P+=0;Servo.D-=5;break;
   3146                    }
   3147                  }break;
   3148                case 0:
   3149                   {
   3150                    switch(track_form)
   \                     ??choose_PD_38:
   \   00000382   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000384   0x2C01             CMP      R4,#+1
   \   00000386   0xD004             BEQ.N    ??choose_PD_46
   \   00000388   0xD317             BCC.N    ??choose_PD_47
   \   0000038A   0x2C03             CMP      R4,#+3
   \   0000038C   0xD00F             BEQ.N    ??choose_PD_48
   \   0000038E   0xD307             BCC.N    ??choose_PD_49
   \   00000390   0xE013             B.N      ??choose_PD_47
   3151                    {
   3152                    case 1:Servo.P+=0;break;
   \                     ??choose_PD_46:
   \   00000392   0xF8DF 0x03AC      LDR.W    R0,??choose_PD_2+0x8
   \   00000396   0xF8DF 0x13A8      LDR.W    R1,??choose_PD_2+0x8
   \   0000039A   0x8809             LDRH     R1,[R1, #+0]
   \   0000039C   0x8001             STRH     R1,[R0, #+0]
   \   0000039E   0xE00C             B.N      ??choose_PD_47
   3153                    case 2:Servo.P+=0;break;
   \                     ??choose_PD_49:
   \   000003A0   0xF8DF 0x039C      LDR.W    R0,??choose_PD_2+0x8
   \   000003A4   0xF8DF 0x1398      LDR.W    R1,??choose_PD_2+0x8
   \   000003A8   0x8809             LDRH     R1,[R1, #+0]
   \   000003AA   0x8001             STRH     R1,[R0, #+0]
   \   000003AC   0xE005             B.N      ??choose_PD_47
   3154                    case 3:Servo.P+=0;break;
   \                     ??choose_PD_48:
   \   000003AE   0xF8DF 0x0390      LDR.W    R0,??choose_PD_2+0x8
   \   000003B2   0xF8DF 0x138C      LDR.W    R1,??choose_PD_2+0x8
   \   000003B6   0x8809             LDRH     R1,[R1, #+0]
   \   000003B8   0x8001             STRH     R1,[R0, #+0]
   3155                    }
   3156                  }break;
   \                     ??choose_PD_47:
   \   000003BA   0xE0FA             B.N      ??choose_PD_45
   3157                case 6:
   3158                  {
   3159                    switch(track_form)
   \                     ??choose_PD_43:
   \   000003BC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000003BE   0x2C01             CMP      R4,#+1
   \   000003C0   0xD004             BEQ.N    ??choose_PD_50
   \   000003C2   0xD32B             BCC.N    ??choose_PD_51
   \   000003C4   0x2C03             CMP      R4,#+3
   \   000003C6   0xD01D             BEQ.N    ??choose_PD_52
   \   000003C8   0xD30E             BCC.N    ??choose_PD_53
   \   000003CA   0xE027             B.N      ??choose_PD_51
   3160                    {
   3161                    case 1:Servo.P+=0;Servo.D+=2;break;//p=0,d=6
   \                     ??choose_PD_50:
   \   000003CC   0xF8DF 0x0370      LDR.W    R0,??choose_PD_2+0x8
   \   000003D0   0xF8DF 0x136C      LDR.W    R1,??choose_PD_2+0x8
   \   000003D4   0x8809             LDRH     R1,[R1, #+0]
   \   000003D6   0x8001             STRH     R1,[R0, #+0]
   \   000003D8   0xF8DF 0x0364      LDR.W    R0,??choose_PD_2+0x8
   \   000003DC   0x8880             LDRH     R0,[R0, #+4]
   \   000003DE   0x1C80             ADDS     R0,R0,#+2
   \   000003E0   0xF8DF 0x135C      LDR.W    R1,??choose_PD_2+0x8
   \   000003E4   0x8088             STRH     R0,[R1, #+4]
   \   000003E6   0xE019             B.N      ??choose_PD_51
   3162                    case 2:Servo.P+=0;Servo.D+=1;break;
   \                     ??choose_PD_53:
   \   000003E8   0xF8DF 0x0354      LDR.W    R0,??choose_PD_2+0x8
   \   000003EC   0xF8DF 0x1350      LDR.W    R1,??choose_PD_2+0x8
   \   000003F0   0x8809             LDRH     R1,[R1, #+0]
   \   000003F2   0x8001             STRH     R1,[R0, #+0]
   \   000003F4   0xF8DF 0x0348      LDR.W    R0,??choose_PD_2+0x8
   \   000003F8   0x8880             LDRH     R0,[R0, #+4]
   \   000003FA   0x1C40             ADDS     R0,R0,#+1
   \   000003FC   0xF8DF 0x1340      LDR.W    R1,??choose_PD_2+0x8
   \   00000400   0x8088             STRH     R0,[R1, #+4]
   \   00000402   0xE00B             B.N      ??choose_PD_51
   3163                    case 3:Servo.P+=0;Servo.D+=0;break;
   \                     ??choose_PD_52:
   \   00000404   0xF8DF 0x0338      LDR.W    R0,??choose_PD_2+0x8
   \   00000408   0xF8DF 0x1334      LDR.W    R1,??choose_PD_2+0x8
   \   0000040C   0x8809             LDRH     R1,[R1, #+0]
   \   0000040E   0x8001             STRH     R1,[R0, #+0]
   \   00000410   0xF8DF 0x032C      LDR.W    R0,??choose_PD_2+0x8
   \   00000414   0xF8DF 0x1328      LDR.W    R1,??choose_PD_2+0x8
   \   00000418   0x8889             LDRH     R1,[R1, #+4]
   \   0000041A   0x8081             STRH     R1,[R0, #+4]
   3164                    }
   3165                  }break;
   \                     ??choose_PD_51:
   \   0000041C   0xE0C9             B.N      ??choose_PD_45
   3166                case 5:
   3167                  {
   3168                    switch(track_form)
   \                     ??choose_PD_44:
   \   0000041E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000420   0x2C01             CMP      R4,#+1
   \   00000422   0xD004             BEQ.N    ??choose_PD_54
   \   00000424   0xD32B             BCC.N    ??choose_PD_55
   \   00000426   0x2C03             CMP      R4,#+3
   \   00000428   0xD01C             BEQ.N    ??choose_PD_56
   \   0000042A   0xD30E             BCC.N    ??choose_PD_57
   \   0000042C   0xE027             B.N      ??choose_PD_55
   3169                    {
   3170                    case 1:Servo.P+=0;Servo.D+=1;break;//0,5
   \                     ??choose_PD_54:
   \   0000042E   0xF8DF 0x0310      LDR.W    R0,??choose_PD_2+0x8
   \   00000432   0xF8DF 0x130C      LDR.W    R1,??choose_PD_2+0x8
   \   00000436   0x8809             LDRH     R1,[R1, #+0]
   \   00000438   0x8001             STRH     R1,[R0, #+0]
   \   0000043A   0xF8DF 0x0304      LDR.W    R0,??choose_PD_2+0x8
   \   0000043E   0x8880             LDRH     R0,[R0, #+4]
   \   00000440   0x1C40             ADDS     R0,R0,#+1
   \   00000442   0xF8DF 0x12FC      LDR.W    R1,??choose_PD_2+0x8
   \   00000446   0x8088             STRH     R0,[R1, #+4]
   \   00000448   0xE019             B.N      ??choose_PD_55
   3171                    case 2:Servo.P+=0;Servo.D+=0;break;
   \                     ??choose_PD_57:
   \   0000044A   0xF8DF 0x02F4      LDR.W    R0,??choose_PD_2+0x8
   \   0000044E   0xF8DF 0x12F0      LDR.W    R1,??choose_PD_2+0x8
   \   00000452   0x8809             LDRH     R1,[R1, #+0]
   \   00000454   0x8001             STRH     R1,[R0, #+0]
   \   00000456   0xF8DF 0x02E8      LDR.W    R0,??choose_PD_2+0x8
   \   0000045A   0xF8DF 0x12E4      LDR.W    R1,??choose_PD_2+0x8
   \   0000045E   0x8889             LDRH     R1,[R1, #+4]
   \   00000460   0x8081             STRH     R1,[R0, #+4]
   \   00000462   0xE00C             B.N      ??choose_PD_55
   3172                    case 3:Servo.P+=0;Servo.D-=1;break; 
   \                     ??choose_PD_56:
   \   00000464   0xF8DF 0x02D8      LDR.W    R0,??choose_PD_2+0x8
   \   00000468   0xF8DF 0x12D4      LDR.W    R1,??choose_PD_2+0x8
   \   0000046C   0x8809             LDRH     R1,[R1, #+0]
   \   0000046E   0x8001             STRH     R1,[R0, #+0]
   \   00000470   0xF8DF 0x02CC      LDR.W    R0,??choose_PD_2+0x8
   \   00000474   0x8880             LDRH     R0,[R0, #+4]
   \   00000476   0x1E40             SUBS     R0,R0,#+1
   \   00000478   0xF8DF 0x12C4      LDR.W    R1,??choose_PD_2+0x8
   \   0000047C   0x8088             STRH     R0,[R1, #+4]
   3173                    }
   3174                  }break;
   \                     ??choose_PD_55:
   \   0000047E   0xE098             B.N      ??choose_PD_45
   3175                case 4:
   3176                  {
   3177                    switch(track_form)
   \                     ??choose_PD_41:
   \   00000480   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000482   0x2C01             CMP      R4,#+1
   \   00000484   0xD004             BEQ.N    ??choose_PD_58
   \   00000486   0xD322             BCC.N    ??choose_PD_59
   \   00000488   0x2C03             CMP      R4,#+3
   \   0000048A   0xD017             BEQ.N    ??choose_PD_60
   \   0000048C   0xD30C             BCC.N    ??choose_PD_61
   \   0000048E   0xE01E             B.N      ??choose_PD_59
   3178                    {
   3179                    case 1:Servo.P+=0;Servo.D+=0;break;//4
   \                     ??choose_PD_58:
   \   00000490   0xF8DF 0x02AC      LDR.W    R0,??choose_PD_2+0x8
   \   00000494   0xF8DF 0x12A8      LDR.W    R1,??choose_PD_2+0x8
   \   00000498   0x8809             LDRH     R1,[R1, #+0]
   \   0000049A   0x8001             STRH     R1,[R0, #+0]
   \   0000049C   0xF8DF 0x02A0      LDR.W    R0,??choose_PD_2+0x8
   \   000004A0   0x49A7             LDR.N    R1,??choose_PD_2+0x8
   \   000004A2   0x8889             LDRH     R1,[R1, #+4]
   \   000004A4   0x8081             STRH     R1,[R0, #+4]
   \   000004A6   0xE012             B.N      ??choose_PD_59
   3180                    case 2:Servo.P+=0;Servo.D-=1;break;
   \                     ??choose_PD_61:
   \   000004A8   0x48A5             LDR.N    R0,??choose_PD_2+0x8
   \   000004AA   0x49A5             LDR.N    R1,??choose_PD_2+0x8
   \   000004AC   0x8809             LDRH     R1,[R1, #+0]
   \   000004AE   0x8001             STRH     R1,[R0, #+0]
   \   000004B0   0x48A3             LDR.N    R0,??choose_PD_2+0x8
   \   000004B2   0x8880             LDRH     R0,[R0, #+4]
   \   000004B4   0x1E40             SUBS     R0,R0,#+1
   \   000004B6   0x49A2             LDR.N    R1,??choose_PD_2+0x8
   \   000004B8   0x8088             STRH     R0,[R1, #+4]
   \   000004BA   0xE008             B.N      ??choose_PD_59
   3181                    case 3:Servo.P+=0;Servo.D-=2;break;
   \                     ??choose_PD_60:
   \   000004BC   0x48A0             LDR.N    R0,??choose_PD_2+0x8
   \   000004BE   0x49A0             LDR.N    R1,??choose_PD_2+0x8
   \   000004C0   0x8809             LDRH     R1,[R1, #+0]
   \   000004C2   0x8001             STRH     R1,[R0, #+0]
   \   000004C4   0x489E             LDR.N    R0,??choose_PD_2+0x8
   \   000004C6   0x8880             LDRH     R0,[R0, #+4]
   \   000004C8   0x1E80             SUBS     R0,R0,#+2
   \   000004CA   0x499D             LDR.N    R1,??choose_PD_2+0x8
   \   000004CC   0x8088             STRH     R0,[R1, #+4]
   3182                    }
   3183                  }break;
   \                     ??choose_PD_59:
   \   000004CE   0xE070             B.N      ??choose_PD_45
   3184                case 3:
   3185                  {
   3186                    switch(track_form)
   \                     ??choose_PD_42:
   \   000004D0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000004D2   0x2C01             CMP      R4,#+1
   \   000004D4   0xD004             BEQ.N    ??choose_PD_62
   \   000004D6   0xD320             BCC.N    ??choose_PD_63
   \   000004D8   0x2C03             CMP      R4,#+3
   \   000004DA   0xD015             BEQ.N    ??choose_PD_64
   \   000004DC   0xD30A             BCC.N    ??choose_PD_65
   \   000004DE   0xE01C             B.N      ??choose_PD_63
   3187                    {
   3188                    case 1:Servo.P+=0;Servo.D-=1;break;//3
   \                     ??choose_PD_62:
   \   000004E0   0x4897             LDR.N    R0,??choose_PD_2+0x8
   \   000004E2   0x4997             LDR.N    R1,??choose_PD_2+0x8
   \   000004E4   0x8809             LDRH     R1,[R1, #+0]
   \   000004E6   0x8001             STRH     R1,[R0, #+0]
   \   000004E8   0x4895             LDR.N    R0,??choose_PD_2+0x8
   \   000004EA   0x8880             LDRH     R0,[R0, #+4]
   \   000004EC   0x1E40             SUBS     R0,R0,#+1
   \   000004EE   0x4994             LDR.N    R1,??choose_PD_2+0x8
   \   000004F0   0x8088             STRH     R0,[R1, #+4]
   \   000004F2   0xE012             B.N      ??choose_PD_63
   3189                    case 2:Servo.P+=0;Servo.D-=2;break;
   \                     ??choose_PD_65:
   \   000004F4   0x4892             LDR.N    R0,??choose_PD_2+0x8
   \   000004F6   0x4992             LDR.N    R1,??choose_PD_2+0x8
   \   000004F8   0x8809             LDRH     R1,[R1, #+0]
   \   000004FA   0x8001             STRH     R1,[R0, #+0]
   \   000004FC   0x4890             LDR.N    R0,??choose_PD_2+0x8
   \   000004FE   0x8880             LDRH     R0,[R0, #+4]
   \   00000500   0x1E80             SUBS     R0,R0,#+2
   \   00000502   0x498F             LDR.N    R1,??choose_PD_2+0x8
   \   00000504   0x8088             STRH     R0,[R1, #+4]
   \   00000506   0xE008             B.N      ??choose_PD_63
   3190                    case 3:Servo.P+=0;Servo.D-=3;break;
   \                     ??choose_PD_64:
   \   00000508   0x488D             LDR.N    R0,??choose_PD_2+0x8
   \   0000050A   0x498D             LDR.N    R1,??choose_PD_2+0x8
   \   0000050C   0x8809             LDRH     R1,[R1, #+0]
   \   0000050E   0x8001             STRH     R1,[R0, #+0]
   \   00000510   0x488B             LDR.N    R0,??choose_PD_2+0x8
   \   00000512   0x8880             LDRH     R0,[R0, #+4]
   \   00000514   0x1EC0             SUBS     R0,R0,#+3
   \   00000516   0x498A             LDR.N    R1,??choose_PD_2+0x8
   \   00000518   0x8088             STRH     R0,[R1, #+4]
   3191                    }
   3192                  }break;
   \                     ??choose_PD_63:
   \   0000051A   0xE04A             B.N      ??choose_PD_45
   3193                case 2:
   3194                  {
   3195                    switch(track_form)
   \                     ??choose_PD_39:
   \   0000051C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000051E   0x2C01             CMP      R4,#+1
   \   00000520   0xD004             BEQ.N    ??choose_PD_66
   \   00000522   0xD320             BCC.N    ??choose_PD_67
   \   00000524   0x2C03             CMP      R4,#+3
   \   00000526   0xD015             BEQ.N    ??choose_PD_68
   \   00000528   0xD30A             BCC.N    ??choose_PD_69
   \   0000052A   0xE01C             B.N      ??choose_PD_67
   3196                    {
   3197                    case 1:Servo.P+=0;Servo.D-=2;break;//2
   \                     ??choose_PD_66:
   \   0000052C   0x4884             LDR.N    R0,??choose_PD_2+0x8
   \   0000052E   0x4984             LDR.N    R1,??choose_PD_2+0x8
   \   00000530   0x8809             LDRH     R1,[R1, #+0]
   \   00000532   0x8001             STRH     R1,[R0, #+0]
   \   00000534   0x4882             LDR.N    R0,??choose_PD_2+0x8
   \   00000536   0x8880             LDRH     R0,[R0, #+4]
   \   00000538   0x1E80             SUBS     R0,R0,#+2
   \   0000053A   0x4981             LDR.N    R1,??choose_PD_2+0x8
   \   0000053C   0x8088             STRH     R0,[R1, #+4]
   \   0000053E   0xE012             B.N      ??choose_PD_67
   3198                    case 2:Servo.P+=0;Servo.D-=3;break;
   \                     ??choose_PD_69:
   \   00000540   0x487F             LDR.N    R0,??choose_PD_2+0x8
   \   00000542   0x497F             LDR.N    R1,??choose_PD_2+0x8
   \   00000544   0x8809             LDRH     R1,[R1, #+0]
   \   00000546   0x8001             STRH     R1,[R0, #+0]
   \   00000548   0x487D             LDR.N    R0,??choose_PD_2+0x8
   \   0000054A   0x8880             LDRH     R0,[R0, #+4]
   \   0000054C   0x1EC0             SUBS     R0,R0,#+3
   \   0000054E   0x497C             LDR.N    R1,??choose_PD_2+0x8
   \   00000550   0x8088             STRH     R0,[R1, #+4]
   \   00000552   0xE008             B.N      ??choose_PD_67
   3199                    case 3:Servo.P+=0;Servo.D-=4;break;
   \                     ??choose_PD_68:
   \   00000554   0x487A             LDR.N    R0,??choose_PD_2+0x8
   \   00000556   0x497A             LDR.N    R1,??choose_PD_2+0x8
   \   00000558   0x8809             LDRH     R1,[R1, #+0]
   \   0000055A   0x8001             STRH     R1,[R0, #+0]
   \   0000055C   0x4878             LDR.N    R0,??choose_PD_2+0x8
   \   0000055E   0x8880             LDRH     R0,[R0, #+4]
   \   00000560   0x1F00             SUBS     R0,R0,#+4
   \   00000562   0x4977             LDR.N    R1,??choose_PD_2+0x8
   \   00000564   0x8088             STRH     R0,[R1, #+4]
   3200                    }
   3201                  }break;
   \                     ??choose_PD_67:
   \   00000566   0xE024             B.N      ??choose_PD_45
   3202                case 1:
   3203                  {
   3204                    switch(track_form)
   \                     ??choose_PD_40:
   \   00000568   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000056A   0x2C01             CMP      R4,#+1
   \   0000056C   0xD004             BEQ.N    ??choose_PD_70
   \   0000056E   0xD320             BCC.N    ??choose_PD_71
   \   00000570   0x2C03             CMP      R4,#+3
   \   00000572   0xD015             BEQ.N    ??choose_PD_72
   \   00000574   0xD30A             BCC.N    ??choose_PD_73
   \   00000576   0xE01C             B.N      ??choose_PD_71
   3205                    {
   3206                    case 1:Servo.P+=0;Servo.D-=3;break;//1
   \                     ??choose_PD_70:
   \   00000578   0x4871             LDR.N    R0,??choose_PD_2+0x8
   \   0000057A   0x4971             LDR.N    R1,??choose_PD_2+0x8
   \   0000057C   0x8809             LDRH     R1,[R1, #+0]
   \   0000057E   0x8001             STRH     R1,[R0, #+0]
   \   00000580   0x486F             LDR.N    R0,??choose_PD_2+0x8
   \   00000582   0x8880             LDRH     R0,[R0, #+4]
   \   00000584   0x1EC0             SUBS     R0,R0,#+3
   \   00000586   0x496E             LDR.N    R1,??choose_PD_2+0x8
   \   00000588   0x8088             STRH     R0,[R1, #+4]
   \   0000058A   0xE012             B.N      ??choose_PD_71
   3207                    case 2:Servo.P+=0;Servo.D-=4;break;
   \                     ??choose_PD_73:
   \   0000058C   0x486C             LDR.N    R0,??choose_PD_2+0x8
   \   0000058E   0x496C             LDR.N    R1,??choose_PD_2+0x8
   \   00000590   0x8809             LDRH     R1,[R1, #+0]
   \   00000592   0x8001             STRH     R1,[R0, #+0]
   \   00000594   0x486A             LDR.N    R0,??choose_PD_2+0x8
   \   00000596   0x8880             LDRH     R0,[R0, #+4]
   \   00000598   0x1F00             SUBS     R0,R0,#+4
   \   0000059A   0x4969             LDR.N    R1,??choose_PD_2+0x8
   \   0000059C   0x8088             STRH     R0,[R1, #+4]
   \   0000059E   0xE008             B.N      ??choose_PD_71
   3208                    case 3:Servo.P+=0;Servo.D-=5;break;
   \                     ??choose_PD_72:
   \   000005A0   0x4867             LDR.N    R0,??choose_PD_2+0x8
   \   000005A2   0x4967             LDR.N    R1,??choose_PD_2+0x8
   \   000005A4   0x8809             LDRH     R1,[R1, #+0]
   \   000005A6   0x8001             STRH     R1,[R0, #+0]
   \   000005A8   0x4865             LDR.N    R0,??choose_PD_2+0x8
   \   000005AA   0x8880             LDRH     R0,[R0, #+4]
   \   000005AC   0x1F40             SUBS     R0,R0,#+5
   \   000005AE   0x4964             LDR.N    R1,??choose_PD_2+0x8
   \   000005B0   0x8088             STRH     R0,[R1, #+4]
   3209                    }
   3210                  }break;
   3211                }
   3212              }break;
   \                     ??choose_PD_71:
   \                     ??choose_PD_45:
   \   000005B2   0xF001 0xB813      B.W      ??choose_PD_37
   3213           case 6:
   3214              {
   3215                switch(position_now_D)
   \                     ??choose_PD_35:
   \   000005B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000005B8   0x2800             CMP      R0,#+0
   \   000005BA   0xD00C             BEQ.N    ??choose_PD_74
   \   000005BC   0x2802             CMP      R0,#+2
   \   000005BE   0xF000 0x80F6      BEQ.W    ??choose_PD_75
   \   000005C2   0xF0C0 0x8129      BCC.W    ??choose_PD_76
   \   000005C6   0x2804             CMP      R0,#+4
   \   000005C8   0xD06F             BEQ.N    ??choose_PD_77
   \   000005CA   0xF0C0 0x8096      BCC.W    ??choose_PD_78
   \   000005CE   0x2806             CMP      R0,#+6
   \   000005D0   0xD01B             BEQ.N    ??choose_PD_79
   \   000005D2   0xD342             BCC.N    ??choose_PD_80
   \   000005D4   0xE154             B.N      ??choose_PD_81
   3216                {
   3217               case -6:
   3218                  {
   3219                    switch(track_form)
   3220                    {
   3221                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3222                    case 1:Servo.P+=4;Servo.D+=2;break;
   3223                    case 2:Servo.P+=3;Servo.D+=1;break;
   3224                    case 3:Servo.P+=2;Servo.D+=0;break;
   3225                    }
   3226                  }break;
   3227                case -5:
   3228                  {
   3229                    switch(track_form)
   3230                    {
   3231                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3232                    case 1:Servo.P+=4;Servo.D+=1;break;
   3233                    case 2:Servo.P+=3;Servo.D+=0;break;
   3234                    case 3:Servo.P+=2;Servo.D-=1;break;
   3235                    }
   3236                  }break;
   3237                case -4:
   3238                  {
   3239                    switch(track_form)
   3240                    {
   3241                      case 1:Servo.P+=4;Servo.D+=0;break;
   3242                      case 2:Servo.P+=3;Servo.D-=1;break;
   3243                      case 3:Servo.P+=2;Servo.D-=2;break;
   3244                    }
   3245                  }break;
   3246                case -3:
   3247                  {
   3248                    switch(track_form)
   3249                    {
   3250                    case 1:Servo.P+=4;Servo.D-=1;break;
   3251                    case 2:Servo.P+=3;Servo.D-=2;break;
   3252                    case 3:Servo.P+=2;Servo.D-=3;break;
   3253                    }
   3254                  }break;
   3255                case -2:
   3256                  {
   3257                    switch(track_form)
   3258                    {
   3259                    case 1:Servo.P+=4;Servo.D-=2;break;
   3260                    case 2:Servo.P+=3;Servo.D-=3;break;
   3261                    case 3:Servo.P+=2;Servo.D-=4;break;
   3262                    }
   3263                  }break;
   3264                case -1:
   3265                  {
   3266                    switch(track_form)
   3267                    {
   3268                    case 1:Servo.P+=4;Servo.D-=3;break;
   3269                    case 2:Servo.P+=3;Servo.D-=4;break;
   3270                    case 3:Servo.P+=2;Servo.D-=5;break;
   3271                    }
   3272                  }break;
   3273                case 0:
   3274                   {
   3275                    switch(track_form)
   \                     ??choose_PD_74:
   \   000005D6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000005D8   0x2C01             CMP      R4,#+1
   \   000005DA   0xD004             BEQ.N    ??choose_PD_82
   \   000005DC   0xD314             BCC.N    ??choose_PD_83
   \   000005DE   0x2C03             CMP      R4,#+3
   \   000005E0   0xD00D             BEQ.N    ??choose_PD_84
   \   000005E2   0xD306             BCC.N    ??choose_PD_85
   \   000005E4   0xE010             B.N      ??choose_PD_83
   3276                    {
   3277                    case 1:Servo.P+=4;break;
   \                     ??choose_PD_82:
   \   000005E6   0x4856             LDR.N    R0,??choose_PD_2+0x8
   \   000005E8   0x8800             LDRH     R0,[R0, #+0]
   \   000005EA   0x1D00             ADDS     R0,R0,#+4
   \   000005EC   0x4954             LDR.N    R1,??choose_PD_2+0x8
   \   000005EE   0x8008             STRH     R0,[R1, #+0]
   \   000005F0   0xE00A             B.N      ??choose_PD_83
   3278                    case 2:Servo.P+=3;break;
   \                     ??choose_PD_85:
   \   000005F2   0x4853             LDR.N    R0,??choose_PD_2+0x8
   \   000005F4   0x8800             LDRH     R0,[R0, #+0]
   \   000005F6   0x1CC0             ADDS     R0,R0,#+3
   \   000005F8   0x4951             LDR.N    R1,??choose_PD_2+0x8
   \   000005FA   0x8008             STRH     R0,[R1, #+0]
   \   000005FC   0xE004             B.N      ??choose_PD_83
   3279                    case 3:Servo.P+=2;break;
   \                     ??choose_PD_84:
   \   000005FE   0x4850             LDR.N    R0,??choose_PD_2+0x8
   \   00000600   0x8800             LDRH     R0,[R0, #+0]
   \   00000602   0x1C80             ADDS     R0,R0,#+2
   \   00000604   0x494E             LDR.N    R1,??choose_PD_2+0x8
   \   00000606   0x8008             STRH     R0,[R1, #+0]
   3280                    }
   3281                  }break;
   \                     ??choose_PD_83:
   \   00000608   0xE13A             B.N      ??choose_PD_81
   3282                case 6:
   3283                  {
   3284                    switch(track_form)
   \                     ??choose_PD_79:
   \   0000060A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000060C   0x2C01             CMP      R4,#+1
   \   0000060E   0xD004             BEQ.N    ??choose_PD_86
   \   00000610   0xD322             BCC.N    ??choose_PD_87
   \   00000612   0x2C03             CMP      R4,#+3
   \   00000614   0xD017             BEQ.N    ??choose_PD_88
   \   00000616   0xD30B             BCC.N    ??choose_PD_89
   \   00000618   0xE01E             B.N      ??choose_PD_87
   3285                    {
   3286                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3287                    case 1:Servo.P+=4;Servo.D+=2;break;
   \                     ??choose_PD_86:
   \   0000061A   0x4849             LDR.N    R0,??choose_PD_2+0x8
   \   0000061C   0x8800             LDRH     R0,[R0, #+0]
   \   0000061E   0x1D00             ADDS     R0,R0,#+4
   \   00000620   0x4947             LDR.N    R1,??choose_PD_2+0x8
   \   00000622   0x8008             STRH     R0,[R1, #+0]
   \   00000624   0x4846             LDR.N    R0,??choose_PD_2+0x8
   \   00000626   0x8880             LDRH     R0,[R0, #+4]
   \   00000628   0x1C80             ADDS     R0,R0,#+2
   \   0000062A   0x4945             LDR.N    R1,??choose_PD_2+0x8
   \   0000062C   0x8088             STRH     R0,[R1, #+4]
   \   0000062E   0xE013             B.N      ??choose_PD_87
   3288                    case 2:Servo.P+=3;Servo.D+=1;break;
   \                     ??choose_PD_89:
   \   00000630   0x4843             LDR.N    R0,??choose_PD_2+0x8
   \   00000632   0x8800             LDRH     R0,[R0, #+0]
   \   00000634   0x1CC0             ADDS     R0,R0,#+3
   \   00000636   0x4942             LDR.N    R1,??choose_PD_2+0x8
   \   00000638   0x8008             STRH     R0,[R1, #+0]
   \   0000063A   0x4841             LDR.N    R0,??choose_PD_2+0x8
   \   0000063C   0x8880             LDRH     R0,[R0, #+4]
   \   0000063E   0x1C40             ADDS     R0,R0,#+1
   \   00000640   0x493F             LDR.N    R1,??choose_PD_2+0x8
   \   00000642   0x8088             STRH     R0,[R1, #+4]
   \   00000644   0xE008             B.N      ??choose_PD_87
   3289                    case 3:Servo.P+=2;Servo.D+=0;break;
   \                     ??choose_PD_88:
   \   00000646   0x483E             LDR.N    R0,??choose_PD_2+0x8
   \   00000648   0x8800             LDRH     R0,[R0, #+0]
   \   0000064A   0x1C80             ADDS     R0,R0,#+2
   \   0000064C   0x493C             LDR.N    R1,??choose_PD_2+0x8
   \   0000064E   0x8008             STRH     R0,[R1, #+0]
   \   00000650   0x483B             LDR.N    R0,??choose_PD_2+0x8
   \   00000652   0x493B             LDR.N    R1,??choose_PD_2+0x8
   \   00000654   0x8889             LDRH     R1,[R1, #+4]
   \   00000656   0x8081             STRH     R1,[R0, #+4]
   3290                    }
   3291                  }break;
   \                     ??choose_PD_87:
   \   00000658   0xE112             B.N      ??choose_PD_81
   3292                case 5:
   3293                  {
   3294                    switch(track_form)
   \                     ??choose_PD_80:
   \   0000065A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000065C   0x2C01             CMP      R4,#+1
   \   0000065E   0xD004             BEQ.N    ??choose_PD_90
   \   00000660   0xD322             BCC.N    ??choose_PD_91
   \   00000662   0x2C03             CMP      R4,#+3
   \   00000664   0xD016             BEQ.N    ??choose_PD_92
   \   00000666   0xD30B             BCC.N    ??choose_PD_93
   \   00000668   0xE01E             B.N      ??choose_PD_91
   3295                    {
   3296                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3297                    case 1:Servo.P+=4;Servo.D+=1;break;
   \                     ??choose_PD_90:
   \   0000066A   0x4835             LDR.N    R0,??choose_PD_2+0x8
   \   0000066C   0x8800             LDRH     R0,[R0, #+0]
   \   0000066E   0x1D00             ADDS     R0,R0,#+4
   \   00000670   0x4933             LDR.N    R1,??choose_PD_2+0x8
   \   00000672   0x8008             STRH     R0,[R1, #+0]
   \   00000674   0x4832             LDR.N    R0,??choose_PD_2+0x8
   \   00000676   0x8880             LDRH     R0,[R0, #+4]
   \   00000678   0x1C40             ADDS     R0,R0,#+1
   \   0000067A   0x4931             LDR.N    R1,??choose_PD_2+0x8
   \   0000067C   0x8088             STRH     R0,[R1, #+4]
   \   0000067E   0xE013             B.N      ??choose_PD_91
   3298                    case 2:Servo.P+=3;Servo.D+=0;break;
   \                     ??choose_PD_93:
   \   00000680   0x482F             LDR.N    R0,??choose_PD_2+0x8
   \   00000682   0x8800             LDRH     R0,[R0, #+0]
   \   00000684   0x1CC0             ADDS     R0,R0,#+3
   \   00000686   0x492E             LDR.N    R1,??choose_PD_2+0x8
   \   00000688   0x8008             STRH     R0,[R1, #+0]
   \   0000068A   0x482D             LDR.N    R0,??choose_PD_2+0x8
   \   0000068C   0x492C             LDR.N    R1,??choose_PD_2+0x8
   \   0000068E   0x8889             LDRH     R1,[R1, #+4]
   \   00000690   0x8081             STRH     R1,[R0, #+4]
   \   00000692   0xE009             B.N      ??choose_PD_91
   3299                    case 3:Servo.P+=2;Servo.D-=1;break;
   \                     ??choose_PD_92:
   \   00000694   0x482A             LDR.N    R0,??choose_PD_2+0x8
   \   00000696   0x8800             LDRH     R0,[R0, #+0]
   \   00000698   0x1C80             ADDS     R0,R0,#+2
   \   0000069A   0x4929             LDR.N    R1,??choose_PD_2+0x8
   \   0000069C   0x8008             STRH     R0,[R1, #+0]
   \   0000069E   0x4828             LDR.N    R0,??choose_PD_2+0x8
   \   000006A0   0x8880             LDRH     R0,[R0, #+4]
   \   000006A2   0x1E40             SUBS     R0,R0,#+1
   \   000006A4   0x4926             LDR.N    R1,??choose_PD_2+0x8
   \   000006A6   0x8088             STRH     R0,[R1, #+4]
   3300                    }
   3301                  }break;
   \                     ??choose_PD_91:
   \   000006A8   0xE0EA             B.N      ??choose_PD_81
   3302                case 4:
   3303                  {
   3304                    switch(track_form)
   \                     ??choose_PD_77:
   \   000006AA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000006AC   0x2C01             CMP      R4,#+1
   \   000006AE   0xD004             BEQ.N    ??choose_PD_94
   \   000006B0   0xD322             BCC.N    ??choose_PD_95
   \   000006B2   0x2C03             CMP      R4,#+3
   \   000006B4   0xD016             BEQ.N    ??choose_PD_96
   \   000006B6   0xD30A             BCC.N    ??choose_PD_97
   \   000006B8   0xE01E             B.N      ??choose_PD_95
   3305                    {
   3306                      case 1:Servo.P+=4;Servo.D+=0;break;
   \                     ??choose_PD_94:
   \   000006BA   0x4821             LDR.N    R0,??choose_PD_2+0x8
   \   000006BC   0x8800             LDRH     R0,[R0, #+0]
   \   000006BE   0x1D00             ADDS     R0,R0,#+4
   \   000006C0   0x491F             LDR.N    R1,??choose_PD_2+0x8
   \   000006C2   0x8008             STRH     R0,[R1, #+0]
   \   000006C4   0x481E             LDR.N    R0,??choose_PD_2+0x8
   \   000006C6   0x491E             LDR.N    R1,??choose_PD_2+0x8
   \   000006C8   0x8889             LDRH     R1,[R1, #+4]
   \   000006CA   0x8081             STRH     R1,[R0, #+4]
   \   000006CC   0xE014             B.N      ??choose_PD_95
   3307                      case 2:Servo.P+=3;Servo.D-=1;break;
   \                     ??choose_PD_97:
   \   000006CE   0x481C             LDR.N    R0,??choose_PD_2+0x8
   \   000006D0   0x8800             LDRH     R0,[R0, #+0]
   \   000006D2   0x1CC0             ADDS     R0,R0,#+3
   \   000006D4   0x491A             LDR.N    R1,??choose_PD_2+0x8
   \   000006D6   0x8008             STRH     R0,[R1, #+0]
   \   000006D8   0x4819             LDR.N    R0,??choose_PD_2+0x8
   \   000006DA   0x8880             LDRH     R0,[R0, #+4]
   \   000006DC   0x1E40             SUBS     R0,R0,#+1
   \   000006DE   0x4918             LDR.N    R1,??choose_PD_2+0x8
   \   000006E0   0x8088             STRH     R0,[R1, #+4]
   \   000006E2   0xE009             B.N      ??choose_PD_95
   3308                      case 3:Servo.P+=2;Servo.D-=2;break;
   \                     ??choose_PD_96:
   \   000006E4   0x4816             LDR.N    R0,??choose_PD_2+0x8
   \   000006E6   0x8800             LDRH     R0,[R0, #+0]
   \   000006E8   0x1C80             ADDS     R0,R0,#+2
   \   000006EA   0x4915             LDR.N    R1,??choose_PD_2+0x8
   \   000006EC   0x8008             STRH     R0,[R1, #+0]
   \   000006EE   0x4814             LDR.N    R0,??choose_PD_2+0x8
   \   000006F0   0x8880             LDRH     R0,[R0, #+4]
   \   000006F2   0x1E80             SUBS     R0,R0,#+2
   \   000006F4   0x4912             LDR.N    R1,??choose_PD_2+0x8
   \   000006F6   0x8088             STRH     R0,[R1, #+4]
   3309                    }
   3310                  }break;
   \                     ??choose_PD_95:
   \   000006F8   0xE0C2             B.N      ??choose_PD_81
   3311                case 3:
   3312                  {
   3313                    switch(track_form)
   \                     ??choose_PD_78:
   \   000006FA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000006FC   0x2C01             CMP      R4,#+1
   \   000006FE   0xD004             BEQ.N    ??choose_PD_98
   \   00000700   0xD354             BCC.N    ??choose_PD_99
   \   00000702   0x2C03             CMP      R4,#+3
   \   00000704   0xD044             BEQ.N    ??choose_PD_100
   \   00000706   0xD30B             BCC.N    ??choose_PD_101
   \   00000708   0xE050             B.N      ??choose_PD_99
   3314                    {
   3315                    case 1:Servo.P+=4;Servo.D-=1;break;
   \                     ??choose_PD_98:
   \   0000070A   0x480D             LDR.N    R0,??choose_PD_2+0x8
   \   0000070C   0x8800             LDRH     R0,[R0, #+0]
   \   0000070E   0x1D00             ADDS     R0,R0,#+4
   \   00000710   0x490B             LDR.N    R1,??choose_PD_2+0x8
   \   00000712   0x8008             STRH     R0,[R1, #+0]
   \   00000714   0x480A             LDR.N    R0,??choose_PD_2+0x8
   \   00000716   0x8880             LDRH     R0,[R0, #+4]
   \   00000718   0x1E40             SUBS     R0,R0,#+1
   \   0000071A   0x4909             LDR.N    R1,??choose_PD_2+0x8
   \   0000071C   0x8088             STRH     R0,[R1, #+4]
   \   0000071E   0xE045             B.N      ??choose_PD_99
   3316                    case 2:Servo.P+=3;Servo.D-=2;break;
   \                     ??choose_PD_101:
   \   00000720   0x4807             LDR.N    R0,??choose_PD_2+0x8
   \   00000722   0x8800             LDRH     R0,[R0, #+0]
   \   00000724   0x1CC0             ADDS     R0,R0,#+3
   \   00000726   0x4906             LDR.N    R1,??choose_PD_2+0x8
   \   00000728   0x8008             STRH     R0,[R1, #+0]
   \   0000072A   0x4805             LDR.N    R0,??choose_PD_2+0x8
   \   0000072C   0x8880             LDRH     R0,[R0, #+4]
   \   0000072E   0x1E80             SUBS     R0,R0,#+2
   \   00000730   0x4903             LDR.N    R1,??choose_PD_2+0x8
   \   00000732   0x8088             STRH     R0,[R1, #+4]
   \   00000734   0xE03A             B.N      ??choose_PD_99
   \   00000736   0xBF00             Nop      
   \                     ??choose_PD_2:
   \   00000738   0x........         DC32     position
   \   0000073C   0x........         DC32     dijihang
   \   00000740   0x........         DC32     Servo
   \   00000744   0x........         DC32     P_High
   \   00000748   0x........         DC32     D_High
   \   0000074C   0x........         DC32     servo
   \   00000750   0x........         DC32     H_High
   \   00000754   0x........         DC32     T_High
   \   00000758   0x........         DC32     P_Mid
   \   0000075C   0x........         DC32     D_Mid
   \   00000760   0x........         DC32     H_Mid
   \   00000764   0x........         DC32     T_Mid
   \   00000768   0x........         DC32     P_Mid1
   \   0000076C   0x........         DC32     D_Mid1
   \   00000770   0x........         DC32     H_Mid1
   \   00000774   0x........         DC32     T_Mid1
   \   00000778   0x........         DC32     P_Low
   \   0000077C   0x........         DC32     D_Low
   \   00000780   0x........         DC32     H_Low
   \   00000784   0x........         DC32     T_Low
   \   00000788   0x........         DC32     position_now
   \   0000078C   0x........         DC32     position_now_low
   3317                    case 3:Servo.P+=2;Servo.D-=3;break;
   \                     ??choose_PD_100:
   \   00000790   0xF8DF 0x06A0      LDR.W    R0,??choose_PD_28+0x4
   \   00000794   0x8800             LDRH     R0,[R0, #+0]
   \   00000796   0x1C80             ADDS     R0,R0,#+2
   \   00000798   0xF8DF 0x1698      LDR.W    R1,??choose_PD_28+0x4
   \   0000079C   0x8008             STRH     R0,[R1, #+0]
   \   0000079E   0xF8DF 0x0694      LDR.W    R0,??choose_PD_28+0x4
   \   000007A2   0x8880             LDRH     R0,[R0, #+4]
   \   000007A4   0x1EC0             SUBS     R0,R0,#+3
   \   000007A6   0xF8DF 0x168C      LDR.W    R1,??choose_PD_28+0x4
   \   000007AA   0x8088             STRH     R0,[R1, #+4]
   3318                    }
   3319                  }break;
   \                     ??choose_PD_99:
   \   000007AC   0xE068             B.N      ??choose_PD_81
   3320                case 2:
   3321                  {
   3322                    switch(track_form)
   \                     ??choose_PD_75:
   \   000007AE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000007B0   0x2C01             CMP      R4,#+1
   \   000007B2   0xD004             BEQ.N    ??choose_PD_102
   \   000007B4   0xD32F             BCC.N    ??choose_PD_103
   \   000007B6   0x2C03             CMP      R4,#+3
   \   000007B8   0xD01F             BEQ.N    ??choose_PD_104
   \   000007BA   0xD30F             BCC.N    ??choose_PD_105
   \   000007BC   0xE02B             B.N      ??choose_PD_103
   3323                    {
   3324                    case 1:Servo.P+=4;Servo.D-=2;break;
   \                     ??choose_PD_102:
   \   000007BE   0xF8DF 0x0674      LDR.W    R0,??choose_PD_28+0x4
   \   000007C2   0x8800             LDRH     R0,[R0, #+0]
   \   000007C4   0x1D00             ADDS     R0,R0,#+4
   \   000007C6   0xF8DF 0x166C      LDR.W    R1,??choose_PD_28+0x4
   \   000007CA   0x8008             STRH     R0,[R1, #+0]
   \   000007CC   0xF8DF 0x0664      LDR.W    R0,??choose_PD_28+0x4
   \   000007D0   0x8880             LDRH     R0,[R0, #+4]
   \   000007D2   0x1E80             SUBS     R0,R0,#+2
   \   000007D4   0xF8DF 0x165C      LDR.W    R1,??choose_PD_28+0x4
   \   000007D8   0x8088             STRH     R0,[R1, #+4]
   \   000007DA   0xE01C             B.N      ??choose_PD_103
   3325                    case 2:Servo.P+=3;Servo.D-=3;break;
   \                     ??choose_PD_105:
   \   000007DC   0xF8DF 0x0654      LDR.W    R0,??choose_PD_28+0x4
   \   000007E0   0x8800             LDRH     R0,[R0, #+0]
   \   000007E2   0x1CC0             ADDS     R0,R0,#+3
   \   000007E4   0xF8DF 0x164C      LDR.W    R1,??choose_PD_28+0x4
   \   000007E8   0x8008             STRH     R0,[R1, #+0]
   \   000007EA   0xF8DF 0x0648      LDR.W    R0,??choose_PD_28+0x4
   \   000007EE   0x8880             LDRH     R0,[R0, #+4]
   \   000007F0   0x1EC0             SUBS     R0,R0,#+3
   \   000007F2   0xF8DF 0x1640      LDR.W    R1,??choose_PD_28+0x4
   \   000007F6   0x8088             STRH     R0,[R1, #+4]
   \   000007F8   0xE00D             B.N      ??choose_PD_103
   3326                    case 3:Servo.P+=2;Servo.D-=4;break;
   \                     ??choose_PD_104:
   \   000007FA   0xF8DF 0x0638      LDR.W    R0,??choose_PD_28+0x4
   \   000007FE   0x8800             LDRH     R0,[R0, #+0]
   \   00000800   0x1C80             ADDS     R0,R0,#+2
   \   00000802   0xF8DF 0x1630      LDR.W    R1,??choose_PD_28+0x4
   \   00000806   0x8008             STRH     R0,[R1, #+0]
   \   00000808   0xF8DF 0x0628      LDR.W    R0,??choose_PD_28+0x4
   \   0000080C   0x8880             LDRH     R0,[R0, #+4]
   \   0000080E   0x1F00             SUBS     R0,R0,#+4
   \   00000810   0xF8DF 0x1620      LDR.W    R1,??choose_PD_28+0x4
   \   00000814   0x8088             STRH     R0,[R1, #+4]
   3327                    }
   3328                  }break;
   \                     ??choose_PD_103:
   \   00000816   0xE033             B.N      ??choose_PD_81
   3329                case 1:
   3330                  {
   3331                    switch(track_form)
   \                     ??choose_PD_76:
   \   00000818   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000081A   0x2C01             CMP      R4,#+1
   \   0000081C   0xD004             BEQ.N    ??choose_PD_106
   \   0000081E   0xD32F             BCC.N    ??choose_PD_107
   \   00000820   0x2C03             CMP      R4,#+3
   \   00000822   0xD01F             BEQ.N    ??choose_PD_108
   \   00000824   0xD30F             BCC.N    ??choose_PD_109
   \   00000826   0xE02B             B.N      ??choose_PD_107
   3332                    {
   3333                    case 1:Servo.P+=4;Servo.D-=3;break;
   \                     ??choose_PD_106:
   \   00000828   0xF8DF 0x0608      LDR.W    R0,??choose_PD_28+0x4
   \   0000082C   0x8800             LDRH     R0,[R0, #+0]
   \   0000082E   0x1D00             ADDS     R0,R0,#+4
   \   00000830   0xF8DF 0x1600      LDR.W    R1,??choose_PD_28+0x4
   \   00000834   0x8008             STRH     R0,[R1, #+0]
   \   00000836   0xF8DF 0x05FC      LDR.W    R0,??choose_PD_28+0x4
   \   0000083A   0x8880             LDRH     R0,[R0, #+4]
   \   0000083C   0x1EC0             SUBS     R0,R0,#+3
   \   0000083E   0xF8DF 0x15F4      LDR.W    R1,??choose_PD_28+0x4
   \   00000842   0x8088             STRH     R0,[R1, #+4]
   \   00000844   0xE01C             B.N      ??choose_PD_107
   3334                    case 2:Servo.P+=3;Servo.D-=4;break;
   \                     ??choose_PD_109:
   \   00000846   0xF8DF 0x05EC      LDR.W    R0,??choose_PD_28+0x4
   \   0000084A   0x8800             LDRH     R0,[R0, #+0]
   \   0000084C   0x1CC0             ADDS     R0,R0,#+3
   \   0000084E   0xF8DF 0x15E4      LDR.W    R1,??choose_PD_28+0x4
   \   00000852   0x8008             STRH     R0,[R1, #+0]
   \   00000854   0xF8DF 0x05DC      LDR.W    R0,??choose_PD_28+0x4
   \   00000858   0x8880             LDRH     R0,[R0, #+4]
   \   0000085A   0x1F00             SUBS     R0,R0,#+4
   \   0000085C   0xF8DF 0x15D4      LDR.W    R1,??choose_PD_28+0x4
   \   00000860   0x8088             STRH     R0,[R1, #+4]
   \   00000862   0xE00D             B.N      ??choose_PD_107
   3335                    case 3:Servo.P+=2;Servo.D-=5;break;
   \                     ??choose_PD_108:
   \   00000864   0xF8DF 0x05CC      LDR.W    R0,??choose_PD_28+0x4
   \   00000868   0x8800             LDRH     R0,[R0, #+0]
   \   0000086A   0x1C80             ADDS     R0,R0,#+2
   \   0000086C   0xF8DF 0x15C4      LDR.W    R1,??choose_PD_28+0x4
   \   00000870   0x8008             STRH     R0,[R1, #+0]
   \   00000872   0xF8DF 0x05C0      LDR.W    R0,??choose_PD_28+0x4
   \   00000876   0x8880             LDRH     R0,[R0, #+4]
   \   00000878   0x1F40             SUBS     R0,R0,#+5
   \   0000087A   0xF8DF 0x15B8      LDR.W    R1,??choose_PD_28+0x4
   \   0000087E   0x8088             STRH     R0,[R1, #+4]
   3336                    }
   3337                  }break;
   3338                }
   3339              }break;
   \                     ??choose_PD_107:
   \                     ??choose_PD_81:
   \   00000880   0xF000 0xBEAC      B.W      ??choose_PD_37
   3340            case 5:
   3341              {
   3342                switch(position_now_D)
   \                     ??choose_PD_36:
   \   00000884   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000886   0x2800             CMP      R0,#+0
   \   00000888   0xD00D             BEQ.N    ??choose_PD_110
   \   0000088A   0x2802             CMP      R0,#+2
   \   0000088C   0xF000 0x80FC      BEQ.W    ??choose_PD_111
   \   00000890   0xF0C0 0x812F      BCC.W    ??choose_PD_112
   \   00000894   0x2804             CMP      R0,#+4
   \   00000896   0xF000 0x808E      BEQ.W    ??choose_PD_113
   \   0000089A   0xF0C0 0x80C0      BCC.W    ??choose_PD_114
   \   0000089E   0x2806             CMP      R0,#+6
   \   000008A0   0xD021             BEQ.N    ??choose_PD_115
   \   000008A2   0xD354             BCC.N    ??choose_PD_116
   \   000008A4   0xE159             B.N      ??choose_PD_117
   3343                {
   3344                case -6:
   3345                  {
   3346                    switch(track_form)
   3347                    {
   3348                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3349                    case 1:Servo.P+=3;Servo.D+=2;break;
   3350                    case 2:Servo.P+=2;Servo.D+=1;break;
   3351                    case 3:Servo.P+=1;Servo.D+=0;break;
   3352                    }
   3353                  }break;
   3354                case -5:
   3355                  {
   3356                    switch(track_form)
   3357                    {
   3358                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3359                    case 1:Servo.P+=3;Servo.D+=1;break;
   3360                    case 2:Servo.P+=2;Servo.D+=0;break;
   3361                    case 3:Servo.P+=1;Servo.D-=1;break;
   3362                    }
   3363                  }break;
   3364                case -4:
   3365                  {
   3366                    switch(track_form)
   3367                    {
   3368                      case 1:Servo.P+=3;Servo.D+=0;break;
   3369                      case 2:Servo.P+=2;Servo.D-=1;break;
   3370                      case 3:Servo.P+=1;Servo.D-=2;break;
   3371                    }
   3372                  }break;
   3373                case -3:
   3374                  {
   3375                    switch(track_form)
   3376                    {
   3377                    case 1:Servo.P+=3;Servo.D-=1;break;
   3378                    case 2:Servo.P+=2;Servo.D-=2;break;
   3379                    case 3:Servo.P+=1;Servo.D-=3;break;
   3380                    }
   3381                  }break;
   3382                case -2:
   3383                  {
   3384                    switch(track_form)
   3385                    {
   3386                    case 1:Servo.P+=3;Servo.D-=2;break;
   3387                    case 2:Servo.P+=2;Servo.D-=3;break;
   3388                    case 3:Servo.P+=1;Servo.D-=4;break;
   3389                    }
   3390                  }break;
   3391                case -1:
   3392                  {
   3393                    switch(track_form)
   3394                    {
   3395                    case 1:Servo.P+=3;Servo.D-=3;break;
   3396                    case 2:Servo.P+=2;Servo.D-=4;break;
   3397                    case 3:Servo.P+=1;Servo.D-=5;break;
   3398                    }
   3399                  }break;
   3400                case 0:
   3401                   {
   3402                    switch(track_form)
   \                     ??choose_PD_110:
   \   000008A6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000008A8   0x2C01             CMP      R4,#+1
   \   000008AA   0xD004             BEQ.N    ??choose_PD_118
   \   000008AC   0xD31A             BCC.N    ??choose_PD_119
   \   000008AE   0x2C03             CMP      R4,#+3
   \   000008B0   0xD011             BEQ.N    ??choose_PD_120
   \   000008B2   0xD308             BCC.N    ??choose_PD_121
   \   000008B4   0xE016             B.N      ??choose_PD_119
   3403                    {
   3404                    case 1:Servo.P+=3;break;
   \                     ??choose_PD_118:
   \   000008B6   0xF8DF 0x057C      LDR.W    R0,??choose_PD_28+0x4
   \   000008BA   0x8800             LDRH     R0,[R0, #+0]
   \   000008BC   0x1CC0             ADDS     R0,R0,#+3
   \   000008BE   0xF8DF 0x1574      LDR.W    R1,??choose_PD_28+0x4
   \   000008C2   0x8008             STRH     R0,[R1, #+0]
   \   000008C4   0xE00E             B.N      ??choose_PD_119
   3405                    case 2:Servo.P+=2;break;
   \                     ??choose_PD_121:
   \   000008C6   0xF8DF 0x056C      LDR.W    R0,??choose_PD_28+0x4
   \   000008CA   0x8800             LDRH     R0,[R0, #+0]
   \   000008CC   0x1C80             ADDS     R0,R0,#+2
   \   000008CE   0xF8DF 0x1564      LDR.W    R1,??choose_PD_28+0x4
   \   000008D2   0x8008             STRH     R0,[R1, #+0]
   \   000008D4   0xE006             B.N      ??choose_PD_119
   3406                    case 3:Servo.P+=1;break;
   \                     ??choose_PD_120:
   \   000008D6   0xF8DF 0x055C      LDR.W    R0,??choose_PD_28+0x4
   \   000008DA   0x8800             LDRH     R0,[R0, #+0]
   \   000008DC   0x1C40             ADDS     R0,R0,#+1
   \   000008DE   0xF8DF 0x1554      LDR.W    R1,??choose_PD_28+0x4
   \   000008E2   0x8008             STRH     R0,[R1, #+0]
   3407                    }
   3408                  }break;
   \                     ??choose_PD_119:
   \   000008E4   0xE139             B.N      ??choose_PD_117
   3409                case 6:
   3410                  {
   3411                    switch(track_form)
   \                     ??choose_PD_115:
   \   000008E6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000008E8   0x2C01             CMP      R4,#+1
   \   000008EA   0xD004             BEQ.N    ??choose_PD_122
   \   000008EC   0xD32E             BCC.N    ??choose_PD_123
   \   000008EE   0x2C03             CMP      R4,#+3
   \   000008F0   0xD01F             BEQ.N    ??choose_PD_124
   \   000008F2   0xD30F             BCC.N    ??choose_PD_125
   \   000008F4   0xE02A             B.N      ??choose_PD_123
   3412                    {
   3413                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3414                    case 1:Servo.P+=3;Servo.D+=2;break;
   \                     ??choose_PD_122:
   \   000008F6   0xF8DF 0x053C      LDR.W    R0,??choose_PD_28+0x4
   \   000008FA   0x8800             LDRH     R0,[R0, #+0]
   \   000008FC   0x1CC0             ADDS     R0,R0,#+3
   \   000008FE   0xF8DF 0x1534      LDR.W    R1,??choose_PD_28+0x4
   \   00000902   0x8008             STRH     R0,[R1, #+0]
   \   00000904   0xF8DF 0x052C      LDR.W    R0,??choose_PD_28+0x4
   \   00000908   0x8880             LDRH     R0,[R0, #+4]
   \   0000090A   0x1C80             ADDS     R0,R0,#+2
   \   0000090C   0xF8DF 0x1524      LDR.W    R1,??choose_PD_28+0x4
   \   00000910   0x8088             STRH     R0,[R1, #+4]
   \   00000912   0xE01B             B.N      ??choose_PD_123
   3415                    case 2:Servo.P+=2;Servo.D+=1;break;
   \                     ??choose_PD_125:
   \   00000914   0xF8DF 0x051C      LDR.W    R0,??choose_PD_28+0x4
   \   00000918   0x8800             LDRH     R0,[R0, #+0]
   \   0000091A   0x1C80             ADDS     R0,R0,#+2
   \   0000091C   0xF8DF 0x1514      LDR.W    R1,??choose_PD_28+0x4
   \   00000920   0x8008             STRH     R0,[R1, #+0]
   \   00000922   0xF8DF 0x0510      LDR.W    R0,??choose_PD_28+0x4
   \   00000926   0x8880             LDRH     R0,[R0, #+4]
   \   00000928   0x1C40             ADDS     R0,R0,#+1
   \   0000092A   0xF8DF 0x1508      LDR.W    R1,??choose_PD_28+0x4
   \   0000092E   0x8088             STRH     R0,[R1, #+4]
   \   00000930   0xE00C             B.N      ??choose_PD_123
   3416                    case 3:Servo.P+=1;Servo.D+=0;break;
   \                     ??choose_PD_124:
   \   00000932   0xF8DF 0x0500      LDR.W    R0,??choose_PD_28+0x4
   \   00000936   0x8800             LDRH     R0,[R0, #+0]
   \   00000938   0x1C40             ADDS     R0,R0,#+1
   \   0000093A   0xF8DF 0x14F8      LDR.W    R1,??choose_PD_28+0x4
   \   0000093E   0x8008             STRH     R0,[R1, #+0]
   \   00000940   0xF8DF 0x04F0      LDR.W    R0,??choose_PD_28+0x4
   \   00000944   0xF8DF 0x14EC      LDR.W    R1,??choose_PD_28+0x4
   \   00000948   0x8889             LDRH     R1,[R1, #+4]
   \   0000094A   0x8081             STRH     R1,[R0, #+4]
   3417                    }
   3418                  }break;
   \                     ??choose_PD_123:
   \   0000094C   0xE105             B.N      ??choose_PD_117
   3419                case 5:
   3420                  {
   3421                    switch(track_form)
   \                     ??choose_PD_116:
   \   0000094E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000950   0x2C01             CMP      R4,#+1
   \   00000952   0xD004             BEQ.N    ??choose_PD_126
   \   00000954   0xD32E             BCC.N    ??choose_PD_127
   \   00000956   0x2C03             CMP      R4,#+3
   \   00000958   0xD01E             BEQ.N    ??choose_PD_128
   \   0000095A   0xD30F             BCC.N    ??choose_PD_129
   \   0000095C   0xE02A             B.N      ??choose_PD_127
   3422                    {
   3423                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3424                    case 1:Servo.P+=3;Servo.D+=1;break;
   \                     ??choose_PD_126:
   \   0000095E   0xF8DF 0x04D4      LDR.W    R0,??choose_PD_28+0x4
   \   00000962   0x8800             LDRH     R0,[R0, #+0]
   \   00000964   0x1CC0             ADDS     R0,R0,#+3
   \   00000966   0xF8DF 0x14CC      LDR.W    R1,??choose_PD_28+0x4
   \   0000096A   0x8008             STRH     R0,[R1, #+0]
   \   0000096C   0xF8DF 0x04C4      LDR.W    R0,??choose_PD_28+0x4
   \   00000970   0x8880             LDRH     R0,[R0, #+4]
   \   00000972   0x1C40             ADDS     R0,R0,#+1
   \   00000974   0xF8DF 0x14BC      LDR.W    R1,??choose_PD_28+0x4
   \   00000978   0x8088             STRH     R0,[R1, #+4]
   \   0000097A   0xE01B             B.N      ??choose_PD_127
   3425                    case 2:Servo.P+=2;Servo.D+=0;break;
   \                     ??choose_PD_129:
   \   0000097C   0xF8DF 0x04B4      LDR.W    R0,??choose_PD_28+0x4
   \   00000980   0x8800             LDRH     R0,[R0, #+0]
   \   00000982   0x1C80             ADDS     R0,R0,#+2
   \   00000984   0xF8DF 0x14AC      LDR.W    R1,??choose_PD_28+0x4
   \   00000988   0x8008             STRH     R0,[R1, #+0]
   \   0000098A   0xF8DF 0x04A8      LDR.W    R0,??choose_PD_28+0x4
   \   0000098E   0xF8DF 0x14A4      LDR.W    R1,??choose_PD_28+0x4
   \   00000992   0x8889             LDRH     R1,[R1, #+4]
   \   00000994   0x8081             STRH     R1,[R0, #+4]
   \   00000996   0xE00D             B.N      ??choose_PD_127
   3426                    case 3:Servo.P+=1;Servo.D-=1;break;
   \                     ??choose_PD_128:
   \   00000998   0xF8DF 0x0498      LDR.W    R0,??choose_PD_28+0x4
   \   0000099C   0x8800             LDRH     R0,[R0, #+0]
   \   0000099E   0x1C40             ADDS     R0,R0,#+1
   \   000009A0   0xF8DF 0x1490      LDR.W    R1,??choose_PD_28+0x4
   \   000009A4   0x8008             STRH     R0,[R1, #+0]
   \   000009A6   0xF8DF 0x048C      LDR.W    R0,??choose_PD_28+0x4
   \   000009AA   0x8880             LDRH     R0,[R0, #+4]
   \   000009AC   0x1E40             SUBS     R0,R0,#+1
   \   000009AE   0xF8DF 0x1484      LDR.W    R1,??choose_PD_28+0x4
   \   000009B2   0x8088             STRH     R0,[R1, #+4]
   3427                    }
   3428                  }break;
   \                     ??choose_PD_127:
   \   000009B4   0xE0D1             B.N      ??choose_PD_117
   3429                case 4:
   3430                  {
   3431                    switch(track_form)
   \                     ??choose_PD_113:
   \   000009B6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000009B8   0x2C01             CMP      R4,#+1
   \   000009BA   0xD004             BEQ.N    ??choose_PD_130
   \   000009BC   0xD32E             BCC.N    ??choose_PD_131
   \   000009BE   0x2C03             CMP      R4,#+3
   \   000009C0   0xD01E             BEQ.N    ??choose_PD_132
   \   000009C2   0xD30E             BCC.N    ??choose_PD_133
   \   000009C4   0xE02A             B.N      ??choose_PD_131
   3432                    {
   3433                      case 1:Servo.P+=3;Servo.D+=0;break;
   \                     ??choose_PD_130:
   \   000009C6   0xF8DF 0x046C      LDR.W    R0,??choose_PD_28+0x4
   \   000009CA   0x8800             LDRH     R0,[R0, #+0]
   \   000009CC   0x1CC0             ADDS     R0,R0,#+3
   \   000009CE   0xF8DF 0x1464      LDR.W    R1,??choose_PD_28+0x4
   \   000009D2   0x8008             STRH     R0,[R1, #+0]
   \   000009D4   0xF8DF 0x045C      LDR.W    R0,??choose_PD_28+0x4
   \   000009D8   0xF8DF 0x1458      LDR.W    R1,??choose_PD_28+0x4
   \   000009DC   0x8889             LDRH     R1,[R1, #+4]
   \   000009DE   0x8081             STRH     R1,[R0, #+4]
   \   000009E0   0xE01C             B.N      ??choose_PD_131
   3434                      case 2:Servo.P+=2;Servo.D-=1;break;
   \                     ??choose_PD_133:
   \   000009E2   0xF8DF 0x0450      LDR.W    R0,??choose_PD_28+0x4
   \   000009E6   0x8800             LDRH     R0,[R0, #+0]
   \   000009E8   0x1C80             ADDS     R0,R0,#+2
   \   000009EA   0xF8DF 0x1448      LDR.W    R1,??choose_PD_28+0x4
   \   000009EE   0x8008             STRH     R0,[R1, #+0]
   \   000009F0   0xF8DF 0x0440      LDR.W    R0,??choose_PD_28+0x4
   \   000009F4   0x8880             LDRH     R0,[R0, #+4]
   \   000009F6   0x1E40             SUBS     R0,R0,#+1
   \   000009F8   0xF8DF 0x1438      LDR.W    R1,??choose_PD_28+0x4
   \   000009FC   0x8088             STRH     R0,[R1, #+4]
   \   000009FE   0xE00D             B.N      ??choose_PD_131
   3435                      case 3:Servo.P+=1;Servo.D-=2;break;
   \                     ??choose_PD_132:
   \   00000A00   0xF8DF 0x0430      LDR.W    R0,??choose_PD_28+0x4
   \   00000A04   0x8800             LDRH     R0,[R0, #+0]
   \   00000A06   0x1C40             ADDS     R0,R0,#+1
   \   00000A08   0xF8DF 0x1428      LDR.W    R1,??choose_PD_28+0x4
   \   00000A0C   0x8008             STRH     R0,[R1, #+0]
   \   00000A0E   0xF8DF 0x0424      LDR.W    R0,??choose_PD_28+0x4
   \   00000A12   0x8880             LDRH     R0,[R0, #+4]
   \   00000A14   0x1E80             SUBS     R0,R0,#+2
   \   00000A16   0xF8DF 0x141C      LDR.W    R1,??choose_PD_28+0x4
   \   00000A1A   0x8088             STRH     R0,[R1, #+4]
   3436                    }
   3437                  }break;
   \                     ??choose_PD_131:
   \   00000A1C   0xE09D             B.N      ??choose_PD_117
   3438                case 3:
   3439                  {
   3440                    switch(track_form)
   \                     ??choose_PD_114:
   \   00000A1E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000A20   0x2C01             CMP      R4,#+1
   \   00000A22   0xD004             BEQ.N    ??choose_PD_134
   \   00000A24   0xD32F             BCC.N    ??choose_PD_135
   \   00000A26   0x2C03             CMP      R4,#+3
   \   00000A28   0xD01F             BEQ.N    ??choose_PD_136
   \   00000A2A   0xD30F             BCC.N    ??choose_PD_137
   \   00000A2C   0xE02B             B.N      ??choose_PD_135
   3441                    {
   3442                    case 1:Servo.P+=3;Servo.D-=1;break;
   \                     ??choose_PD_134:
   \   00000A2E   0xF8DF 0x0404      LDR.W    R0,??choose_PD_28+0x4
   \   00000A32   0x8800             LDRH     R0,[R0, #+0]
   \   00000A34   0x1CC0             ADDS     R0,R0,#+3
   \   00000A36   0xF8DF 0x13FC      LDR.W    R1,??choose_PD_28+0x4
   \   00000A3A   0x8008             STRH     R0,[R1, #+0]
   \   00000A3C   0xF8DF 0x03F4      LDR.W    R0,??choose_PD_28+0x4
   \   00000A40   0x8880             LDRH     R0,[R0, #+4]
   \   00000A42   0x1E40             SUBS     R0,R0,#+1
   \   00000A44   0xF8DF 0x13EC      LDR.W    R1,??choose_PD_28+0x4
   \   00000A48   0x8088             STRH     R0,[R1, #+4]
   \   00000A4A   0xE01C             B.N      ??choose_PD_135
   3443                    case 2:Servo.P+=2;Servo.D-=2;break;
   \                     ??choose_PD_137:
   \   00000A4C   0xF8DF 0x03E4      LDR.W    R0,??choose_PD_28+0x4
   \   00000A50   0x8800             LDRH     R0,[R0, #+0]
   \   00000A52   0x1C80             ADDS     R0,R0,#+2
   \   00000A54   0xF8DF 0x13DC      LDR.W    R1,??choose_PD_28+0x4
   \   00000A58   0x8008             STRH     R0,[R1, #+0]
   \   00000A5A   0xF8DF 0x03D8      LDR.W    R0,??choose_PD_28+0x4
   \   00000A5E   0x8880             LDRH     R0,[R0, #+4]
   \   00000A60   0x1E80             SUBS     R0,R0,#+2
   \   00000A62   0xF8DF 0x13D0      LDR.W    R1,??choose_PD_28+0x4
   \   00000A66   0x8088             STRH     R0,[R1, #+4]
   \   00000A68   0xE00D             B.N      ??choose_PD_135
   3444                    case 3:Servo.P+=1;Servo.D-=3;break;
   \                     ??choose_PD_136:
   \   00000A6A   0xF8DF 0x03C8      LDR.W    R0,??choose_PD_28+0x4
   \   00000A6E   0x8800             LDRH     R0,[R0, #+0]
   \   00000A70   0x1C40             ADDS     R0,R0,#+1
   \   00000A72   0xF8DF 0x13C0      LDR.W    R1,??choose_PD_28+0x4
   \   00000A76   0x8008             STRH     R0,[R1, #+0]
   \   00000A78   0xF8DF 0x03B8      LDR.W    R0,??choose_PD_28+0x4
   \   00000A7C   0x8880             LDRH     R0,[R0, #+4]
   \   00000A7E   0x1EC0             SUBS     R0,R0,#+3
   \   00000A80   0xF8DF 0x13B0      LDR.W    R1,??choose_PD_28+0x4
   \   00000A84   0x8088             STRH     R0,[R1, #+4]
   3445                    }
   3446                  }break;
   \                     ??choose_PD_135:
   \   00000A86   0xE068             B.N      ??choose_PD_117
   3447                case 2:
   3448                  {
   3449                    switch(track_form)
   \                     ??choose_PD_111:
   \   00000A88   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000A8A   0x2C01             CMP      R4,#+1
   \   00000A8C   0xD004             BEQ.N    ??choose_PD_138
   \   00000A8E   0xD32F             BCC.N    ??choose_PD_139
   \   00000A90   0x2C03             CMP      R4,#+3
   \   00000A92   0xD01F             BEQ.N    ??choose_PD_140
   \   00000A94   0xD30F             BCC.N    ??choose_PD_141
   \   00000A96   0xE02B             B.N      ??choose_PD_139
   3450                    {
   3451                    case 1:Servo.P+=3;Servo.D-=2;break;
   \                     ??choose_PD_138:
   \   00000A98   0xF8DF 0x0398      LDR.W    R0,??choose_PD_28+0x4
   \   00000A9C   0x8800             LDRH     R0,[R0, #+0]
   \   00000A9E   0x1CC0             ADDS     R0,R0,#+3
   \   00000AA0   0xF8DF 0x1390      LDR.W    R1,??choose_PD_28+0x4
   \   00000AA4   0x8008             STRH     R0,[R1, #+0]
   \   00000AA6   0xF8DF 0x038C      LDR.W    R0,??choose_PD_28+0x4
   \   00000AAA   0x8880             LDRH     R0,[R0, #+4]
   \   00000AAC   0x1E80             SUBS     R0,R0,#+2
   \   00000AAE   0xF8DF 0x1384      LDR.W    R1,??choose_PD_28+0x4
   \   00000AB2   0x8088             STRH     R0,[R1, #+4]
   \   00000AB4   0xE01C             B.N      ??choose_PD_139
   3452                    case 2:Servo.P+=2;Servo.D-=3;break;
   \                     ??choose_PD_141:
   \   00000AB6   0xF8DF 0x037C      LDR.W    R0,??choose_PD_28+0x4
   \   00000ABA   0x8800             LDRH     R0,[R0, #+0]
   \   00000ABC   0x1C80             ADDS     R0,R0,#+2
   \   00000ABE   0xF8DF 0x1374      LDR.W    R1,??choose_PD_28+0x4
   \   00000AC2   0x8008             STRH     R0,[R1, #+0]
   \   00000AC4   0xF8DF 0x036C      LDR.W    R0,??choose_PD_28+0x4
   \   00000AC8   0x8880             LDRH     R0,[R0, #+4]
   \   00000ACA   0x1EC0             SUBS     R0,R0,#+3
   \   00000ACC   0xF8DF 0x1364      LDR.W    R1,??choose_PD_28+0x4
   \   00000AD0   0x8088             STRH     R0,[R1, #+4]
   \   00000AD2   0xE00D             B.N      ??choose_PD_139
   3453                    case 3:Servo.P+=1;Servo.D-=4;break;
   \                     ??choose_PD_140:
   \   00000AD4   0xF8DF 0x035C      LDR.W    R0,??choose_PD_28+0x4
   \   00000AD8   0x8800             LDRH     R0,[R0, #+0]
   \   00000ADA   0x1C40             ADDS     R0,R0,#+1
   \   00000ADC   0xF8DF 0x1354      LDR.W    R1,??choose_PD_28+0x4
   \   00000AE0   0x8008             STRH     R0,[R1, #+0]
   \   00000AE2   0xF8DF 0x0350      LDR.W    R0,??choose_PD_28+0x4
   \   00000AE6   0x8880             LDRH     R0,[R0, #+4]
   \   00000AE8   0x1F00             SUBS     R0,R0,#+4
   \   00000AEA   0xF8DF 0x1348      LDR.W    R1,??choose_PD_28+0x4
   \   00000AEE   0x8088             STRH     R0,[R1, #+4]
   3454                    }
   3455                  }break;
   \                     ??choose_PD_139:
   \   00000AF0   0xE033             B.N      ??choose_PD_117
   3456                case 1:
   3457                  {
   3458                    switch(track_form)
   \                     ??choose_PD_112:
   \   00000AF2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000AF4   0x2C01             CMP      R4,#+1
   \   00000AF6   0xD004             BEQ.N    ??choose_PD_142
   \   00000AF8   0xD32F             BCC.N    ??choose_PD_143
   \   00000AFA   0x2C03             CMP      R4,#+3
   \   00000AFC   0xD01F             BEQ.N    ??choose_PD_144
   \   00000AFE   0xD30F             BCC.N    ??choose_PD_145
   \   00000B00   0xE02B             B.N      ??choose_PD_143
   3459                    {
   3460                    case 1:Servo.P+=3;Servo.D-=3;break;
   \                     ??choose_PD_142:
   \   00000B02   0xF8DF 0x0330      LDR.W    R0,??choose_PD_28+0x4
   \   00000B06   0x8800             LDRH     R0,[R0, #+0]
   \   00000B08   0x1CC0             ADDS     R0,R0,#+3
   \   00000B0A   0xF8DF 0x1328      LDR.W    R1,??choose_PD_28+0x4
   \   00000B0E   0x8008             STRH     R0,[R1, #+0]
   \   00000B10   0xF8DF 0x0320      LDR.W    R0,??choose_PD_28+0x4
   \   00000B14   0x8880             LDRH     R0,[R0, #+4]
   \   00000B16   0x1EC0             SUBS     R0,R0,#+3
   \   00000B18   0xF8DF 0x1318      LDR.W    R1,??choose_PD_28+0x4
   \   00000B1C   0x8088             STRH     R0,[R1, #+4]
   \   00000B1E   0xE01C             B.N      ??choose_PD_143
   3461                    case 2:Servo.P+=2;Servo.D-=4;break;
   \                     ??choose_PD_145:
   \   00000B20   0xF8DF 0x0310      LDR.W    R0,??choose_PD_28+0x4
   \   00000B24   0x8800             LDRH     R0,[R0, #+0]
   \   00000B26   0x1C80             ADDS     R0,R0,#+2
   \   00000B28   0xF8DF 0x1308      LDR.W    R1,??choose_PD_28+0x4
   \   00000B2C   0x8008             STRH     R0,[R1, #+0]
   \   00000B2E   0xF8DF 0x0304      LDR.W    R0,??choose_PD_28+0x4
   \   00000B32   0x8880             LDRH     R0,[R0, #+4]
   \   00000B34   0x1F00             SUBS     R0,R0,#+4
   \   00000B36   0xF8DF 0x12FC      LDR.W    R1,??choose_PD_28+0x4
   \   00000B3A   0x8088             STRH     R0,[R1, #+4]
   \   00000B3C   0xE00D             B.N      ??choose_PD_143
   3462                    case 3:Servo.P+=1;Servo.D-=5;break;
   \                     ??choose_PD_144:
   \   00000B3E   0xF8DF 0x02F4      LDR.W    R0,??choose_PD_28+0x4
   \   00000B42   0x8800             LDRH     R0,[R0, #+0]
   \   00000B44   0x1C40             ADDS     R0,R0,#+1
   \   00000B46   0xF8DF 0x12EC      LDR.W    R1,??choose_PD_28+0x4
   \   00000B4A   0x8008             STRH     R0,[R1, #+0]
   \   00000B4C   0xF8DF 0x02E4      LDR.W    R0,??choose_PD_28+0x4
   \   00000B50   0x8880             LDRH     R0,[R0, #+4]
   \   00000B52   0x1F40             SUBS     R0,R0,#+5
   \   00000B54   0xF8DF 0x12DC      LDR.W    R1,??choose_PD_28+0x4
   \   00000B58   0x8088             STRH     R0,[R1, #+4]
   3463                    }
   3464                  }break;
   3465                }
   3466              }break;
   \                     ??choose_PD_143:
   \                     ??choose_PD_117:
   \   00000B5A   0xF000 0xBD3F      B.W      ??choose_PD_37
   3467            case 4:
   3468              {
   3469                switch(position_now_D)
   \                     ??choose_PD_33:
   \   00000B5E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000B60   0x2800             CMP      R0,#+0
   \   00000B62   0xD00C             BEQ.N    ??choose_PD_146
   \   00000B64   0x2802             CMP      R0,#+2
   \   00000B66   0xF000 0x80C1      BEQ.W    ??choose_PD_147
   \   00000B6A   0xF0C0 0x80E7      BCC.W    ??choose_PD_148
   \   00000B6E   0x2804             CMP      R0,#+4
   \   00000B70   0xD06D             BEQ.N    ??choose_PD_149
   \   00000B72   0xF0C0 0x8093      BCC.W    ??choose_PD_150
   \   00000B76   0x2806             CMP      R0,#+6
   \   00000B78   0xD01B             BEQ.N    ??choose_PD_151
   \   00000B7A   0xD341             BCC.N    ??choose_PD_152
   \   00000B7C   0xE105             B.N      ??choose_PD_153
   3470                {
   3471                   case -6:
   3472                  {
   3473                    switch(track_form)
   3474                    {
   3475                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3476                    case 1:Servo.P+=2;Servo.D+=2;break;
   3477                    case 2:Servo.P+=1;Servo.D+=1;break;
   3478                    case 3:Servo.P+=0;Servo.D+=0;break;
   3479                    }
   3480                  }break;
   3481                case -5:
   3482                  {
   3483                    switch(track_form)
   3484                    {
   3485                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3486                    case 1:Servo.P+=2;Servo.D+=1;break;
   3487                    case 2:Servo.P+=1;Servo.D+=0;break;
   3488                    case 3:Servo.P+=0;Servo.D-=1;break;
   3489                    }
   3490                  }break;
   3491                case -4:
   3492                  {
   3493                    switch(track_form)
   3494                    {
   3495                      case 1:Servo.P+=2;Servo.D+=0;break;
   3496                      case 2:Servo.P+=1;Servo.D-=1;break;
   3497                      case 3:Servo.P+=0;Servo.D-=2;break;
   3498                    }
   3499                  }break;
   3500                case -3:
   3501                  {
   3502                    switch(track_form)
   3503                    {
   3504                    case 1:Servo.P+=2;Servo.D-=1;break;
   3505                    case 2:Servo.P+=1;Servo.D-=2;break;
   3506                    case 3:Servo.P+=0;Servo.D-=3;break;
   3507                    }
   3508                  }break;
   3509                case -2:
   3510                  {
   3511                    switch(track_form)
   3512                    {
   3513                    case 1:Servo.P+=2;Servo.D-=2;break;
   3514                    case 2:Servo.P+=1;Servo.D-=3;break;
   3515                    case 3:Servo.P+=0;Servo.D-=4;break;
   3516                    }
   3517                  }break;
   3518                case -1:
   3519                  {
   3520                    switch(track_form)
   3521                    {
   3522                    case 1:Servo.P+=2;Servo.D-=3;break;
   3523                    case 2:Servo.P+=1;Servo.D-=4;break;
   3524                    case 3:Servo.P+=0;Servo.D-=5;break;
   3525                    }
   3526                  }break;
   3527                case 0:
   3528                   {
   3529                    switch(track_form)
   \                     ??choose_PD_146:
   \   00000B7E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B80   0x2C01             CMP      R4,#+1
   \   00000B82   0xD004             BEQ.N    ??choose_PD_154
   \   00000B84   0xD314             BCC.N    ??choose_PD_155
   \   00000B86   0x2C03             CMP      R4,#+3
   \   00000B88   0xD00E             BEQ.N    ??choose_PD_156
   \   00000B8A   0xD307             BCC.N    ??choose_PD_157
   \   00000B8C   0xE010             B.N      ??choose_PD_155
   3530                    {
   3531                    case 1:Servo.P+=2;break;
   \                     ??choose_PD_154:
   \   00000B8E   0xF8DF 0x02A4      LDR.W    R0,??choose_PD_28+0x4
   \   00000B92   0x8800             LDRH     R0,[R0, #+0]
   \   00000B94   0x1C80             ADDS     R0,R0,#+2
   \   00000B96   0x49A7             LDR.N    R1,??choose_PD_28+0x4
   \   00000B98   0x8008             STRH     R0,[R1, #+0]
   \   00000B9A   0xE009             B.N      ??choose_PD_155
   3532                    case 2:Servo.P+=1;break;
   \                     ??choose_PD_157:
   \   00000B9C   0x48A5             LDR.N    R0,??choose_PD_28+0x4
   \   00000B9E   0x8800             LDRH     R0,[R0, #+0]
   \   00000BA0   0x1C40             ADDS     R0,R0,#+1
   \   00000BA2   0x49A4             LDR.N    R1,??choose_PD_28+0x4
   \   00000BA4   0x8008             STRH     R0,[R1, #+0]
   \   00000BA6   0xE003             B.N      ??choose_PD_155
   3533                    case 3:Servo.P+=0;break;
   \                     ??choose_PD_156:
   \   00000BA8   0x48A2             LDR.N    R0,??choose_PD_28+0x4
   \   00000BAA   0x49A2             LDR.N    R1,??choose_PD_28+0x4
   \   00000BAC   0x8809             LDRH     R1,[R1, #+0]
   \   00000BAE   0x8001             STRH     R1,[R0, #+0]
   3534                    }
   3535                  }break;
   \                     ??choose_PD_155:
   \   00000BB0   0xE0EB             B.N      ??choose_PD_153
   3536                case 6:
   3537                  {
   3538                    switch(track_form)
   \                     ??choose_PD_151:
   \   00000BB2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000BB4   0x2C01             CMP      R4,#+1
   \   00000BB6   0xD004             BEQ.N    ??choose_PD_158
   \   00000BB8   0xD321             BCC.N    ??choose_PD_159
   \   00000BBA   0x2C03             CMP      R4,#+3
   \   00000BBC   0xD017             BEQ.N    ??choose_PD_160
   \   00000BBE   0xD30B             BCC.N    ??choose_PD_161
   \   00000BC0   0xE01D             B.N      ??choose_PD_159
   3539                    {
   3540                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3541                    case 1:Servo.P+=2;Servo.D+=2;break;
   \                     ??choose_PD_158:
   \   00000BC2   0x489C             LDR.N    R0,??choose_PD_28+0x4
   \   00000BC4   0x8800             LDRH     R0,[R0, #+0]
   \   00000BC6   0x1C80             ADDS     R0,R0,#+2
   \   00000BC8   0x499A             LDR.N    R1,??choose_PD_28+0x4
   \   00000BCA   0x8008             STRH     R0,[R1, #+0]
   \   00000BCC   0x4899             LDR.N    R0,??choose_PD_28+0x4
   \   00000BCE   0x8880             LDRH     R0,[R0, #+4]
   \   00000BD0   0x1C80             ADDS     R0,R0,#+2
   \   00000BD2   0x4998             LDR.N    R1,??choose_PD_28+0x4
   \   00000BD4   0x8088             STRH     R0,[R1, #+4]
   \   00000BD6   0xE012             B.N      ??choose_PD_159
   3542                    case 2:Servo.P+=1;Servo.D+=1;break;
   \                     ??choose_PD_161:
   \   00000BD8   0x4896             LDR.N    R0,??choose_PD_28+0x4
   \   00000BDA   0x8800             LDRH     R0,[R0, #+0]
   \   00000BDC   0x1C40             ADDS     R0,R0,#+1
   \   00000BDE   0x4995             LDR.N    R1,??choose_PD_28+0x4
   \   00000BE0   0x8008             STRH     R0,[R1, #+0]
   \   00000BE2   0x4894             LDR.N    R0,??choose_PD_28+0x4
   \   00000BE4   0x8880             LDRH     R0,[R0, #+4]
   \   00000BE6   0x1C40             ADDS     R0,R0,#+1
   \   00000BE8   0x4992             LDR.N    R1,??choose_PD_28+0x4
   \   00000BEA   0x8088             STRH     R0,[R1, #+4]
   \   00000BEC   0xE007             B.N      ??choose_PD_159
   3543                    case 3:Servo.P+=0;Servo.D+=0;break;
   \                     ??choose_PD_160:
   \   00000BEE   0x4891             LDR.N    R0,??choose_PD_28+0x4
   \   00000BF0   0x4990             LDR.N    R1,??choose_PD_28+0x4
   \   00000BF2   0x8809             LDRH     R1,[R1, #+0]
   \   00000BF4   0x8001             STRH     R1,[R0, #+0]
   \   00000BF6   0x488F             LDR.N    R0,??choose_PD_28+0x4
   \   00000BF8   0x498E             LDR.N    R1,??choose_PD_28+0x4
   \   00000BFA   0x8889             LDRH     R1,[R1, #+4]
   \   00000BFC   0x8081             STRH     R1,[R0, #+4]
   3544                    }
   3545                  }break;
   \                     ??choose_PD_159:
   \   00000BFE   0xE0C4             B.N      ??choose_PD_153
   3546                case 5:
   3547                  {
   3548                    switch(track_form)
   \                     ??choose_PD_152:
   \   00000C00   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C02   0x2C01             CMP      R4,#+1
   \   00000C04   0xD004             BEQ.N    ??choose_PD_162
   \   00000C06   0xD321             BCC.N    ??choose_PD_163
   \   00000C08   0x2C03             CMP      R4,#+3
   \   00000C0A   0xD016             BEQ.N    ??choose_PD_164
   \   00000C0C   0xD30B             BCC.N    ??choose_PD_165
   \   00000C0E   0xE01D             B.N      ??choose_PD_163
   3549                    {
   3550                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3551                    case 1:Servo.P+=2;Servo.D+=1;break;
   \                     ??choose_PD_162:
   \   00000C10   0x4888             LDR.N    R0,??choose_PD_28+0x4
   \   00000C12   0x8800             LDRH     R0,[R0, #+0]
   \   00000C14   0x1C80             ADDS     R0,R0,#+2
   \   00000C16   0x4987             LDR.N    R1,??choose_PD_28+0x4
   \   00000C18   0x8008             STRH     R0,[R1, #+0]
   \   00000C1A   0x4886             LDR.N    R0,??choose_PD_28+0x4
   \   00000C1C   0x8880             LDRH     R0,[R0, #+4]
   \   00000C1E   0x1C40             ADDS     R0,R0,#+1
   \   00000C20   0x4984             LDR.N    R1,??choose_PD_28+0x4
   \   00000C22   0x8088             STRH     R0,[R1, #+4]
   \   00000C24   0xE012             B.N      ??choose_PD_163
   3552                    case 2:Servo.P+=1;Servo.D+=0;break;
   \                     ??choose_PD_165:
   \   00000C26   0x4883             LDR.N    R0,??choose_PD_28+0x4
   \   00000C28   0x8800             LDRH     R0,[R0, #+0]
   \   00000C2A   0x1C40             ADDS     R0,R0,#+1
   \   00000C2C   0x4981             LDR.N    R1,??choose_PD_28+0x4
   \   00000C2E   0x8008             STRH     R0,[R1, #+0]
   \   00000C30   0x4880             LDR.N    R0,??choose_PD_28+0x4
   \   00000C32   0x4980             LDR.N    R1,??choose_PD_28+0x4
   \   00000C34   0x8889             LDRH     R1,[R1, #+4]
   \   00000C36   0x8081             STRH     R1,[R0, #+4]
   \   00000C38   0xE008             B.N      ??choose_PD_163
   3553                    case 3:Servo.P+=0;Servo.D-=1;break;
   \                     ??choose_PD_164:
   \   00000C3A   0x487E             LDR.N    R0,??choose_PD_28+0x4
   \   00000C3C   0x497D             LDR.N    R1,??choose_PD_28+0x4
   \   00000C3E   0x8809             LDRH     R1,[R1, #+0]
   \   00000C40   0x8001             STRH     R1,[R0, #+0]
   \   00000C42   0x487C             LDR.N    R0,??choose_PD_28+0x4
   \   00000C44   0x8880             LDRH     R0,[R0, #+4]
   \   00000C46   0x1E40             SUBS     R0,R0,#+1
   \   00000C48   0x497A             LDR.N    R1,??choose_PD_28+0x4
   \   00000C4A   0x8088             STRH     R0,[R1, #+4]
   3554                    }
   3555                  }break;
   \                     ??choose_PD_163:
   \   00000C4C   0xE09D             B.N      ??choose_PD_153
   3556                case 4:
   3557                  {
   3558                    switch(track_form)
   \                     ??choose_PD_149:
   \   00000C4E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C50   0x2C01             CMP      R4,#+1
   \   00000C52   0xD004             BEQ.N    ??choose_PD_166
   \   00000C54   0xD321             BCC.N    ??choose_PD_167
   \   00000C56   0x2C03             CMP      R4,#+3
   \   00000C58   0xD016             BEQ.N    ??choose_PD_168
   \   00000C5A   0xD30A             BCC.N    ??choose_PD_169
   \   00000C5C   0xE01D             B.N      ??choose_PD_167
   3559                    {
   3560                      case 1:Servo.P+=2;Servo.D+=0;break;
   \                     ??choose_PD_166:
   \   00000C5E   0x4875             LDR.N    R0,??choose_PD_28+0x4
   \   00000C60   0x8800             LDRH     R0,[R0, #+0]
   \   00000C62   0x1C80             ADDS     R0,R0,#+2
   \   00000C64   0x4973             LDR.N    R1,??choose_PD_28+0x4
   \   00000C66   0x8008             STRH     R0,[R1, #+0]
   \   00000C68   0x4872             LDR.N    R0,??choose_PD_28+0x4
   \   00000C6A   0x4972             LDR.N    R1,??choose_PD_28+0x4
   \   00000C6C   0x8889             LDRH     R1,[R1, #+4]
   \   00000C6E   0x8081             STRH     R1,[R0, #+4]
   \   00000C70   0xE013             B.N      ??choose_PD_167
   3561                      case 2:Servo.P+=1;Servo.D-=1;break;
   \                     ??choose_PD_169:
   \   00000C72   0x4870             LDR.N    R0,??choose_PD_28+0x4
   \   00000C74   0x8800             LDRH     R0,[R0, #+0]
   \   00000C76   0x1C40             ADDS     R0,R0,#+1
   \   00000C78   0x496E             LDR.N    R1,??choose_PD_28+0x4
   \   00000C7A   0x8008             STRH     R0,[R1, #+0]
   \   00000C7C   0x486D             LDR.N    R0,??choose_PD_28+0x4
   \   00000C7E   0x8880             LDRH     R0,[R0, #+4]
   \   00000C80   0x1E40             SUBS     R0,R0,#+1
   \   00000C82   0x496C             LDR.N    R1,??choose_PD_28+0x4
   \   00000C84   0x8088             STRH     R0,[R1, #+4]
   \   00000C86   0xE008             B.N      ??choose_PD_167
   3562                      case 3:Servo.P+=0;Servo.D-=2;break;
   \                     ??choose_PD_168:
   \   00000C88   0x486A             LDR.N    R0,??choose_PD_28+0x4
   \   00000C8A   0x496A             LDR.N    R1,??choose_PD_28+0x4
   \   00000C8C   0x8809             LDRH     R1,[R1, #+0]
   \   00000C8E   0x8001             STRH     R1,[R0, #+0]
   \   00000C90   0x4868             LDR.N    R0,??choose_PD_28+0x4
   \   00000C92   0x8880             LDRH     R0,[R0, #+4]
   \   00000C94   0x1E80             SUBS     R0,R0,#+2
   \   00000C96   0x4967             LDR.N    R1,??choose_PD_28+0x4
   \   00000C98   0x8088             STRH     R0,[R1, #+4]
   3563                    }
   3564                  }break;
   \                     ??choose_PD_167:
   \   00000C9A   0xE076             B.N      ??choose_PD_153
   3565                case 3:
   3566                  {
   3567                    switch(track_form)
   \                     ??choose_PD_150:
   \   00000C9C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000C9E   0x2C01             CMP      R4,#+1
   \   00000CA0   0xD004             BEQ.N    ??choose_PD_170
   \   00000CA2   0xD322             BCC.N    ??choose_PD_171
   \   00000CA4   0x2C03             CMP      R4,#+3
   \   00000CA6   0xD017             BEQ.N    ??choose_PD_172
   \   00000CA8   0xD30B             BCC.N    ??choose_PD_173
   \   00000CAA   0xE01E             B.N      ??choose_PD_171
   3568                    {
   3569                    case 1:Servo.P+=2;Servo.D-=1;break;
   \                     ??choose_PD_170:
   \   00000CAC   0x4861             LDR.N    R0,??choose_PD_28+0x4
   \   00000CAE   0x8800             LDRH     R0,[R0, #+0]
   \   00000CB0   0x1C80             ADDS     R0,R0,#+2
   \   00000CB2   0x4960             LDR.N    R1,??choose_PD_28+0x4
   \   00000CB4   0x8008             STRH     R0,[R1, #+0]
   \   00000CB6   0x485F             LDR.N    R0,??choose_PD_28+0x4
   \   00000CB8   0x8880             LDRH     R0,[R0, #+4]
   \   00000CBA   0x1E40             SUBS     R0,R0,#+1
   \   00000CBC   0x495D             LDR.N    R1,??choose_PD_28+0x4
   \   00000CBE   0x8088             STRH     R0,[R1, #+4]
   \   00000CC0   0xE013             B.N      ??choose_PD_171
   3570                    case 2:Servo.P+=1;Servo.D-=2;break;
   \                     ??choose_PD_173:
   \   00000CC2   0x485C             LDR.N    R0,??choose_PD_28+0x4
   \   00000CC4   0x8800             LDRH     R0,[R0, #+0]
   \   00000CC6   0x1C40             ADDS     R0,R0,#+1
   \   00000CC8   0x495A             LDR.N    R1,??choose_PD_28+0x4
   \   00000CCA   0x8008             STRH     R0,[R1, #+0]
   \   00000CCC   0x4859             LDR.N    R0,??choose_PD_28+0x4
   \   00000CCE   0x8880             LDRH     R0,[R0, #+4]
   \   00000CD0   0x1E80             SUBS     R0,R0,#+2
   \   00000CD2   0x4958             LDR.N    R1,??choose_PD_28+0x4
   \   00000CD4   0x8088             STRH     R0,[R1, #+4]
   \   00000CD6   0xE008             B.N      ??choose_PD_171
   3571                    case 3:Servo.P+=0;Servo.D-=3;break;
   \                     ??choose_PD_172:
   \   00000CD8   0x4856             LDR.N    R0,??choose_PD_28+0x4
   \   00000CDA   0x4956             LDR.N    R1,??choose_PD_28+0x4
   \   00000CDC   0x8809             LDRH     R1,[R1, #+0]
   \   00000CDE   0x8001             STRH     R1,[R0, #+0]
   \   00000CE0   0x4854             LDR.N    R0,??choose_PD_28+0x4
   \   00000CE2   0x8880             LDRH     R0,[R0, #+4]
   \   00000CE4   0x1EC0             SUBS     R0,R0,#+3
   \   00000CE6   0x4953             LDR.N    R1,??choose_PD_28+0x4
   \   00000CE8   0x8088             STRH     R0,[R1, #+4]
   3572                    }
   3573                  }break;
   \                     ??choose_PD_171:
   \   00000CEA   0xE04E             B.N      ??choose_PD_153
   3574                case 2:
   3575                  {
   3576                    switch(track_form)
   \                     ??choose_PD_147:
   \   00000CEC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000CEE   0x2C01             CMP      R4,#+1
   \   00000CF0   0xD004             BEQ.N    ??choose_PD_174
   \   00000CF2   0xD322             BCC.N    ??choose_PD_175
   \   00000CF4   0x2C03             CMP      R4,#+3
   \   00000CF6   0xD017             BEQ.N    ??choose_PD_176
   \   00000CF8   0xD30B             BCC.N    ??choose_PD_177
   \   00000CFA   0xE01E             B.N      ??choose_PD_175
   3577                    {
   3578                    case 1:Servo.P+=2;Servo.D-=2;break;
   \                     ??choose_PD_174:
   \   00000CFC   0x484D             LDR.N    R0,??choose_PD_28+0x4
   \   00000CFE   0x8800             LDRH     R0,[R0, #+0]
   \   00000D00   0x1C80             ADDS     R0,R0,#+2
   \   00000D02   0x494C             LDR.N    R1,??choose_PD_28+0x4
   \   00000D04   0x8008             STRH     R0,[R1, #+0]
   \   00000D06   0x484B             LDR.N    R0,??choose_PD_28+0x4
   \   00000D08   0x8880             LDRH     R0,[R0, #+4]
   \   00000D0A   0x1E80             SUBS     R0,R0,#+2
   \   00000D0C   0x4949             LDR.N    R1,??choose_PD_28+0x4
   \   00000D0E   0x8088             STRH     R0,[R1, #+4]
   \   00000D10   0xE013             B.N      ??choose_PD_175
   3579                    case 2:Servo.P+=1;Servo.D-=3;break;
   \                     ??choose_PD_177:
   \   00000D12   0x4848             LDR.N    R0,??choose_PD_28+0x4
   \   00000D14   0x8800             LDRH     R0,[R0, #+0]
   \   00000D16   0x1C40             ADDS     R0,R0,#+1
   \   00000D18   0x4946             LDR.N    R1,??choose_PD_28+0x4
   \   00000D1A   0x8008             STRH     R0,[R1, #+0]
   \   00000D1C   0x4845             LDR.N    R0,??choose_PD_28+0x4
   \   00000D1E   0x8880             LDRH     R0,[R0, #+4]
   \   00000D20   0x1EC0             SUBS     R0,R0,#+3
   \   00000D22   0x4944             LDR.N    R1,??choose_PD_28+0x4
   \   00000D24   0x8088             STRH     R0,[R1, #+4]
   \   00000D26   0xE008             B.N      ??choose_PD_175
   3580                    case 3:Servo.P+=0;Servo.D-=4;break;
   \                     ??choose_PD_176:
   \   00000D28   0x4842             LDR.N    R0,??choose_PD_28+0x4
   \   00000D2A   0x4942             LDR.N    R1,??choose_PD_28+0x4
   \   00000D2C   0x8809             LDRH     R1,[R1, #+0]
   \   00000D2E   0x8001             STRH     R1,[R0, #+0]
   \   00000D30   0x4840             LDR.N    R0,??choose_PD_28+0x4
   \   00000D32   0x8880             LDRH     R0,[R0, #+4]
   \   00000D34   0x1F00             SUBS     R0,R0,#+4
   \   00000D36   0x493F             LDR.N    R1,??choose_PD_28+0x4
   \   00000D38   0x8088             STRH     R0,[R1, #+4]
   3581                    }
   3582                  }break;
   \                     ??choose_PD_175:
   \   00000D3A   0xE026             B.N      ??choose_PD_153
   3583                case 1:
   3584                  {
   3585                    switch(track_form)
   \                     ??choose_PD_148:
   \   00000D3C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000D3E   0x2C01             CMP      R4,#+1
   \   00000D40   0xD004             BEQ.N    ??choose_PD_178
   \   00000D42   0xD322             BCC.N    ??choose_PD_179
   \   00000D44   0x2C03             CMP      R4,#+3
   \   00000D46   0xD017             BEQ.N    ??choose_PD_180
   \   00000D48   0xD30B             BCC.N    ??choose_PD_181
   \   00000D4A   0xE01E             B.N      ??choose_PD_179
   3586                    {
   3587                    case 1:Servo.P+=2;Servo.D-=3;break;
   \                     ??choose_PD_178:
   \   00000D4C   0x4839             LDR.N    R0,??choose_PD_28+0x4
   \   00000D4E   0x8800             LDRH     R0,[R0, #+0]
   \   00000D50   0x1C80             ADDS     R0,R0,#+2
   \   00000D52   0x4938             LDR.N    R1,??choose_PD_28+0x4
   \   00000D54   0x8008             STRH     R0,[R1, #+0]
   \   00000D56   0x4837             LDR.N    R0,??choose_PD_28+0x4
   \   00000D58   0x8880             LDRH     R0,[R0, #+4]
   \   00000D5A   0x1EC0             SUBS     R0,R0,#+3
   \   00000D5C   0x4935             LDR.N    R1,??choose_PD_28+0x4
   \   00000D5E   0x8088             STRH     R0,[R1, #+4]
   \   00000D60   0xE013             B.N      ??choose_PD_179
   3588                    case 2:Servo.P+=1;Servo.D-=4;break;
   \                     ??choose_PD_181:
   \   00000D62   0x4834             LDR.N    R0,??choose_PD_28+0x4
   \   00000D64   0x8800             LDRH     R0,[R0, #+0]
   \   00000D66   0x1C40             ADDS     R0,R0,#+1
   \   00000D68   0x4932             LDR.N    R1,??choose_PD_28+0x4
   \   00000D6A   0x8008             STRH     R0,[R1, #+0]
   \   00000D6C   0x4831             LDR.N    R0,??choose_PD_28+0x4
   \   00000D6E   0x8880             LDRH     R0,[R0, #+4]
   \   00000D70   0x1F00             SUBS     R0,R0,#+4
   \   00000D72   0x4930             LDR.N    R1,??choose_PD_28+0x4
   \   00000D74   0x8088             STRH     R0,[R1, #+4]
   \   00000D76   0xE008             B.N      ??choose_PD_179
   3589                    case 3:Servo.P+=0;Servo.D-=5;break;
   \                     ??choose_PD_180:
   \   00000D78   0x482E             LDR.N    R0,??choose_PD_28+0x4
   \   00000D7A   0x492E             LDR.N    R1,??choose_PD_28+0x4
   \   00000D7C   0x8809             LDRH     R1,[R1, #+0]
   \   00000D7E   0x8001             STRH     R1,[R0, #+0]
   \   00000D80   0x482C             LDR.N    R0,??choose_PD_28+0x4
   \   00000D82   0x8880             LDRH     R0,[R0, #+4]
   \   00000D84   0x1F40             SUBS     R0,R0,#+5
   \   00000D86   0x492B             LDR.N    R1,??choose_PD_28+0x4
   \   00000D88   0x8088             STRH     R0,[R1, #+4]
   3590                    }
   3591                  }break;
   3592                }
   3593              }break;
   \                     ??choose_PD_179:
   \                     ??choose_PD_153:
   \   00000D8A   0xF000 0xBC27      B.W      ??choose_PD_37
   3594           case 3:
   3595              {
   3596                switch(position_now_D)
   \                     ??choose_PD_34:
   \   00000D8E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000D90   0x2800             CMP      R0,#+0
   \   00000D92   0xD00D             BEQ.N    ??choose_PD_182
   \   00000D94   0x2802             CMP      R0,#+2
   \   00000D96   0xF000 0x80E9      BEQ.W    ??choose_PD_183
   \   00000D9A   0xF0C0 0x811B      BCC.W    ??choose_PD_184
   \   00000D9E   0x2804             CMP      R0,#+4
   \   00000DA0   0xF000 0x807D      BEQ.W    ??choose_PD_185
   \   00000DA4   0xF0C0 0x80AE      BCC.W    ??choose_PD_186
   \   00000DA8   0x2806             CMP      R0,#+6
   \   00000DAA   0xD01A             BEQ.N    ??choose_PD_187
   \   00000DAC   0xD344             BCC.N    ??choose_PD_188
   \   00000DAE   0xE144             B.N      ??choose_PD_189
   3597                {
   3598             case -6:
   3599                  {
   3600                    switch(track_form)
   3601                    {
   3602                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3603                    case 1:Servo.P+=1;Servo.D+=2;break;
   3604                    case 2:Servo.P+=0;Servo.D+=1;break;
   3605                    case 3:Servo.P-=1;Servo.D+=0;break;
   3606                    }
   3607                  }break;
   3608                case -5:
   3609                  {
   3610                    switch(track_form)
   3611                    {
   3612                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3613                    case 1:Servo.P+=1;Servo.D+=1;break;
   3614                    case 2:Servo.P+=0;Servo.D+=0;break;
   3615                    case 3:Servo.P-=1;Servo.D-=1;break;
   3616                    }
   3617                  }break;
   3618                case -4:
   3619                  {
   3620                    switch(track_form)
   3621                    {
   3622                      case 1:Servo.P+=1;Servo.D+=0;break;
   3623                      case 2:Servo.P+=0;Servo.D-=1;break;
   3624                      case 3:Servo.P-=1;Servo.D-=2;break;
   3625                    }
   3626                  }break;
   3627                case -3:
   3628                  {
   3629                    switch(track_form)
   3630                    {
   3631                    case 1:Servo.P+=1;Servo.D-=1;break;
   3632                    case 2:Servo.P+=0;Servo.D-=2;break;
   3633                    case 3:Servo.P-=1;Servo.D-=3;break;
   3634                    }
   3635                  }break;
   3636                case -2:
   3637                  {
   3638                    switch(track_form)
   3639                    {
   3640                    case 1:Servo.P+=1;Servo.D-=2;break;
   3641                    case 2:Servo.P+=0;Servo.D-=3;break;
   3642                    case 3:Servo.P-=1;Servo.D-=4;break;
   3643                    }
   3644                  }break;
   3645                case -1:
   3646                  {
   3647                    switch(track_form)
   3648                    {
   3649                    case 1:Servo.P+=1;Servo.D-=3;break;
   3650                    case 2:Servo.P+=0;Servo.D-=4;break;
   3651                    case 3:Servo.P-=1;Servo.D-=5;break;
   3652                    }
   3653                  }break;
   3654                case 0:
   3655                   {
   3656                    switch(track_form)
   \                     ??choose_PD_182:
   \   00000DB0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000DB2   0x2C01             CMP      R4,#+1
   \   00000DB4   0xD004             BEQ.N    ??choose_PD_190
   \   00000DB6   0xD313             BCC.N    ??choose_PD_191
   \   00000DB8   0x2C03             CMP      R4,#+3
   \   00000DBA   0xD00C             BEQ.N    ??choose_PD_192
   \   00000DBC   0xD306             BCC.N    ??choose_PD_193
   \   00000DBE   0xE00F             B.N      ??choose_PD_191
   3657                    {
   3658                    case 1:Servo.P+=1;break;
   \                     ??choose_PD_190:
   \   00000DC0   0x481C             LDR.N    R0,??choose_PD_28+0x4
   \   00000DC2   0x8800             LDRH     R0,[R0, #+0]
   \   00000DC4   0x1C40             ADDS     R0,R0,#+1
   \   00000DC6   0x491B             LDR.N    R1,??choose_PD_28+0x4
   \   00000DC8   0x8008             STRH     R0,[R1, #+0]
   \   00000DCA   0xE009             B.N      ??choose_PD_191
   3659                    case 2:Servo.P+=0;break;
   \                     ??choose_PD_193:
   \   00000DCC   0x4819             LDR.N    R0,??choose_PD_28+0x4
   \   00000DCE   0x4919             LDR.N    R1,??choose_PD_28+0x4
   \   00000DD0   0x8809             LDRH     R1,[R1, #+0]
   \   00000DD2   0x8001             STRH     R1,[R0, #+0]
   \   00000DD4   0xE004             B.N      ??choose_PD_191
   3660                    case 3:Servo.P-=1;break;
   \                     ??choose_PD_192:
   \   00000DD6   0x4817             LDR.N    R0,??choose_PD_28+0x4
   \   00000DD8   0x8800             LDRH     R0,[R0, #+0]
   \   00000DDA   0x1E40             SUBS     R0,R0,#+1
   \   00000DDC   0x4915             LDR.N    R1,??choose_PD_28+0x4
   \   00000DDE   0x8008             STRH     R0,[R1, #+0]
   3661                    }
   3662                  }break;
   \                     ??choose_PD_191:
   \   00000DE0   0xE12B             B.N      ??choose_PD_189
   3663                case 6:
   3664                  {
   3665                    switch(track_form)
   \                     ??choose_PD_187:
   \   00000DE2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000DE4   0x2C01             CMP      R4,#+1
   \   00000DE6   0xD004             BEQ.N    ??choose_PD_194
   \   00000DE8   0xD321             BCC.N    ??choose_PD_195
   \   00000DEA   0x2C03             CMP      R4,#+3
   \   00000DEC   0xD016             BEQ.N    ??choose_PD_196
   \   00000DEE   0xD30B             BCC.N    ??choose_PD_197
   \   00000DF0   0xE01D             B.N      ??choose_PD_195
   3666                    {
   3667                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3668                    case 1:Servo.P+=1;Servo.D+=2;break;
   \                     ??choose_PD_194:
   \   00000DF2   0x4810             LDR.N    R0,??choose_PD_28+0x4
   \   00000DF4   0x8800             LDRH     R0,[R0, #+0]
   \   00000DF6   0x1C40             ADDS     R0,R0,#+1
   \   00000DF8   0x490E             LDR.N    R1,??choose_PD_28+0x4
   \   00000DFA   0x8008             STRH     R0,[R1, #+0]
   \   00000DFC   0x480D             LDR.N    R0,??choose_PD_28+0x4
   \   00000DFE   0x8880             LDRH     R0,[R0, #+4]
   \   00000E00   0x1C80             ADDS     R0,R0,#+2
   \   00000E02   0x490C             LDR.N    R1,??choose_PD_28+0x4
   \   00000E04   0x8088             STRH     R0,[R1, #+4]
   \   00000E06   0xE012             B.N      ??choose_PD_195
   3669                    case 2:Servo.P+=0;Servo.D+=1;break;
   \                     ??choose_PD_197:
   \   00000E08   0x480A             LDR.N    R0,??choose_PD_28+0x4
   \   00000E0A   0x490A             LDR.N    R1,??choose_PD_28+0x4
   \   00000E0C   0x8809             LDRH     R1,[R1, #+0]
   \   00000E0E   0x8001             STRH     R1,[R0, #+0]
   \   00000E10   0x4808             LDR.N    R0,??choose_PD_28+0x4
   \   00000E12   0x8880             LDRH     R0,[R0, #+4]
   \   00000E14   0x1C40             ADDS     R0,R0,#+1
   \   00000E16   0x4907             LDR.N    R1,??choose_PD_28+0x4
   \   00000E18   0x8088             STRH     R0,[R1, #+4]
   \   00000E1A   0xE008             B.N      ??choose_PD_195
   3670                    case 3:Servo.P-=1;Servo.D+=0;break;
   \                     ??choose_PD_196:
   \   00000E1C   0x4805             LDR.N    R0,??choose_PD_28+0x4
   \   00000E1E   0x8800             LDRH     R0,[R0, #+0]
   \   00000E20   0x1E40             SUBS     R0,R0,#+1
   \   00000E22   0x4904             LDR.N    R1,??choose_PD_28+0x4
   \   00000E24   0x8008             STRH     R0,[R1, #+0]
   \   00000E26   0x4803             LDR.N    R0,??choose_PD_28+0x4
   \   00000E28   0x4902             LDR.N    R1,??choose_PD_28+0x4
   \   00000E2A   0x8889             LDRH     R1,[R1, #+4]
   \   00000E2C   0x8081             STRH     R1,[R0, #+4]
   3671                    }
   3672                  }break;
   \                     ??choose_PD_195:
   \   00000E2E   0xE104             B.N      ??choose_PD_189
   \                     ??choose_PD_28:
   \   00000E30   0x........         DC32     position_diff
   \   00000E34   0x........         DC32     Servo
   3673                case 5:
   3674                  {
   3675                    switch(track_form)
   \                     ??choose_PD_188:
   \   00000E38   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000E3A   0x2C01             CMP      R4,#+1
   \   00000E3C   0xD004             BEQ.N    ??choose_PD_198
   \   00000E3E   0xD32D             BCC.N    ??choose_PD_199
   \   00000E40   0x2C03             CMP      R4,#+3
   \   00000E42   0xD01D             BEQ.N    ??choose_PD_200
   \   00000E44   0xD30F             BCC.N    ??choose_PD_201
   \   00000E46   0xE029             B.N      ??choose_PD_199
   3676                    {
   3677                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3678                    case 1:Servo.P+=1;Servo.D+=1;break;
   \                     ??choose_PD_198:
   \   00000E48   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000E4C   0x8800             LDRH     R0,[R0, #+0]
   \   00000E4E   0x1C40             ADDS     R0,R0,#+1
   \   00000E50   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000E54   0x8008             STRH     R0,[R1, #+0]
   \   00000E56   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000E5A   0x8880             LDRH     R0,[R0, #+4]
   \   00000E5C   0x1C40             ADDS     R0,R0,#+1
   \   00000E5E   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000E62   0x8088             STRH     R0,[R1, #+4]
   \   00000E64   0xE01A             B.N      ??choose_PD_199
   3679                    case 2:Servo.P+=0;Servo.D+=0;break;
   \                     ??choose_PD_201:
   \   00000E66   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000E6A   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000E6E   0x8809             LDRH     R1,[R1, #+0]
   \   00000E70   0x8001             STRH     R1,[R0, #+0]
   \   00000E72   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000E76   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000E7A   0x8889             LDRH     R1,[R1, #+4]
   \   00000E7C   0x8081             STRH     R1,[R0, #+4]
   \   00000E7E   0xE00D             B.N      ??choose_PD_199
   3680                    case 3:Servo.P-=1;Servo.D-=1;break;
   \                     ??choose_PD_200:
   \   00000E80   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000E84   0x8800             LDRH     R0,[R0, #+0]
   \   00000E86   0x1E40             SUBS     R0,R0,#+1
   \   00000E88   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000E8C   0x8008             STRH     R0,[R1, #+0]
   \   00000E8E   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000E92   0x8880             LDRH     R0,[R0, #+4]
   \   00000E94   0x1E40             SUBS     R0,R0,#+1
   \   00000E96   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000E9A   0x8088             STRH     R0,[R1, #+4]
   3681                    }
   3682                  }break;
   \                     ??choose_PD_199:
   \   00000E9C   0xE0CD             B.N      ??choose_PD_189
   3683                case 4:
   3684                  {
   3685                    switch(track_form)
   \                     ??choose_PD_185:
   \   00000E9E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000EA0   0x2C01             CMP      R4,#+1
   \   00000EA2   0xD004             BEQ.N    ??choose_PD_202
   \   00000EA4   0xD32D             BCC.N    ??choose_PD_203
   \   00000EA6   0x2C03             CMP      R4,#+3
   \   00000EA8   0xD01D             BEQ.N    ??choose_PD_204
   \   00000EAA   0xD30E             BCC.N    ??choose_PD_205
   \   00000EAC   0xE029             B.N      ??choose_PD_203
   3686                    {
   3687                      case 1:Servo.P+=1;Servo.D+=0;break;
   \                     ??choose_PD_202:
   \   00000EAE   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000EB2   0x8800             LDRH     R0,[R0, #+0]
   \   00000EB4   0x1C40             ADDS     R0,R0,#+1
   \   00000EB6   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000EBA   0x8008             STRH     R0,[R1, #+0]
   \   00000EBC   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000EC0   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000EC4   0x8889             LDRH     R1,[R1, #+4]
   \   00000EC6   0x8081             STRH     R1,[R0, #+4]
   \   00000EC8   0xE01B             B.N      ??choose_PD_203
   3688                      case 2:Servo.P+=0;Servo.D-=1;break;
   \                     ??choose_PD_205:
   \   00000ECA   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000ECE   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000ED2   0x8809             LDRH     R1,[R1, #+0]
   \   00000ED4   0x8001             STRH     R1,[R0, #+0]
   \   00000ED6   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000EDA   0x8880             LDRH     R0,[R0, #+4]
   \   00000EDC   0x1E40             SUBS     R0,R0,#+1
   \   00000EDE   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000EE2   0x8088             STRH     R0,[R1, #+4]
   \   00000EE4   0xE00D             B.N      ??choose_PD_203
   3689                      case 3:Servo.P-=1;Servo.D-=2;break;
   \                     ??choose_PD_204:
   \   00000EE6   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000EEA   0x8800             LDRH     R0,[R0, #+0]
   \   00000EEC   0x1E40             SUBS     R0,R0,#+1
   \   00000EEE   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000EF2   0x8008             STRH     R0,[R1, #+0]
   \   00000EF4   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000EF8   0x8880             LDRH     R0,[R0, #+4]
   \   00000EFA   0x1E80             SUBS     R0,R0,#+2
   \   00000EFC   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000F00   0x8088             STRH     R0,[R1, #+4]
   3690                    }
   3691                  }break;
   \                     ??choose_PD_203:
   \   00000F02   0xE09A             B.N      ??choose_PD_189
   3692                case 3:
   3693                  {
   3694                    switch(track_form)
   \                     ??choose_PD_186:
   \   00000F04   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000F06   0x2C01             CMP      R4,#+1
   \   00000F08   0xD004             BEQ.N    ??choose_PD_206
   \   00000F0A   0xD32E             BCC.N    ??choose_PD_207
   \   00000F0C   0x2C03             CMP      R4,#+3
   \   00000F0E   0xD01E             BEQ.N    ??choose_PD_208
   \   00000F10   0xD30F             BCC.N    ??choose_PD_209
   \   00000F12   0xE02A             B.N      ??choose_PD_207
   3695                    {
   3696                    case 1:Servo.P+=1;Servo.D-=1;break;
   \                     ??choose_PD_206:
   \   00000F14   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000F18   0x8800             LDRH     R0,[R0, #+0]
   \   00000F1A   0x1C40             ADDS     R0,R0,#+1
   \   00000F1C   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000F20   0x8008             STRH     R0,[R1, #+0]
   \   00000F22   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000F26   0x8880             LDRH     R0,[R0, #+4]
   \   00000F28   0x1E40             SUBS     R0,R0,#+1
   \   00000F2A   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000F2E   0x8088             STRH     R0,[R1, #+4]
   \   00000F30   0xE01B             B.N      ??choose_PD_207
   3697                    case 2:Servo.P+=0;Servo.D-=2;break;
   \                     ??choose_PD_209:
   \   00000F32   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000F36   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000F3A   0x8809             LDRH     R1,[R1, #+0]
   \   00000F3C   0x8001             STRH     R1,[R0, #+0]
   \   00000F3E   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000F42   0x8880             LDRH     R0,[R0, #+4]
   \   00000F44   0x1E80             SUBS     R0,R0,#+2
   \   00000F46   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000F4A   0x8088             STRH     R0,[R1, #+4]
   \   00000F4C   0xE00D             B.N      ??choose_PD_207
   3698                    case 3:Servo.P-=1;Servo.D-=3;break;
   \                     ??choose_PD_208:
   \   00000F4E   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000F52   0x8800             LDRH     R0,[R0, #+0]
   \   00000F54   0x1E40             SUBS     R0,R0,#+1
   \   00000F56   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000F5A   0x8008             STRH     R0,[R1, #+0]
   \   00000F5C   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000F60   0x8880             LDRH     R0,[R0, #+4]
   \   00000F62   0x1EC0             SUBS     R0,R0,#+3
   \   00000F64   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000F68   0x8088             STRH     R0,[R1, #+4]
   3699                    }
   3700                  }break;
   \                     ??choose_PD_207:
   \   00000F6A   0xE066             B.N      ??choose_PD_189
   3701                case 2:
   3702                  {
   3703                    switch(track_form)
   \                     ??choose_PD_183:
   \   00000F6C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000F6E   0x2C01             CMP      R4,#+1
   \   00000F70   0xD004             BEQ.N    ??choose_PD_210
   \   00000F72   0xD32E             BCC.N    ??choose_PD_211
   \   00000F74   0x2C03             CMP      R4,#+3
   \   00000F76   0xD01E             BEQ.N    ??choose_PD_212
   \   00000F78   0xD30F             BCC.N    ??choose_PD_213
   \   00000F7A   0xE02A             B.N      ??choose_PD_211
   3704                    {
   3705                    case 1:Servo.P+=1;Servo.D-=2;break;
   \                     ??choose_PD_210:
   \   00000F7C   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000F80   0x8800             LDRH     R0,[R0, #+0]
   \   00000F82   0x1C40             ADDS     R0,R0,#+1
   \   00000F84   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000F88   0x8008             STRH     R0,[R1, #+0]
   \   00000F8A   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000F8E   0x8880             LDRH     R0,[R0, #+4]
   \   00000F90   0x1E80             SUBS     R0,R0,#+2
   \   00000F92   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000F96   0x8088             STRH     R0,[R1, #+4]
   \   00000F98   0xE01B             B.N      ??choose_PD_211
   3706                    case 2:Servo.P+=0;Servo.D-=3;break;
   \                     ??choose_PD_213:
   \   00000F9A   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000F9E   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000FA2   0x8809             LDRH     R1,[R1, #+0]
   \   00000FA4   0x8001             STRH     R1,[R0, #+0]
   \   00000FA6   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000FAA   0x8880             LDRH     R0,[R0, #+4]
   \   00000FAC   0x1EC0             SUBS     R0,R0,#+3
   \   00000FAE   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000FB2   0x8088             STRH     R0,[R1, #+4]
   \   00000FB4   0xE00D             B.N      ??choose_PD_211
   3707                    case 3:Servo.P-=1;Servo.D-=4;break;
   \                     ??choose_PD_212:
   \   00000FB6   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000FBA   0x8800             LDRH     R0,[R0, #+0]
   \   00000FBC   0x1E40             SUBS     R0,R0,#+1
   \   00000FBE   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000FC2   0x8008             STRH     R0,[R1, #+0]
   \   00000FC4   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000FC8   0x8880             LDRH     R0,[R0, #+4]
   \   00000FCA   0x1F00             SUBS     R0,R0,#+4
   \   00000FCC   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000FD0   0x8088             STRH     R0,[R1, #+4]
   3708                    }
   3709                  }break;
   \                     ??choose_PD_211:
   \   00000FD2   0xE032             B.N      ??choose_PD_189
   3710                case 1:
   3711                  {
   3712                    switch(track_form)
   \                     ??choose_PD_184:
   \   00000FD4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000FD6   0x2C01             CMP      R4,#+1
   \   00000FD8   0xD004             BEQ.N    ??choose_PD_214
   \   00000FDA   0xD32E             BCC.N    ??choose_PD_215
   \   00000FDC   0x2C03             CMP      R4,#+3
   \   00000FDE   0xD01E             BEQ.N    ??choose_PD_216
   \   00000FE0   0xD30F             BCC.N    ??choose_PD_217
   \   00000FE2   0xE02A             B.N      ??choose_PD_215
   3713                    {
   3714                    case 1:Servo.P+=1;Servo.D-=3;break;
   \                     ??choose_PD_214:
   \   00000FE4   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000FE8   0x8800             LDRH     R0,[R0, #+0]
   \   00000FEA   0x1C40             ADDS     R0,R0,#+1
   \   00000FEC   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000FF0   0x8008             STRH     R0,[R1, #+0]
   \   00000FF2   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00000FF6   0x8880             LDRH     R0,[R0, #+4]
   \   00000FF8   0x1EC0             SUBS     R0,R0,#+3
   \   00000FFA   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00000FFE   0x8088             STRH     R0,[R1, #+4]
   \   00001000   0xE01B             B.N      ??choose_PD_215
   3715                    case 2:Servo.P+=0;Servo.D-=4;break;
   \                     ??choose_PD_217:
   \   00001002   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001006   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000100A   0x8809             LDRH     R1,[R1, #+0]
   \   0000100C   0x8001             STRH     R1,[R0, #+0]
   \   0000100E   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001012   0x8880             LDRH     R0,[R0, #+4]
   \   00001014   0x1F00             SUBS     R0,R0,#+4
   \   00001016   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000101A   0x8088             STRH     R0,[R1, #+4]
   \   0000101C   0xE00D             B.N      ??choose_PD_215
   3716                    case 3:Servo.P-=1;Servo.D-=5;break;
   \                     ??choose_PD_216:
   \   0000101E   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001022   0x8800             LDRH     R0,[R0, #+0]
   \   00001024   0x1E40             SUBS     R0,R0,#+1
   \   00001026   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000102A   0x8008             STRH     R0,[R1, #+0]
   \   0000102C   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001030   0x8880             LDRH     R0,[R0, #+4]
   \   00001032   0x1F40             SUBS     R0,R0,#+5
   \   00001034   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001038   0x8088             STRH     R0,[R1, #+4]
   3717                    }
   3718                  }break;
   3719                }
   3720              }break;
   \                     ??choose_PD_215:
   \                     ??choose_PD_189:
   \   0000103A   0xE2CF             B.N      ??choose_PD_37
   3721           case 2:
   3722              {
   3723                switch(position_now_D)
   \                     ??choose_PD_31:
   \   0000103C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000103E   0x2800             CMP      R0,#+0
   \   00001040   0xD00D             BEQ.N    ??choose_PD_218
   \   00001042   0x2802             CMP      R0,#+2
   \   00001044   0xF000 0x80F7      BEQ.W    ??choose_PD_219
   \   00001048   0xF0C0 0x8129      BCC.W    ??choose_PD_220
   \   0000104C   0x2804             CMP      R0,#+4
   \   0000104E   0xF000 0x808B      BEQ.W    ??choose_PD_221
   \   00001052   0xF0C0 0x80BC      BCC.W    ??choose_PD_222
   \   00001056   0x2806             CMP      R0,#+6
   \   00001058   0xD020             BEQ.N    ??choose_PD_223
   \   0000105A   0xD352             BCC.N    ??choose_PD_224
   \   0000105C   0xE152             B.N      ??choose_PD_225
   3724                {
   3725               case -6:
   3726                  {
   3727                    switch(track_form)
   3728                    {
   3729                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3730                    case 1:Servo.P+=0;Servo.D+=2;break;
   3731                    case 2:Servo.P-=1;Servo.D+=1;break;
   3732                    case 3:Servo.P-=2;Servo.D+=0;break;
   3733                    }
   3734                  }break;
   3735                case -5:
   3736                  {
   3737                    switch(track_form)
   3738                    {
   3739                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3740                    case 1:Servo.P+=0;Servo.D+=1;break;
   3741                    case 2:Servo.P-=1;Servo.D+=0;break;
   3742                    case 3:Servo.P-=2;Servo.D-=1;break;
   3743                    }
   3744                  }break;
   3745                case -4:
   3746                  {
   3747                    switch(track_form)
   3748                    {
   3749                      case 1:Servo.P+=0;Servo.D+=0;break;
   3750                      case 2:Servo.P-=1;Servo.D-=1;break;
   3751                      case 3:Servo.P-=2;Servo.D-=2;break;
   3752                    }
   3753                  }break;
   3754                case -3:
   3755                  {
   3756                    switch(track_form)
   3757                    {
   3758                    case 1:Servo.P+=0;Servo.D-=1;break;
   3759                    case 2:Servo.P-=1;Servo.D-=2;break;
   3760                    case 3:Servo.P-=2;Servo.D-=3;break;
   3761                    }
   3762                  }break;
   3763                case -2:
   3764                  {
   3765                    switch(track_form)
   3766                    {
   3767                    case 1:Servo.P+=0;Servo.D-=2;break;
   3768                    case 2:Servo.P-=1;Servo.D-=3;break;
   3769                    case 3:Servo.P-=2;Servo.D-=4;break;
   3770                    }
   3771                  }break;
   3772                case -1:
   3773                  {
   3774                    switch(track_form)
   3775                    {
   3776                    case 1:Servo.P+=0;Servo.D-=3;break;
   3777                    case 2:Servo.P-=1;Servo.D-=4;break;
   3778                    case 3:Servo.P-=2;Servo.D-=5;break;
   3779                    }
   3780                  }break;      
   3781                case 0:
   3782                   {
   3783                    switch(track_form)
   \                     ??choose_PD_218:
   \   0000105E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001060   0x2C01             CMP      R4,#+1
   \   00001062   0xD004             BEQ.N    ??choose_PD_226
   \   00001064   0xD319             BCC.N    ??choose_PD_227
   \   00001066   0x2C03             CMP      R4,#+3
   \   00001068   0xD010             BEQ.N    ??choose_PD_228
   \   0000106A   0xD307             BCC.N    ??choose_PD_229
   \   0000106C   0xE015             B.N      ??choose_PD_227
   3784                    {
   3785                    case 1:Servo.P+=0;break;
   \                     ??choose_PD_226:
   \   0000106E   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001072   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001076   0x8809             LDRH     R1,[R1, #+0]
   \   00001078   0x8001             STRH     R1,[R0, #+0]
   \   0000107A   0xE00E             B.N      ??choose_PD_227
   3786                    case 2:Servo.P-=1;break;
   \                     ??choose_PD_229:
   \   0000107C   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001080   0x8800             LDRH     R0,[R0, #+0]
   \   00001082   0x1E40             SUBS     R0,R0,#+1
   \   00001084   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001088   0x8008             STRH     R0,[R1, #+0]
   \   0000108A   0xE006             B.N      ??choose_PD_227
   3787                    case 3:Servo.P-=2;break;
   \                     ??choose_PD_228:
   \   0000108C   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001090   0x8800             LDRH     R0,[R0, #+0]
   \   00001092   0x1E80             SUBS     R0,R0,#+2
   \   00001094   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001098   0x8008             STRH     R0,[R1, #+0]
   3788                    }
   3789                  }break;
   \                     ??choose_PD_227:
   \   0000109A   0xE133             B.N      ??choose_PD_225
   3790                case 6:
   3791                  {
   3792                    switch(track_form)
   \                     ??choose_PD_223:
   \   0000109C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000109E   0x2C01             CMP      R4,#+1
   \   000010A0   0xD004             BEQ.N    ??choose_PD_230
   \   000010A2   0xD32D             BCC.N    ??choose_PD_231
   \   000010A4   0x2C03             CMP      R4,#+3
   \   000010A6   0xD01E             BEQ.N    ??choose_PD_232
   \   000010A8   0xD30E             BCC.N    ??choose_PD_233
   \   000010AA   0xE029             B.N      ??choose_PD_231
   3793                    {
   3794                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3795                    case 1:Servo.P+=0;Servo.D+=2;break;
   \                     ??choose_PD_230:
   \   000010AC   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000010B0   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000010B4   0x8809             LDRH     R1,[R1, #+0]
   \   000010B6   0x8001             STRH     R1,[R0, #+0]
   \   000010B8   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000010BC   0x8880             LDRH     R0,[R0, #+4]
   \   000010BE   0x1C80             ADDS     R0,R0,#+2
   \   000010C0   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000010C4   0x8088             STRH     R0,[R1, #+4]
   \   000010C6   0xE01B             B.N      ??choose_PD_231
   3796                    case 2:Servo.P-=1;Servo.D+=1;break;
   \                     ??choose_PD_233:
   \   000010C8   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000010CC   0x8800             LDRH     R0,[R0, #+0]
   \   000010CE   0x1E40             SUBS     R0,R0,#+1
   \   000010D0   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000010D4   0x8008             STRH     R0,[R1, #+0]
   \   000010D6   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000010DA   0x8880             LDRH     R0,[R0, #+4]
   \   000010DC   0x1C40             ADDS     R0,R0,#+1
   \   000010DE   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000010E2   0x8088             STRH     R0,[R1, #+4]
   \   000010E4   0xE00C             B.N      ??choose_PD_231
   3797                    case 3:Servo.P-=2;Servo.D+=0;break;
   \                     ??choose_PD_232:
   \   000010E6   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000010EA   0x8800             LDRH     R0,[R0, #+0]
   \   000010EC   0x1E80             SUBS     R0,R0,#+2
   \   000010EE   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000010F2   0x8008             STRH     R0,[R1, #+0]
   \   000010F4   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000010F8   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000010FC   0x8889             LDRH     R1,[R1, #+4]
   \   000010FE   0x8081             STRH     R1,[R0, #+4]
   3798                    }
   3799                  }break;
   \                     ??choose_PD_231:
   \   00001100   0xE100             B.N      ??choose_PD_225
   3800                case 5:
   3801                  {
   3802                    switch(track_form)
   \                     ??choose_PD_224:
   \   00001102   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001104   0x2C01             CMP      R4,#+1
   \   00001106   0xD004             BEQ.N    ??choose_PD_234
   \   00001108   0xD32D             BCC.N    ??choose_PD_235
   \   0000110A   0x2C03             CMP      R4,#+3
   \   0000110C   0xD01D             BEQ.N    ??choose_PD_236
   \   0000110E   0xD30E             BCC.N    ??choose_PD_237
   \   00001110   0xE029             B.N      ??choose_PD_235
   3803                    {
   3804                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3805                    case 1:Servo.P+=0;Servo.D+=1;break;
   \                     ??choose_PD_234:
   \   00001112   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001116   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000111A   0x8809             LDRH     R1,[R1, #+0]
   \   0000111C   0x8001             STRH     R1,[R0, #+0]
   \   0000111E   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001122   0x8880             LDRH     R0,[R0, #+4]
   \   00001124   0x1C40             ADDS     R0,R0,#+1
   \   00001126   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000112A   0x8088             STRH     R0,[R1, #+4]
   \   0000112C   0xE01B             B.N      ??choose_PD_235
   3806                    case 2:Servo.P-=1;Servo.D+=0;break;
   \                     ??choose_PD_237:
   \   0000112E   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001132   0x8800             LDRH     R0,[R0, #+0]
   \   00001134   0x1E40             SUBS     R0,R0,#+1
   \   00001136   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000113A   0x8008             STRH     R0,[R1, #+0]
   \   0000113C   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001140   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001144   0x8889             LDRH     R1,[R1, #+4]
   \   00001146   0x8081             STRH     R1,[R0, #+4]
   \   00001148   0xE00D             B.N      ??choose_PD_235
   3807                    case 3:Servo.P-=2;Servo.D-=1;break;
   \                     ??choose_PD_236:
   \   0000114A   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000114E   0x8800             LDRH     R0,[R0, #+0]
   \   00001150   0x1E80             SUBS     R0,R0,#+2
   \   00001152   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001156   0x8008             STRH     R0,[R1, #+0]
   \   00001158   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000115C   0x8880             LDRH     R0,[R0, #+4]
   \   0000115E   0x1E40             SUBS     R0,R0,#+1
   \   00001160   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001164   0x8088             STRH     R0,[R1, #+4]
   3808                    }
   3809                  }break;
   \                     ??choose_PD_235:
   \   00001166   0xE0CD             B.N      ??choose_PD_225
   3810                case 4:
   3811                  {
   3812                    switch(track_form)
   \                     ??choose_PD_221:
   \   00001168   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000116A   0x2C01             CMP      R4,#+1
   \   0000116C   0xD004             BEQ.N    ??choose_PD_238
   \   0000116E   0xD32D             BCC.N    ??choose_PD_239
   \   00001170   0x2C03             CMP      R4,#+3
   \   00001172   0xD01D             BEQ.N    ??choose_PD_240
   \   00001174   0xD30D             BCC.N    ??choose_PD_241
   \   00001176   0xE029             B.N      ??choose_PD_239
   3813                    {
   3814                      case 1:Servo.P+=0;Servo.D+=0;break;
   \                     ??choose_PD_238:
   \   00001178   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000117C   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001180   0x8809             LDRH     R1,[R1, #+0]
   \   00001182   0x8001             STRH     R1,[R0, #+0]
   \   00001184   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001188   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000118C   0x8889             LDRH     R1,[R1, #+4]
   \   0000118E   0x8081             STRH     R1,[R0, #+4]
   \   00001190   0xE01C             B.N      ??choose_PD_239
   3815                      case 2:Servo.P-=1;Servo.D-=1;break;
   \                     ??choose_PD_241:
   \   00001192   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001196   0x8800             LDRH     R0,[R0, #+0]
   \   00001198   0x1E40             SUBS     R0,R0,#+1
   \   0000119A   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000119E   0x8008             STRH     R0,[R1, #+0]
   \   000011A0   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000011A4   0x8880             LDRH     R0,[R0, #+4]
   \   000011A6   0x1E40             SUBS     R0,R0,#+1
   \   000011A8   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000011AC   0x8088             STRH     R0,[R1, #+4]
   \   000011AE   0xE00D             B.N      ??choose_PD_239
   3816                      case 3:Servo.P-=2;Servo.D-=2;break;
   \                     ??choose_PD_240:
   \   000011B0   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000011B4   0x8800             LDRH     R0,[R0, #+0]
   \   000011B6   0x1E80             SUBS     R0,R0,#+2
   \   000011B8   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000011BC   0x8008             STRH     R0,[R1, #+0]
   \   000011BE   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000011C2   0x8880             LDRH     R0,[R0, #+4]
   \   000011C4   0x1E80             SUBS     R0,R0,#+2
   \   000011C6   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000011CA   0x8088             STRH     R0,[R1, #+4]
   3817                    }
   3818                  }break;
   \                     ??choose_PD_239:
   \   000011CC   0xE09A             B.N      ??choose_PD_225
   3819                case 3:
   3820                  {
   3821                    switch(track_form)
   \                     ??choose_PD_222:
   \   000011CE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000011D0   0x2C01             CMP      R4,#+1
   \   000011D2   0xD004             BEQ.N    ??choose_PD_242
   \   000011D4   0xD32E             BCC.N    ??choose_PD_243
   \   000011D6   0x2C03             CMP      R4,#+3
   \   000011D8   0xD01E             BEQ.N    ??choose_PD_244
   \   000011DA   0xD30E             BCC.N    ??choose_PD_245
   \   000011DC   0xE02A             B.N      ??choose_PD_243
   3822                    {
   3823                    case 1:Servo.P+=0;Servo.D-=1;break;
   \                     ??choose_PD_242:
   \   000011DE   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000011E2   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000011E6   0x8809             LDRH     R1,[R1, #+0]
   \   000011E8   0x8001             STRH     R1,[R0, #+0]
   \   000011EA   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000011EE   0x8880             LDRH     R0,[R0, #+4]
   \   000011F0   0x1E40             SUBS     R0,R0,#+1
   \   000011F2   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000011F6   0x8088             STRH     R0,[R1, #+4]
   \   000011F8   0xE01C             B.N      ??choose_PD_243
   3824                    case 2:Servo.P-=1;Servo.D-=2;break;
   \                     ??choose_PD_245:
   \   000011FA   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000011FE   0x8800             LDRH     R0,[R0, #+0]
   \   00001200   0x1E40             SUBS     R0,R0,#+1
   \   00001202   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001206   0x8008             STRH     R0,[R1, #+0]
   \   00001208   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000120C   0x8880             LDRH     R0,[R0, #+4]
   \   0000120E   0x1E80             SUBS     R0,R0,#+2
   \   00001210   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001214   0x8088             STRH     R0,[R1, #+4]
   \   00001216   0xE00D             B.N      ??choose_PD_243
   3825                    case 3:Servo.P-=2;Servo.D-=3;break;
   \                     ??choose_PD_244:
   \   00001218   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000121C   0x8800             LDRH     R0,[R0, #+0]
   \   0000121E   0x1E80             SUBS     R0,R0,#+2
   \   00001220   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001224   0x8008             STRH     R0,[R1, #+0]
   \   00001226   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000122A   0x8880             LDRH     R0,[R0, #+4]
   \   0000122C   0x1EC0             SUBS     R0,R0,#+3
   \   0000122E   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001232   0x8088             STRH     R0,[R1, #+4]
   3826                    }
   3827                  }break;
   \                     ??choose_PD_243:
   \   00001234   0xE066             B.N      ??choose_PD_225
   3828                case 2:
   3829                  {
   3830                    switch(track_form)
   \                     ??choose_PD_219:
   \   00001236   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001238   0x2C01             CMP      R4,#+1
   \   0000123A   0xD004             BEQ.N    ??choose_PD_246
   \   0000123C   0xD32E             BCC.N    ??choose_PD_247
   \   0000123E   0x2C03             CMP      R4,#+3
   \   00001240   0xD01E             BEQ.N    ??choose_PD_248
   \   00001242   0xD30E             BCC.N    ??choose_PD_249
   \   00001244   0xE02A             B.N      ??choose_PD_247
   3831                    {
   3832                    case 1:Servo.P+=0;Servo.D-=2;break;
   \                     ??choose_PD_246:
   \   00001246   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000124A   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000124E   0x8809             LDRH     R1,[R1, #+0]
   \   00001250   0x8001             STRH     R1,[R0, #+0]
   \   00001252   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001256   0x8880             LDRH     R0,[R0, #+4]
   \   00001258   0x1E80             SUBS     R0,R0,#+2
   \   0000125A   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000125E   0x8088             STRH     R0,[R1, #+4]
   \   00001260   0xE01C             B.N      ??choose_PD_247
   3833                    case 2:Servo.P-=1;Servo.D-=3;break;
   \                     ??choose_PD_249:
   \   00001262   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001266   0x8800             LDRH     R0,[R0, #+0]
   \   00001268   0x1E40             SUBS     R0,R0,#+1
   \   0000126A   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000126E   0x8008             STRH     R0,[R1, #+0]
   \   00001270   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001274   0x8880             LDRH     R0,[R0, #+4]
   \   00001276   0x1EC0             SUBS     R0,R0,#+3
   \   00001278   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000127C   0x8088             STRH     R0,[R1, #+4]
   \   0000127E   0xE00D             B.N      ??choose_PD_247
   3834                    case 3:Servo.P-=2;Servo.D-=4;break;
   \                     ??choose_PD_248:
   \   00001280   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001284   0x8800             LDRH     R0,[R0, #+0]
   \   00001286   0x1E80             SUBS     R0,R0,#+2
   \   00001288   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000128C   0x8008             STRH     R0,[R1, #+0]
   \   0000128E   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001292   0x8880             LDRH     R0,[R0, #+4]
   \   00001294   0x1F00             SUBS     R0,R0,#+4
   \   00001296   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000129A   0x8088             STRH     R0,[R1, #+4]
   3835                    }
   3836                  }break;
   \                     ??choose_PD_247:
   \   0000129C   0xE032             B.N      ??choose_PD_225
   3837                case 1:
   3838                  {
   3839                    switch(track_form)
   \                     ??choose_PD_220:
   \   0000129E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000012A0   0x2C01             CMP      R4,#+1
   \   000012A2   0xD004             BEQ.N    ??choose_PD_250
   \   000012A4   0xD32E             BCC.N    ??choose_PD_251
   \   000012A6   0x2C03             CMP      R4,#+3
   \   000012A8   0xD01E             BEQ.N    ??choose_PD_252
   \   000012AA   0xD30E             BCC.N    ??choose_PD_253
   \   000012AC   0xE02A             B.N      ??choose_PD_251
   3840                    {
   3841                    case 1:Servo.P+=0;Servo.D-=3;break;
   \                     ??choose_PD_250:
   \   000012AE   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000012B2   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000012B6   0x8809             LDRH     R1,[R1, #+0]
   \   000012B8   0x8001             STRH     R1,[R0, #+0]
   \   000012BA   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000012BE   0x8880             LDRH     R0,[R0, #+4]
   \   000012C0   0x1EC0             SUBS     R0,R0,#+3
   \   000012C2   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000012C6   0x8088             STRH     R0,[R1, #+4]
   \   000012C8   0xE01C             B.N      ??choose_PD_251
   3842                    case 2:Servo.P-=1;Servo.D-=4;break;
   \                     ??choose_PD_253:
   \   000012CA   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000012CE   0x8800             LDRH     R0,[R0, #+0]
   \   000012D0   0x1E40             SUBS     R0,R0,#+1
   \   000012D2   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000012D6   0x8008             STRH     R0,[R1, #+0]
   \   000012D8   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000012DC   0x8880             LDRH     R0,[R0, #+4]
   \   000012DE   0x1F00             SUBS     R0,R0,#+4
   \   000012E0   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000012E4   0x8088             STRH     R0,[R1, #+4]
   \   000012E6   0xE00D             B.N      ??choose_PD_251
   3843                    case 3:Servo.P-=2;Servo.D-=5;break;
   \                     ??choose_PD_252:
   \   000012E8   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000012EC   0x8800             LDRH     R0,[R0, #+0]
   \   000012EE   0x1E80             SUBS     R0,R0,#+2
   \   000012F0   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000012F4   0x8008             STRH     R0,[R1, #+0]
   \   000012F6   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000012FA   0x8880             LDRH     R0,[R0, #+4]
   \   000012FC   0x1F40             SUBS     R0,R0,#+5
   \   000012FE   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001302   0x8088             STRH     R0,[R1, #+4]
   3844                    }
   3845                  }break;
   3846                }
   3847              }break;
   \                     ??choose_PD_251:
   \                     ??choose_PD_225:
   \   00001304   0xE16A             B.N      ??choose_PD_37
   3848          case 1:
   3849              {
   3850                switch(position_now_D)
   \                     ??choose_PD_32:
   \   00001306   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00001308   0x2800             CMP      R0,#+0
   \   0000130A   0xD00D             BEQ.N    ??choose_PD_254
   \   0000130C   0x2802             CMP      R0,#+2
   \   0000130E   0xF000 0x80FC      BEQ.W    ??choose_PD_255
   \   00001312   0xF0C0 0x812F      BCC.W    ??choose_PD_256
   \   00001316   0x2804             CMP      R0,#+4
   \   00001318   0xF000 0x808E      BEQ.W    ??choose_PD_257
   \   0000131C   0xF0C0 0x80C0      BCC.W    ??choose_PD_258
   \   00001320   0x2806             CMP      R0,#+6
   \   00001322   0xD021             BEQ.N    ??choose_PD_259
   \   00001324   0xD354             BCC.N    ??choose_PD_260
   \   00001326   0xE159             B.N      ??choose_PD_261
   3851                {
   3852                 case -6:
   3853                  {
   3854                    switch(track_form)
   3855                    {
   3856                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3857                    case 1:Servo.P-=1;Servo.D+=2;break;
   3858                    case 2:Servo.P-=2;Servo.D+=1;break;
   3859                    case 3:Servo.P-=3;Servo.D+=0;break;
   3860                    }
   3861                  }break;
   3862                case -5:
   3863                  {
   3864                    switch(track_form)
   3865                    {
   3866                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3867                    case 1:Servo.P-=1;Servo.D+=1;break;
   3868                    case 2:Servo.P-=2;Servo.D+=0;break;
   3869                    case 3:Servo.P-=3;Servo.D-=1;break;
   3870                    }
   3871                  }break;
   3872                case -4:
   3873                  {
   3874                    switch(track_form)
   3875                    {
   3876                      case 1:Servo.P-=1;Servo.D+=0;break;
   3877                      case 2:Servo.P-=2;Servo.D-=1;break;
   3878                      case 3:Servo.P-=3;Servo.D-=2;break;
   3879                    }
   3880                  }break;
   3881                case -3:
   3882                  {
   3883                    switch(track_form)
   3884                    {
   3885                    case 1:Servo.P-=1;Servo.D-=1;break;
   3886                    case 2:Servo.P-=2;Servo.D-=2;break;
   3887                    case 3:Servo.P-=3;Servo.D-=3;break;
   3888                    }
   3889                  }break;
   3890                case -2:
   3891                  {
   3892                    switch(track_form)
   3893                    {
   3894                    case 1:Servo.P-=1;Servo.D-=2;break;
   3895                    case 2:Servo.P-=2;Servo.D-=3;break;
   3896                    case 3:Servo.P-=3;Servo.D-=4;break;
   3897                    }
   3898                  }break;
   3899                case -1:
   3900                  {
   3901                    switch(track_form)
   3902                    {
   3903                    case 1:Servo.P-=1;Servo.D-=3;break;
   3904                    case 2:Servo.P-=2;Servo.D-=4;break;
   3905                    case 3:Servo.P-=3;Servo.D-=5;break;
   3906                    }
   3907                  }break;
   3908                case 0:
   3909                   {
   3910                    switch(track_form)
   \                     ??choose_PD_254:
   \   00001328   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000132A   0x2C01             CMP      R4,#+1
   \   0000132C   0xD004             BEQ.N    ??choose_PD_262
   \   0000132E   0xD31A             BCC.N    ??choose_PD_263
   \   00001330   0x2C03             CMP      R4,#+3
   \   00001332   0xD011             BEQ.N    ??choose_PD_264
   \   00001334   0xD308             BCC.N    ??choose_PD_265
   \   00001336   0xE016             B.N      ??choose_PD_263
   3911                    {
   3912                    case 1:Servo.P-=1;break;
   \                     ??choose_PD_262:
   \   00001338   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000133C   0x8800             LDRH     R0,[R0, #+0]
   \   0000133E   0x1E40             SUBS     R0,R0,#+1
   \   00001340   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001344   0x8008             STRH     R0,[R1, #+0]
   \   00001346   0xE00E             B.N      ??choose_PD_263
   3913                    case 2:Servo.P-=2;break;
   \                     ??choose_PD_265:
   \   00001348   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000134C   0x8800             LDRH     R0,[R0, #+0]
   \   0000134E   0x1E80             SUBS     R0,R0,#+2
   \   00001350   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001354   0x8008             STRH     R0,[R1, #+0]
   \   00001356   0xE006             B.N      ??choose_PD_263
   3914                    case 3:Servo.P-=3;break;
   \                     ??choose_PD_264:
   \   00001358   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000135C   0x8800             LDRH     R0,[R0, #+0]
   \   0000135E   0x1EC0             SUBS     R0,R0,#+3
   \   00001360   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001364   0x8008             STRH     R0,[R1, #+0]
   3915                    }
   3916                  }break;
   \                     ??choose_PD_263:
   \   00001366   0xE139             B.N      ??choose_PD_261
   3917                case 6:
   3918                  {
   3919                    switch(track_form)
   \                     ??choose_PD_259:
   \   00001368   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000136A   0x2C01             CMP      R4,#+1
   \   0000136C   0xD004             BEQ.N    ??choose_PD_266
   \   0000136E   0xD32E             BCC.N    ??choose_PD_267
   \   00001370   0x2C03             CMP      R4,#+3
   \   00001372   0xD01F             BEQ.N    ??choose_PD_268
   \   00001374   0xD30F             BCC.N    ??choose_PD_269
   \   00001376   0xE02A             B.N      ??choose_PD_267
   3920                    {
   3921                  //case 1:Servo.P+=5;Servo.D+=1;break;//-6-6
   3922                    case 1:Servo.P-=1;Servo.D+=2;break;
   \                     ??choose_PD_266:
   \   00001378   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000137C   0x8800             LDRH     R0,[R0, #+0]
   \   0000137E   0x1E40             SUBS     R0,R0,#+1
   \   00001380   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001384   0x8008             STRH     R0,[R1, #+0]
   \   00001386   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000138A   0x8880             LDRH     R0,[R0, #+4]
   \   0000138C   0x1C80             ADDS     R0,R0,#+2
   \   0000138E   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001392   0x8088             STRH     R0,[R1, #+4]
   \   00001394   0xE01B             B.N      ??choose_PD_267
   3923                    case 2:Servo.P-=2;Servo.D+=1;break;
   \                     ??choose_PD_269:
   \   00001396   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000139A   0x8800             LDRH     R0,[R0, #+0]
   \   0000139C   0x1E80             SUBS     R0,R0,#+2
   \   0000139E   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000013A2   0x8008             STRH     R0,[R1, #+0]
   \   000013A4   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000013A8   0x8880             LDRH     R0,[R0, #+4]
   \   000013AA   0x1C40             ADDS     R0,R0,#+1
   \   000013AC   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000013B0   0x8088             STRH     R0,[R1, #+4]
   \   000013B2   0xE00C             B.N      ??choose_PD_267
   3924                    case 3:Servo.P-=3;Servo.D+=0;break;
   \                     ??choose_PD_268:
   \   000013B4   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000013B8   0x8800             LDRH     R0,[R0, #+0]
   \   000013BA   0x1EC0             SUBS     R0,R0,#+3
   \   000013BC   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000013C0   0x8008             STRH     R0,[R1, #+0]
   \   000013C2   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000013C6   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000013CA   0x8889             LDRH     R1,[R1, #+4]
   \   000013CC   0x8081             STRH     R1,[R0, #+4]
   3925                    }
   3926                  }break;
   \                     ??choose_PD_267:
   \   000013CE   0xE105             B.N      ??choose_PD_261
   3927                case 5:
   3928                  {
   3929                    switch(track_form)
   \                     ??choose_PD_260:
   \   000013D0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000013D2   0x2C01             CMP      R4,#+1
   \   000013D4   0xD004             BEQ.N    ??choose_PD_270
   \   000013D6   0xD32E             BCC.N    ??choose_PD_271
   \   000013D8   0x2C03             CMP      R4,#+3
   \   000013DA   0xD01E             BEQ.N    ??choose_PD_272
   \   000013DC   0xD30F             BCC.N    ??choose_PD_273
   \   000013DE   0xE02A             B.N      ??choose_PD_271
   3930                    {
   3931                      //case 1:Servo.P+=5;Servo.D+=1;break;
   3932                    case 1:Servo.P-=1;Servo.D+=1;break;
   \                     ??choose_PD_270:
   \   000013E0   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000013E4   0x8800             LDRH     R0,[R0, #+0]
   \   000013E6   0x1E40             SUBS     R0,R0,#+1
   \   000013E8   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000013EC   0x8008             STRH     R0,[R1, #+0]
   \   000013EE   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000013F2   0x8880             LDRH     R0,[R0, #+4]
   \   000013F4   0x1C40             ADDS     R0,R0,#+1
   \   000013F6   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000013FA   0x8088             STRH     R0,[R1, #+4]
   \   000013FC   0xE01B             B.N      ??choose_PD_271
   3933                    case 2:Servo.P-=2;Servo.D+=0;break;
   \                     ??choose_PD_273:
   \   000013FE   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001402   0x8800             LDRH     R0,[R0, #+0]
   \   00001404   0x1E80             SUBS     R0,R0,#+2
   \   00001406   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000140A   0x8008             STRH     R0,[R1, #+0]
   \   0000140C   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001410   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001414   0x8889             LDRH     R1,[R1, #+4]
   \   00001416   0x8081             STRH     R1,[R0, #+4]
   \   00001418   0xE00D             B.N      ??choose_PD_271
   3934                    case 3:Servo.P-=3;Servo.D-=1;break;
   \                     ??choose_PD_272:
   \   0000141A   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000141E   0x8800             LDRH     R0,[R0, #+0]
   \   00001420   0x1EC0             SUBS     R0,R0,#+3
   \   00001422   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001426   0x8008             STRH     R0,[R1, #+0]
   \   00001428   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000142C   0x8880             LDRH     R0,[R0, #+4]
   \   0000142E   0x1E40             SUBS     R0,R0,#+1
   \   00001430   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001434   0x8088             STRH     R0,[R1, #+4]
   3935                    }
   3936                  }break;
   \                     ??choose_PD_271:
   \   00001436   0xE0D1             B.N      ??choose_PD_261
   3937                case 4:
   3938                  {
   3939                    switch(track_form)
   \                     ??choose_PD_257:
   \   00001438   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000143A   0x2C01             CMP      R4,#+1
   \   0000143C   0xD004             BEQ.N    ??choose_PD_274
   \   0000143E   0xD32E             BCC.N    ??choose_PD_275
   \   00001440   0x2C03             CMP      R4,#+3
   \   00001442   0xD01E             BEQ.N    ??choose_PD_276
   \   00001444   0xD30E             BCC.N    ??choose_PD_277
   \   00001446   0xE02A             B.N      ??choose_PD_275
   3940                    {
   3941                      case 1:Servo.P-=1;Servo.D+=0;break;
   \                     ??choose_PD_274:
   \   00001448   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000144C   0x8800             LDRH     R0,[R0, #+0]
   \   0000144E   0x1E40             SUBS     R0,R0,#+1
   \   00001450   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001454   0x8008             STRH     R0,[R1, #+0]
   \   00001456   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000145A   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000145E   0x8889             LDRH     R1,[R1, #+4]
   \   00001460   0x8081             STRH     R1,[R0, #+4]
   \   00001462   0xE01C             B.N      ??choose_PD_275
   3942                      case 2:Servo.P-=2;Servo.D-=1;break;
   \                     ??choose_PD_277:
   \   00001464   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001468   0x8800             LDRH     R0,[R0, #+0]
   \   0000146A   0x1E80             SUBS     R0,R0,#+2
   \   0000146C   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001470   0x8008             STRH     R0,[R1, #+0]
   \   00001472   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001476   0x8880             LDRH     R0,[R0, #+4]
   \   00001478   0x1E40             SUBS     R0,R0,#+1
   \   0000147A   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000147E   0x8088             STRH     R0,[R1, #+4]
   \   00001480   0xE00D             B.N      ??choose_PD_275
   3943                      case 3:Servo.P-=3;Servo.D-=2;break;
   \                     ??choose_PD_276:
   \   00001482   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001486   0x8800             LDRH     R0,[R0, #+0]
   \   00001488   0x1EC0             SUBS     R0,R0,#+3
   \   0000148A   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000148E   0x8008             STRH     R0,[R1, #+0]
   \   00001490   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001494   0x8880             LDRH     R0,[R0, #+4]
   \   00001496   0x1E80             SUBS     R0,R0,#+2
   \   00001498   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000149C   0x8088             STRH     R0,[R1, #+4]
   3944                    }
   3945                  }break;
   \                     ??choose_PD_275:
   \   0000149E   0xE09D             B.N      ??choose_PD_261
   3946                case 3:
   3947                  {
   3948                    switch(track_form)
   \                     ??choose_PD_258:
   \   000014A0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000014A2   0x2C01             CMP      R4,#+1
   \   000014A4   0xD004             BEQ.N    ??choose_PD_278
   \   000014A6   0xD32F             BCC.N    ??choose_PD_279
   \   000014A8   0x2C03             CMP      R4,#+3
   \   000014AA   0xD01F             BEQ.N    ??choose_PD_280
   \   000014AC   0xD30F             BCC.N    ??choose_PD_281
   \   000014AE   0xE02B             B.N      ??choose_PD_279
   3949                    {
   3950                    case 1:Servo.P-=1;Servo.D-=1;break;
   \                     ??choose_PD_278:
   \   000014B0   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000014B4   0x8800             LDRH     R0,[R0, #+0]
   \   000014B6   0x1E40             SUBS     R0,R0,#+1
   \   000014B8   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000014BC   0x8008             STRH     R0,[R1, #+0]
   \   000014BE   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000014C2   0x8880             LDRH     R0,[R0, #+4]
   \   000014C4   0x1E40             SUBS     R0,R0,#+1
   \   000014C6   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000014CA   0x8088             STRH     R0,[R1, #+4]
   \   000014CC   0xE01C             B.N      ??choose_PD_279
   3951                    case 2:Servo.P-=2;Servo.D-=2;break;
   \                     ??choose_PD_281:
   \   000014CE   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000014D2   0x8800             LDRH     R0,[R0, #+0]
   \   000014D4   0x1E80             SUBS     R0,R0,#+2
   \   000014D6   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000014DA   0x8008             STRH     R0,[R1, #+0]
   \   000014DC   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000014E0   0x8880             LDRH     R0,[R0, #+4]
   \   000014E2   0x1E80             SUBS     R0,R0,#+2
   \   000014E4   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000014E8   0x8088             STRH     R0,[R1, #+4]
   \   000014EA   0xE00D             B.N      ??choose_PD_279
   3952                    case 3:Servo.P-=3;Servo.D-=3;break;
   \                     ??choose_PD_280:
   \   000014EC   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000014F0   0x8800             LDRH     R0,[R0, #+0]
   \   000014F2   0x1EC0             SUBS     R0,R0,#+3
   \   000014F4   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000014F8   0x8008             STRH     R0,[R1, #+0]
   \   000014FA   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000014FE   0x8880             LDRH     R0,[R0, #+4]
   \   00001500   0x1EC0             SUBS     R0,R0,#+3
   \   00001502   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001506   0x8088             STRH     R0,[R1, #+4]
   3953                    }
   3954                  }break;
   \                     ??choose_PD_279:
   \   00001508   0xE068             B.N      ??choose_PD_261
   3955                case 2:
   3956                  {
   3957                    switch(track_form)
   \                     ??choose_PD_255:
   \   0000150A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000150C   0x2C01             CMP      R4,#+1
   \   0000150E   0xD004             BEQ.N    ??choose_PD_282
   \   00001510   0xD32F             BCC.N    ??choose_PD_283
   \   00001512   0x2C03             CMP      R4,#+3
   \   00001514   0xD01F             BEQ.N    ??choose_PD_284
   \   00001516   0xD30F             BCC.N    ??choose_PD_285
   \   00001518   0xE02B             B.N      ??choose_PD_283
   3958                    {
   3959                    case 1:Servo.P-=1;Servo.D-=2;break;
   \                     ??choose_PD_282:
   \   0000151A   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000151E   0x8800             LDRH     R0,[R0, #+0]
   \   00001520   0x1E40             SUBS     R0,R0,#+1
   \   00001522   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001526   0x8008             STRH     R0,[R1, #+0]
   \   00001528   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000152C   0x8880             LDRH     R0,[R0, #+4]
   \   0000152E   0x1E80             SUBS     R0,R0,#+2
   \   00001530   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001534   0x8088             STRH     R0,[R1, #+4]
   \   00001536   0xE01C             B.N      ??choose_PD_283
   3960                    case 2:Servo.P-=2;Servo.D-=3;break;
   \                     ??choose_PD_285:
   \   00001538   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000153C   0x8800             LDRH     R0,[R0, #+0]
   \   0000153E   0x1E80             SUBS     R0,R0,#+2
   \   00001540   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001544   0x8008             STRH     R0,[R1, #+0]
   \   00001546   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000154A   0x8880             LDRH     R0,[R0, #+4]
   \   0000154C   0x1EC0             SUBS     R0,R0,#+3
   \   0000154E   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001552   0x8088             STRH     R0,[R1, #+4]
   \   00001554   0xE00D             B.N      ??choose_PD_283
   3961                    case 3:Servo.P-=3;Servo.D-=4;break;
   \                     ??choose_PD_284:
   \   00001556   0x.... 0x....      LDR.W    R0,??DataTable59
   \   0000155A   0x8800             LDRH     R0,[R0, #+0]
   \   0000155C   0x1EC0             SUBS     R0,R0,#+3
   \   0000155E   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001562   0x8008             STRH     R0,[R1, #+0]
   \   00001564   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001568   0x8880             LDRH     R0,[R0, #+4]
   \   0000156A   0x1F00             SUBS     R0,R0,#+4
   \   0000156C   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001570   0x8088             STRH     R0,[R1, #+4]
   3962                    }
   3963                  }break;
   \                     ??choose_PD_283:
   \   00001572   0xE033             B.N      ??choose_PD_261
   3964                case 1:
   3965                  {
   3966                    switch(track_form)
   \                     ??choose_PD_256:
   \   00001574   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00001576   0x2C01             CMP      R4,#+1
   \   00001578   0xD004             BEQ.N    ??choose_PD_286
   \   0000157A   0xD32F             BCC.N    ??choose_PD_287
   \   0000157C   0x2C03             CMP      R4,#+3
   \   0000157E   0xD01F             BEQ.N    ??choose_PD_288
   \   00001580   0xD30F             BCC.N    ??choose_PD_289
   \   00001582   0xE02B             B.N      ??choose_PD_287
   3967                    {
   3968                    case 1:Servo.P-=1;Servo.D-=3;break;
   \                     ??choose_PD_286:
   \   00001584   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001588   0x8800             LDRH     R0,[R0, #+0]
   \   0000158A   0x1E40             SUBS     R0,R0,#+1
   \   0000158C   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001590   0x8008             STRH     R0,[R1, #+0]
   \   00001592   0x.... 0x....      LDR.W    R0,??DataTable59
   \   00001596   0x8880             LDRH     R0,[R0, #+4]
   \   00001598   0x1EC0             SUBS     R0,R0,#+3
   \   0000159A   0x.... 0x....      LDR.W    R1,??DataTable59
   \   0000159E   0x8088             STRH     R0,[R1, #+4]
   \   000015A0   0xE01C             B.N      ??choose_PD_287
   3969                    case 2:Servo.P-=2;Servo.D-=4;break;
   \                     ??choose_PD_289:
   \   000015A2   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000015A6   0x8800             LDRH     R0,[R0, #+0]
   \   000015A8   0x1E80             SUBS     R0,R0,#+2
   \   000015AA   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000015AE   0x8008             STRH     R0,[R1, #+0]
   \   000015B0   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000015B4   0x8880             LDRH     R0,[R0, #+4]
   \   000015B6   0x1F00             SUBS     R0,R0,#+4
   \   000015B8   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000015BC   0x8088             STRH     R0,[R1, #+4]
   \   000015BE   0xE00D             B.N      ??choose_PD_287
   3970                    case 3:Servo.P-=3;Servo.D-=5;break;
   \                     ??choose_PD_288:
   \   000015C0   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000015C4   0x8800             LDRH     R0,[R0, #+0]
   \   000015C6   0x1EC0             SUBS     R0,R0,#+3
   \   000015C8   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000015CC   0x8008             STRH     R0,[R1, #+0]
   \   000015CE   0x.... 0x....      LDR.W    R0,??DataTable59
   \   000015D2   0x8880             LDRH     R0,[R0, #+4]
   \   000015D4   0x1F40             SUBS     R0,R0,#+5
   \   000015D6   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000015DA   0x8088             STRH     R0,[R1, #+4]
   3971                    }
   3972                  }break;
   3973                }
   3974              }break;
   3975            }
   3976            //if(sai_dao_lei_xing==12&&abs(position_now_low_P)<2&&abs(position_now_P)<3)Servo.D+=20;
   3977            //if(track_form==3&&abs(position_now_low_P)<1&&abs(position_now)<2)Servo.D+=25;
   3978            //if(track_form==3&&abs(position_now_low_P)==1&&abs(position_now)==2)Servo.D+=18;
   3979           // Servo_value=Servo_Middle+Servo.P*(79-position_now)+Servo.D*position_diff;//PD控制舵机
   3980           
   3981            Servo_value=Servo_Middle+Servo.P*(position_mid-position_now)+Servo.D*position_diff;//PD控制舵机
   \                     ??choose_PD_287:
   \                     ??choose_PD_261:
   \                     ??choose_PD_37:
   \   000015DC   0x.... 0x....      LDR.W    R0,??DataTable61
   \   000015E0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000015E4   0x.... 0x....      LDR.W    R1,??DataTable59
   \   000015E8   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000015EC   0x.... 0x....      LDR.W    R2,??DataTable61_1
   \   000015F0   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000015F4   0xF1D2 0x024D      RSBS     R2,R2,#+77
   \   000015F8   0x4351             MULS     R1,R2,R1
   \   000015FA   0x1808             ADDS     R0,R1,R0
   \   000015FC   0x.... 0x....      LDR.W    R1,??DataTable59
   \   00001600   0xF9B1 0x1004      LDRSH    R1,[R1, #+4]
   \   00001604   0x.... 0x....      LDR.W    R2,??DataTable61_2
   \   00001608   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   0000160C   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00001610   0x.... 0x....      LDR.W    R1,??DataTable61_3
   \   00001614   0x8008             STRH     R0,[R1, #+0]
   3982            Servo_value=limit(Servo_value,Servo_Left,Servo_Right);
   \   00001616   0x.... 0x....      LDR.W    R0,??DataTable61_4
   \   0000161A   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000161E   0x.... 0x....      LDR.W    R0,??DataTable61_5
   \   00001622   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \   00001626   0x.... 0x....      LDR.W    R0,??DataTable61_3
   \   0000162A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000162E   0x.... 0x....      BL       limit
   \   00001632   0x.... 0x....      LDR.W    R1,??DataTable61_3
   \   00001636   0x8008             STRH     R0,[R1, #+0]
   3983            //if(abs(Servo_value-Servo_value_old)>2000)Servo_value=Servo_value_old;
   3984            //Servo_value=0.1*Servo_value_old+0.9*Servo_value;
   3985            Servo_value_old=Servo_value;
   \   00001638   0x.... 0x....      LDR.W    R0,??DataTable61_6
   \   0000163C   0x.... 0x....      LDR.W    R1,??DataTable61_3
   \   00001640   0x8809             LDRH     R1,[R1, #+0]
   \   00001642   0x8001             STRH     R1,[R0, #+0]
   3986            FTM1_C0V=Servo_value;  
   \   00001644   0x.... 0x....      LDR.W    R0,??DataTable61_7  ;; 0x40039010
   \   00001648   0x.... 0x....      LDR.W    R1,??DataTable61_3
   \   0000164C   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00001650   0x6001             STR      R1,[R0, #+0]
   3987            return ok;
   \   00001652   0x2001             MOVS     R0,#+1
   \                     ??choose_PD_18:
   \   00001654   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   3988          }
   3989          

   \                                 In section .text, align 2, keep-with-next
   3990          int16 stages3(int16 value,int16 parameter,int16 windage_k)
   3991          {
   3992           
   3993              if(!value) return unclear;
   \                     stages3:
   \   00000000   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD102             BNE.N    ??stages3_0
   \   00000006   0xF07F 0x0063      MVNS     R0,#+99
   \   0000000A   0xE011             B.N      ??stages3_1
   3994              if(value<(parameter-windage_k)){
   \                     ??stages3_0:
   \   0000000C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000E   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000010   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000012   0x1A8B             SUBS     R3,R1,R2
   \   00000014   0x4298             CMP      R0,R3
   \   00000016   0xDA02             BGE.N    ??stages3_2
   3995                NULL;
   3996                return(-1);
   \   00000018   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000001C   0xE008             B.N      ??stages3_1
   3997              }
   3998              else if(value>=(parameter+windage_k)){
   \                     ??stages3_2:
   \   0000001E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000020   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000022   0xFA02 0xF181      SXTAH    R1,R2,R1
   \   00000026   0x4288             CMP      R0,R1
   \   00000028   0xDB01             BLT.N    ??stages3_3
   3999                NULL;
   4000                return(1); 
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0xE000             B.N      ??stages3_1
   4001              }
   4002                   else return(0);
   \                     ??stages3_3:
   \   0000002E   0x2000             MOVS     R0,#+0
   \                     ??stages3_1:
   \   00000030   0x4770             BX       LR               ;; return
   4003          }
   4004          
   4005          
   4006          
   4007          
   4008          /*************判断赛道类型0**************/

   \                                 In section .text, align 2, keep-with-next
   4009          uint8 judge_locus_0(void)
   4010          {
   \                     judge_locus_0:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   4011            int16 i=0,num=0,buff1=0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   4012            uint8 sai_dao_lei_xing_0=0;
   \   00000008   0x2500             MOVS     R5,#+0
   4013           // for(i=54;i>21;i--) 
   4014            for(i=54;i>25;i--)//前段   59~41  33
   \   0000000A   0x2236             MOVS     R2,#+54
   \   0000000C   0x0010             MOVS     R0,R2
   \   0000000E   0xE014             B.N      ??judge_locus_0_0
   4015              if(position[i])
   \                     ??judge_locus_0_1:
   \   00000010   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable61_8
   \   00000016   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   0000001A   0x2900             CMP      R1,#+0
   \   0000001C   0xD00C             BEQ.N    ??judge_locus_0_2
   4016              {
   4017                low_0+=position[i];
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable61_9
   \   00000022   0x8809             LDRH     R1,[R1, #+0]
   \   00000024   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000026   0x.... 0x....      LDR.W    R2,??DataTable61_8
   \   0000002A   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   0000002E   0x1851             ADDS     R1,R2,R1
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable61_9
   \   00000034   0x8011             STRH     R1,[R2, #+0]
   4018                num++;
   \   00000036   0x1C64             ADDS     R4,R4,#+1
   4019              }  
   \                     ??judge_locus_0_2:
   \   00000038   0x1E40             SUBS     R0,R0,#+1
   \                     ??judge_locus_0_0:
   \   0000003A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000003C   0x281A             CMP      R0,#+26
   \   0000003E   0xDAE7             BGE.N    ??judge_locus_0_1
   4020            if(low_0)
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable61_9
   \   00000044   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD009             BEQ.N    ??judge_locus_0_3
   4021              low_0=low_0/num;
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable61_9
   \   00000050   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000054   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000056   0xFB90 0xF0F4      SDIV     R0,R0,R4
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable61_9
   \   0000005E   0x8008             STRH     R0,[R1, #+0]
   4022            num=0;
   \                     ??judge_locus_0_3:
   \   00000060   0x2400             MOVS     R4,#+0
   4023              
   4024           // for(i=21;i>7;i--) //中段  40~26    20  15 
   4025            for(i=25;i>8;i--)
   \   00000062   0x2019             MOVS     R0,#+25
   \   00000064   0xE014             B.N      ??judge_locus_0_4
   4026              if(position[i]){
   \                     ??judge_locus_0_5:
   \   00000066   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable61_8
   \   0000006C   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000070   0x2900             CMP      R1,#+0
   \   00000072   0xD00C             BEQ.N    ??judge_locus_0_6
   4027                mid_0+=position[i];
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable61_10
   \   00000078   0x8809             LDRH     R1,[R1, #+0]
   \   0000007A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000007C   0x.... 0x....      LDR.W    R2,??DataTable61_8
   \   00000080   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000084   0x1851             ADDS     R1,R2,R1
   \   00000086   0x.... 0x....      LDR.W    R2,??DataTable61_10
   \   0000008A   0x8011             STRH     R1,[R2, #+0]
   4028                num++;
   \   0000008C   0x1C64             ADDS     R4,R4,#+1
   4029          
   4030              }
   \                     ??judge_locus_0_6:
   \   0000008E   0x1E40             SUBS     R0,R0,#+1
   \                     ??judge_locus_0_4:
   \   00000090   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000092   0x2809             CMP      R0,#+9
   \   00000094   0xDAE7             BGE.N    ??judge_locus_0_5
   4031            if(mid_0)
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable61_10
   \   0000009A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000009E   0x2800             CMP      R0,#+0
   \   000000A0   0xD009             BEQ.N    ??judge_locus_0_7
   4032              mid_0=mid_0/num;
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable61_10
   \   000000A6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000AA   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000AC   0xFB90 0xF0F4      SDIV     R0,R0,R4
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable61_10
   \   000000B4   0x8008             STRH     R0,[R1, #+0]
   4033            num=0;    
   \                     ??judge_locus_0_7:
   \   000000B6   0x2400             MOVS     R4,#+0
   4034            
   4035              for(i=8;i>0;i--)//远段    25~0
   \   000000B8   0x2008             MOVS     R0,#+8
   \   000000BA   0xE014             B.N      ??judge_locus_0_8
   4036              if(position[i])
   \                     ??judge_locus_0_9:
   \   000000BC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable61_8
   \   000000C2   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   000000C6   0x2900             CMP      R1,#+0
   \   000000C8   0xD00C             BEQ.N    ??judge_locus_0_10
   4037              {
   4038                high_0+=position[i];
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable61_11
   \   000000CE   0x8809             LDRH     R1,[R1, #+0]
   \   000000D0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000D2   0x.... 0x....      LDR.W    R2,??DataTable61_8
   \   000000D6   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   000000DA   0x1851             ADDS     R1,R2,R1
   \   000000DC   0x.... 0x....      LDR.W    R2,??DataTable61_11
   \   000000E0   0x8011             STRH     R1,[R2, #+0]
   4039                num++;
   \   000000E2   0x1C64             ADDS     R4,R4,#+1
   4040              }
   \                     ??judge_locus_0_10:
   \   000000E4   0x1E40             SUBS     R0,R0,#+1
   \                     ??judge_locus_0_8:
   \   000000E6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000E8   0x2801             CMP      R0,#+1
   \   000000EA   0xDAE7             BGE.N    ??judge_locus_0_9
   4041             if(high_0)
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable61_11
   \   000000F0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000F4   0x2800             CMP      R0,#+0
   \   000000F6   0xD009             BEQ.N    ??judge_locus_0_11
   4042               high_0=high_0/num;
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable61_11
   \   000000FC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000100   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000102   0xFB90 0xF0F4      SDIV     R0,R0,R4
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable61_11
   \   0000010A   0x8008             STRH     R0,[R1, #+0]
   4043             num=0;
   \                     ??judge_locus_0_11:
   \   0000010C   0x2400             MOVS     R4,#+0
   4044             
   4045             low_now_0=low_0;                      //远近中端的坐标位置
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable61_12
   \   00000112   0x.... 0x....      LDR.W    R1,??DataTable61_9
   \   00000116   0x8809             LDRH     R1,[R1, #+0]
   \   00000118   0x8001             STRH     R1,[R0, #+0]
   4046             mid_now_0=mid_0;
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable61_13
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable61_10
   \   00000122   0x8809             LDRH     R1,[R1, #+0]
   \   00000124   0x8001             STRH     R1,[R0, #+0]
   4047             high_now_0=high_0; 
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable61_14
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable61_11
   \   0000012E   0x8809             LDRH     R1,[R1, #+0]
   \   00000130   0x8001             STRH     R1,[R0, #+0]
   4048            
   4049             low_0=stages3(low_0,video_Middle,24);        // 22          low,mid,high就是1，0，-1
   \   00000132   0x2218             MOVS     R2,#+24
   \   00000134   0x2101             MOVS     R1,#+1
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable61_9
   \   0000013A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000013E   0x.... 0x....      BL       stages3
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable61_9
   \   00000146   0x8008             STRH     R0,[R1, #+0]
   4050             mid_0=stages3(mid_0,video_Middle,22);        // 19
   \   00000148   0x2216             MOVS     R2,#+22
   \   0000014A   0x2101             MOVS     R1,#+1
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable61_10
   \   00000150   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000154   0x.... 0x....      BL       stages3
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable61_10
   \   0000015C   0x8008             STRH     R0,[R1, #+0]
   4051             high_0=stages3(high_0,video_Middle,18);     //16
   \   0000015E   0x2212             MOVS     R2,#+18
   \   00000160   0x2101             MOVS     R1,#+1
   \   00000162   0x.... 0x....      LDR.W    R0,??DataTable61_11
   \   00000166   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000016A   0x.... 0x....      BL       stages3
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable61_11
   \   00000172   0x8008             STRH     R0,[R1, #+0]
   4052             if(high_0==unclear)
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable61_11
   \   00000178   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000017C   0xF07F 0x0163      MVNS     R1,#+99
   \   00000180   0x4288             CMP      R0,R1
   \   00000182   0xD140             BNE.N    ??judge_locus_0_12
   4053             {    
   4054               buff1=low_0*mid_0;
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable61_9
   \   00000188   0x8800             LDRH     R0,[R0, #+0]
   \   0000018A   0x.... 0x....      LDR.W    R1,??DataTable61_10
   \   0000018E   0x8809             LDRH     R1,[R1, #+0]
   \   00000190   0xFB01 0xF100      MUL      R1,R1,R0
   4055               if(mid_0==unclear)
   \   00000194   0x.... 0x....      LDR.W    R0,??DataTable61_10
   \   00000198   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000019C   0xF07F 0x0263      MVNS     R2,#+99
   \   000001A0   0x4290             CMP      R0,R2
   \   000001A2   0xD109             BNE.N    ??judge_locus_0_13
   4056               { //超急弯
   4057                 if(low_0==0)
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable61_9
   \   000001A8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001AC   0x2800             CMP      R0,#+0
   \   000001AE   0xD101             BNE.N    ??judge_locus_0_14
   4058                 {              
   4059                   sai_dao_lei_xing_0=0;        
   \   000001B0   0x2500             MOVS     R5,#+0
   \   000001B2   0xE0D2             B.N      ??judge_locus_0_15
   4060                 }
   4061                 else
   4062                 {          
   4063                   sai_dao_lei_xing_0=1;         
   \                     ??judge_locus_0_14:
   \   000001B4   0x2501             MOVS     R5,#+1
   \   000001B6   0xE0D0             B.N      ??judge_locus_0_15
   4064                 }       
   4065               }
   4066               else
   4067               {                                                  
   4068                 if(buff1==1)
   \                     ??judge_locus_0_13:
   \   000001B8   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000001BA   0x2901             CMP      R1,#+1
   \   000001BC   0xD101             BNE.N    ??judge_locus_0_16
   4069                 {   //急弯        
   4070                   sai_dao_lei_xing_0=2;                  
   \   000001BE   0x2502             MOVS     R5,#+2
   \   000001C0   0xE0CB             B.N      ??judge_locus_0_15
   4071                 }
   4072                 else
   4073                 if(buff1==0)
   \                     ??judge_locus_0_16:
   \   000001C2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000001C4   0x2900             CMP      R1,#+0
   \   000001C6   0xD116             BNE.N    ??judge_locus_0_17
   4074                 {  //急弯
   4075                   if(low_0!=0) 
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable61_9
   \   000001CC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001D0   0x2800             CMP      R0,#+0
   \   000001D2   0xD001             BEQ.N    ??judge_locus_0_18
   4076                   {           
   4077                     sai_dao_lei_xing_0=4;           
   \   000001D4   0x2504             MOVS     R5,#+4
   \   000001D6   0xE0C0             B.N      ??judge_locus_0_15
   4078                   }
   4079                   else
   4080                   {
   4081                     if(mid_0==0&&low_0==0)
   \                     ??judge_locus_0_18:
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable61_10
   \   000001DC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001E0   0x2800             CMP      R0,#+0
   \   000001E2   0xD106             BNE.N    ??judge_locus_0_19
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable61_9
   \   000001E8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001EC   0x2800             CMP      R0,#+0
   \   000001EE   0xD100             BNE.N    ??judge_locus_0_19
   4082                     {
   4083                       sai_dao_lei_xing_0=5;                         
   \   000001F0   0x2505             MOVS     R5,#+5
   4084                     }            
   4085                     sai_dao_lei_xing_0=6;           
   \                     ??judge_locus_0_19:
   \   000001F2   0x2506             MOVS     R5,#+6
   \   000001F4   0xE0B1             B.N      ??judge_locus_0_15
   4086                   }           
   4087                 }
   4088                 else if(buff1==-1)
   \                     ??judge_locus_0_17:
   \   000001F6   0xF05F 0x30FF      MOVS     R0,#-1
   \   000001FA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000001FC   0x4281             CMP      R1,R0
   \   000001FE   0xF040 0x80AC      BNE.W    ??judge_locus_0_15
   4089                 { // 超急弯         
   4090                   sai_dao_lei_xing_0=8;                    
   \   00000202   0x2508             MOVS     R5,#+8
   \   00000204   0xE0A9             B.N      ??judge_locus_0_15
   4091                 }
   4092               }                                         
   4093             }
   4094             else
   4095             {           //high!=unclear时
   4096               if(mid_0==high_0)
   \                     ??judge_locus_0_12:
   \   00000206   0x.... 0x....      LDR.W    R0,??DataTable61_10
   \   0000020A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000020E   0x.... 0x....      LDR.W    R1,??DataTable61_11
   \   00000212   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000216   0x4288             CMP      R0,R1
   \   00000218   0xD12D             BNE.N    ??judge_locus_0_20
   4097               {
   4098                 if(high_0==0)
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable61_11
   \   0000021E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000222   0x2800             CMP      R0,#+0
   \   00000224   0xD125             BNE.N    ??judge_locus_0_21
   4099                 {        //直道         
   4100                   if(high_now_0>70&&high_now_0<90&&mid_now_0>70&&mid_now_0<90&&low_now_0>70&&low_now_0<90)
   \   00000226   0x.... 0x....      LDR.W    R0,??DataTable61_14
   \   0000022A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000022E   0x2847             CMP      R0,#+71
   \   00000230   0xDB1D             BLT.N    ??judge_locus_0_22
   \   00000232   0x....             LDR.N    R0,??DataTable61_14
   \   00000234   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000238   0x285A             CMP      R0,#+90
   \   0000023A   0xDA18             BGE.N    ??judge_locus_0_22
   \   0000023C   0x....             LDR.N    R0,??DataTable61_13
   \   0000023E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000242   0x2847             CMP      R0,#+71
   \   00000244   0xDB13             BLT.N    ??judge_locus_0_22
   \   00000246   0x....             LDR.N    R0,??DataTable61_13
   \   00000248   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000024C   0x285A             CMP      R0,#+90
   \   0000024E   0xDA0E             BGE.N    ??judge_locus_0_22
   \   00000250   0x....             LDR.N    R0,??DataTable61_12
   \   00000252   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000256   0x2847             CMP      R0,#+71
   \   00000258   0xDB09             BLT.N    ??judge_locus_0_22
   \   0000025A   0x....             LDR.N    R0,??DataTable61_12
   \   0000025C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000260   0x285A             CMP      R0,#+90
   \   00000262   0xDA04             BGE.N    ??judge_locus_0_22
   4101                   {
   4102                     sai_dao_lei_xing_0=20;
   \   00000264   0x2514             MOVS     R5,#+20
   4103                     Very_straight=1; 
   \   00000266   0x....             LDR.N    R0,??DataTable61_15
   \   00000268   0x2101             MOVS     R1,#+1
   \   0000026A   0x7001             STRB     R1,[R0, #+0]
   \   0000026C   0xE075             B.N      ??judge_locus_0_15
   4104                   }
   4105                   else sai_dao_lei_xing_0=9;            
   \                     ??judge_locus_0_22:
   \   0000026E   0x2509             MOVS     R5,#+9
   \   00000270   0xE073             B.N      ??judge_locus_0_15
   4106                 }
   4107                 else
   4108                 {           /////////////////////////         
   4109                   sai_dao_lei_xing_0=10;                
   \                     ??judge_locus_0_21:
   \   00000272   0x250A             MOVS     R5,#+10
   \   00000274   0xE071             B.N      ??judge_locus_0_15
   4110                 }
   4111               }
   4112               else
   4113               {     //mid!=high时
   4114                 if(low_0==0&&mid_0==0)
   \                     ??judge_locus_0_20:
   \   00000276   0x....             LDR.N    R0,??DataTable61_9
   \   00000278   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000027C   0x2800             CMP      R0,#+0
   \   0000027E   0xD105             BNE.N    ??judge_locus_0_23
   \   00000280   0x....             LDR.N    R0,??DataTable61_10
   \   00000282   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000286   0x2800             CMP      R0,#+0
   \   00000288   0xD100             BNE.N    ??judge_locus_0_23
   4115                 {         //长大弯         
   4116                   sai_dao_lei_xing_0=12;               
   \   0000028A   0x250C             MOVS     R5,#+12
   4117                 }//else
   4118                 if(mid_0==0&&(low_0*high_0==-1))
   \                     ??judge_locus_0_23:
   \   0000028C   0x....             LDR.N    R0,??DataTable61_10
   \   0000028E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000292   0x2800             CMP      R0,#+0
   \   00000294   0xD10A             BNE.N    ??judge_locus_0_24
   \   00000296   0x....             LDR.N    R0,??DataTable61_9
   \   00000298   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000029C   0x....             LDR.N    R1,??DataTable61_11
   \   0000029E   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002A2   0x4348             MULS     R0,R1,R0
   \   000002A4   0xF110 0x0F01      CMN      R0,#+1
   \   000002A8   0xD100             BNE.N    ??judge_locus_0_24
   4119                 {  //大弯         
   4120                   sai_dao_lei_xing_0=13;                  
   \   000002AA   0x250D             MOVS     R5,#+13
   4121                 }//else
   4122                 if(high_0==low_0&&low_0!=mid_0)
   \                     ??judge_locus_0_24:
   \   000002AC   0x....             LDR.N    R0,??DataTable61_11
   \   000002AE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002B2   0x....             LDR.N    R1,??DataTable61_9
   \   000002B4   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002B8   0x4288             CMP      R0,R1
   \   000002BA   0xD108             BNE.N    ??judge_locus_0_25
   \   000002BC   0x....             LDR.N    R0,??DataTable61_9
   \   000002BE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002C2   0x....             LDR.N    R1,??DataTable61_10
   \   000002C4   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002C8   0x4288             CMP      R0,R1
   \   000002CA   0xD000             BEQ.N    ??judge_locus_0_25
   4123                 {    //S弯         
   4124                   sai_dao_lei_xing_0=14;           
   \   000002CC   0x250E             MOVS     R5,#+14
   4125                 }
   4126                 /////////////////////////////////////////////////////
   4127                 if(high_0==0&&(mid_0*low_0==-1))
   \                     ??judge_locus_0_25:
   \   000002CE   0x....             LDR.N    R0,??DataTable61_11
   \   000002D0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002D4   0x2800             CMP      R0,#+0
   \   000002D6   0xD10A             BNE.N    ??judge_locus_0_26
   \   000002D8   0x....             LDR.N    R0,??DataTable61_10
   \   000002DA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002DE   0x....             LDR.N    R1,??DataTable61_9
   \   000002E0   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000002E4   0x4348             MULS     R0,R1,R0
   \   000002E6   0xF110 0x0F01      CMN      R0,#+1
   \   000002EA   0xD100             BNE.N    ??judge_locus_0_26
   4128                 {        
   4129                   sai_dao_lei_xing_0=15;               
   \   000002EC   0x250F             MOVS     R5,#+15
   4130                 }
   4131                 if(high_0==0&&(mid_0*low_0==1))
   \                     ??judge_locus_0_26:
   \   000002EE   0x....             LDR.N    R0,??DataTable61_11
   \   000002F0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002F4   0x2800             CMP      R0,#+0
   \   000002F6   0xD109             BNE.N    ??judge_locus_0_27
   \   000002F8   0x....             LDR.N    R0,??DataTable61_10
   \   000002FA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002FE   0x....             LDR.N    R1,??DataTable61_9
   \   00000300   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000304   0x4348             MULS     R0,R1,R0
   \   00000306   0x2801             CMP      R0,#+1
   \   00000308   0xD100             BNE.N    ??judge_locus_0_27
   4132                 {         //长大弯        
   4133                   sai_dao_lei_xing_0=16;                
   \   0000030A   0x2510             MOVS     R5,#+16
   4134                 }
   4135                 if((high==-1&&mid==1&&low!=-1)||(high==1&&mid==-1&&low!=1))
   \                     ??judge_locus_0_27:
   \   0000030C   0x....             LDR.N    R0,??DataTable61_16
   \   0000030E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000312   0xF05F 0x31FF      MOVS     R1,#-1
   \   00000316   0x4288             CMP      R0,R1
   \   00000318   0xD10C             BNE.N    ??judge_locus_0_28
   \   0000031A   0x....             LDR.N    R0,??DataTable61_17
   \   0000031C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000320   0x2801             CMP      R0,#+1
   \   00000322   0xD107             BNE.N    ??judge_locus_0_28
   \   00000324   0x.... 0x....      LDR.W    R0,??DataTable62
   \   00000328   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000032C   0xF05F 0x31FF      MOVS     R1,#-1
   \   00000330   0x4288             CMP      R0,R1
   \   00000332   0xD111             BNE.N    ??judge_locus_0_29
   \                     ??judge_locus_0_28:
   \   00000334   0x....             LDR.N    R0,??DataTable61_16
   \   00000336   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000033A   0x2801             CMP      R0,#+1
   \   0000033C   0xD10D             BNE.N    ??judge_locus_0_15
   \   0000033E   0x....             LDR.N    R0,??DataTable61_17
   \   00000340   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000344   0xF05F 0x31FF      MOVS     R1,#-1
   \   00000348   0x4288             CMP      R0,R1
   \   0000034A   0xD106             BNE.N    ??judge_locus_0_15
   \   0000034C   0x.... 0x....      LDR.W    R0,??DataTable62
   \   00000350   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000354   0x2801             CMP      R0,#+1
   \   00000356   0xD000             BEQ.N    ??judge_locus_0_15
   4136                 {         //长急弯         
   4137                   sai_dao_lei_xing_0=17;         
   \                     ??judge_locus_0_29:
   \   00000358   0x2511             MOVS     R5,#+17
   4138                 }
   4139                 /////////////////////////////////////////////////
   4140               }
   4141             }
   4142             return sai_dao_lei_xing_0;  
   \                     ??judge_locus_0_15:
   \   0000035A   0x0028             MOVS     R0,R5
   \   0000035C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000035E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   4143          }
   4144          /*************判断赛道类型0END**************/
   4145          
   4146          

   \                                 In section .text, align 2, keep-with-next
   4147          int16 speed_control(void)
   4148          {
   \                     speed_control:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   4149            volatile int16 i=0,E=0,Ec=0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xF8AD 0x0018      STRH     R0,[SP, #+24]
   4150            volatile int32 exspeed=0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x9001             STR      R0,[SP, #+4]
   \   0000001A   0xE004             B.N      ??speed_control_0
   4151            volatile struct membership_grade S; 
   4152            static int16 i_old=0;
   4153            
   4154            
   4155            while(!position[i]&&i<55) i++;   //50
   \                     ??speed_control_1:
   \   0000001C   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000020   0x1C40             ADDS     R0,R0,#+1
   \   00000022   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \                     ??speed_control_0:
   \   00000026   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   0000002A   0x....             LDR.N    R1,??DataTable61_8
   \   0000002C   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD103             BNE.N    ??speed_control_2
   \   00000034   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000038   0x2837             CMP      R0,#+55
   \   0000003A   0xDBEF             BLT.N    ??speed_control_1
   4156            
   4157                
   4158            E=54-i;   //i无效点个数    //49    E为有效的个数
   \                     ??speed_control_2:
   \   0000003C   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000040   0xF1D0 0x0036      RSBS     R0,R0,#+54
   \   00000044   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   4159            Ec=i-i_old; //有效点变化率
   \   00000048   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable62_1
   \   00000050   0x8809             LDRH     R1,[R1, #+0]
   \   00000052   0x1A40             SUBS     R0,R0,R1
   \   00000054   0xF8AD 0x0018      STRH     R0,[SP, #+24]
   4160            i_old=i;
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable62_1
   \   0000005C   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000060   0x8001             STRH     R1,[R0, #+0]
   4161            
   4162            if(i<=5) return speed_top;    //直道全速冲刺  3
   \   00000062   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000066   0x2806             CMP      R0,#+6
   \   00000068   0xDA04             BGE.N    ??speed_control_3
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   0000006E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000072   0xE05A             B.N      ??speed_control_4
   4163              
   4164            if(i>5)
   \                     ??speed_control_3:
   \   00000074   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \   00000078   0x2806             CMP      R0,#+6
   \   0000007A   0xDB56             BLT.N    ??speed_control_5
   4165            {
   4166              if(!Ec)//变化率为0的时候
   \   0000007C   0xF9BD 0x0018      LDRSH    R0,[SP, #+24]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD13A             BNE.N    ??speed_control_6
   4167              {
   4168                //sub_e(E,25,20,50,45);//20，15，45，40通过采集到的点数来算出，speed_s,speed_m,speed_b所占的份额
   4169            //  sub_e(E,24,0,54,24);       //主要决定十字弯道和直到的过弯速度
   4170                sub_e(E,35,30,50,45);
   \   00000084   0x202D             MOVS     R0,#+45
   \   00000086   0x9000             STR      R0,[SP, #+0]
   \   00000088   0x2332             MOVS     R3,#+50
   \   0000008A   0x221E             MOVS     R2,#+30
   \   0000008C   0x2123             MOVS     R1,#+35
   \   0000008E   0xF8BD 0x001A      LDRH     R0,[SP, #+26]
   \   00000092   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000094   0x.... 0x....      BL       sub_e
   4171                S.s=sub.s;
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable62_3
   \   0000009C   0x8800             LDRH     R0,[R0, #+0]
   \   0000009E   0xF8AD 0x0008      STRH     R0,[SP, #+8]
   4172                S.m=sub.m;
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable62_3
   \   000000A6   0x8840             LDRH     R0,[R0, #+2]
   \   000000A8   0xF8AD 0x000A      STRH     R0,[SP, #+10]
   4173                S.b=sub.b;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable62_3
   \   000000B0   0x8880             LDRH     R0,[R0, #+4]
   \   000000B2   0xF8AD 0x000C      STRH     R0,[SP, #+12]
   4174                exspeed=(sub.s*speed_s+sub.m*speed_m+sub.b*speed_b)/100;
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable62_3
   \   000000BA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable62_4
   \   000000C2   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable62_3
   \   000000CA   0xF9B2 0x2002      LDRSH    R2,[R2, #+2]
   \   000000CE   0x.... 0x....      LDR.W    R3,??DataTable62_5
   \   000000D2   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   000000D6   0x435A             MULS     R2,R3,R2
   \   000000D8   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable62_3
   \   000000E0   0xF9B1 0x1004      LDRSH    R1,[R1, #+4]
   \   000000E4   0x.... 0x....      LDR.W    R2,??DataTable62_6
   \   000000E8   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000000EC   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000000F0   0x2164             MOVS     R1,#+100
   \   000000F2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000F6   0x9001             STR      R0,[SP, #+4]
   \   000000F8   0xE014             B.N      ??speed_control_7
   4175              }
   4176              else //变化率不等于0的时候
   4177              {
   4178                //exspeed=speed_fuzzy(E,Ec,35,25,50,45,3,1,7,5); 4.8―10：00
   4179                exspeed=speed_fuzzy(E,Ec,35,30,50,45,3,1,7,5);
   \                     ??speed_control_6:
   \   000000FA   0x2005             MOVS     R0,#+5
   \   000000FC   0x9005             STR      R0,[SP, #+20]
   \   000000FE   0x2007             MOVS     R0,#+7
   \   00000100   0x9004             STR      R0,[SP, #+16]
   \   00000102   0x2001             MOVS     R0,#+1
   \   00000104   0x9003             STR      R0,[SP, #+12]
   \   00000106   0x2003             MOVS     R0,#+3
   \   00000108   0x9002             STR      R0,[SP, #+8]
   \   0000010A   0x202D             MOVS     R0,#+45
   \   0000010C   0x9001             STR      R0,[SP, #+4]
   \   0000010E   0x2032             MOVS     R0,#+50
   \   00000110   0x9000             STR      R0,[SP, #+0]
   \   00000112   0x231E             MOVS     R3,#+30
   \   00000114   0x2223             MOVS     R2,#+35
   \   00000116   0xF9BD 0x1018      LDRSH    R1,[SP, #+24]
   \   0000011A   0xF9BD 0x001A      LDRSH    R0,[SP, #+26]
   \   0000011E   0x.... 0x....      BL       speed_fuzzy
   \   00000122   0x9001             STR      R0,[SP, #+4]
   4180              }
   4181              return exspeed;
   \                     ??speed_control_7:
   \   00000124   0x9801             LDR      R0,[SP, #+4]
   \   00000126   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000128   0xE7FF             B.N      ??speed_control_4
   4182            }
   4183          }
   \                     ??speed_control_5:
   \                     ??speed_control_4:
   \   0000012A   0xB007             ADD      SP,SP,#+28
   \   0000012C   0xBD00             POP      {PC}             ;; return

   \                                 In section .bss, align 2
   \                     ??i_old:
   \   00000000                      DS8 2
   4184              
   4185          
   4186          

   \                                 In section .text, align 2, keep-with-next
   4187          int16 Motor_control(int16 shift)
   4188          {
   \                     Motor_control:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   4189            volatile int32 speed=0;
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x9100             STR      R1,[SP, #+0]
   4190            volatile int16 motor_e=0,motor_ec=0;
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0xF8AD 0x1018      STRH     R1,[SP, #+24]
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0xF8AD 0x101A      STRH     R1,[SP, #+26]
   4191            static int16 motor_e_old=0,motor_sum=0;
   4192             
   4193            motor_e=shift-pulse; //speed_vari为编码器返回的脉冲数
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable62_7
   \   00000018   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000001C   0x1A41             SUBS     R1,R0,R1
   \   0000001E   0xF8AD 0x1018      STRH     R1,[SP, #+24]
   4194            speed_now=shift;
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable62_8
   \   00000026   0x8008             STRH     R0,[R1, #+0]
   4195            motor_ec=motor_e-motor_e_old;
   \   00000028   0xF8BD 0x0018      LDRH     R0,[SP, #+24]
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable62_9
   \   00000030   0x8809             LDRH     R1,[R1, #+0]
   \   00000032   0x1A40             SUBS     R0,R0,R1
   \   00000034   0xF8AD 0x001A      STRH     R0,[SP, #+26]
   4196            
   4197            motor_fuzzy(motor_e,motor_ec,16,8,32,24,8,4,16,12);//30  20  50  40  15  10  25  20
   \   00000038   0x200C             MOVS     R0,#+12
   \   0000003A   0x9005             STR      R0,[SP, #+20]
   \   0000003C   0x2010             MOVS     R0,#+16
   \   0000003E   0x9004             STR      R0,[SP, #+16]
   \   00000040   0x2004             MOVS     R0,#+4
   \   00000042   0x9003             STR      R0,[SP, #+12]
   \   00000044   0x2008             MOVS     R0,#+8
   \   00000046   0x9002             STR      R0,[SP, #+8]
   \   00000048   0x2018             MOVS     R0,#+24
   \   0000004A   0x9001             STR      R0,[SP, #+4]
   \   0000004C   0x2020             MOVS     R0,#+32
   \   0000004E   0x9000             STR      R0,[SP, #+0]
   \   00000050   0x2308             MOVS     R3,#+8
   \   00000052   0x2210             MOVS     R2,#+16
   \   00000054   0xF9BD 0x101A      LDRSH    R1,[SP, #+26]
   \   00000058   0xF9BD 0x0018      LDRSH    R0,[SP, #+24]
   \   0000005C   0x.... 0x....      BL       motor_fuzzy
   4198            motor_sum=line(motor_e,Motor.I);
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable62_10
   \   00000064   0xF9B0 0x1002      LDRSH    R1,[R0, #+2]
   \   00000068   0xF9BD 0x0018      LDRSH    R0,[SP, #+24]
   \   0000006C   0x.... 0x....      BL       line
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable62_11
   \   00000074   0x8008             STRH     R0,[R1, #+0]
   4199            speed=(long)s_old*motor_p+Motor.P*(long)motor_e+motor_p*(long)motor_sum/2;
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable62_12
   \   0000007A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000007E   0x2146             MOVS     R1,#+70
   \   00000080   0x.... 0x....      LDR.W    R2,??DataTable62_10
   \   00000084   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   00000088   0xF9BD 0x3018      LDRSH    R3,[SP, #+24]
   \   0000008C   0x435A             MULS     R2,R3,R2
   \   0000008E   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable62_11
   \   00000096   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000009A   0x2246             MOVS     R2,#+70
   \   0000009C   0x4351             MULS     R1,R2,R1
   \   0000009E   0x2202             MOVS     R2,#+2
   \   000000A0   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000000A4   0x1808             ADDS     R0,R1,R0
   \   000000A6   0x9000             STR      R0,[SP, #+0]
   4200            speed=speed/100;
   \   000000A8   0x9800             LDR      R0,[SP, #+0]
   \   000000AA   0x2164             MOVS     R1,#+100
   \   000000AC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000B0   0x9000             STR      R0,[SP, #+0]
   4201            s_old=pulse;
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable62_12
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable62_7
   \   000000BA   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000000BE   0x8001             STRH     R1,[R0, #+0]
   4202            motor_e_old=motor_e;
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable62_9
   \   000000C4   0xF8BD 0x1018      LDRH     R1,[SP, #+24]
   \   000000C8   0x8001             STRH     R1,[R0, #+0]
   4203            //if(pulse<50&&speed<0) return 50;
   4204            return speed;            
   \   000000CA   0x9800             LDR      R0,[SP, #+0]
   \   000000CC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000CE   0xB007             ADD      SP,SP,#+28
   \   000000D0   0xBD00             POP      {PC}             ;; return
   4205          }   

   \                                 In section .bss, align 2
   \                     ??motor_e_old:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     ??motor_sum:
   \   00000000                      DS8 2
   4206          
   4207          
   4208          /************************主函数****************************/
   4209          
   4210          

   \                                 In section .text, align 4, keep-with-next
   4211          void main(void)
   4212          {  
   \                     main:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   4213            uint8 m=0,line_head=0,line_end=0;
   \   00000006   0xF05F 0x0900      MOVS     R9,#+0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xF88D 0x0000      STRB     R0,[SP, #+0]
   4214            uint8 P_stop=0;//停车关速度控制标志位
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xF88D 0x0004      STRB     R0,[SP, #+4]
   4215            uint8 i,direct=0,LCD_begin=0;
   \   0000001C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0xF88D 0x0001      STRB     R0,[SP, #+1]
   4216            int8 judge=0,set=0;       
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   0000002C   0xF05F 0x0A00      MOVS     R10,#+0
   4217            int16  exspeed=0,pwm_speed=0;
   \   00000030   0x2400             MOVS     R4,#+0
   \   00000032   0xF05F 0x0B00      MOVS     R11,#+0
   4218            int16 start_flag=0,stf=0,stop_flag2=1,stop_flag=0,stop_num=0;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   00000042   0x2501             MOVS     R5,#+1
   \   00000044   0x2600             MOVS     R6,#+0
   \   00000046   0x2700             MOVS     R7,#+0
   4219            
   4220            DisableInterrupts;
   \   00000048   0xB672             CPSID i         
   4221            pllinit180M();
   \   0000004A   0x.... 0x....      BL       pllinit180M
   4222            IO_Init();
   \   0000004E   0x.... 0x....      BL       IO_Init
   4223            LCD_Init();  
   \   00000052   0x.... 0x....      BL       LCD_Init
   4224            hw_FTM1_init();
   \   00000056   0x.... 0x....      BL       hw_FTM1_init
   4225            hw_FTM0_init();
   \   0000005A   0x.... 0x....      BL       hw_FTM0_init
   4226            FTM2_QUAD_Init();
   \   0000005E   0x.... 0x....      BL       FTM2_QUAD_Init
   4227            lptmr_pulse_counter(LPTMR_ALT2);
   \   00000062   0x2002             MOVS     R0,#+2
   \   00000064   0x.... 0x....      BL       lptmr_pulse_counter
   4228            //gpio_init(PORTA,14,1,1);
   4229            //gpio_init(PORTA,15,1,1);
   4230            //gpio_init(PORTA,16,1,1);
   4231            //gpio_init(PORTA,17,1,1);
   4232            JIANPAN_ini();
   \   00000068   0x.... 0x....      BL       JIANPAN_ini
   4233            CH451_ini();
   \   0000006C   0x.... 0x....      BL       CH451_ini
   4234            CH451_WriteCommand(CH451_BCD);
   \   00000070   0xF44F 0x60B0      MOV      R0,#+1408
   \   00000074   0x.... 0x....      BL       CH451_WriteCommand
   4235            LCD_P6x8Str(0,0,"speed"); 
   \   00000078   0x.... 0x....      LDR.W    R2,??DataTable62_13
   \   0000007C   0x2100             MOVS     R1,#+0
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x.... 0x....      BL       LCD_P6x8Str
   4236            LCD_P6x8Str(0,7,"J_line");//英文字符串显示
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable62_14
   \   00000088   0x2107             MOVS     R1,#+7
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x.... 0x....      BL       LCD_P6x8Str
   4237            LCD_P6x8Str_3(50,10,Judge_startline);
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable62_15
   \   00000094   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000098   0x210A             MOVS     R1,#+10
   \   0000009A   0x2032             MOVS     R0,#+50
   \   0000009C   0x.... 0x....      BL       LCD_P6x8Str_3
   4238            Car_Speed();
   \   000000A0   0x.... 0x....      BL       Car_Speed
   4239            switch(car_speed)
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable62_16
   \   000000A8   0x7800             LDRB     R0,[R0, #+0]
   \   000000AA   0x2800             CMP      R0,#+0
   \   000000AC   0xD018             BEQ.N    ??main_0
   \   000000AE   0x2802             CMP      R0,#+2
   \   000000B0   0xD048             BEQ.N    ??main_1
   \   000000B2   0xD32E             BCC.N    ??main_2
   \   000000B4   0x2804             CMP      R0,#+4
   \   000000B6   0xD077             BEQ.N    ??main_3
   \   000000B8   0xD35D             BCC.N    ??main_4
   \   000000BA   0x2806             CMP      R0,#+6
   \   000000BC   0xF000 0x80A6      BEQ.W    ??main_5
   \   000000C0   0xF0C0 0x808B      BCC.W    ??main_6
   \   000000C4   0x2808             CMP      R0,#+8
   \   000000C6   0xF000 0x80D3      BEQ.W    ??main_7
   \   000000CA   0xF0C0 0x80B8      BCC.W    ??main_8
   \   000000CE   0x280A             CMP      R0,#+10
   \   000000D0   0xF000 0x8103      BEQ.W    ??main_9
   \   000000D4   0xF0C0 0x80E6      BCC.W    ??main_10
   \   000000D8   0x280B             CMP      R0,#+11
   \   000000DA   0xF000 0x8119      BEQ.W    ??main_11
   \   000000DE   0xE138             B.N      ??main_12
   4240            {
   4241              case 0:speed_Very_straight=170;speed_top=165;speed_b=160;speed_m=155;speed_s=150; speed_ms=145;break;
   \                     ??main_0:
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   000000E4   0x21AA             MOVS     R1,#+170
   \   000000E6   0x8001             STRH     R1,[R0, #+0]
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   000000EC   0x21A5             MOVS     R1,#+165
   \   000000EE   0x8001             STRH     R1,[R0, #+0]
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   000000F4   0x21A0             MOVS     R1,#+160
   \   000000F6   0x8001             STRH     R1,[R0, #+0]
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   000000FC   0x219B             MOVS     R1,#+155
   \   000000FE   0x8001             STRH     R1,[R0, #+0]
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   00000104   0x2196             MOVS     R1,#+150
   \   00000106   0x8001             STRH     R1,[R0, #+0]
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   0000010C   0x2191             MOVS     R1,#+145
   \   0000010E   0x8001             STRH     R1,[R0, #+0]
   \   00000110   0xE11F             B.N      ??main_12
   4242              case 1:speed_Very_straight=180;speed_top=175;speed_b=170;speed_m=165;speed_s=160; speed_ms=155;break;
   \                     ??main_2:
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   00000116   0x21B4             MOVS     R1,#+180
   \   00000118   0x8001             STRH     R1,[R0, #+0]
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   0000011E   0x21AF             MOVS     R1,#+175
   \   00000120   0x8001             STRH     R1,[R0, #+0]
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   00000126   0x21AA             MOVS     R1,#+170
   \   00000128   0x8001             STRH     R1,[R0, #+0]
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   0000012E   0x21A5             MOVS     R1,#+165
   \   00000130   0x8001             STRH     R1,[R0, #+0]
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   00000136   0x21A0             MOVS     R1,#+160
   \   00000138   0x8001             STRH     R1,[R0, #+0]
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   0000013E   0x219B             MOVS     R1,#+155
   \   00000140   0x8001             STRH     R1,[R0, #+0]
   \   00000142   0xE106             B.N      ??main_12
   4243              case 2:speed_Very_straight=200;speed_top=190;speed_b=175;speed_m=170;speed_s=165; speed_ms=160;break;
   \                     ??main_1:
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   00000148   0x21C8             MOVS     R1,#+200
   \   0000014A   0x8001             STRH     R1,[R0, #+0]
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   00000150   0x21BE             MOVS     R1,#+190
   \   00000152   0x8001             STRH     R1,[R0, #+0]
   \   00000154   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   00000158   0x21AF             MOVS     R1,#+175
   \   0000015A   0x8001             STRH     R1,[R0, #+0]
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   00000160   0x21AA             MOVS     R1,#+170
   \   00000162   0x8001             STRH     R1,[R0, #+0]
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   00000168   0x21A5             MOVS     R1,#+165
   \   0000016A   0x8001             STRH     R1,[R0, #+0]
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   00000170   0x21A0             MOVS     R1,#+160
   \   00000172   0x8001             STRH     R1,[R0, #+0]
   \   00000174   0xE0ED             B.N      ??main_12
   4244              case 3:speed_Very_straight=210;speed_top=200;speed_b=190;speed_m=180;speed_s=175; speed_ms=175;break;
   \                     ??main_4:
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   0000017A   0x21D2             MOVS     R1,#+210
   \   0000017C   0x8001             STRH     R1,[R0, #+0]
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   00000182   0x21C8             MOVS     R1,#+200
   \   00000184   0x8001             STRH     R1,[R0, #+0]
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   0000018A   0x21BE             MOVS     R1,#+190
   \   0000018C   0x8001             STRH     R1,[R0, #+0]
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   00000192   0x21B4             MOVS     R1,#+180
   \   00000194   0x8001             STRH     R1,[R0, #+0]
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   0000019A   0x21AF             MOVS     R1,#+175
   \   0000019C   0x8001             STRH     R1,[R0, #+0]
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   000001A2   0x21AF             MOVS     R1,#+175
   \   000001A4   0x8001             STRH     R1,[R0, #+0]
   \   000001A6   0xE0D4             B.N      ??main_12
   4245              case 4:speed_Very_straight=220;speed_top=210;speed_b=190;speed_m=180;speed_s=175; speed_ms=170;break;
   \                     ??main_3:
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   000001AC   0x21DC             MOVS     R1,#+220
   \   000001AE   0x8001             STRH     R1,[R0, #+0]
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   000001B4   0x21D2             MOVS     R1,#+210
   \   000001B6   0x8001             STRH     R1,[R0, #+0]
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   000001BC   0x21BE             MOVS     R1,#+190
   \   000001BE   0x8001             STRH     R1,[R0, #+0]
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   000001C4   0x21B4             MOVS     R1,#+180
   \   000001C6   0x8001             STRH     R1,[R0, #+0]
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   000001CC   0x21AF             MOVS     R1,#+175
   \   000001CE   0x8001             STRH     R1,[R0, #+0]
   \   000001D0   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   000001D4   0x21AA             MOVS     R1,#+170
   \   000001D6   0x8001             STRH     R1,[R0, #+0]
   \   000001D8   0xE0BB             B.N      ??main_12
   4246              case 5:speed_Very_straight=230;speed_top=220;speed_b=190;speed_m=180;speed_s=180; speed_ms=175;break;
   \                     ??main_6:
   \   000001DA   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   000001DE   0x21E6             MOVS     R1,#+230
   \   000001E0   0x8001             STRH     R1,[R0, #+0]
   \   000001E2   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   000001E6   0x21DC             MOVS     R1,#+220
   \   000001E8   0x8001             STRH     R1,[R0, #+0]
   \   000001EA   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   000001EE   0x21BE             MOVS     R1,#+190
   \   000001F0   0x8001             STRH     R1,[R0, #+0]
   \   000001F2   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   000001F6   0x21B4             MOVS     R1,#+180
   \   000001F8   0x8001             STRH     R1,[R0, #+0]
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   000001FE   0x21B4             MOVS     R1,#+180
   \   00000200   0x8001             STRH     R1,[R0, #+0]
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   00000206   0x21AF             MOVS     R1,#+175
   \   00000208   0x8001             STRH     R1,[R0, #+0]
   \   0000020A   0xE0A2             B.N      ??main_12
   4247              case 6:speed_Very_straight=240;speed_top=230;speed_b=195;speed_m=180;speed_s=175; speed_ms=175;break; 
   \                     ??main_5:
   \   0000020C   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   00000210   0x21F0             MOVS     R1,#+240
   \   00000212   0x8001             STRH     R1,[R0, #+0]
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   00000218   0x21E6             MOVS     R1,#+230
   \   0000021A   0x8001             STRH     R1,[R0, #+0]
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   00000220   0x21C3             MOVS     R1,#+195
   \   00000222   0x8001             STRH     R1,[R0, #+0]
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   00000228   0x21B4             MOVS     R1,#+180
   \   0000022A   0x8001             STRH     R1,[R0, #+0]
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   00000230   0x21AF             MOVS     R1,#+175
   \   00000232   0x8001             STRH     R1,[R0, #+0]
   \   00000234   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   00000238   0x21AF             MOVS     R1,#+175
   \   0000023A   0x8001             STRH     R1,[R0, #+0]
   \   0000023C   0xE089             B.N      ??main_12
   4248              case 7:speed_Very_straight=250;speed_top=240;speed_b=200;speed_m=185;speed_s=180; speed_ms=180;break;
   \                     ??main_8:
   \   0000023E   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   00000242   0x21FA             MOVS     R1,#+250
   \   00000244   0x8001             STRH     R1,[R0, #+0]
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   0000024A   0x21F0             MOVS     R1,#+240
   \   0000024C   0x8001             STRH     R1,[R0, #+0]
   \   0000024E   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   00000252   0x21C8             MOVS     R1,#+200
   \   00000254   0x8001             STRH     R1,[R0, #+0]
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   0000025A   0x21B9             MOVS     R1,#+185
   \   0000025C   0x8001             STRH     R1,[R0, #+0]
   \   0000025E   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   00000262   0x21B4             MOVS     R1,#+180
   \   00000264   0x8001             STRH     R1,[R0, #+0]
   \   00000266   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   0000026A   0x21B4             MOVS     R1,#+180
   \   0000026C   0x8001             STRH     R1,[R0, #+0]
   \   0000026E   0xE070             B.N      ??main_12
   4249              case 8:speed_Very_straight=260;speed_top=250;speed_b=210;speed_m=195;speed_s=190; speed_ms=190;break;
   \                     ??main_7:
   \   00000270   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   00000274   0xF44F 0x7182      MOV      R1,#+260
   \   00000278   0x8001             STRH     R1,[R0, #+0]
   \   0000027A   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   0000027E   0x21FA             MOVS     R1,#+250
   \   00000280   0x8001             STRH     R1,[R0, #+0]
   \   00000282   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   00000286   0x21D2             MOVS     R1,#+210
   \   00000288   0x8001             STRH     R1,[R0, #+0]
   \   0000028A   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   0000028E   0x21C3             MOVS     R1,#+195
   \   00000290   0x8001             STRH     R1,[R0, #+0]
   \   00000292   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   00000296   0x21BE             MOVS     R1,#+190
   \   00000298   0x8001             STRH     R1,[R0, #+0]
   \   0000029A   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   0000029E   0x21BE             MOVS     R1,#+190
   \   000002A0   0x8001             STRH     R1,[R0, #+0]
   \   000002A2   0xE056             B.N      ??main_12
   4250              case 9:speed_Very_straight=270;speed_top=260;speed_b=220;speed_m=200;speed_s=200; speed_ms=190;break;
   \                     ??main_10:
   \   000002A4   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   000002A8   0xF44F 0x7187      MOV      R1,#+270
   \   000002AC   0x8001             STRH     R1,[R0, #+0]
   \   000002AE   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   000002B2   0xF44F 0x7182      MOV      R1,#+260
   \   000002B6   0x8001             STRH     R1,[R0, #+0]
   \   000002B8   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   000002BC   0x21DC             MOVS     R1,#+220
   \   000002BE   0x8001             STRH     R1,[R0, #+0]
   \   000002C0   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   000002C4   0x21C8             MOVS     R1,#+200
   \   000002C6   0x8001             STRH     R1,[R0, #+0]
   \   000002C8   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   000002CC   0x21C8             MOVS     R1,#+200
   \   000002CE   0x8001             STRH     R1,[R0, #+0]
   \   000002D0   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   000002D4   0x21BE             MOVS     R1,#+190
   \   000002D6   0x8001             STRH     R1,[R0, #+0]
   \   000002D8   0xE03B             B.N      ??main_12
   4251               case 10:speed_Very_straight=290;speed_top=270;speed_b=230;speed_m=220;speed_s=210; speed_ms=190;break;
   \                     ??main_9:
   \   000002DA   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   000002DE   0xF44F 0x7191      MOV      R1,#+290
   \   000002E2   0x8001             STRH     R1,[R0, #+0]
   \   000002E4   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   000002E8   0xF44F 0x7187      MOV      R1,#+270
   \   000002EC   0x8001             STRH     R1,[R0, #+0]
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   000002F2   0x21E6             MOVS     R1,#+230
   \   000002F4   0x8001             STRH     R1,[R0, #+0]
   \   000002F6   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   000002FA   0x21DC             MOVS     R1,#+220
   \   000002FC   0x8001             STRH     R1,[R0, #+0]
   \   000002FE   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   00000302   0x21D2             MOVS     R1,#+210
   \   00000304   0x8001             STRH     R1,[R0, #+0]
   \   00000306   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   0000030A   0x21BE             MOVS     R1,#+190
   \   0000030C   0x8001             STRH     R1,[R0, #+0]
   \   0000030E   0xE020             B.N      ??main_12
   4252                case 11:speed_Very_straight=290;speed_top=270;speed_b=240;speed_m=230;speed_s=220; speed_ms=190;break;
   \                     ??main_11:
   \   00000310   0x.... 0x....      LDR.W    R0,??DataTable62_17
   \   00000314   0xF44F 0x7191      MOV      R1,#+290
   \   00000318   0x8001             STRH     R1,[R0, #+0]
   \   0000031A   0x.... 0x....      LDR.W    R0,??DataTable62_2
   \   0000031E   0xF44F 0x7187      MOV      R1,#+270
   \   00000322   0x8001             STRH     R1,[R0, #+0]
   \   00000324   0x.... 0x....      LDR.W    R0,??DataTable62_6
   \   00000328   0x21F0             MOVS     R1,#+240
   \   0000032A   0x8001             STRH     R1,[R0, #+0]
   \   0000032C   0x.... 0x....      LDR.W    R0,??DataTable62_5
   \   00000330   0x21E6             MOVS     R1,#+230
   \   00000332   0x8001             STRH     R1,[R0, #+0]
   \   00000334   0x.... 0x....      LDR.W    R0,??DataTable62_4
   \   00000338   0x21DC             MOVS     R1,#+220
   \   0000033A   0x8001             STRH     R1,[R0, #+0]
   \   0000033C   0x.... 0x....      LDR.W    R0,??DataTable62_18
   \   00000340   0x21BE             MOVS     R1,#+190
   \   00000342   0x8001             STRH     R1,[R0, #+0]
   \   00000344   0xE005             B.N      ??main_12
   4253            }
   4254            while(KeyValue!=50)
   4255            {
   4256              KeyValue=50;
   \                     ??main_13:
   \   00000346   0x.... 0x....      LDR.W    R0,??DataTable62_19
   \   0000034A   0x2132             MOVS     R1,#+50
   \   0000034C   0x7001             STRB     R1,[R0, #+0]
   4257              CH451_GetKeyValue();
   \   0000034E   0x.... 0x....      BL       CH451_GetKeyValue
   4258            }
   \                     ??main_12:
   \   00000352   0x.... 0x....      LDR.W    R0,??DataTable62_19
   \   00000356   0x7800             LDRB     R0,[R0, #+0]
   \   00000358   0x2832             CMP      R0,#+50
   \   0000035A   0xD1F4             BNE.N    ??main_13
   4259            //1直接发车，不调节PD，，，2调节PD后发车/
   4260            while(!direct)
   \                     ??main_14:
   \   0000035C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000360   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000364   0xD15C             BNE.N    ??main_15
   4261            {
   4262              LCD_P6x8Str(0,1,"TJorFC");     //英文字符串显示      
   \   00000366   0x.... 0x....      LDR.W    R2,??DataTable62_20
   \   0000036A   0x2101             MOVS     R1,#+1
   \   0000036C   0x2000             MOVS     R0,#+0
   \   0000036E   0x.... 0x....      BL       LCD_P6x8Str
   4263              CH451_GetKeyValue();
   \   00000372   0x.... 0x....      BL       CH451_GetKeyValue
   4264              switch(KeyValue)
   \   00000376   0x.... 0x....      LDR.W    R0,??DataTable62_19
   \   0000037A   0x7800             LDRB     R0,[R0, #+0]
   \   0000037C   0x2801             CMP      R0,#+1
   \   0000037E   0xD004             BEQ.N    ??main_16
   \   00000380   0x2802             CMP      R0,#+2
   \   00000382   0xD016             BEQ.N    ??main_17
   \   00000384   0x2805             CMP      R0,#+5
   \   00000386   0xD035             BEQ.N    ??main_18
   \   00000388   0xE7E8             B.N      ??main_14
   4265              {
   4266              case 1:
   4267                LCD_P6x8Str(40,1,"FC");     //英文字符串显示      
   \                     ??main_16:
   \   0000038A   0xA2B9             ADR.N    R2,??main_19     ;; 0x46, 0x43, 0x00, 0x00
   \   0000038C   0x2101             MOVS     R1,#+1
   \   0000038E   0x2028             MOVS     R0,#+40
   \   00000390   0x.... 0x....      BL       LCD_P6x8Str
   \   00000394   0xE005             B.N      ??main_20
   4268                while(KeyValue==1)
   4269                {
   4270                  KeyValue=50;
   \                     ??main_21:
   \   00000396   0x.... 0x....      LDR.W    R0,??DataTable62_19
   \   0000039A   0x2132             MOVS     R1,#+50
   \   0000039C   0x7001             STRB     R1,[R0, #+0]
   4271                  CH451_GetKeyValue();
   \   0000039E   0x.... 0x....      BL       CH451_GetKeyValue
   4272                }
   \                     ??main_20:
   \   000003A2   0x.... 0x....      LDR.W    R0,??DataTable62_19
   \   000003A6   0x7800             LDRB     R0,[R0, #+0]
   \   000003A8   0x2801             CMP      R0,#+1
   \   000003AA   0xD0F4             BEQ.N    ??main_21
   4273                direct=1;
   \   000003AC   0xF05F 0x0801      MOVS     R8,#+1
   4274                break;
   \   000003B0   0xE7D4             B.N      ??main_14
   4275              case 2:
   4276                LCD_P6x8Str(40,1,"TJ");     //英文字符串显示      
   \                     ??main_17:
   \   000003B2   0xA2B0             ADR.N    R2,??main_19+0x4  ;; 0x54, 0x4A, 0x00, 0x00
   \   000003B4   0x2101             MOVS     R1,#+1
   \   000003B6   0x2028             MOVS     R0,#+40
   \   000003B8   0x.... 0x....      BL       LCD_P6x8Str
   \   000003BC   0xE005             B.N      ??main_22
   4277                while(KeyValue==2)
   4278                {
   4279                  KeyValue=50;
   \                     ??main_23:
   \   000003BE   0x.... 0x....      LDR.W    R0,??DataTable62_19
   \   000003C2   0x2132             MOVS     R1,#+50
   \   000003C4   0x7001             STRB     R1,[R0, #+0]
   4280                  CH451_GetKeyValue();
   \   000003C6   0x.... 0x....      BL       CH451_GetKeyValue
   4281                }
   \                     ??main_22:
   \   000003CA   0x.... 0x....      LDR.W    R0,??DataTable62_19
   \   000003CE   0x7800             LDRB     R0,[R0, #+0]
   \   000003D0   0x2802             CMP      R0,#+2
   \   000003D2   0xD0F4             BEQ.N    ??main_23
   4282                LCD_P6x8Str(0,2,"sai_dao_number");     //英文字符串显示  
   \   000003D4   0x.... 0x....      LDR.W    R2,??DataTable62_21
   \   000003D8   0x2102             MOVS     R1,#+2
   \   000003DA   0x2000             MOVS     R0,#+0
   \   000003DC   0x.... 0x....      BL       LCD_P6x8Str
   4283                Duo_Ji_PD();
   \   000003E0   0x.... 0x....      BL       Duo_Ji_PD
   4284                LCD_P6x8Str(58,1,"FC");     //英文字符串显示  
   \   000003E4   0xA2A2             ADR.N    R2,??main_19     ;; 0x46, 0x43, 0x00, 0x00
   \   000003E6   0x2101             MOVS     R1,#+1
   \   000003E8   0x203A             MOVS     R0,#+58
   \   000003EA   0x.... 0x....      BL       LCD_P6x8Str
   4285                direct=1;
   \   000003EE   0xF05F 0x0801      MOVS     R8,#+1
   4286                break;
   \   000003F2   0xE7B3             B.N      ??main_14
   4287              case 5:
   4288                LCD_P6x8Str(76,0,"LCDgo_on");     //英文字符串显示      
   \                     ??main_18:
   \   000003F4   0x.... 0x....      LDR.W    R2,??DataTable62_22
   \   000003F8   0x2100             MOVS     R1,#+0
   \   000003FA   0x204C             MOVS     R0,#+76
   \   000003FC   0x.... 0x....      BL       LCD_P6x8Str
   \   00000400   0xE005             B.N      ??main_24
   4289                while(KeyValue==5)
   4290                {
   4291                  KeyValue=50;
   \                     ??main_25:
   \   00000402   0x.... 0x....      LDR.W    R0,??DataTable62_19
   \   00000406   0x2132             MOVS     R1,#+50
   \   00000408   0x7001             STRB     R1,[R0, #+0]
   4292                  CH451_GetKeyValue();
   \   0000040A   0x.... 0x....      BL       CH451_GetKeyValue
   4293                }
   \                     ??main_24:
   \   0000040E   0x.... 0x....      LDR.W    R0,??DataTable62_19
   \   00000412   0x7800             LDRB     R0,[R0, #+0]
   \   00000414   0x2805             CMP      R0,#+5
   \   00000416   0xD0F4             BEQ.N    ??main_25
   4294                LCD_begin=1;
   \   00000418   0x2001             MOVS     R0,#+1
   \   0000041A   0xF88D 0x0001      STRB     R0,[SP, #+1]
   4295                break;       
   \   0000041E   0xE79D             B.N      ??main_14
   4296              }
   4297            }
   4298            /****************1直接发车，不调节PD，，，2调节PD后发车end*******************/           
   4299            enable_irq (87);//使能A口中断 ，A24场中断
   \                     ??main_15:
   \   00000420   0x2057             MOVS     R0,#+87
   \   00000422   0x.... 0x....      BL       enable_irq
   4300            UART0_Init();
   \   00000426   0x.... 0x....      BL       UART0_Init
   4301            //uart_init(UART5,45,115200);
   4302            DMA0_Init();
   \   0000042A   0x.... 0x....      BL       DMA0_Init
   4303            //hw_pit_init(1,16000);         //pit1中断初始化
   4304            //enable_irq(89);             //开c9口红外遥控停车中断
   4305            //enable_pit_interrupt(1);    //使能PIT1中断，，，用于红外计数
   4306            delays(3);   //延时发车
   \   0000042E   0x2003             MOVS     R0,#+3
   \   00000430   0x.... 0x....      BL       delays
   4307            lptmr_pulse_counter(LPTMR_ALT2);
   \   00000434   0x2002             MOVS     R0,#+2
   \   00000436   0x.... 0x....      BL       lptmr_pulse_counter
   4308            LCD_CLS();
   \   0000043A   0x.... 0x....      BL       LCD_CLS
   4309            hw_pit_init(PIT2,4500000);//100ms
   \   0000043E   0x.... 0x....      LDR.W    R1,??DataTable62_23  ;; 0x44aa20
   \   00000442   0x2002             MOVS     R0,#+2
   \   00000444   0x.... 0x....      BL       hw_pit_init
   4310            enable_pit_interrupt(PIT2);
   \   00000448   0x2002             MOVS     R0,#+2
   \   0000044A   0x.... 0x....      BL       enable_pit_interrupt
   4311            EnableInterrupts;
   \   0000044E   0xB662             CPSIE i         
   \   00000450   0xE015             B.N      ??main_26
   4312            for(;;) 
   4313            {	  
   4314              if(finish==1)
   4315              {   
   4316                tu_flag=find_position();
   4317                if(stop_flag==1)
   4318                {
   4319                  stop_num++;
   4320                }
   4321                m=judge_locus_0();
   4322                sai_dao_lei_xing=m;
   4323                 if(P_timer>Judge_startline&&dijihang<5&&high_now_0>60&&high_now_0<100&&mid_now_0>60&&mid_now_0<100&&low_now_0>60&&low_now_0<100)
   4324              {
   4325               if(stop_flag2)
   4326               {
   4327              stop_flag=Judge_startline2();
   4328              
   4329               }
   4330               if(stop_flag==1)
   4331               {
   4332                 stop_flag2=0;
   4333               }
   4334              } 
   4335          if(stop_flag==1)
   4336          {
   4337            if(stop_num>12)
   4338            {
   4339              if(pulse>150)
   4340            {
   4341                FTM0_C0V=0;
   4342                FTM0_C3V=350;
   4343                FTM0_C4V=350;
   4344                FTM0_C6V=0;
   4345            }
   4346            if(pulse>100)
   4347            {
   4348                FTM0_C0V=0;
   4349                FTM0_C3V=250;
   4350                FTM0_C4V=250;
   4351                FTM0_C6V=0;
   4352            }
   4353            else if(pulse>50)
   4354            {
   4355                FTM0_C0V=0;
   4356                FTM0_C3V=200;
   4357                FTM0_C4V=200;
   4358                FTM0_C6V=0;
   4359            }
   4360            else if(pulse>30)
   4361            {
   4362                FTM0_C0V=0;
   4363                FTM0_C3V=10;
   4364                FTM0_C1V=0;
   4365                FTM0_C5V=0;
   4366                FTM0_C4V=10;
   4367                FTM0_C6V=0;
   4368            }
   4369          else
   4370          {     
   4371               FTM0_C0V=0;
   4372                FTM0_C3V=0;
   4373                FTM0_C4V=0;
   4374                FTM0_C6V=0;
   4375                FTM0_C1V=0;
   4376                FTM0_C5V=0;
   4377          
   4378          }
   4379            }
   4380            else
   4381            {
   4382            FTM0_C0V=375;
   4383                FTM0_C3V=0;
   4384                FTM0_C4V=0;
   4385                FTM0_C6V=375;
   4386            }
   4387                P_stop=1;
   4388                stf=1;
   4389          
   4390          }
   4391                  
   4392                    
   4393                
   4394                if(tu_flag==1)  
   4395                {
   4396                  set=choose_PD();
   4397                  tu_flag=0;
   4398                }
   4399                else
   4400                {
   4401                  if(Servo_value>(Servo_Middle+200))
   4402                  {
   4403                  Servo_value=limit(Servo_value+250,Servo_Left,Servo_Right);
   4404                  FTM1_C0V=Servo_value;
   4405                   // Servo_value=9320;
   4406                  }
   4407                  if(Servo_value<(Servo_Middle-200))
   4408                  {
   4409                  Servo_value=limit(Servo_value-200,Servo_Left,Servo_Right);
   4410                  FTM1_C0V=Servo_value;
   4411                  //Servo_value=7035;
   4412                  }
   4413                }
   4414                if(P_stop==0)
   4415                {
   4416                  if(P_timer<10) 
   4417                    pwm_speed=375;//发车前1.3s给满占空比,使其快速发车
   4418                  else
   4419                  {
   4420                    if(Very_straight==0)           
   4421                      exspeed=speed_control();
   4422                    if(Very_straight==1)
   4423                    {
   4424                      Very_straight=0;
   4425                      exspeed=speed_Very_straight;
   4426                    }
   4427                    pwm_speed=Motor_control(exspeed);
   4428                  }
   4429                  set_speed(pwm_speed);
   4430                }
   4431                
   4432              hw_pit_init(PIT0,745000);//16ms  使用定时器，这样才是在固定的时间里面得到的脉冲数
   4433              enable_pit_interrupt(PIT0);
   4434              /********************LCD数据显示模块*********************/
   4435              CH451_GetKeyValue();
   4436              if(KeyValue==10||LCD_begin==1)           //LCD_begin==1
   4437              {
   4438                if(LCD_P1==250)LCD_P1=0;
   4439                              //秒加1
   4440                            
   4441                if(++LCD_P1%10)
   4442                {
   4443                  LCD_CLS();                     
   4444                  LCD_P6x8Str(1,0,"low_0");     //英文字符串显示
   4445                  LCD_P6x8Str_3(45,0,low_now_0);
   4446                  if(low_now)LCD_P6x8Str_1(70,0,low_0);    //如果存在的话就显示，不存在的话就不显示
   4447                  //LCD_P6x8Str(10,0,"Servo.P");
   4448                  LCD_P6x8Str_3(70,0,Servo.P);//显示赛道类型.
   4449                   LCD_P6x8Str_3(90,0,Servo.D);
   4450                  LCD_P6x8Str(1,1,"mid_0");     //英文字符串显示
   4451                  LCD_P6x8Str_3(45,1,mid_now_0);
   4452                  if(mid_now)LCD_P6x8Str_1(70,1,mid_0);
   4453                 LCD_P6x8Str_3(70,1,pulse);
   4454                 
   4455                  LCD_P6x8Str_3(90,1,pulse2);
   4456                  LCD_P6x8Str(1,2,"high_0");     //英文字符串显示
   4457                  LCD_P6x8Str_3(45,2,high_now_0);
   4458                  if(high_now)LCD_P6x8Str_1(70,2,high_0);
   4459                  LCD_P6x8Str(1,3,"position_now");     //英文字符串显示
   4460                  LCD_P6x8Str_3(75,3,position_now);
   4461                  LCD_P6x8Str(1,4,"position_diff");     //英文字符串显示
   4462                  LCD_P6x8Str_FuHao_3(88,4,position_diff);
   4463                  LCD_P6x8Str(1,5,"position_now_low");     //英文字符串显示
   4464                  LCD_P6x8Str_FuHao_3(100,5,position_now_low);
   4465                  LCD_P6x8Str(1,6,"Servo_value"); 
   4466          
   4467                  LCD_P6x8Str_5(88,6,Servo_value);
   4468                  LCD_P6x8Str(1,7,"dijihang"); 
   4469                  LCD_P6x8Str_5(88,7,dijihang);
   4470                }
   4471              }
   4472              if(KeyValue==6)
   4473              {
   4474                if(LCD_P3==250)LCD_P3=0;
   4475                if(++LCD_P3%10)
   4476                {
   4477                  LCD_CLS();       
   4478                  for(i=0;i<IMG_ROWS-1;i++)
   4479                  {
   4480                     LCD_PutPixel(position[i],i);
   4481                  }
   4482                 }
   4483               }             
   4484                /***************对一些变量进行清零****************/
   4485                position_now_low=0;
   4486                position_now=0;
   4487                position_diff=0;
   4488                dijihang=0;
   4489                for(i=0;i<IMG_ROWS;i++)
   4490                {  
   4491                  position[i]=0;
   \                     ??main_27:
   \   00000452   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000456   0x.... 0x....      LDR.W    R0,??DataTable62_24
   \   0000045A   0x2100             MOVS     R1,#+0
   \   0000045C   0xF840 0x1028      STR      R1,[R0, R8, LSL #+2]
   4492                }      
   \   00000460   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??main_28:
   \   00000464   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000468   0xF1B8 0x0F37      CMP      R8,#+55
   \   0000046C   0xD3F1             BCC.N    ??main_27
   4493                ramp_flag=0;
   \   0000046E   0x.... 0x....      LDR.W    R0,??DataTable62_25
   \   00000472   0x2100             MOVS     R1,#+0
   \   00000474   0x7001             STRB     R1,[R0, #+0]
   4494                finish=0;
   \   00000476   0x.... 0x....      LDR.W    R0,??DataTable62_26
   \   0000047A   0x2100             MOVS     R1,#+0
   \   0000047C   0x7001             STRB     R1,[R0, #+0]
   \                     ??main_26:
   \   0000047E   0x.... 0x....      LDR.W    R0,??DataTable62_26
   \   00000482   0x7800             LDRB     R0,[R0, #+0]
   \   00000484   0x2801             CMP      R0,#+1
   \   00000486   0xD1FA             BNE.N    ??main_26
   \   00000488   0x.... 0x....      BL       find_position
   \   0000048C   0x.... 0x....      LDR.W    R1,??DataTable62_27
   \   00000490   0x6008             STR      R0,[R1, #+0]
   \   00000492   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000494   0x2E01             CMP      R6,#+1
   \   00000496   0xD100             BNE.N    ??main_29
   \   00000498   0x1C7F             ADDS     R7,R7,#+1
   \                     ??main_29:
   \   0000049A   0x.... 0x....      BL       judge_locus_0
   \   0000049E   0x4681             MOV      R9,R0
   \   000004A0   0x.... 0x....      LDR.W    R0,??DataTable62_28
   \   000004A4   0xF880 0x9000      STRB     R9,[R0, #+0]
   \   000004A8   0x.... 0x....      LDR.W    R0,??DataTable62_15
   \   000004AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004B0   0x.... 0x....      LDR.W    R1,??DataTable62_29
   \   000004B4   0x6809             LDR      R1,[R1, #+0]
   \   000004B6   0x4288             CMP      R0,R1
   \   000004B8   0xDA33             BGE.N    ??main_30
   \   000004BA   0x.... 0x....      LDR.W    R0,??DataTable62_30
   \   000004BE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004C2   0x2805             CMP      R0,#+5
   \   000004C4   0xDA2D             BGE.N    ??main_30
   \   000004C6   0x.... 0x....      LDR.W    R0,??DataTable62_31
   \   000004CA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004CE   0x283D             CMP      R0,#+61
   \   000004D0   0xDB27             BLT.N    ??main_30
   \   000004D2   0x.... 0x....      LDR.W    R0,??DataTable62_31
   \   000004D6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004DA   0x2864             CMP      R0,#+100
   \   000004DC   0xDA21             BGE.N    ??main_30
   \   000004DE   0x.... 0x....      LDR.W    R0,??DataTable62_32
   \   000004E2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004E6   0x283D             CMP      R0,#+61
   \   000004E8   0xDB1B             BLT.N    ??main_30
   \   000004EA   0x.... 0x....      LDR.W    R0,??DataTable62_32
   \   000004EE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004F2   0x2864             CMP      R0,#+100
   \   000004F4   0xDA15             BGE.N    ??main_30
   \   000004F6   0x.... 0x....      LDR.W    R0,??DataTable62_33
   \   000004FA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004FE   0x283D             CMP      R0,#+61
   \   00000500   0xDB0F             BLT.N    ??main_30
   \   00000502   0x.... 0x....      LDR.W    R0,??DataTable62_33
   \   00000506   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000050A   0x2864             CMP      R0,#+100
   \   0000050C   0xDA09             BGE.N    ??main_30
   \   0000050E   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000510   0x2D00             CMP      R5,#+0
   \   00000512   0xD002             BEQ.N    ??main_31
   \   00000514   0x.... 0x....      BL       Judge_startline2
   \   00000518   0x0006             MOVS     R6,R0
   \                     ??main_31:
   \   0000051A   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   0000051C   0x2E01             CMP      R6,#+1
   \   0000051E   0xD100             BNE.N    ??main_30
   \   00000520   0x2500             MOVS     R5,#+0
   \                     ??main_30:
   \   00000522   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000524   0x2E01             CMP      R6,#+1
   \   00000526   0xF040 0x8095      BNE.W    ??main_32
   \   0000052A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000052C   0x2F0D             CMP      R7,#+13
   \   0000052E   0xDB79             BLT.N    ??main_33
   \   00000530   0x.... 0x....      LDR.W    R0,??DataTable62_7
   \   00000534   0x8800             LDRH     R0,[R0, #+0]
   \   00000536   0x2897             CMP      R0,#+151
   \   00000538   0xD311             BCC.N    ??main_34
   \   0000053A   0x.... 0x....      LDR.W    R0,??DataTable62_34  ;; 0x40038010
   \   0000053E   0x2100             MOVS     R1,#+0
   \   00000540   0x6001             STR      R1,[R0, #+0]
   \   00000542   0x.... 0x....      LDR.W    R0,??DataTable62_35  ;; 0x40038028
   \   00000546   0xF44F 0x71AF      MOV      R1,#+350
   \   0000054A   0x6001             STR      R1,[R0, #+0]
   \   0000054C   0x.... 0x....      LDR.W    R0,??DataTable62_36  ;; 0x40038030
   \   00000550   0xF44F 0x71AF      MOV      R1,#+350
   \   00000554   0x6001             STR      R1,[R0, #+0]
   \   00000556   0x.... 0x....      LDR.W    R0,??DataTable62_37  ;; 0x40038040
   \   0000055A   0x2100             MOVS     R1,#+0
   \   0000055C   0x6001             STR      R1,[R0, #+0]
   \                     ??main_34:
   \   0000055E   0x.... 0x....      LDR.W    R0,??DataTable62_7
   \   00000562   0x8800             LDRH     R0,[R0, #+0]
   \   00000564   0x2865             CMP      R0,#+101
   \   00000566   0xD310             BCC.N    ??main_35
   \   00000568   0x.... 0x....      LDR.W    R0,??DataTable62_34  ;; 0x40038010
   \   0000056C   0x2100             MOVS     R1,#+0
   \   0000056E   0x6001             STR      R1,[R0, #+0]
   \   00000570   0x.... 0x....      LDR.W    R0,??DataTable62_35  ;; 0x40038028
   \   00000574   0x21FA             MOVS     R1,#+250
   \   00000576   0x6001             STR      R1,[R0, #+0]
   \   00000578   0x.... 0x....      LDR.W    R0,??DataTable62_36  ;; 0x40038030
   \   0000057C   0x21FA             MOVS     R1,#+250
   \   0000057E   0x6001             STR      R1,[R0, #+0]
   \   00000580   0x.... 0x....      LDR.W    R0,??DataTable62_37  ;; 0x40038040
   \   00000584   0x2100             MOVS     R1,#+0
   \   00000586   0x6001             STR      R1,[R0, #+0]
   \   00000588   0xE05E             B.N      ??main_36
   \                     ??main_35:
   \   0000058A   0x.... 0x....      LDR.W    R0,??DataTable62_7
   \   0000058E   0x8800             LDRH     R0,[R0, #+0]
   \   00000590   0x2833             CMP      R0,#+51
   \   00000592   0xD310             BCC.N    ??main_37
   \   00000594   0x.... 0x....      LDR.W    R0,??DataTable62_34  ;; 0x40038010
   \   00000598   0x2100             MOVS     R1,#+0
   \   0000059A   0x6001             STR      R1,[R0, #+0]
   \   0000059C   0x.... 0x....      LDR.W    R0,??DataTable62_35  ;; 0x40038028
   \   000005A0   0x21C8             MOVS     R1,#+200
   \   000005A2   0x6001             STR      R1,[R0, #+0]
   \   000005A4   0x.... 0x....      LDR.W    R0,??DataTable62_36  ;; 0x40038030
   \   000005A8   0x21C8             MOVS     R1,#+200
   \   000005AA   0x6001             STR      R1,[R0, #+0]
   \   000005AC   0x.... 0x....      LDR.W    R0,??DataTable62_37  ;; 0x40038040
   \   000005B0   0x2100             MOVS     R1,#+0
   \   000005B2   0x6001             STR      R1,[R0, #+0]
   \   000005B4   0xE048             B.N      ??main_36
   \                     ??main_37:
   \   000005B6   0x.... 0x....      LDR.W    R0,??DataTable62_7
   \   000005BA   0x8800             LDRH     R0,[R0, #+0]
   \   000005BC   0x281F             CMP      R0,#+31
   \   000005BE   0xD318             BCC.N    ??main_38
   \   000005C0   0x.... 0x....      LDR.W    R0,??DataTable62_34  ;; 0x40038010
   \   000005C4   0x2100             MOVS     R1,#+0
   \   000005C6   0x6001             STR      R1,[R0, #+0]
   \   000005C8   0x.... 0x....      LDR.W    R0,??DataTable62_35  ;; 0x40038028
   \   000005CC   0x210A             MOVS     R1,#+10
   \   000005CE   0x6001             STR      R1,[R0, #+0]
   \   000005D0   0x.... 0x....      LDR.W    R0,??DataTable62_38  ;; 0x40038018
   \   000005D4   0x2100             MOVS     R1,#+0
   \   000005D6   0x6001             STR      R1,[R0, #+0]
   \   000005D8   0x.... 0x....      LDR.W    R0,??DataTable62_39  ;; 0x40038038
   \   000005DC   0x2100             MOVS     R1,#+0
   \   000005DE   0x6001             STR      R1,[R0, #+0]
   \   000005E0   0x.... 0x....      LDR.W    R0,??DataTable62_36  ;; 0x40038030
   \   000005E4   0x210A             MOVS     R1,#+10
   \   000005E6   0x6001             STR      R1,[R0, #+0]
   \   000005E8   0x.... 0x....      LDR.W    R0,??DataTable62_37  ;; 0x40038040
   \   000005EC   0x2100             MOVS     R1,#+0
   \   000005EE   0x6001             STR      R1,[R0, #+0]
   \   000005F0   0xE02A             B.N      ??main_36
   \                     ??main_38:
   \   000005F2   0x.... 0x....      LDR.W    R0,??DataTable62_34  ;; 0x40038010
   \   000005F6   0x2100             MOVS     R1,#+0
   \   000005F8   0x6001             STR      R1,[R0, #+0]
   \   000005FA   0x.... 0x....      LDR.W    R0,??DataTable62_35  ;; 0x40038028
   \   000005FE   0x2100             MOVS     R1,#+0
   \   00000600   0x6001             STR      R1,[R0, #+0]
   \   00000602   0x.... 0x....      LDR.W    R0,??DataTable62_36  ;; 0x40038030
   \   00000606   0x2100             MOVS     R1,#+0
   \   00000608   0x6001             STR      R1,[R0, #+0]
   \   0000060A   0x.... 0x....      LDR.W    R0,??DataTable62_37  ;; 0x40038040
   \   0000060E   0x2100             MOVS     R1,#+0
   \   00000610   0x6001             STR      R1,[R0, #+0]
   \   00000612   0x.... 0x....      LDR.W    R0,??DataTable62_38  ;; 0x40038018
   \   00000616   0x2100             MOVS     R1,#+0
   \   00000618   0x6001             STR      R1,[R0, #+0]
   \   0000061A   0x.... 0x....      LDR.W    R0,??DataTable62_39  ;; 0x40038038
   \   0000061E   0x2100             MOVS     R1,#+0
   \   00000620   0x6001             STR      R1,[R0, #+0]
   \   00000622   0xE011             B.N      ??main_36
   \                     ??main_33:
   \   00000624   0x.... 0x....      LDR.W    R0,??DataTable62_34  ;; 0x40038010
   \   00000628   0xF240 0x1177      MOVW     R1,#+375
   \   0000062C   0x6001             STR      R1,[R0, #+0]
   \   0000062E   0x.... 0x....      LDR.W    R0,??DataTable62_35  ;; 0x40038028
   \   00000632   0x2100             MOVS     R1,#+0
   \   00000634   0x6001             STR      R1,[R0, #+0]
   \   00000636   0x.... 0x....      LDR.W    R0,??DataTable62_36  ;; 0x40038030
   \   0000063A   0x2100             MOVS     R1,#+0
   \   0000063C   0x6001             STR      R1,[R0, #+0]
   \   0000063E   0x.... 0x....      LDR.W    R0,??DataTable62_37  ;; 0x40038040
   \   00000642   0xF240 0x1177      MOVW     R1,#+375
   \   00000646   0x6001             STR      R1,[R0, #+0]
   \                     ??main_36:
   \   00000648   0x2001             MOVS     R0,#+1
   \   0000064A   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   0000064E   0x2001             MOVS     R0,#+1
   \   00000650   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \                     ??main_32:
   \   00000654   0x.... 0x....      LDR.W    R0,??DataTable62_27
   \   00000658   0x6800             LDR      R0,[R0, #+0]
   \   0000065A   0x2801             CMP      R0,#+1
   \   0000065C   0xD10C             BNE.N    ??main_39
   \   0000065E   0x.... 0x....      BL       choose_PD
   \   00000662   0x4682             MOV      R10,R0
   \   00000664   0x.... 0x....      LDR.W    R0,??DataTable62_27
   \   00000668   0x2100             MOVS     R1,#+0
   \   0000066A   0x6001             STR      R1,[R0, #+0]
   \   0000066C   0xE040             B.N      ??main_40
   \   0000066E   0xBF00             Nop      
   \                     ??main_19:
   \   00000670   0x46 0x43          DC8      0x46, 0x43, 0x00, 0x00
   \              0x00 0x00    
   \   00000674   0x54 0x4A          DC8      0x54, 0x4A, 0x00, 0x00
   \              0x00 0x00    
   \                     ??main_39:
   \   00000678   0x.... 0x....      LDR.W    R0,??DataTable62_40
   \   0000067C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000680   0x30C8             ADDS     R0,R0,#+200
   \   00000682   0x.... 0x....      LDR.W    R1,??DataTable62_41
   \   00000686   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000068A   0x4288             CMP      R0,R1
   \   0000068C   0xDA14             BGE.N    ??main_41
   \   0000068E   0x.... 0x....      LDR.W    R0,??DataTable62_42
   \   00000692   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000696   0x.... 0x....      LDR.W    R0,??DataTable62_43
   \   0000069A   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \   0000069E   0x....             LDR.N    R0,??DataTable62_41
   \   000006A0   0x8800             LDRH     R0,[R0, #+0]
   \   000006A2   0x30FA             ADDS     R0,R0,#+250
   \   000006A4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006A6   0x.... 0x....      BL       limit
   \   000006AA   0x....             LDR.N    R1,??DataTable62_41
   \   000006AC   0x8008             STRH     R0,[R1, #+0]
   \   000006AE   0x....             LDR.N    R0,??DataTable62_44  ;; 0x40039010
   \   000006B0   0x....             LDR.N    R1,??DataTable62_41
   \   000006B2   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000006B6   0x6001             STR      R1,[R0, #+0]
   \                     ??main_41:
   \   000006B8   0x....             LDR.N    R0,??DataTable62_41
   \   000006BA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000006BE   0x....             LDR.N    R1,??DataTable62_40
   \   000006C0   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000006C4   0x39C8             SUBS     R1,R1,#+200
   \   000006C6   0x4288             CMP      R0,R1
   \   000006C8   0xDA12             BGE.N    ??main_40
   \   000006CA   0x....             LDR.N    R0,??DataTable62_42
   \   000006CC   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000006D0   0x....             LDR.N    R0,??DataTable62_43
   \   000006D2   0xF9B0 0x1000      LDRSH    R1,[R0, #+0]
   \   000006D6   0x....             LDR.N    R0,??DataTable62_41
   \   000006D8   0x8800             LDRH     R0,[R0, #+0]
   \   000006DA   0x38C8             SUBS     R0,R0,#+200
   \   000006DC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006DE   0x.... 0x....      BL       limit
   \   000006E2   0x....             LDR.N    R1,??DataTable62_41
   \   000006E4   0x8008             STRH     R0,[R1, #+0]
   \   000006E6   0x....             LDR.N    R0,??DataTable62_44  ;; 0x40039010
   \   000006E8   0x....             LDR.N    R1,??DataTable62_41
   \   000006EA   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000006EE   0x6001             STR      R1,[R0, #+0]
   \                     ??main_40:
   \   000006F0   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   000006F4   0x2800             CMP      R0,#+0
   \   000006F6   0xD121             BNE.N    ??main_42
   \   000006F8   0x....             LDR.N    R0,??DataTable62_29
   \   000006FA   0x6800             LDR      R0,[R0, #+0]
   \   000006FC   0x280A             CMP      R0,#+10
   \   000006FE   0xDA02             BGE.N    ??main_43
   \   00000700   0xF240 0x1B77      MOVW     R11,#+375
   \   00000704   0xE015             B.N      ??main_44
   \                     ??main_43:
   \   00000706   0x....             LDR.N    R0,??DataTable62_45
   \   00000708   0x7800             LDRB     R0,[R0, #+0]
   \   0000070A   0x2800             CMP      R0,#+0
   \   0000070C   0xD102             BNE.N    ??main_45
   \   0000070E   0x.... 0x....      BL       speed_control
   \   00000712   0x0004             MOVS     R4,R0
   \                     ??main_45:
   \   00000714   0x....             LDR.N    R0,??DataTable62_45
   \   00000716   0x7800             LDRB     R0,[R0, #+0]
   \   00000718   0x2801             CMP      R0,#+1
   \   0000071A   0xD105             BNE.N    ??main_46
   \   0000071C   0x....             LDR.N    R0,??DataTable62_45
   \   0000071E   0x2100             MOVS     R1,#+0
   \   00000720   0x7001             STRB     R1,[R0, #+0]
   \   00000722   0x....             LDR.N    R0,??DataTable62_17
   \   00000724   0xF9B0 0x4000      LDRSH    R4,[R0, #+0]
   \                     ??main_46:
   \   00000728   0x0020             MOVS     R0,R4
   \   0000072A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000072C   0x.... 0x....      BL       Motor_control
   \   00000730   0x4683             MOV      R11,R0
   \                     ??main_44:
   \   00000732   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000736   0x4658             MOV      R0,R11
   \   00000738   0x.... 0x....      BL       set_speed
   \                     ??main_42:
   \   0000073C   0x....             LDR.N    R1,??DataTable62_46  ;; 0xb5e28
   \   0000073E   0x2000             MOVS     R0,#+0
   \   00000740   0x.... 0x....      BL       hw_pit_init
   \   00000744   0x2000             MOVS     R0,#+0
   \   00000746   0x.... 0x....      BL       enable_pit_interrupt
   \   0000074A   0x.... 0x....      BL       CH451_GetKeyValue
   \   0000074E   0x....             LDR.N    R0,??DataTable62_19
   \   00000750   0x7800             LDRB     R0,[R0, #+0]
   \   00000752   0x280A             CMP      R0,#+10
   \   00000754   0xD004             BEQ.N    ??main_47
   \   00000756   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   0000075A   0x2801             CMP      R0,#+1
   \   0000075C   0xF040 0x80B9      BNE.W    ??main_48
   \                     ??main_47:
   \   00000760   0x....             LDR.N    R0,??DataTable62_47
   \   00000762   0x7800             LDRB     R0,[R0, #+0]
   \   00000764   0x28FA             CMP      R0,#+250
   \   00000766   0xD102             BNE.N    ??main_49
   \   00000768   0x....             LDR.N    R0,??DataTable62_47
   \   0000076A   0x2100             MOVS     R1,#+0
   \   0000076C   0x7001             STRB     R1,[R0, #+0]
   \                     ??main_49:
   \   0000076E   0x....             LDR.N    R0,??DataTable62_47
   \   00000770   0x7800             LDRB     R0,[R0, #+0]
   \   00000772   0x1C40             ADDS     R0,R0,#+1
   \   00000774   0x....             LDR.N    R1,??DataTable62_47
   \   00000776   0x7008             STRB     R0,[R1, #+0]
   \   00000778   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000077A   0x210A             MOVS     R1,#+10
   \   0000077C   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000780   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000784   0x2800             CMP      R0,#+0
   \   00000786   0xF000 0x80A4      BEQ.W    ??main_48
   \   0000078A   0x.... 0x....      BL       LCD_CLS
   \   0000078E   0x....             LDR.N    R2,??DataTable62_48
   \   00000790   0x2100             MOVS     R1,#+0
   \   00000792   0x2001             MOVS     R0,#+1
   \   00000794   0x.... 0x....      BL       LCD_P6x8Str
   \   00000798   0x....             LDR.N    R0,??DataTable62_33
   \   0000079A   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000079E   0x2100             MOVS     R1,#+0
   \   000007A0   0x202D             MOVS     R0,#+45
   \   000007A2   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000007A6   0x....             LDR.N    R0,??DataTable62_49
   \   000007A8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000007AC   0x2800             CMP      R0,#+0
   \   000007AE   0xD006             BEQ.N    ??main_50
   \   000007B0   0x....             LDR.N    R0,??DataTable62_50
   \   000007B2   0x8802             LDRH     R2,[R0, #+0]
   \   000007B4   0xB252             SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
   \   000007B6   0x2100             MOVS     R1,#+0
   \   000007B8   0x2046             MOVS     R0,#+70
   \   000007BA   0x.... 0x....      BL       LCD_P6x8Str_1
   \                     ??main_50:
   \   000007BE   0x....             LDR.N    R0,??DataTable62_51
   \   000007C0   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000007C4   0x2100             MOVS     R1,#+0
   \   000007C6   0x2046             MOVS     R0,#+70
   \   000007C8   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000007CC   0x....             LDR.N    R0,??DataTable62_51
   \   000007CE   0xF9B0 0x2004      LDRSH    R2,[R0, #+4]
   \   000007D2   0x2100             MOVS     R1,#+0
   \   000007D4   0x205A             MOVS     R0,#+90
   \   000007D6   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000007DA   0x....             LDR.N    R2,??DataTable62_52
   \   000007DC   0x2101             MOVS     R1,#+1
   \   000007DE   0x2001             MOVS     R0,#+1
   \   000007E0   0x.... 0x....      BL       LCD_P6x8Str
   \   000007E4   0x....             LDR.N    R0,??DataTable62_32
   \   000007E6   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000007EA   0x2101             MOVS     R1,#+1
   \   000007EC   0x202D             MOVS     R0,#+45
   \   000007EE   0x.... 0x....      BL       LCD_P6x8Str_3
   \   000007F2   0x....             LDR.N    R0,??DataTable62_53
   \   000007F4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000007F8   0x2800             CMP      R0,#+0
   \   000007FA   0xD006             BEQ.N    ??main_51
   \   000007FC   0x....             LDR.N    R0,??DataTable62_54
   \   000007FE   0x8802             LDRH     R2,[R0, #+0]
   \   00000800   0xB252             SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
   \   00000802   0x2101             MOVS     R1,#+1
   \   00000804   0x2046             MOVS     R0,#+70
   \   00000806   0x.... 0x....      BL       LCD_P6x8Str_1
   \                     ??main_51:
   \   0000080A   0x....             LDR.N    R0,??DataTable62_7
   \   0000080C   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000810   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000812   0x2101             MOVS     R1,#+1
   \   00000814   0x2046             MOVS     R0,#+70
   \   00000816   0x.... 0x....      BL       LCD_P6x8Str_3
   \   0000081A   0x....             LDR.N    R0,??DataTable62_55
   \   0000081C   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000820   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000822   0x2101             MOVS     R1,#+1
   \   00000824   0x205A             MOVS     R0,#+90
   \   00000826   0x.... 0x....      BL       LCD_P6x8Str_3
   \   0000082A   0x....             LDR.N    R2,??DataTable62_56
   \   0000082C   0x2102             MOVS     R1,#+2
   \   0000082E   0x2001             MOVS     R0,#+1
   \   00000830   0x.... 0x....      BL       LCD_P6x8Str
   \   00000834   0x....             LDR.N    R0,??DataTable62_31
   \   00000836   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000083A   0x2102             MOVS     R1,#+2
   \   0000083C   0x202D             MOVS     R0,#+45
   \   0000083E   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000842   0x....             LDR.N    R0,??DataTable62_57
   \   00000844   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000848   0x2800             CMP      R0,#+0
   \   0000084A   0xD006             BEQ.N    ??main_52
   \   0000084C   0x....             LDR.N    R0,??DataTable62_58
   \   0000084E   0x8802             LDRH     R2,[R0, #+0]
   \   00000850   0xB252             SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
   \   00000852   0x2102             MOVS     R1,#+2
   \   00000854   0x2046             MOVS     R0,#+70
   \   00000856   0x.... 0x....      BL       LCD_P6x8Str_1
   \                     ??main_52:
   \   0000085A   0x....             LDR.N    R2,??DataTable62_59
   \   0000085C   0x2103             MOVS     R1,#+3
   \   0000085E   0x2001             MOVS     R0,#+1
   \   00000860   0x.... 0x....      BL       LCD_P6x8Str
   \   00000864   0x....             LDR.N    R0,??DataTable62_60
   \   00000866   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000086A   0x2103             MOVS     R1,#+3
   \   0000086C   0x204B             MOVS     R0,#+75
   \   0000086E   0x.... 0x....      BL       LCD_P6x8Str_3
   \   00000872   0x....             LDR.N    R2,??DataTable62_61
   \   00000874   0x2104             MOVS     R1,#+4
   \   00000876   0x2001             MOVS     R0,#+1
   \   00000878   0x.... 0x....      BL       LCD_P6x8Str
   \   0000087C   0x....             LDR.N    R0,??DataTable62_62
   \   0000087E   0x8802             LDRH     R2,[R0, #+0]
   \   00000880   0xB252             SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
   \   00000882   0x2104             MOVS     R1,#+4
   \   00000884   0x2058             MOVS     R0,#+88
   \   00000886   0x.... 0x....      BL       LCD_P6x8Str_FuHao_3
   \   0000088A   0x....             LDR.N    R2,??DataTable62_63
   \   0000088C   0x2105             MOVS     R1,#+5
   \   0000088E   0x2001             MOVS     R0,#+1
   \   00000890   0x.... 0x....      BL       LCD_P6x8Str
   \   00000894   0x....             LDR.N    R0,??DataTable62_64
   \   00000896   0x8802             LDRH     R2,[R0, #+0]
   \   00000898   0xB252             SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
   \   0000089A   0x2105             MOVS     R1,#+5
   \   0000089C   0x2064             MOVS     R0,#+100
   \   0000089E   0x.... 0x....      BL       LCD_P6x8Str_FuHao_3
   \   000008A2   0x....             LDR.N    R2,??DataTable62_65
   \   000008A4   0x2106             MOVS     R1,#+6
   \   000008A6   0x2001             MOVS     R0,#+1
   \   000008A8   0x.... 0x....      BL       LCD_P6x8Str
   \   000008AC   0x....             LDR.N    R0,??DataTable62_41
   \   000008AE   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000008B2   0x2106             MOVS     R1,#+6
   \   000008B4   0x2058             MOVS     R0,#+88
   \   000008B6   0x.... 0x....      BL       LCD_P6x8Str_5
   \   000008BA   0x....             LDR.N    R2,??DataTable62_66
   \   000008BC   0x2107             MOVS     R1,#+7
   \   000008BE   0x2001             MOVS     R0,#+1
   \   000008C0   0x.... 0x....      BL       LCD_P6x8Str
   \   000008C4   0x....             LDR.N    R0,??DataTable62_30
   \   000008C6   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000008CA   0x2107             MOVS     R1,#+7
   \   000008CC   0x2058             MOVS     R0,#+88
   \   000008CE   0x.... 0x....      BL       LCD_P6x8Str_5
   \                     ??main_48:
   \   000008D2   0x....             LDR.N    R0,??DataTable62_19
   \   000008D4   0x7800             LDRB     R0,[R0, #+0]
   \   000008D6   0x2806             CMP      R0,#+6
   \   000008D8   0xD129             BNE.N    ??main_53
   \   000008DA   0x....             LDR.N    R0,??DataTable62_67
   \   000008DC   0x7800             LDRB     R0,[R0, #+0]
   \   000008DE   0x28FA             CMP      R0,#+250
   \   000008E0   0xD102             BNE.N    ??main_54
   \   000008E2   0x....             LDR.N    R0,??DataTable62_67
   \   000008E4   0x2100             MOVS     R1,#+0
   \   000008E6   0x7001             STRB     R1,[R0, #+0]
   \                     ??main_54:
   \   000008E8   0x....             LDR.N    R0,??DataTable62_67
   \   000008EA   0x7800             LDRB     R0,[R0, #+0]
   \   000008EC   0x1C40             ADDS     R0,R0,#+1
   \   000008EE   0x....             LDR.N    R1,??DataTable62_67
   \   000008F0   0x7008             STRB     R0,[R1, #+0]
   \   000008F2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000008F4   0x210A             MOVS     R1,#+10
   \   000008F6   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000008FA   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000008FE   0x2800             CMP      R0,#+0
   \   00000900   0xD015             BEQ.N    ??main_53
   \   00000902   0x.... 0x....      BL       LCD_CLS
   \   00000906   0xF05F 0x0800      MOVS     R8,#+0
   \   0000090A   0xE00B             B.N      ??main_55
   \                     ??main_56:
   \   0000090C   0x4641             MOV      R1,R8
   \   0000090E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000910   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000914   0x....             LDR.N    R0,??DataTable62_24
   \   00000916   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000091A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000091C   0x.... 0x....      BL       LCD_PutPixel
   \   00000920   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??main_55:
   \   00000924   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000928   0xF1B8 0x0F36      CMP      R8,#+54
   \   0000092C   0xD3EE             BCC.N    ??main_56
   \                     ??main_53:
   \   0000092E   0x....             LDR.N    R0,??DataTable62_64
   \   00000930   0x2100             MOVS     R1,#+0
   \   00000932   0x8001             STRH     R1,[R0, #+0]
   \   00000934   0x....             LDR.N    R0,??DataTable62_60
   \   00000936   0x2100             MOVS     R1,#+0
   \   00000938   0x8001             STRH     R1,[R0, #+0]
   \   0000093A   0x....             LDR.N    R0,??DataTable62_62
   \   0000093C   0x2100             MOVS     R1,#+0
   \   0000093E   0x8001             STRH     R1,[R0, #+0]
   \   00000940   0x....             LDR.N    R0,??DataTable62_30
   \   00000942   0x2100             MOVS     R1,#+0
   \   00000944   0x8001             STRH     R1,[R0, #+0]
   \   00000946   0xF05F 0x0800      MOVS     R8,#+0
   \   0000094A   0xE58B             B.N      ??main_28
   4495                /***************对一些变量进行清零END****************/
   4496                /********************LCD数据显示模块 end*********************/
   4497              }
   4498            }	 
   4499          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \   00000000   0x........         DC32     GetKeyValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \   00000000   0x........         DC32     KeyCode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \   00000000   0x........         DC32     KeyValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_4:
   \   00000000   0x40049004         DC32     0x40049004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_5:
   \   00000000   0x40049008         DC32     0x40049008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_6:
   \   00000000   0x4004900C         DC32     0x4004900c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_7:
   \   00000000   0x40049010         DC32     0x40049010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x4F 0x4B          DC8      0x4F, 0x4B, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_1:
   \   00000000   0x........         DC32     receive_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_2:
   \   00000000   0x........         DC32     `data`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_3:
   \   00000000   0x........         DC32     bianma

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_4:
   \   00000000   0x........         DC32     bitdata

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_5:
   \   00000000   0x........         DC32     startflag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_6:
   \   00000000   0x........         DC32     bitnum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0x........         DC32     deal_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_1:
   \   00000000   0x........         DC32     irkey

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_2:
   \   00000000   0x........         DC32     LPTMR_INTERRUPT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_3:
   \   00000000   0x40040004         DC32     0x40040004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_4:
   \   00000000   0x40040000         DC32     0x40040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_5:
   \   00000000   0x40064000         DC32     0x40064000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_6:
   \   00000000   0x40064001         DC32     0x40064001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   0x........         DC32     timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_1:
   \   00000000   0x40040008         DC32     0x40040008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_2:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_3:
   \   00000000   0x4003D010         DC32     0x4003d010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_4:
   \   00000000   0x40047000         DC32     0x40047000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_5:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_6:
   \   00000000   0x4004904C         DC32     0x4004904c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_7:
   \   00000000   0x........         DC32     P_High

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_8:
   \   00000000   0x........         DC32     D_High

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   0x........         DC32     P_Mid

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_1:
   \   00000000   0x........         DC32     D_Mid

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0x4004B014         DC32     0x4004b014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \   00000000   0x4004000C         DC32     0x4004000c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_2:
   \   00000000   0x........         DC32     P_Mid1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_3:
   \   00000000   0x........         DC32     D_Mid1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   0x........         DC32     P_Low

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   0x........         DC32     D_Low

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   0x........         DC32     `?<Constant "Mid_Wu">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_1:
   \   00000000   0x........         DC32     `?<Constant "High_Wu">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   0x........         DC32     `?<Constant "High_Mid">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   0x........         DC32     `?<Constant "High_You">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34:
   \   00000000   0x........         DC32     KeyValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   0x........         DC32     car_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   0x........         DC32     Judge_startline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39:
   \   00000000   0x40048034         DC32     0x40048034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_1:
   \   00000000   0x4007C008         DC32     0x4007c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_2:
   \   00000000   0x40064004         DC32     0x40064004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_3:
   \   00000000   0x40064005         DC32     0x40064005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_4:
   \   00000000   0x4001F000         DC32     0x4001f000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_5:
   \   00000000   0x40048044         DC32     0x40048044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable39_6:
   \   00000000   0x03270000         DC32     0x3270000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   0x40049020         DC32     0x40049020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_1:
   \   00000000   0x4003900C         DC32     0x4003900c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_2:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_3:
   \   00000000   0x40039054         DC32     0x40039054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_4:
   \   00000000   0x40039060         DC32     0x40039060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_5:
   \   00000000   0x40039064         DC32     0x40039064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_6:
   \   00000000   0x4003905C         DC32     0x4003905c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_7:
   \   00000000   0x4003906C         DC32     0x4003906c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_8:
   \   00000000   0x40039070         DC32     0x40039070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_9:
   \   00000000   0x40039080         DC32     0x40039080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_10:
   \   00000000   0x40039090         DC32     0x40039090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_11:
   \   00000000   0x40039094         DC32     0x40039094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_12:
   \   00000000   0x40039098         DC32     0x40039098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_13:
   \   00000000   0x4003904C         DC32     0x4003904c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_14:
   \   00000000   0x40039008         DC32     0x40039008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_15:
   \   00000000   0x40039010         DC32     0x40039010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_16:
   \   00000000   0x........         DC32     Servo_Middle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_17:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_18:
   \   00000000   0x4004B004         DC32     0x4004b004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_19:
   \   00000000   0x4004B010         DC32     0x4004b010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_20:
   \   00000000   0x4004B008         DC32     0x4004b008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_21:
   \   00000000   0x4004C010         DC32     0x4004c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_22:
   \   00000000   0x4004C014         DC32     0x4004c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_23:
   \   00000000   0x4004C018         DC32     0x4004c018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_24:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable41_25:
   \   00000000   0x4003800C         DC32     0x4003800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42:
   \   00000000   0x40038024         DC32     0x40038024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable42_1:
   \   00000000   0x40038014         DC32     0x40038014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43:
   \   00000000   0x4003802C         DC32     0x4003802c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable43_1:
   \   00000000   0x40038034         DC32     0x40038034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44:
   \   00000000   0x40064006         DC32     0x40064006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_1:
   \   00000000   0x4003803C         DC32     0x4003803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_2:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_3:
   \   00000000   0x40038054         DC32     0x40038054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_4:
   \   00000000   0x40038060         DC32     0x40038060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_5:
   \   00000000   0x40038064         DC32     0x40038064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_6:
   \   00000000   0x4003805C         DC32     0x4003805c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_7:
   \   00000000   0x4003806C         DC32     0x4003806c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_8:
   \   00000000   0x40038070         DC32     0x40038070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_9:
   \   00000000   0x40038080         DC32     0x40038080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_10:
   \   00000000   0x40038090         DC32     0x40038090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_11:
   \   00000000   0x40038094         DC32     0x40038094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_12:
   \   00000000   0x40038098         DC32     0x40038098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_13:
   \   00000000   0x4003804C         DC32     0x4003804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_14:
   \   00000000   0x40038008         DC32     0x40038008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable44_15:
   \   00000000   0x40038010         DC32     0x40038010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45:
   \   00000000   0x40039004         DC32     0x40039004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_1:
   \   00000000   0x40038018         DC32     0x40038018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_2:
   \   00000000   0x40038028         DC32     0x40038028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_3:
   \   00000000   0x40038030         DC32     0x40038030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_4:
   \   00000000   0x40038038         DC32     0x40038038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_5:
   \   00000000   0x40038040         DC32     0x40038040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_6:
   \   00000000   0x40038004         DC32     0x40038004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_7:
   \   00000000   0x40049028         DC32     0x40049028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_8:
   \   00000000   0x4004902C         DC32     0x4004902c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_9:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_10:
   \   00000000   0x400B8054         DC32     0x400b8054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_11:
   \   00000000   0x400B8080         DC32     0x400b8080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_12:
   \   00000000   0x400B804C         DC32     0x400b804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_13:
   \   00000000   0x400B8008         DC32     0x400b8008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_14:
   \   00000000   0x400B8004         DC32     0x400b8004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_15:
   \   00000000   0x40049038         DC32     0x40049038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_16:
   \   00000000   0x4004903C         DC32     0x4004903c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_17:
   \   00000000   0x40049040         DC32     0x40049040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_18:
   \   00000000   0x40049044         DC32     0x40049044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_19:
   \   00000000   0x4004A000         DC32     0x4004a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_20:
   \   00000000   0x4004A004         DC32     0x4004a004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_21:
   \   00000000   0x4004A008         DC32     0x4004a008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_22:
   \   00000000   0x4004A00C         DC32     0x4004a00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_23:
   \   00000000   0x4004A010         DC32     0x4004a010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_24:
   \   00000000   0x4004A014         DC32     0x4004a014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_25:
   \   00000000   0x4004A018         DC32     0x4004a018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_26:
   \   00000000   0x4004A01C         DC32     0x4004a01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_27:
   \   00000000   0x400FF054         DC32     0x400ff054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_28:
   \   00000000   0x40049060         DC32     0x40049060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_29:
   \   00000000   0x000A0100         DC32     0xa0100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_30:
   \   00000000   0x4004A028         DC32     0x4004a028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_31:
   \   00000000   0x00090100         DC32     0x90100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_32:
   \   00000000   0x4004A02C         DC32     0x4004a02c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_33:
   \   00000000   0x00010100         DC32     0x10100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_34:
   \   00000000   0x4004B024         DC32     0x4004b024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_35:
   \   00000000   0x400FF014         DC32     0x400ff014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_36:
   \   00000000   0x14034000         DC32     0x14034000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_37:
   \   00000000   0x40049070         DC32     0x40049070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_38:
   \   00000000   0x40049068         DC32     0x40049068

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_39:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_40:
   \   00000000   0x........         DC32     ImageData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_41:
   \   00000000   0x0002BF20         DC32     0x2bf20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_42:
   \   00000000   0x4004A040         DC32     0x4004a040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_43:
   \   00000000   0x4004A044         DC32     0x4004a044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_44:
   \   00000000   0x4006A001         DC32     0x4006a001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_45:
   \   00000000   0x4006A00A         DC32     0x4006a00a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_46:
   \   00000000   0x4006A003         DC32     0x4006a003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_47:
   \   00000000   0x4006A002         DC32     0x4006a002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_48:
   \   00000000   0x40048040         DC32     0x40048040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_49:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_50:
   \   00000000   0x40009016         DC32     0x40009016

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_51:
   \   00000000   0x4000901E         DC32     0x4000901e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_52:
   \   00000000   0x40009000         DC32     0x40009000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_53:
   \   00000000   0x400FF050         DC32     0x400ff050

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_54:
   \   00000000   0x40009004         DC32     0x40009004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_55:
   \   00000000   0x40009008         DC32     0x40009008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_56:
   \   00000000   0x4000900C         DC32     0x4000900c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_57:
   \   00000000   0x40009018         DC32     0x40009018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_58:
   \   00000000   0x40009010         DC32     0x40009010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_59:
   \   00000000   0x40009014         DC32     0x40009014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_60:
   \   00000000   0x40009006         DC32     0x40009006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_61:
   \   00000000   0x4000901C         DC32     0x4000901c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_62:
   \   00000000   0x40037000         DC32     0x40037000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable45_63:
   \   00000000   0x40037100         DC32     0x40037100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46:
   \   00000000   0x40008024         DC32     0x40008024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_1:
   \   00000000   0x........         DC32     imagerow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_2:
   \   00000000   0x........         DC32     row_F

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_3:
   \   00000000   0x........         DC32     row

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_4:
   \   00000000   0x........         DC32     data_table

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_5:
   \   00000000   0x4000800C         DC32     0x4000800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_6:
   \   00000000   0x........         DC32     finish

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_7:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_8:
   \   00000000   0x4003711C         DC32     0x4003711c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_9:
   \   00000000   0x........         DC32     timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_10:
   \   00000000   0x........         DC32     pulse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_11:
   \   00000000   0x........         DC32     pulse2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_12:
   \   00000000   0x40040000         DC32     0x40040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_13:
   \   00000000   0x4003710C         DC32     0x4003710c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_14:
   \   00000000   0x........         DC32     P_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_15:
   \   00000000   0x4003712C         DC32     0x4003712c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_16:
   \   00000000   0x........         DC32     Servo_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_17:
   \   00000000   0x........         DC32     Servo_Middle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_18:
   \   00000000   0x........         DC32     Wspeed_diff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable46_19:
   \   00000000   0x400B8004         DC32     0x400b8004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable47:
   \   00000000   0x........         DC32     `?<Constant {1, 2, 3, 3, 4}>`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable47_1:
   \   00000000   0x........         DC32     position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49:
   \   00000000   0x........         DC32     `sub`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable50:
   \   00000000   0x........         DC32     Motor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   0x........         DC32     speed_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_1:
   \   00000000   0x........         DC32     speed_m

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_2:
   \   00000000   0x........         DC32     speed_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_3:
   \   00000000   0x........         DC32     ??i

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52:
   \   00000000   0x........         DC32     point

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_1:
   \   00000000   0x........         DC32     ??line

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_2:
   \   00000000   0x........         DC32     ImageData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_3:
   \   00000000   0x........         DC32     black2_d1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_4:
   \   00000000   0x........         DC32     ImageData2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_5:
   \   00000000   0x........         DC32     black_d1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_6:
   \   00000000   0x........         DC32     black2_d2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_7:
   \   00000000   0x........         DC32     black_d2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_8:
   \   00000000   0x........         DC32     black2_d3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_9:
   \   00000000   0x........         DC32     black_d3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52_10:
   \   00000000   0x........         DC32     black2_c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53:
   \   00000000   0x........         DC32     black_c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_1:
   \   00000000   0x........         DC32     black2_c2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_2:
   \   00000000   0x........         DC32     black_c2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_3:
   \   00000000   0x........         DC32     black2_c3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_4:
   \   00000000   0x........         DC32     black_c3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_5:
   \   00000000   0x........         DC32     black2_b1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_6:
   \   00000000   0x........         DC32     black_b1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_7:
   \   00000000   0x........         DC32     black2_b2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_8:
   \   00000000   0x........         DC32     black_b2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_9:
   \   00000000   0x........         DC32     black2_b3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_10:
   \   00000000   0x........         DC32     black_b3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_11:
   \   00000000   0x........         DC32     black2_a1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_12:
   \   00000000   0x........         DC32     black_a1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_13:
   \   00000000   0x........         DC32     black2_a2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable53_14:
   \   00000000   0x........         DC32     black_a2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54:
   \   00000000   0x........         DC32     black2_a3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54_1:
   \   00000000   0x........         DC32     black_a3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable55:
   \   00000000   0x........         DC32     ImageData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56:
   \   00000000   0x........         DC32     position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_1:
   \   00000000   0x........         DC32     ption

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable56_2:
   \   00000000   0x........         DC32     ImageData2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57:
   \   00000000   0x........         DC32     start_position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_1:
   \   00000000   0x........         DC32     position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_2:
   \   00000000   0x........         DC32     ImageData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable59:
   \   00000000   0x........         DC32     Servo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61:
   \   00000000   0x........         DC32     Servo_Middle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_1:
   \   00000000   0x........         DC32     position_now

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_2:
   \   00000000   0x........         DC32     position_diff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_3:
   \   00000000   0x........         DC32     Servo_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_4:
   \   00000000   0x........         DC32     Servo_Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_5:
   \   00000000   0x........         DC32     Servo_Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_6:
   \   00000000   0x........         DC32     Servo_value_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_7:
   \   00000000   0x40039010         DC32     0x40039010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_8:
   \   00000000   0x........         DC32     position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_9:
   \   00000000   0x........         DC32     low_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_10:
   \   00000000   0x........         DC32     mid_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_11:
   \   00000000   0x........         DC32     high_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_12:
   \   00000000   0x........         DC32     low_now_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_13:
   \   00000000   0x........         DC32     mid_now_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_14:
   \   00000000   0x........         DC32     high_now_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_15:
   \   00000000   0x........         DC32     Very_straight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_16:
   \   00000000   0x........         DC32     `high`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_17:
   \   00000000   0x........         DC32     mid

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   0x........         DC32     `low`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_1:
   \   00000000   0x........         DC32     ??i_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_2:
   \   00000000   0x........         DC32     speed_top

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_3:
   \   00000000   0x........         DC32     `sub`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_4:
   \   00000000   0x........         DC32     speed_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_5:
   \   00000000   0x........         DC32     speed_m

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_6:
   \   00000000   0x........         DC32     speed_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_7:
   \   00000000   0x........         DC32     pulse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_8:
   \   00000000   0x........         DC32     speed_now

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_9:
   \   00000000   0x........         DC32     ??motor_e_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_10:
   \   00000000   0x........         DC32     Motor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_11:
   \   00000000   0x........         DC32     ??motor_sum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_12:
   \   00000000   0x........         DC32     s_old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_13:
   \   00000000   0x........         DC32     `?<Constant "speed">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_14:
   \   00000000   0x........         DC32     `?<Constant "J_line">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_15:
   \   00000000   0x........         DC32     Judge_startline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_16:
   \   00000000   0x........         DC32     car_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_17:
   \   00000000   0x........         DC32     speed_Very_straight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_18:
   \   00000000   0x........         DC32     speed_ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_19:
   \   00000000   0x........         DC32     KeyValue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_20:
   \   00000000   0x........         DC32     `?<Constant "TJorFC">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_21:
   \   00000000   0x........         DC32     `?<Constant "sai_dao_number">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_22:
   \   00000000   0x........         DC32     `?<Constant "LCDgo_on">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_23:
   \   00000000   0x0044AA20         DC32     0x44aa20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_24:
   \   00000000   0x........         DC32     position

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_25:
   \   00000000   0x........         DC32     ramp_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_26:
   \   00000000   0x........         DC32     finish

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_27:
   \   00000000   0x........         DC32     tu_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_28:
   \   00000000   0x........         DC32     sai_dao_lei_xing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_29:
   \   00000000   0x........         DC32     P_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_30:
   \   00000000   0x........         DC32     dijihang

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_31:
   \   00000000   0x........         DC32     high_now_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_32:
   \   00000000   0x........         DC32     mid_now_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_33:
   \   00000000   0x........         DC32     low_now_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_34:
   \   00000000   0x40038010         DC32     0x40038010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_35:
   \   00000000   0x40038028         DC32     0x40038028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_36:
   \   00000000   0x40038030         DC32     0x40038030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_37:
   \   00000000   0x40038040         DC32     0x40038040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_38:
   \   00000000   0x40038018         DC32     0x40038018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_39:
   \   00000000   0x40038038         DC32     0x40038038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_40:
   \   00000000   0x........         DC32     Servo_Middle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_41:
   \   00000000   0x........         DC32     Servo_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_42:
   \   00000000   0x........         DC32     Servo_Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_43:
   \   00000000   0x........         DC32     Servo_Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_44:
   \   00000000   0x40039010         DC32     0x40039010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_45:
   \   00000000   0x........         DC32     Very_straight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_46:
   \   00000000   0x000B5E28         DC32     0xb5e28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_47:
   \   00000000   0x........         DC32     LCD_P1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_48:
   \   00000000   0x........         DC32     `?<Constant "low_0">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_49:
   \   00000000   0x........         DC32     low_now

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_50:
   \   00000000   0x........         DC32     low_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_51:
   \   00000000   0x........         DC32     Servo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_52:
   \   00000000   0x........         DC32     `?<Constant "mid_0">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_53:
   \   00000000   0x........         DC32     mid_now

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_54:
   \   00000000   0x........         DC32     mid_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_55:
   \   00000000   0x........         DC32     pulse2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_56:
   \   00000000   0x........         DC32     `?<Constant "high_0">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_57:
   \   00000000   0x........         DC32     high_now

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_58:
   \   00000000   0x........         DC32     high_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_59:
   \   00000000   0x........         DC32     `?<Constant "position_now">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_60:
   \   00000000   0x........         DC32     position_now

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_61:
   \   00000000   0x........         DC32     `?<Constant "position_diff">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_62:
   \   00000000   0x........         DC32     position_diff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_63:
   \   00000000   0x........         DC32     `?<Constant "position_now_low">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_64:
   \   00000000   0x........         DC32     position_now_low

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_65:
   \   00000000   0x........         DC32     `?<Constant "Servo_value">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_66:
   \   00000000   0x........         DC32     `?<Constant "dijihang">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_67:
   \   00000000   0x........         DC32     LCD_P3

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Mid_Wu">`:
   \   00000000   0x4D 0x69          DC8 "Mid_Wu"
   \              0x64 0x5F    
   \              0x57 0x75    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "High_Wu">`:
   \   00000000   0x48 0x69          DC8 "High_Wu"
   \              0x67 0x68    
   \              0x5F 0x57    
   \              0x75 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "High_Mid">`:
   \   00000000   0x48 0x69          DC8 "High_Mid"
   \              0x67 0x68    
   \              0x5F 0x4D    
   \              0x69 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "High_You">`:
   \   00000000   0x48 0x69          DC8 "High_You"
   \              0x67 0x68    
   \              0x5F 0x59    
   \              0x6F 0x75    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x4F 0x4B          DC8 "OK"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {1, 2, 3, 3, 4}>`:
   \   00000000   0x01 0x02          DC8 1, 2, 3, 3, 4, 0, 0, 0
   \              0x03 0x03    
   \              0x04 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "speed">`:
   \   00000000   0x73 0x70          DC8 "speed"
   \              0x65 0x65    
   \              0x64 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "J_line">`:
   \   00000000   0x4A 0x5F          DC8 "J_line"
   \              0x6C 0x69    
   \              0x6E 0x65    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "TJorFC">`:
   \   00000000   0x54 0x4A          DC8 "TJorFC"
   \              0x6F 0x72    
   \              0x46 0x43    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x46 0x43          DC8 "FC"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x54 0x4A          DC8 "TJ"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "sai_dao_number">`:
   \   00000000   0x73 0x61          DC8 "sai_dao_number"
   \              0x69 0x5F    
   \              0x64 0x61    
   \              0x6F 0x5F    
   \              0x6E 0x75    
   \              0x6D 0x62    
   \              0x65 0x72    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "LCDgo_on">`:
   \   00000000   0x4C 0x43          DC8 "LCDgo_on"
   \              0x44 0x67    
   \              0x6F 0x5F    
   \              0x6F 0x6E    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "low_0">`:
   \   00000000   0x6C 0x6F          DC8 "low_0"
   \              0x77 0x5F    
   \              0x30 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "mid_0">`:
   \   00000000   0x6D 0x69          DC8 "mid_0"
   \              0x64 0x5F    
   \              0x30 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "high_0">`:
   \   00000000   0x68 0x69          DC8 "high_0"
   \              0x67 0x68    
   \              0x5F 0x30    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "position_now">`:
   \   00000000   0x70 0x6F          DC8 "position_now"
   \              0x73 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x5F 0x6E    
   \              0x6F 0x77    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "position_diff">`:
   \   00000000   0x70 0x6F          DC8 "position_diff"
   \              0x73 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x5F 0x64    
   \              0x69 0x66    
   \              0x66 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "position_now_low">`:
   \   00000000   0x70 0x6F          DC8 "position_now_low"
   \              0x73 0x69    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x5F 0x6E    
   \              0x6F 0x77    
   \              0x5F 0x6C    
   \              0x6F 0x77    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Servo_value">`:
   \   00000000   0x53 0x65          DC8 "Servo_value"
   \              0x72 0x76    
   \              0x6F 0x5F    
   \              0x76 0x61    
   \              0x6C 0x75    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "dijihang">`:
   \   00000000   0x64 0x69          DC8 "dijihang"
   \              0x6A 0x69    
   \              0x68 0x61    
   \              0x6E 0x67    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   4500          //************************主函数END***********************

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       16  CH451_GetKeyValue
              16 -> gpio_Get
              16 -> gpio_ctrl
       16  CH451_WriteCommand
              16 -> gpio_ctrl
        8  CH451_ini
               8 -> CH451_WriteCommand
               8 -> gpio_ctrl
        8  Car_Speed
               8 -> CH451_GetKeyValue
               8 -> LCD_P6x8Str
               8 -> LCD_P6x8Str_3
        0  DMA0_Init
        0  DMA_CHO_ISR
        0  Delay
       16  Duo_Ji_PD
              16 -> CH451_GetKeyValue
              16 -> High_Mid
              16 -> High_Wu
              16 -> High_You
              16 -> LCD_CLS2
              16 -> LCD_P6x8Str
              16 -> LCD_P6x8Str_3
              16 -> Mid_Wu
        0  FTM2_QUAD_Init
        8  High_Mid
               8 -> CH451_GetKeyValue
               8 -> LCD_P6x8Str_3
        8  High_Wu
               8 -> CH451_GetKeyValue
               8 -> LCD_P6x8Str_3
        8  High_You
               8 -> CH451_GetKeyValue
               8 -> LCD_P6x8Str_3
        0  IO_Init
        8  JIANPAN_ini
               8 -> gpio_init
        8  Judge_end
       56  Judge_startline2
              56 -> abs
        8  Mid_Wu
               8 -> CH451_GetKeyValue
               8 -> LCD_P6x8Str_3
       32  Motor_control
              32 -> line
              32 -> motor_fuzzy
       16  SCI
              16 -> uart_send1
        4  UART0_Init
        0  abs
        0  binaryzation
        0  binaryzation2
       16  center_filter
       32  choose_PD
              32 -> limit
              32 -> stages_D
              32 -> stages_P
        4  data_deal
        0  delayms
        4  delays
        8  disable_pit_interrupt
               8 -> disable_irq
        8  enable_pit_interrupt
               8 -> enable_irq
       64  find_position
              64 -> abs
              64 -> binaryzation2
              64 -> center_filter
              64 -> get_root
              64 -> limit
              64 -> position_youhua
        0  get_counter_value
        8  get_irkey
               8 -> data_deal
       40  get_root
              40 -> abs
              40 -> limit
        0  get_speed
        0  hw_FTM0_init
        0  hw_FTM1_init
        0  hw_pit_init
        0  ir_deal
       16  judge_locus_0
              16 -> stages3
        0  limit
        8  line
        4  line_max
        4  line_min
        8  lptmr_32khz_input
               8 -> lptmr_clear_registers
        0  lptmr_clear_registers
        8  lptmr_external_clk_input
               8 -> lptmr_clear_registers
        8  lptmr_internal_ref_input
               8 -> lptmr_clear_registers
        8  lptmr_interrupt
               8 -> enable_irq
               8 -> lptmr_clear_registers
        0  lptmr_isr_example
        8  lptmr_lpo_input
               8 -> lptmr_clear_registers
        8  lptmr_prescale
               8 -> lptmr_clear_registers
       16  lptmr_pulse_counter
              16 -> lptmr_clear_registers
        8  lptmr_time_counter
               8 -> lptmr_clear_registers
       48  main
              48 -> CH451_GetKeyValue
              48 -> CH451_WriteCommand
              48 -> CH451_ini
              48 -> Car_Speed
              48 -> DMA0_Init
              48 -> Duo_Ji_PD
              48 -> FTM2_QUAD_Init
              48 -> IO_Init
              48 -> JIANPAN_ini
              48 -> Judge_startline2
              48 -> LCD_CLS
              48 -> LCD_Init
              48 -> LCD_P6x8Str
              48 -> LCD_P6x8Str_1
              48 -> LCD_P6x8Str_3
              48 -> LCD_P6x8Str_5
              48 -> LCD_P6x8Str_FuHao_3
              48 -> LCD_PutPixel
              48 -> Motor_control
              48 -> UART0_Init
              48 -> choose_PD
              48 -> delays
              48 -> enable_irq
              48 -> enable_pit_interrupt
              48 -> find_position
              48 -> hw_FTM0_init
              48 -> hw_FTM1_init
              48 -> hw_pit_init
              48 -> judge_locus_0
              48 -> limit
              48 -> lptmr_pulse_counter
              48 -> pllinit180M
              48 -> set_speed
              48 -> speed_control
        0  max
        0  min
      128  motor_fuzzy
             128 -> abs
             128 -> min
             128 -> sub_e
             128 -> subjection_k
        8  pit0_isr
               8 -> enable_pit_interrupt
               8 -> get_counter_value
        8  pit1_isr
               8 -> enable_pit_interrupt
        8  pit2_isr
               8 -> enable_pit_interrupt
        0  pllinit180M
        8  porta_isr
               8 -> DMA0_Init
               8 -> enable_irq
        8  portb_isr
               8 -> disable_irq
        8  portc_isr
               8 -> ir_deal
       16  position_youhua
              16 -> Judge_end
       24  print_d
              24 -> CH451_WriteCommand
              24 -> __aeabi_memclr4
       24  print_d1
              24 -> CH451_WriteCommand
              24 -> __aeabi_memclr4
       24  print_dall
              24 -> CH451_WriteCommand
              24 -> __aeabi_memclr4
       24  print_fall
              24 -> CH451_WriteCommand
              24 -> __aeabi_memclr4
        8  print_hell
               8 -> CH451_WriteCommand
       24  print_t
              24 -> CH451_WriteCommand
              24 -> __aeabi_memclr4
       24  print_t1
              24 -> CH451_WriteCommand
              24 -> __aeabi_memclr4
       24  print_tall
              24 -> CH451_WriteCommand
              24 -> __aeabi_memclr4
       16  set_speed
              16 -> abs
              16 -> limit
       32  speed_control
              32 -> speed_fuzzy
              32 -> sub_e
      128  speed_fuzzy
             128 -> __aeabi_memclr4
             128 -> abs
             128 -> min
             128 -> sub_e
             128 -> subjection_k
        0  stages3
        0  stages_D
        0  stages_P
        0  stages_low_P
       12  sub_e
        8  subjection_k
               8 -> max
               8 -> subjection_k


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "FC">
      12  ?<Constant "High_Mid">
       8  ?<Constant "High_Wu">
      12  ?<Constant "High_You">
       8  ?<Constant "J_line">
      12  ?<Constant "LCDgo_on">
       8  ?<Constant "Mid_Wu">
       4  ?<Constant "OK">
      12  ?<Constant "Servo_value">
       4  ?<Constant "TJ">
       8  ?<Constant "TJorFC">
      12  ?<Constant "dijihang">
       8  ?<Constant "high_0">
       8  ?<Constant "low_0">
       8  ?<Constant "mid_0">
      16  ?<Constant "position_diff">
      16  ?<Constant "position_now">
      20  ?<Constant "position_now_low">
      16  ?<Constant "sai_dao_number">
       8  ?<Constant "speed">
      16  ?<Constant {0}>
      16  ?<Constant {0}>_1
      12  ?<Constant {0}>_10
      16  ?<Constant {0}>_11
      16  ?<Constant {0}>_12
      16  ?<Constant {0}>_13
      16  ?<Constant {0}>_2
      16  ?<Constant {0}>_3
      16  ?<Constant {0}>_4
      16  ?<Constant {0}>_5
      16  ?<Constant {0}>_6
      12  ?<Constant {0}>_7
      12  ?<Constant {0}>_8
      12  ?<Constant {0}>_9
       8  ?<Constant {1, 2, 3, 3, 4}>
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_2
       4  ??DataTable21_3
       4  ??DataTable21_4
       4  ??DataTable21_5
       4  ??DataTable21_6
       4  ??DataTable21_7
       4  ??DataTable23
       4  ??DataTable23_1
       4  ??DataTable23_2
       4  ??DataTable23_3
       4  ??DataTable23_4
       4  ??DataTable23_5
       4  ??DataTable23_6
       4  ??DataTable24
       4  ??DataTable24_1
       4  ??DataTable24_2
       4  ??DataTable24_3
       4  ??DataTable24_4
       4  ??DataTable24_5
       4  ??DataTable24_6
       4  ??DataTable25
       4  ??DataTable25_1
       4  ??DataTable25_2
       4  ??DataTable25_3
       4  ??DataTable25_4
       4  ??DataTable25_5
       4  ??DataTable25_6
       4  ??DataTable25_7
       4  ??DataTable25_8
       4  ??DataTable26
       4  ??DataTable26_1
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable27_2
       4  ??DataTable27_3
       4  ??DataTable28
       4  ??DataTable29
       4  ??DataTable31
       4  ??DataTable31_1
       4  ??DataTable32
       4  ??DataTable33
       4  ??DataTable34
       4  ??DataTable35
       4  ??DataTable36
       4  ??DataTable39
       4  ??DataTable39_1
       4  ??DataTable39_2
       4  ??DataTable39_3
       4  ??DataTable39_4
       4  ??DataTable39_5
       4  ??DataTable39_6
       4  ??DataTable41
       4  ??DataTable41_1
       4  ??DataTable41_10
       4  ??DataTable41_11
       4  ??DataTable41_12
       4  ??DataTable41_13
       4  ??DataTable41_14
       4  ??DataTable41_15
       4  ??DataTable41_16
       4  ??DataTable41_17
       4  ??DataTable41_18
       4  ??DataTable41_19
       4  ??DataTable41_2
       4  ??DataTable41_20
       4  ??DataTable41_21
       4  ??DataTable41_22
       4  ??DataTable41_23
       4  ??DataTable41_24
       4  ??DataTable41_25
       4  ??DataTable41_3
       4  ??DataTable41_4
       4  ??DataTable41_5
       4  ??DataTable41_6
       4  ??DataTable41_7
       4  ??DataTable41_8
       4  ??DataTable41_9
       4  ??DataTable42
       4  ??DataTable42_1
       4  ??DataTable43
       4  ??DataTable43_1
       4  ??DataTable44
       4  ??DataTable44_1
       4  ??DataTable44_10
       4  ??DataTable44_11
       4  ??DataTable44_12
       4  ??DataTable44_13
       4  ??DataTable44_14
       4  ??DataTable44_15
       4  ??DataTable44_2
       4  ??DataTable44_3
       4  ??DataTable44_4
       4  ??DataTable44_5
       4  ??DataTable44_6
       4  ??DataTable44_7
       4  ??DataTable44_8
       4  ??DataTable44_9
       4  ??DataTable45
       4  ??DataTable45_1
       4  ??DataTable45_10
       4  ??DataTable45_11
       4  ??DataTable45_12
       4  ??DataTable45_13
       4  ??DataTable45_14
       4  ??DataTable45_15
       4  ??DataTable45_16
       4  ??DataTable45_17
       4  ??DataTable45_18
       4  ??DataTable45_19
       4  ??DataTable45_2
       4  ??DataTable45_20
       4  ??DataTable45_21
       4  ??DataTable45_22
       4  ??DataTable45_23
       4  ??DataTable45_24
       4  ??DataTable45_25
       4  ??DataTable45_26
       4  ??DataTable45_27
       4  ??DataTable45_28
       4  ??DataTable45_29
       4  ??DataTable45_3
       4  ??DataTable45_30
       4  ??DataTable45_31
       4  ??DataTable45_32
       4  ??DataTable45_33
       4  ??DataTable45_34
       4  ??DataTable45_35
       4  ??DataTable45_36
       4  ??DataTable45_37
       4  ??DataTable45_38
       4  ??DataTable45_39
       4  ??DataTable45_4
       4  ??DataTable45_40
       4  ??DataTable45_41
       4  ??DataTable45_42
       4  ??DataTable45_43
       4  ??DataTable45_44
       4  ??DataTable45_45
       4  ??DataTable45_46
       4  ??DataTable45_47
       4  ??DataTable45_48
       4  ??DataTable45_49
       4  ??DataTable45_5
       4  ??DataTable45_50
       4  ??DataTable45_51
       4  ??DataTable45_52
       4  ??DataTable45_53
       4  ??DataTable45_54
       4  ??DataTable45_55
       4  ??DataTable45_56
       4  ??DataTable45_57
       4  ??DataTable45_58
       4  ??DataTable45_59
       4  ??DataTable45_6
       4  ??DataTable45_60
       4  ??DataTable45_61
       4  ??DataTable45_62
       4  ??DataTable45_63
       4  ??DataTable45_7
       4  ??DataTable45_8
       4  ??DataTable45_9
       4  ??DataTable46
       4  ??DataTable46_1
       4  ??DataTable46_10
       4  ??DataTable46_11
       4  ??DataTable46_12
       4  ??DataTable46_13
       4  ??DataTable46_14
       4  ??DataTable46_15
       4  ??DataTable46_16
       4  ??DataTable46_17
       4  ??DataTable46_18
       4  ??DataTable46_19
       4  ??DataTable46_2
       4  ??DataTable46_3
       4  ??DataTable46_4
       4  ??DataTable46_5
       4  ??DataTable46_6
       4  ??DataTable46_7
       4  ??DataTable46_8
       4  ??DataTable46_9
       4  ??DataTable47
       4  ??DataTable47_1
       4  ??DataTable49
       4  ??DataTable50
       4  ??DataTable51
       4  ??DataTable51_1
       4  ??DataTable51_2
       4  ??DataTable51_3
       4  ??DataTable52
       4  ??DataTable52_1
       4  ??DataTable52_10
       4  ??DataTable52_2
       4  ??DataTable52_3
       4  ??DataTable52_4
       4  ??DataTable52_5
       4  ??DataTable52_6
       4  ??DataTable52_7
       4  ??DataTable52_8
       4  ??DataTable52_9
       4  ??DataTable53
       4  ??DataTable53_1
       4  ??DataTable53_10
       4  ??DataTable53_11
       4  ??DataTable53_12
       4  ??DataTable53_13
       4  ??DataTable53_14
       4  ??DataTable53_2
       4  ??DataTable53_3
       4  ??DataTable53_4
       4  ??DataTable53_5
       4  ??DataTable53_6
       4  ??DataTable53_7
       4  ??DataTable53_8
       4  ??DataTable53_9
       4  ??DataTable54
       4  ??DataTable54_1
       4  ??DataTable55
       4  ??DataTable56
       4  ??DataTable56_1
       4  ??DataTable56_2
       4  ??DataTable57
       4  ??DataTable57_1
       4  ??DataTable57_2
       4  ??DataTable59
       4  ??DataTable61
       4  ??DataTable61_1
       4  ??DataTable61_10
       4  ??DataTable61_11
       4  ??DataTable61_12
       4  ??DataTable61_13
       4  ??DataTable61_14
       4  ??DataTable61_15
       4  ??DataTable61_16
       4  ??DataTable61_17
       4  ??DataTable61_2
       4  ??DataTable61_3
       4  ??DataTable61_4
       4  ??DataTable61_5
       4  ??DataTable61_6
       4  ??DataTable61_7
       4  ??DataTable61_8
       4  ??DataTable61_9
       4  ??DataTable62
       4  ??DataTable62_1
       4  ??DataTable62_10
       4  ??DataTable62_11
       4  ??DataTable62_12
       4  ??DataTable62_13
       4  ??DataTable62_14
       4  ??DataTable62_15
       4  ??DataTable62_16
       4  ??DataTable62_17
       4  ??DataTable62_18
       4  ??DataTable62_19
       4  ??DataTable62_2
       4  ??DataTable62_20
       4  ??DataTable62_21
       4  ??DataTable62_22
       4  ??DataTable62_23
       4  ??DataTable62_24
       4  ??DataTable62_25
       4  ??DataTable62_26
       4  ??DataTable62_27
       4  ??DataTable62_28
       4  ??DataTable62_29
       4  ??DataTable62_3
       4  ??DataTable62_30
       4  ??DataTable62_31
       4  ??DataTable62_32
       4  ??DataTable62_33
       4  ??DataTable62_34
       4  ??DataTable62_35
       4  ??DataTable62_36
       4  ??DataTable62_37
       4  ??DataTable62_38
       4  ??DataTable62_39
       4  ??DataTable62_4
       4  ??DataTable62_40
       4  ??DataTable62_41
       4  ??DataTable62_42
       4  ??DataTable62_43
       4  ??DataTable62_44
       4  ??DataTable62_45
       4  ??DataTable62_46
       4  ??DataTable62_47
       4  ??DataTable62_48
       4  ??DataTable62_49
       4  ??DataTable62_5
       4  ??DataTable62_50
       4  ??DataTable62_51
       4  ??DataTable62_52
       4  ??DataTable62_53
       4  ??DataTable62_54
       4  ??DataTable62_55
       4  ??DataTable62_56
       4  ??DataTable62_57
       4  ??DataTable62_58
       4  ??DataTable62_59
       4  ??DataTable62_6
       4  ??DataTable62_60
       4  ??DataTable62_61
       4  ??DataTable62_62
       4  ??DataTable62_63
       4  ??DataTable62_64
       4  ??DataTable62_65
       4  ??DataTable62_66
       4  ??DataTable62_67
       4  ??DataTable62_7
       4  ??DataTable62_8
       4  ??DataTable62_9
     204  CH451_GetKeyValue
      86  CH451_WriteCommand
      56  CH451_ini
     296  Car_Speed
     166  DMA0_Init
      50  DMA_CHO_ISR
       1  D_High
       1  D_Low
       1  D_Mid
       1  D_Mid1
      14  Delay
     524  Duo_Ji_PD
       2  END_0
     160  FTM2_QUAD_Init
       1  GetKeyValue
       1  H_High
       1  H_Low
       1  H_Mid
       1  H_Mid1
     288  High_Mid
     294  High_Wu
     314  High_You
     224  IO_Init
    8800  ImageData
    8800  ImageData2
     100  JIANPAN_ini
     166  Judge_end
       2  Judge_startline
    1088  Judge_startline2
      16  KeyCode
       1  KeyValue
       1  LCD_P1
       1  LCD_P2
       1  LCD_P3
       1  LPTMR_INTERRUPT
     314  Mid_Wu
       8  Motor
     210  Motor_control
       1  P_High
       1  P_Low
       1  P_Mid
       1  P_Mid1
       4  P_timer
      96  SCI
       8  Servo
       2  Servo_Left
       2  Servo_Middle
       2  Servo_Right
       2  Servo_value
       2  Servo_value_old
       1  T_High
       1  T_Low
       1  T_Mid
       1  T_Mid1
     148  UART0_Init
       1  Very_straight
     120  Wspeed_diff
      18  abs
     220  backup
      20  bianma
     872  binaryzation
    1708  binaryzation2
      68  bitdata
       2  bitnum
       1  black2_a1
       1  black2_a2
       1  black2_a3
       1  black2_b1
       1  black2_b2
       1  black2_b3
       1  black2_c1
       1  black2_c2
       1  black2_c3
       1  black2_d1
       1  black2_d2
       1  black2_d3
       1  black_a1
       1  black_a2
       1  black_a3
       1  black_b1
       1  black_b2
       1  black_b3
       1  black_c1
       1  black_c2
       1  black_c3
       1  black_d1
       1  black_d2
       1  black_d3
       1  car_speed
     122  center_filter
    5720  choose_PD
       8  data
      84  data_deal
     220  data_table
       2  deal_flag
      20  delayms
      52  delays
       2  dijihang
      80  disable_pit_interrupt
      80  enable_pit_interrupt
       1  endline
       1  endline_F
    1126  find_position
       1  finish
      18  get_counter_value
      82  get_irkey
    1052  get_root
      22  get_speed
       2  high
       2  high_0
       2  high_now
       2  high_now_0
       2  high_old
     580  hw_FTM0_init
     246  hw_FTM1_init
     112  hw_pit_init
       2  i
       2  i_old
       4  imagerow
     124  ir_deal
       2  irkey
       2  irq_count
       2  irq_flag
     864  judge_locus_0
      24  limit
      60  line
     110  line
      72  line_max
      72  line_min
       2  low
       2  low_0
       2  low_now
       2  low_now_0
       2  low_old
     104  lptmr_32khz_input
      26  lptmr_clear_registers
      54  lptmr_external_clk_input
      86  lptmr_internal_ref_input
      96  lptmr_interrupt
      26  lptmr_isr_example
      54  lptmr_lpo_input
      52  lptmr_prescale
     150  lptmr_pulse_counter
      54  lptmr_time_counter
    2380  main
      18  max
       2  mid
       2  mid_0
       2  mid_now
       2  mid_now_0
       2  mid_old
      18  min
       2  motor_e_old
    1546  motor_fuzzy
       2  motor_sum
     130  pit0_isr
      40  pit1_isr
      40  pit2_isr
     194  pllinit180M
       4  point
      56  porta_isr
     134  portb_isr
      28  portc_isr
     220  position
       2  position_diff
       2  position_now
       2  position_now_low
     144  position_youhua
      64  print_d
      64  print_d1
     112  print_dall
     100  print_fall
      36  print_hell
      64  print_t
      64  print_t1
     112  print_tall
     320  ption
       2  pulse
       2  pulse2
       1  ramp_flag
       2  receive_flag
       4  row
      56  row_F
       2  s_old
       1  sai_dao_lei_xing
       4  servo
     354  set_speed
       2  speed_Very_straight
       2  speed_b
     302  speed_control
    1412  speed_fuzzy
       2  speed_m
       2  speed_ms
       2  speed_now
       2  speed_s
       2  speed_top
      50  stages3
     170  stages_D
     212  stages_P
     110  stages_low_P
       4  start_position
       2  startflag
       1  startline
       1  startline_F
       8  sub
     264  sub_e
      40  subjection_k
       2  time_m
       2  timer
       2  topline
       4  tu_flag

 
 18 708 bytes in section .bss
     87 bytes in section .data
    760 bytes in section .rodata
 28 270 bytes in section .text
 
 28 270 bytes of CODE  memory
    760 bytes of CONST memory
 18 795 bytes of DATA  memory

Errors: none
Warnings: 86
