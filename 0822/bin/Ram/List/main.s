///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM    02/Jun/2013  14:47:46 /
// Copyright 1999-2011 IAR Systems AB.                                        /
//                                                                            /
//    Cpu mode     =  thumb                                                   /
//    Endian       =  little                                                  /
//    Source file  =  C:\Users\Administrator\Desktop\0602\src\main.c          /
//    Command line =  C:\Users\Administrator\Desktop\0602\src\main.c -D IAR   /
//                    -D TWR_K60N512 -lCN C:\Users\Administrator\Desktop\0602 /
//                    \bin\Ram\List\ -lB C:\Users\Administrator\Desktop\0602\ /
//                    bin\Ram\List\ -o C:\Users\Administrator\Desktop\0602\bi /
//                    n\Ram\Obj\ --no_cse --no_unroll --no_inline             /
//                    --no_code_motion --no_tbaa --no_clustering              /
//                    --no_scheduling --debug --endian=little                 /
//                    --cpu=Cortex-M4 -e --fpu=None --dlib_config             /
//                    E:\学习程序\arm\INC\c\DLib_Config_Normal.h -I           /
//                    C:\Users\Administrator\Desktop\0602\src\Sources\H\ -I   /
//                    C:\Users\Administrator\Desktop\0602\src\Sources\H\Compo /
//                    nent_H\ -I C:\Users\Administrator\Desktop\0602\src\Sour /
//                    ces\H\Frame_H\ -Ol --use_c++_inline                     /
//    List file    =  C:\Users\Administrator\Desktop\0602\bin\Ram\List\main.s /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME main

        #define SHT_PROGBITS 0x1

        EXTERN LCD_CLS
        EXTERN LCD_CLS2
        EXTERN LCD_Init
        EXTERN LCD_P6x8Str
        EXTERN LCD_P6x8Str_1
        EXTERN LCD_P6x8Str_3
        EXTERN LCD_P6x8Str_FuHao_3
        EXTERN LCD_PutPixel
        EXTERN __aeabi_memclr4
        EXTERN __aeabi_memcpy4
        EXTERN disable_irq
        EXTERN enable_irq
        EXTERN gpio_Get
        EXTERN gpio_ctrl
        EXTERN gpio_init
        EXTERN uart_send1

        PUBLIC BW
        PUBLIC BW2
        PUBLIC BW3
        PUBLIC BW4
        PUBLIC BW_filter
        PUBLIC CH451_GetKeyValue
        PUBLIC CH451_WriteCommand
        PUBLIC CH451_ini
        PUBLIC Car_Speed
        PUBLIC DMA0_Init
        PUBLIC DMA_CHO_ISR
        PUBLIC D_High
        PUBLIC D_Low
        PUBLIC D_Mid
        PUBLIC Delay
        PUBLIC Duo_Ji_PD
        PUBLIC END_0
        PUBLIC END_Line
        PUBLIC END_Line_2
        PUBLIC FTM2_QUAD_Init
        PUBLIC GetKeyValue
        PUBLIC H_High
        PUBLIC H_Low
        PUBLIC H_Mid
        PUBLIC High_Wu
        PUBLIC High_You
        PUBLIC IO_Init
        PUBLIC JIANPAN_ini
        PUBLIC Judage_left_hang
        PUBLIC Judage_left_lie
        PUBLIC Judage_right_hang
        PUBLIC Judage_right_lie
        PUBLIC KeyCode
        PUBLIC KeyValue
        PUBLIC LCD_P1
        PUBLIC LCD_P2
        PUBLIC LCD_P3
        PUBLIC LPTMR_INTERRUPT
        PUBLIC LianJie
        PUBLIC LianJie_center
        PUBLIC Mid_Wu
        PUBLIC Motor
        PUBLIC Motor_control
        PUBLIC P_High
        PUBLIC P_Low
        PUBLIC P_Mid
        PUBLIC P_timer
        PUBLIC SCI
        PUBLIC SCI_center
        PUBLIC Servo
        PUBLIC Servo_Left
        PUBLIC Servo_Middle
        PUBLIC Servo_Right
        PUBLIC Servo_value
        PUBLIC Servo_value_old
        PUBLIC Start_Detection
        PUBLIC Start_Detection_2
        PUBLIC Start_Detection_3
        PUBLIC Start_Detection_4
        PUBLIC Start_Line
        PUBLIC T_High
        PUBLIC T_Low
        PUBLIC T_Mid
        PUBLIC T_P1
        PUBLIC T_P2
        PUBLIC T_P28
        PUBLIC T_P4
        PUBLIC UART0_Init
        PUBLIC Very_straight
        PUBLIC X_LineBend
        PUBLIC Yu_Zhi
        PUBLIC abs
        PUBLIC bianma
        PUBLIC bianyan
        PUBLIC bianyan2
        PUBLIC bitdata
        PUBLIC bitnum
        PUBLIC black_max_1
        PUBLIC black_max_2
        PUBLIC black_max_3
        PUBLIC black_max_a1
        PUBLIC black_max_a2
        PUBLIC black_max_a3
        PUBLIC black_max_b1
        PUBLIC black_max_b2
        PUBLIC black_max_b3
        PUBLIC black_max_c1
        PUBLIC black_max_c2
        PUBLIC black_max_c3
        PUBLIC black_max_d1
        PUBLIC black_max_d2
        PUBLIC black_max_d3
        PUBLIC car_speed
        PUBLIC center
        PUBLIC center_filter
        PUBLIC ceshi
        PUBLIC ceshi_duoji
        PUBLIC choose_PD
        PUBLIC `data`
        PUBLIC data_deal
        PUBLIC data_table
        PUBLIC deal_flag
        PUBLIC delays
        PUBLIC disable_pit_interrupt
        PUBLIC enable_pit_interrupt
        PUBLIC endline
        PUBLIC endline_F
        PUBLIC find_bianyan
        PUBLIC find_center_max
        PUBLIC find_center_min
        PUBLIC finish
        PUBLIC get_counter_value
        PUBLIC get_irkey
        PUBLIC get_speed
        PUBLIC `high`
        PUBLIC high_0
        PUBLIC high_now
        PUBLIC high_now_0
        PUBLIC high_old
        PUBLIC hw_FTM0_init
        PUBLIC hw_FTM1_init
        PUBLIC hw_pit_init
        PUBLIC imagerow
        PUBLIC ir_deal
        PUBLIC irkey
        PUBLIC irq_count
        PUBLIC irq_flag
        PUBLIC judage_shizi
        PUBLIC judage_xuxian
        PUBLIC judge_locus_0
        PUBLIC judge_ramp
        PUBLIC left_ceshi
        PUBLIC limit
        PUBLIC line
        PUBLIC line_max
        PUBLIC line_min
        PUBLIC `low`
        PUBLIC low_0
        PUBLIC low_now
        PUBLIC low_now_0
        PUBLIC low_old
        PUBLIC lptmr_32khz_input
        PUBLIC lptmr_clear_registers
        PUBLIC lptmr_external_clk_input
        PUBLIC lptmr_internal_ref_input
        PUBLIC lptmr_interrupt
        PUBLIC lptmr_isr_example
        PUBLIC lptmr_lpo_input
        PUBLIC lptmr_prescale
        PUBLIC lptmr_pulse_counter
        PUBLIC lptmr_time_counter
        PUBLIC m_zhi
        PUBLIC main
        PUBLIC max
        PUBLIC mid
        PUBLIC mid_0
        PUBLIC mid_now
        PUBLIC mid_now_0
        PUBLIC mid_old
        PUBLIC min
        PUBLIC mo_hu
        PUBLIC motor_fuzzy
        PUBLIC pit0_isr
        PUBLIC pit1_isr
        PUBLIC pit2_isr
        PUBLIC pllinit180M
        PUBLIC point
        PUBLIC porta_isr
        PUBLIC portb_isr
        PUBLIC portc_isr
        PUBLIC position_Save
        PUBLIC position_ceshi
        PUBLIC position_diff
        PUBLIC position_now
        PUBLIC position_now_low
        PUBLIC position_old_ceshi
        PUBLIC print_d
        PUBLIC print_d1
        PUBLIC print_dall
        PUBLIC print_fall
        PUBLIC print_hell
        PUBLIC print_t
        PUBLIC print_t1
        PUBLIC print_tall
        PUBLIC pulse
        PUBLIC ramp_flag
        PUBLIC receive_flag
        PUBLIC right_ceshi
        PUBLIC row
        PUBLIC row_F
        PUBLIC s_old
        PUBLIC sai_dao_lei_xing
        PUBLIC servo
        PUBLIC set_speed
        PUBLIC speed_Very_straight
        PUBLIC speed_b
        PUBLIC speed_control
        PUBLIC speed_fuzzy
        PUBLIC speed_m
        PUBLIC speed_ms
        PUBLIC speed_now
        PUBLIC speed_s
        PUBLIC speed_top
        PUBLIC stages3
        PUBLIC stages_D
        PUBLIC stages_P
        PUBLIC stages_low_P
        PUBLIC start_18_25_2
        PUBLIC start_25_35_2
        PUBLIC start_35_45_2
        PUBLIC start_45_55_2
        PUBLIC start_line2
        PUBLIC start_xian
        PUBLIC startflag
        PUBLIC startline
        PUBLIC startline_F
        PUBLIC `sub`
        PUBLIC sub_e
        PUBLIC subjection_k
        PUBLIC threshold
        PUBLIC time_m
        PUBLIC timer
        PUBLIC topline
        PUBLIC video
        PUBLIC video2
        PUBLIC xie_shizi
        PUBLIC xie_shizi_flag_1
        PUBLIC xie_shizi_flag_2
        PUBLIC xie_shizi_flag_3
        PUBLIC xu1
        PUBLIC xu2
        PUBLIC xu3
        PUBLIC xu4
        PUBLIC xu_xian2
        PUBLIC xu_xian_bu
        PUBLIC xu_xian_cai
        PUBLIC xu_xian_find

// C:\Users\Administrator\Desktop\0602\src\main.c
//    1 
//    2 
//    3 //使用B0~B7采集数字摄像头OV7620 8位灰度输入
//    4 //A24引脚设置为GPIO模式，下降沿中断,场中断
//    5 //B10引脚设置为GPIO模式，上升沿中断,行中断
//    6 //B11引脚设置为GPIO模式，像素同步脉冲pclk，4分频后，上升沿触发DMA请求
//    7 //共采集H行，每行V个点，dma传送到video数组
//    8 //本代码仅供个人学习使用，请勿用于其他用途
//    9 //舵机5V电压250Hz    电机10KHz  3.3V   摄像头5V供电
//   10   
//   11  /*********************************************************/
//   12 /********************************************************/
//   13         //给某个引脚设置高低电平的方法
//   14         //PORTD_PCR10=PORT_PCR_MUX(1);                 选择GPIO模式
//   15         //GPIOD_PDDR=GPIO_PDDR_PDD(GPIO_PIN(10));      选择输出模式
//   16         //GPIOD_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(10));  高电平
//   17         //GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(14));  低电平
//   18         /********************************************************/
//   19 #include <stdio.h>
//   20 #include "includes.h"
//   21 #include "MK60N512VMD100.h"
//   22 #include "uart.h"
//   23 #include "keyboard.h"

        SECTION `.data`:DATA:REORDER:NOROOT(2)
// __absolute uint8 KeyCode[16]
KeyCode:
        DATA
        DC8 64, 65, 66, 67, 72, 73, 74, 75, 80, 81, 82, 83, 88, 89, 90, 91

        SECTION `.data`:DATA:REORDER:NOROOT(0)
// __absolute uint8 KeyValue
KeyValue:
        DATA
        DC8 50

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
// __absolute uint8 GetKeyValue
GetKeyValue:
        DS8 1

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void Delay(unsigned int)
Delay:
        MOVS     R1,#+0
        B.N      ??Delay_0
??Delay_1:
        ADDS     R1,R1,#+1
??Delay_0:
        CMP      R1,R0, LSL #+1
        BCC.N    ??Delay_1
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void CH451_WriteCommand(uint32)
CH451_WriteCommand:
        PUSH     {R3-R5,LR}
        MOVS     R4,R0
        MOVS     R5,#+12
        MOVS     R2,#+0
        MOVS     R1,#+2
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R0,#+0
        MOVS     R5,R0
        B.N      ??CH451_WriteCommand_0
??CH451_WriteCommand_1:
        ANDS     R2,R4,#0x1
        MOVS     R1,#+1
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R2,#+0
        MOVS     R1,#+0
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        LSRS     R4,R4,#+1
        MOVS     R2,#+1
        MOVS     R1,#+0
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        ADDS     R5,R5,#+1
??CH451_WriteCommand_0:
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R5,#+12
        BCC.N    ??CH451_WriteCommand_1
        MOVS     R2,#+1
        MOVS     R1,#+2
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void CH451_GetKeyValue(void)
CH451_GetKeyValue:
        PUSH     {R3-R5,LR}
        MOVS     R5,#+7
        LDR.W    R0,??DataTable20_1
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        MOVS     R2,#+0
        MOVS     R1,#+2
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R4,#+0
        B.N      ??CH451_GetKeyValue_0
??CH451_GetKeyValue_1:
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        ANDS     R2,R5,#0x1
        MOVS     R1,#+1
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R2,#+0
        MOVS     R1,#+0
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        LSRS     R5,R5,#+1
        MOVS     R2,#+1
        MOVS     R1,#+0
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        ADDS     R4,R4,#+1
??CH451_GetKeyValue_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+4
        BCC.N    ??CH451_GetKeyValue_1
        MOVS     R2,#+1
        MOVS     R1,#+2
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R4,#+0
        B.N      ??CH451_GetKeyValue_2
??CH451_GetKeyValue_3:
        LDR.W    R0,??DataTable20_1
        LDRB     R0,[R0, #+0]
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable20_1
        STRB     R0,[R1, #+0]
        MOVS     R1,#+3
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_Get
        LDR.W    R1,??DataTable20_1
        LDRB     R1,[R1, #+0]
        ORRS     R0,R0,R1
        LDR.W    R1,??DataTable20_1
        STRB     R0,[R1, #+0]
        MOVS     R2,#+1
        MOVS     R1,#+0
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R2,#+0
        MOVS     R1,#+0
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        ADDS     R4,R4,#+1
??CH451_GetKeyValue_2:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+7
        BCC.N    ??CH451_GetKeyValue_3
        MOVS     R4,#+0
        B.N      ??CH451_GetKeyValue_4
??CH451_GetKeyValue_5:
        ADDS     R4,R4,#+1
??CH451_GetKeyValue_4:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+16
        BCS.N    ??CH451_GetKeyValue_6
        LDR.W    R0,??DataTable20_1
        LDRB     R0,[R0, #+0]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.W    R1,??DataTable21
        LDRB     R1,[R4, R1]
        CMP      R0,R1
        BNE.N    ??CH451_GetKeyValue_5
        LDR.W    R0,??DataTable22
        STRB     R4,[R0, #+0]
??CH451_GetKeyValue_6:
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void CH451_ini(void)
CH451_ini:
        PUSH     {R7,LR}
        MOVS     R2,#+1
        MOVS     R1,#+1
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R2,#+0
        MOVS     R1,#+1
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        MOVS     R2,#+1
        MOVS     R1,#+1
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_ctrl
        MOVW     R0,#+513
        BL       CH451_WriteCommand
        MOVW     R0,#+1027
        BL       CH451_WriteCommand
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void JIANPAN_ini(void)
JIANPAN_ini:
        PUSH     {R7,LR}
        LDR.W    R0,??DataTable21_1  ;; 0x40049004
        MOV      R1,#+256
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable21_2  ;; 0x40049008
        MOV      R1,#+256
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable21_3  ;; 0x4004900c
        MOV      R1,#+256
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable21_4  ;; 0x40049010
        MOV      R1,#+256
        STR      R1,[R0, #+0]
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+0
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_init
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+1
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_init
        MOVS     R3,#+1
        MOVS     R2,#+1
        MOVS     R1,#+2
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_init
        MOVS     R3,#+1
        MOVS     R2,#+0
        MOVS     R1,#+3
        LDR.W    R0,??DataTable20  ;; 0x400ff000
        BL       gpio_init
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_d(int)
print_d:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0x800
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0x900
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_d1(int)
print_d1:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0xA00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0xB00
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_dall(int)
print_dall:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        MOVS     R0,#+100
        SDIV     R0,R4,R0
        MOVS     R1,#+10
        SDIV     R2,R0,R1
        MLS      R0,R1,R2,R0
        STR      R0,[SP, #+8]
        MOV      R0,#+1000
        SDIV     R0,R4,R0
        STR      R0,[SP, #+12]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0x800
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0x900
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+8]
        ORRS     R0,R0,#0xA00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+12]
        ORRS     R0,R0,#0xB00
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_t(int)
print_t:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0xC00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0xD00
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_tall(int)
print_tall:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        MOVS     R0,#+100
        SDIV     R0,R4,R0
        MOVS     R1,#+10
        SDIV     R2,R0,R1
        MLS      R0,R1,R2,R0
        STR      R0,[SP, #+8]
        MOV      R0,#+1000
        SDIV     R0,R4,R0
        STR      R0,[SP, #+12]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0xC00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0xD00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+8]
        ORRS     R0,R0,#0xE00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+12]
        ORRS     R0,R0,#0xF00
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_t1(int)
print_t1:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0xE00
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0xF00
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_hell()
print_hell:
        PUSH     {R7,LR}
        MOVW     R0,#+3128
        BL       CH451_WriteCommand
        MOVW     R0,#+3384
        BL       CH451_WriteCommand
        MOVW     R0,#+3598
        BL       CH451_WriteCommand
        MOVW     R0,#+3959
        BL       CH451_WriteCommand
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void print_fall(int)
print_fall:
        PUSH     {R0-R4,LR}
        MOVS     R4,R0
        ADD      R0,SP,#+0
        MOVS     R1,#+16
        BL       __aeabi_memclr4
        MOVS     R0,#+10
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        STR      R0,[SP, #+0]
        MOVS     R0,#+100
        SDIV     R1,R4,R0
        MLS      R0,R0,R1,R4
        MOVS     R1,#+10
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        MOVS     R0,#+100
        SDIV     R0,R4,R0
        MOVS     R1,#+10
        SDIV     R2,R0,R1
        MLS      R0,R1,R2,R0
        STR      R0,[SP, #+8]
        LDR      R0,[SP, #+0]
        ORRS     R0,R0,#0x800
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+4]
        ORRS     R0,R0,#0x900
        BL       CH451_WriteCommand
        LDR      R0,[SP, #+8]
        ORRS     R0,R0,#0xA00
        BL       CH451_WriteCommand
        MOVW     R0,#+2834
        BL       CH451_WriteCommand
        POP      {R0-R4,PC}       ;; return
//   24 #include "IR.h"

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 irq_flag
irq_flag:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 irq_count
irq_count:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 timer
timer:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 startflag
startflag:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 bitnum
bitnum:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
// __absolute int16 bitdata[33]
bitdata:
        DS8 68

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 receive_flag
receive_flag:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
// __absolute int16 data[4]
`data`:
        DS8 8

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 deal_flag
deal_flag:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
// __absolute int16 irkey
irkey:
        DS8 2

        SECTION `.data`:DATA:REORDER:NOROOT(2)
// __absolute int16 bianma[10]
bianma:
        DATA
        DC16 22, 12, 24, 94, 8, 28, 90, 66, 82, 74

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void get_irkey()
get_irkey:
        PUSH     {R7,LR}
        LDR.W    R0,??DataTable23
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??get_irkey_0
        LDR.W    R0,??DataTable23
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        BL       data_deal
??get_irkey_0:
        LDR.W    R0,??DataTable25
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??get_irkey_1
        MOVS     R0,#+0
        B.N      ??get_irkey_2
??get_irkey_3:
        LDR.W    R1,??DataTable23_1
        LDRSH    R1,[R1, #+4]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R2,??DataTable23_2
        LDRSH    R2,[R2, R0, LSL #+1]
        CMP      R1,R2
        BNE.N    ??get_irkey_4
        LDR.W    R1,??DataTable25_1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        STRH     R0,[R1, #+0]
??get_irkey_4:
        ADDS     R0,R0,#+1
??get_irkey_2:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+10
        BCC.N    ??get_irkey_3
??get_irkey_1:
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void data_deal(void)
data_deal:
        PUSH     {R4}
        MOVS     R0,#+0
        MOVS     R1,#+0
        MOVS     R3,#+0
        MOVS     R2,#+1
        MOVS     R4,#+0
        MOVS     R1,R4
        B.N      ??data_deal_0
??data_deal_1:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        LSRS     R3,R3,#+1
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        LDR.W    R4,??DataTable24
        LDRSH    R4,[R4, R2, LSL #+1]
        CMP      R4,#+6
        BLT.N    ??data_deal_2
        ORRS     R3,R3,#0x80
??data_deal_2:
        ADDS     R2,R2,#+1
        ADDS     R0,R0,#+1
??data_deal_3:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+8
        BLT.N    ??data_deal_1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.W    R0,??DataTable23_1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        STRH     R3,[R0, R1, LSL #+1]
        ADDS     R1,R1,#+1
??data_deal_0:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+4
        BGE.N    ??data_deal_4
        MOVS     R0,#+0
        B.N      ??data_deal_3
??data_deal_4:
        LDR.W    R0,??DataTable25
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
        POP      {R4}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void ir_deal(void)
ir_deal:
        LDR.W    R0,??DataTable24_1
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??ir_deal_0
        LDR.W    R0,??DataTable26
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+26
        BLT.N    ??ir_deal_1
        LDR.W    R0,??DataTable24_2
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
??ir_deal_1:
        LDR.W    R0,??DataTable24_2
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable24
        LDR.W    R2,??DataTable26
        LDRH     R2,[R2, #+0]
        STRH     R2,[R1, R0, LSL #+1]
        LDR.W    R0,??DataTable26
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable24_2
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable24_2
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable24_2
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+33
        BNE.N    ??ir_deal_2
        LDR.W    R0,??DataTable24_2
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable23
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
        B.N      ??ir_deal_2
??ir_deal_0:
        LDR.W    R0,??DataTable24_1
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable26
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
??ir_deal_2:
        BX       LR               ;; return
//   25 #include "LQ12864.h" 
//   26 #include "lptmr.h"

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
// __absolute char LPTMR_INTERRUPT
LPTMR_INTERRUPT:
        DS8 1

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_interrupt(void)
lptmr_interrupt:
        PUSH     {R4,LR}
        MOVW     R4,#+5000
        LDR.W    R0,??DataTable24_3
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        BL       lptmr_clear_registers
        MOVS     R0,#+85
        BL       enable_irq
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable27  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040004
        MOVS     R1,#+5
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        MOVS     R1,#+64
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_interrupt_0:
        LDR.W    R0,??DataTable24_3
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??lptmr_interrupt_0
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+1
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
        BL       lptmr_clear_registers
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_isr_example(void)
lptmr_isr_example:
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x80
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_3
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_time_counter()
lptmr_time_counter:
        PUSH     {R4,LR}
        MOVW     R4,#+5000
        BL       lptmr_clear_registers
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable27  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040004
        MOVS     R1,#+5
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_time_counter_0:
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_time_counter_0
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_prescale()
lptmr_prescale:
        PUSH     {R4,LR}
        MOVS     R4,#+250
        BL       lptmr_clear_registers
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable27  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040004
        MOVS     R1,#+33
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_prescale_0:
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_prescale_0
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_internal_ref_input()
lptmr_internal_ref_input:
        PUSH     {R4,LR}
        MOVW     R4,#+15625
        BL       lptmr_clear_registers
        LDR.W    R0,??DataTable24_6  ;; 0x40064000
        LDRB     R0,[R0, #+0]
        ORRS     R0,R0,#0x2
        LDR.W    R1,??DataTable24_6  ;; 0x40064000
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable24_7  ;; 0x40064001
        LDRB     R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_7  ;; 0x40064001
        STRB     R0,[R1, #+0]
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable27  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040004
        MOVS     R1,#+64
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_internal_ref_input_0:
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_internal_ref_input_0
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_external_clk_input()
lptmr_external_clk_input:
        PUSH     {R7,LR}
        BL       lptmr_clear_registers
        MOVW     R0,#+7630
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable27  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040004
        MOVS     R1,#+123
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_external_clk_input_0:
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_external_clk_input_0
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_lpo_input()
lptmr_lpo_input:
        PUSH     {R4,LR}
        MOV      R4,#+4000
        BL       lptmr_clear_registers
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable27  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040004
        MOVS     R1,#+5
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_lpo_input_0:
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_lpo_input_0
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_32khz_input()
lptmr_32khz_input:
        PUSH     {R4,LR}
        MOV      R4,#+32768
        BL       lptmr_clear_registers
        LDR.W    R0,??DataTable25_2  ;; 0x4004803c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x20000000
        LDR.W    R1,??DataTable25_2  ;; 0x4004803c
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable25_3  ;; 0x4003d010
        LDR      R0,[R0, #+0]
        MOV      R1,#+256
        ORRS     R0,R1,R0
        LDR.W    R1,??DataTable25_3  ;; 0x4003d010
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable25_4  ;; 0x40047000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x80000
        LDR.W    R1,??DataTable25_4  ;; 0x40047000
        STR      R0,[R1, #+0]
        UXTH     R0,R4            ;; ZeroExt  R0,R4,#+16,#+16
        LDR.W    R1,??DataTable27  ;; 0x40040008
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040004
        MOVS     R1,#+10
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_32khz_input_0:
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        LSLS     R0,R0,#+24
        BPL.N    ??lptmr_32khz_input_0
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_pulse_counter(char)
lptmr_pulse_counter:
        PUSH     {R3-R5,LR}
        MOVS     R4,R0
        MOV      R5,#+1000
        BL       lptmr_clear_registers
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BNE.N    ??lptmr_pulse_counter_0
        LDR.W    R0,??DataTable26_1  ;; 0x40048038
        LDR      R0,[R0, #+0]
        MOV      R1,#+512
        ORRS     R0,R1,R0
        LDR.W    R1,??DataTable26_1  ;; 0x40048038
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable26_2  ;; 0x4004904c
        MOV      R1,#+1536
        STR      R1,[R0, #+0]
??lptmr_pulse_counter_1:
        LDR.W    R0,??DataTable24_4  ;; 0x40040004
        MOVS     R1,#+5
        STR      R1,[R0, #+0]
        UXTH     R0,R5            ;; ZeroExt  R0,R5,#+16,#+16
        LDR.W    R1,??DataTable27  ;; 0x40040008
        STR      R0,[R1, #+0]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LSLS     R0,R4,#+4
        ANDS     R0,R0,#0x30
        ORRS     R0,R0,#0x2
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable24_5  ;; 0x40040000
        STR      R0,[R1, #+0]
??lptmr_pulse_counter_2:
        POP      {R0,R4,R5,PC}    ;; return
??lptmr_pulse_counter_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+2
        BNE.N    ??lptmr_pulse_counter_3
        LDR.W    R0,??DataTable26_1  ;; 0x40048038
        LDR      R0,[R0, #+0]
        MOV      R1,#+512
        ORRS     R0,R1,R0
        LDR.W    R1,??DataTable26_1  ;; 0x40048038
        STR      R0,[R1, #+0]
        LDR.W    R0,??DataTable32  ;; 0x4004b014
        MOV      R1,#+1024
        STR      R1,[R0, #+0]
        B.N      ??lptmr_pulse_counter_1
??lptmr_pulse_counter_3:
        B.N      ??lptmr_pulse_counter_2

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp uint16 get_counter_value()
get_counter_value:
        LDR.W    R0,??DataTable32_1  ;; 0x4004000c
        MOVS     R1,#+1
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable32_1  ;; 0x4004000c
        LDR      R0,[R0, #+0]
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void lptmr_clear_registers()
lptmr_clear_registers:
        LDR.W    R0,??DataTable24_5  ;; 0x40040000
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable24_4  ;; 0x40040004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable27  ;; 0x40040008
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        BX       LR               ;; return
//   27 #define READword(address)     ((unsigned int)(*(volatile unsigned int *)(address)))
//   28 #define FLEXNVM_startline_ADDR 0X10000000
//   29 #define FLEXRAM_startline_ADDR 0X14000000
//   30 #define PIT0 0
//   31 #define PIT1 1
//   32 #define PIT2 2
//   33 #define PIT3 3
//   34 #define GPIO_PIN_MASK      0x1Fu    //0x1f=31,限制位数为0--31有效
//   35 #define GPIO_PIN(x)        (((1)<<(x & GPIO_PIN_MASK)))  //把当前位置1                
//   36 #define endlineROW  169        //OV7620，每场240行
//   37 #define  H 55
//   38 #define  V 160
//   39 #define  video_Middle  80
//   40 #define windage 40
//   41 //#define black_max 150   //150
//   42 #define shi_zi_jiao_cha_number 9      //用来判断十字交叉的行数的，大于这个值就认为是十字交叉

        SECTION `.data`:DATA:REORDER:NOROOT(1)
//   43 int16 Servo_Middle= 10025;    //中间11625  250Hz  37.27%
Servo_Middle:
        DATA
        DC16 10025

        SECTION `.data`:DATA:REORDER:NOROOT(1)
//   44 int16 Servo_Left=   9375;   //最左10475  250Hz  44%
Servo_Left:
        DATA
        DC16 9375

        SECTION `.data`:DATA:REORDER:NOROOT(1)
//   45 int16 Servo_Right=  13775;   //最右15575   250Hz  30.53%
Servo_Right:
        DATA
        DC16 13775
//   46 
//   47 #define  unclear  -100
//   48 #define  ok        1
//   49 #define  fail      0
//   50 #define  position_mid   79           //中心位置
//   51 /*****************************阈值设定*******************************/

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   52 unsigned char black_max_a1 = 115;
black_max_a1:
        DATA
        DC8 115

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   53 unsigned char black_max_a2 = 130;
black_max_a2:
        DATA
        DC8 130

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   54 unsigned char black_max_a3 = 115;
black_max_a3:
        DATA
        DC8 115

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   55 unsigned char black_max_b1 = 118;
black_max_b1:
        DATA
        DC8 118

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   56 unsigned char black_max_b2 = 135;
black_max_b2:
        DATA
        DC8 135

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   57 unsigned char black_max_b3 = 118;
black_max_b3:
        DATA
        DC8 118

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   58 unsigned char black_max_c1 = 120;
black_max_c1:
        DATA
        DC8 120

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   59 unsigned char black_max_c2 = 140;
black_max_c2:
        DATA
        DC8 140

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   60 unsigned char black_max_c3 = 120;
black_max_c3:
        DATA
        DC8 120

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   61 unsigned char black_max_d1 = 130;
black_max_d1:
        DATA
        DC8 130

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   62 unsigned char black_max_d2 = 140;
black_max_d2:
        DATA
        DC8 140

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//   63 unsigned char black_max_d3 = 130;
black_max_d3:
        DATA
        DC8 130
//   64 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   65 unsigned char black_max_1 = 0;
black_max_1:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   66 unsigned char black_max_2 = 0;
black_max_2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   67 unsigned char black_max_3 = 0;
black_max_3:
        DS8 1
//   68 /*****************************END********************************/

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   69 volatile int P_timer=0;
P_timer:
        DS8 4
//   70 

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   71 unsigned int row=0;//摄像头行计数，最大240
row:
        DS8 4

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   72 volatile uint8 video[H][V];//存放数据数组
video:
        DS8 8800

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   73 volatile uint8 bianyan[2][H];//存放两边黑线
bianyan:
        DS8 112

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   74 volatile uint8 bianyan2[2][H];
bianyan2:
        DS8 112

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   75 volatile uint8 center[H];//存放中心线
center:
        DS8 56

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   76 volatile uint8 BW[101];//这个需要清零，用于起始线检测25-35
BW:
        DS8 104

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   77 volatile uint8 BW2[121];//这个需要清零，用于起始线检测35-45
BW2:
        DS8 124

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   78 volatile uint8 BW3[81];//18-25起始线检测
BW3:
        DS8 84

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   79 volatile uint8 BW4[141];//45-55起始线检测
BW4:
        DS8 144

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   80 volatile uint8 start_xian=0;//这个需要清零
start_xian:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   81 volatile uint8 Very_straight=0;//这个需要清零
Very_straight:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   82 volatile uint8 ramp_flag=0;//这个需要清零
ramp_flag:
        DS8 1
//   83 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   84 volatile uint8 END_Line_2=0;
END_Line_2:
        DS8 1
//   85 

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   86 int16 position_Save[20];
position_Save:
        DS8 40

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   87 uint8 video2[V];
video2:
        DS8 160

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//   88 int16 position_ceshi=0,position_old_ceshi=0;
position_ceshi:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
position_old_ceshi:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//   89 uint16 left_ceshi=0,right_ceshi=0;
left_ceshi:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
right_ceshi:
        DS8 2
//   90 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//   91 volatile uint8 m_zhi=0;
m_zhi:
        DS8 1
//   92 
//   93 

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//   94 unsigned int imagerow=0;//采集行计数，最大H
imagerow:
        DS8 4

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC32 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "Mid_Wu">`:
        DATA
        DC8 "Mid_Wu"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "High_Wu">`:
        DATA
        DC8 "High_Wu"

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "High_You">`:
        DATA
        DC8 "High_You"
        DC8 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 "OK"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant {1, 2, 3, 3, 4}>`:
        DATA
        DC8 1, 2, 3, 3, 4, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant {-1}>`:
        DATA
        DC16 -1
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC16 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "speed">`:
        DATA
        DC8 "speed"
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "TJorFC">`:
        DATA
        DC8 "TJorFC"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 "FC"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
        DATA
        DC8 "TJ"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "sai_dao_number">`:
        DATA
        DC8 "sai_dao_number"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "LCDgo_on">`:
        DATA
        DC8 "LCDgo_on"
        DC8 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "low_0">`:
        DATA
        DC8 "low_0"
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "mid_0">`:
        DATA
        DC8 "mid_0"
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "high_0">`:
        DATA
        DC8 "high_0"
        DC8 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "position_now">`:
        DATA
        DC8 "position_now"
        DC8 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "position_diff">`:
        DATA
        DC8 "position_diff"
        DC8 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
`?<Constant "position_now_low">`:
        DATA
        DC8 "position_now_low"
        DC8 0, 0, 0

        SECTION `.rodata`:CONST:REORDER:NOROOT(2)
//   95 unsigned int const data_table[H]={ 1,   3,   5,   7,   9,    //2 
data_table:
        DATA
        DC32 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 34, 37
        DC32 40, 43, 46, 49, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 88
        DC32 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144
        DC32 148, 152, 156, 160, 164, 168
//   96                                    11,  13,  15,  17,  19,    //2
//   97                                    21,  23,  25,  27,  29,    //2
//   98                                    31,  34,  37,  40,  43,    //3
//   99                                    46,  49,  52,  55,  58,    //3
//  100                                    61,  64,  67,  70,  73,    //3
//  101                                    76,  79,  82,  85,  88,    //3
//  102                                    92,  96, 100, 104, 108,    //4
//  103                                    112, 116, 120, 124, 128,    //4
//  104                                    132, 136, 140, 144, 148,    //4
//  105                                    152, 156, 160, 164, 168     //4
//  106                                        
//  107                                        
//  108                                        
//  109                                        
//  110                                        
//  111    
//  112                                    };//需采集数据的行，2cm一行实际测得

        SECTION `.data`:DATA:REORDER:NOROOT(2)
//  113 unsigned char mo_hu[31]={70,71,72,74,75,
mo_hu:
        DATA
        DC8 70, 71, 72, 74, 75, 77, 81, 83, 85, 87, 90, 93, 95, 95, 95, 95, 95
        DC8 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 0
//  114                          77,81,83,85,87,
//  115                          90,93,95,95,95,
//  116                          95,95,95,95,95,
//  117                          95,95,95,95,95,
//  118                          95,95,95,95,95,95};
//  119 

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  120 uint8 row_F[H];//该行采集完成标志
row_F:
        DS8 56

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  121 char startline;//起始行
startline:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  122 char endline;//结束行
endline:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  123 char startline_F;//发现起始行
startline_F:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  124 char endline_F;//发现结束行
endline_F:
        DS8 1
//  125 
//  126 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  127 uint8 T_P4=0,T_P1=0,T_P2=0,T_P28=0;//用来控制小灯变化的P4闪烁为脉冲计数运行标志，P1为边沿函数的执行标志
T_P4:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
T_P1:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
T_P2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
T_P28:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  128 uint8 LCD_P1=0,LCD_P2=0,LCD_P3=0;
LCD_P1:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
LCD_P2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
LCD_P3:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  129 volatile uint16 pulse=0;
pulse:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  130 volatile uint8 finish=0;
finish:
        DS8 1
//  131 
//  132 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  133 volatile uint8 xu_xian2=0;//这个需要清零
xu_xian2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  134 volatile uint8 xu1=0,xu2=0,xu3=0,xu4=0;//这个需要清零
xu1:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
xu2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
xu3:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
xu4:
        DS8 1
//  135 
//  136 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  137 volatile uint8 sai_dao_lei_xing=0;
sai_dao_lei_xing:
        DS8 1
//  138 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  139 volatile int16 low_0=0,mid_0=0,high_0=0;
low_0:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
mid_0:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
high_0:
        DS8 2
//  140 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  141 volatile int16 low=0,mid=0,high=0;
`low`:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
mid:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
`high`:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  142 volatile int16 topline=0;
topline:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  143 volatile int16 low_old=0,mid_old=0,high_old=0;
low_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
mid_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
high_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  144 volatile int16 position_now=0,position_diff=0,position_now_low=0;
position_now:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
position_diff:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
position_now_low:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  145 volatile int16 Servo_value=0,Servo_value_old=13015;//这里Servo_value_old的初始值要设置的和Servo_Middle一样，是用来限定的
Servo_value:
        DS8 2

        SECTION `.data`:DATA:REORDER:NOROOT(1)
Servo_value_old:
        DATA
        DC16 13015

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  146 volatile int16 low_now=0,mid_now=0,high_now=0;
low_now:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
mid_now:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
high_now:
        DS8 2
//  147 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  148 volatile int16 low_now_0=0,mid_now_0=0,high_now_0=0;
low_now_0:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
mid_now_0:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
high_now_0:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  149 volatile int16 END_0=0;
END_0:
        DS8 2
//  150 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  151 volatile uint8 car_speed=0;
car_speed:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  152 volatile int16 speed_Very_straight,speed_top,speed_b,speed_m,speed_s,speed_ms;
speed_Very_straight:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_top:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_b:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_m:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_s:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_ms:
        DS8 2
//  153 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  154 volatile int16 time_m=0,speed_now=0;
time_m:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
speed_now:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  155 volatile int16 s_old=0;
s_old:
        DS8 2
//  156 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  157 volatile int16 END_Line=0;
END_Line:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  158 volatile int16 xie_shizi_flag_1=0,xie_shizi_flag_2=0,xie_shizi_flag_3=0;
xie_shizi_flag_1:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
xie_shizi_flag_2:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
xie_shizi_flag_3:
        DS8 2
//  159 

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  160 volatile int16 Judage_right_hang=0,Judage_right_lie=0;
Judage_right_hang:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
Judage_right_lie:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
//  161 volatile int16 Judage_left_hang=0,Judage_left_lie=0;
Judage_left_hang:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
Judage_left_lie:
        DS8 2
//  162 
//  163 

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  164 uint8 start_line2=0;//注意这个需要清零
start_line2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
//  165 uint8 start_18_25_2=0,start_25_35_2=0,start_35_45_2=0,start_45_55_2=0;
start_18_25_2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
start_25_35_2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
start_35_45_2:
        DS8 1

        SECTION `.bss`:DATA:REORDER:NOROOT(0)
start_45_55_2:
        DS8 1
//  166 ////////////模糊控制///////////////
//  167 
//  168 #define MP_S      400//110  260  360
//  169 #define MP_M      440//180  320  400
//  170 #define MP_B      480//240  360  440
//  171 
//  172 #define MI_S      6//6 4
//  173 #define MI_M      9//10 8 
//  174 #define MI_B      12//15  10
//  175 
//  176 #define  motor_p      70//   45 50 55 60 65
//  177 
//  178 
//  179 
//  180 
//  181 //////////////////////舵机参数////////////////////////////

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  182 uint8 P_High=27;//29
P_High:
        DATA
        DC8 27

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  183 uint8 D_High=18;//15
D_High:
        DATA
        DC8 18

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  184 uint8 H_High=20;
H_High:
        DATA
        DC8 20

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  185 uint8 T_High=25;
T_High:
        DATA
        DC8 25
//  186 

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  187 uint8 P_Mid=41;//42
P_Mid:
        DATA
        DC8 41

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  188 uint8 D_Mid=26;//28
D_Mid:
        DATA
        DC8 26

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  189 uint8 H_Mid=15;
H_Mid:
        DATA
        DC8 15

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  190 uint8 T_Mid=50;
T_Mid:
        DATA
        DC8 50
//  191 

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  192 uint8 P_Low=43;
P_Low:
        DATA
        DC8 43

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  193 uint8 D_Low=32;//35 30
D_Low:
        DATA
        DC8 32

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  194 uint8 H_Low=26;
H_Low:
        DATA
        DC8 26

        SECTION `.data`:DATA:REORDER:NOROOT(0)
//  195 uint8 T_Low=50;
T_Low:
        DATA
        DC8 50
//  196 ///////////////////////////////////////////////////////////
//  197 /******************在这里加入键盘控制舵机PD参数头文件*******************/
//  198 #include "keyboard_PD.h"

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void High_You(void)
High_You:
        PUSH     {R4,LR}
        MOVS     R4,#+0
        B.N      ??High_You_0
??High_You_1:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_2:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??High_You_1
        LDR.W    R0,??DataTable26_3
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable26_3
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable26_3
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
??High_You_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??High_You_3
        BL       CH451_GetKeyValue
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??High_You_2
        CMP      R0,#+2
        BEQ.N    ??High_You_4
        CMP      R0,#+5
        BEQ.N    ??High_You_5
        CMP      R0,#+6
        BEQ.N    ??High_You_6
        CMP      R0,#+9
        BEQ.N    ??High_You_7
        CMP      R0,#+10
        BEQ.N    ??High_You_8
        B.N      ??High_You_0
??High_You_9:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_7:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+9
        BEQ.N    ??High_You_9
        LDR.W    R0,??DataTable26_4
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable26_4
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable26_4
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??High_You_0
??High_You_10:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_5:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??High_You_10
        LDR.W    R0,??DataTable26_3
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable26_3
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable26_3
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        B.N      ??High_You_0
??High_You_11:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_8:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??High_You_11
        LDR.W    R0,??DataTable26_4
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable26_4
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable26_4
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??High_You_0
??High_You_12:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_4:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??High_You_12
        B.N      ??High_You_0
??High_You_13:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_You_6:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BEQ.N    ??High_You_13
        MOVS     R4,#+1
        B.N      ??High_You_0
??High_You_3:
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void High_Wu(void)
High_Wu:
        PUSH     {R4,LR}
        MOVS     R4,#+0
        B.N      ??High_Wu_0
??High_Wu_1:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_2:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??High_Wu_1
        LDR.W    R0,??DataTable29
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable29
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable29
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
??High_Wu_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??High_Wu_3
        BL       CH451_GetKeyValue
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??High_Wu_2
        CMP      R0,#+2
        BEQ.N    ??High_Wu_4
        CMP      R0,#+5
        BEQ.N    ??High_Wu_5
        CMP      R0,#+6
        BEQ.N    ??High_Wu_6
        CMP      R0,#+9
        BEQ.N    ??High_Wu_7
        CMP      R0,#+10
        BEQ.N    ??High_Wu_8
        B.N      ??High_Wu_0
??High_Wu_9:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_7:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+9
        BEQ.N    ??High_Wu_9
        LDR.W    R0,??DataTable29_1
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable29_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable29_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??High_Wu_0
??High_Wu_10:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_5:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??High_Wu_10
        LDR.W    R0,??DataTable29
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable29
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable29
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        B.N      ??High_Wu_0
??High_Wu_11:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_8:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??High_Wu_11
        LDR.W    R0,??DataTable29_1
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable29_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable29_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??High_Wu_0
??High_Wu_12:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_4:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??High_Wu_12
        B.N      ??High_Wu_0
??High_Wu_13:
        LDR.W    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??High_Wu_6:
        LDR.W    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BEQ.N    ??High_Wu_13
        MOVS     R4,#+1
        B.N      ??High_Wu_0
??High_Wu_3:
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void Mid_Wu(void)
Mid_Wu:
        PUSH     {R4,LR}
        MOVS     R4,#+0
        B.N      ??Mid_Wu_0
??Mid_Wu_1:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_2:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Mid_Wu_1
        LDR.W    R0,??DataTable30
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable30
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable30
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
??Mid_Wu_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??Mid_Wu_3
        BL       CH451_GetKeyValue
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Mid_Wu_2
        CMP      R0,#+2
        BEQ.N    ??Mid_Wu_4
        CMP      R0,#+5
        BEQ.N    ??Mid_Wu_5
        CMP      R0,#+6
        BEQ.N    ??Mid_Wu_6
        CMP      R0,#+9
        BEQ.N    ??Mid_Wu_7
        CMP      R0,#+10
        BEQ.N    ??Mid_Wu_8
        B.N      ??Mid_Wu_0
??Mid_Wu_9:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_7:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+9
        BEQ.N    ??Mid_Wu_9
        LDR.W    R0,??DataTable30_1
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable30_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable30_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??Mid_Wu_0
??Mid_Wu_10:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_5:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??Mid_Wu_10
        LDR.W    R0,??DataTable30
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable30
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable30
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        B.N      ??Mid_Wu_0
??Mid_Wu_11:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_8:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??Mid_Wu_11
        LDR.W    R0,??DataTable30_1
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable30_1
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable30_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        B.N      ??Mid_Wu_0
??Mid_Wu_12:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_4:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??Mid_Wu_12
        B.N      ??Mid_Wu_0
??Mid_Wu_13:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Mid_Wu_6:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BEQ.N    ??Mid_Wu_13
        MOVS     R4,#+1
        B.N      ??Mid_Wu_0
??Mid_Wu_3:
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable20:
        DC32     0x400ff000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable20_1:
        DC32     GetKeyValue

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void Duo_Ji_PD(void)
Duo_Ji_PD:
        PUSH     {R3-R5,LR}
        MOVS     R5,#+0
        MOVS     R4,#+0
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,R4
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_1:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_2:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Duo_Ji_PD_1
        ADDS     R4,R4,#+1
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,R4
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
??Duo_Ji_PD_0:
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R5,#+0
        BNE.W    ??Duo_Ji_PD_3
        BL       CH451_GetKeyValue
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Duo_Ji_PD_2
        CMP      R0,#+2
        BEQ.N    ??Duo_Ji_PD_4
        CMP      R0,#+5
        BEQ.N    ??Duo_Ji_PD_5
        CMP      R0,#+6
        BEQ.N    ??Duo_Ji_PD_6
        CMP      R0,#+9
        BEQ.N    ??Duo_Ji_PD_7
        CMP      R0,#+10
        BEQ.N    ??Duo_Ji_PD_8
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_6:
        ADR.N    R2,??DataTable22_1  ;; 0x4F, 0x4B, 0x00, 0x00
        MOVS     R1,#+2
        MOVS     R0,#+110
        BL       LCD_P6x8Str
        B.N      ??Duo_Ji_PD_9
??Duo_Ji_PD_10:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_7:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+9
        BEQ.N    ??Duo_Ji_PD_10
        ADDS     R4,R4,#+2
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,R4
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_11:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_5:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??Duo_Ji_PD_11
        SUBS     R4,R4,#+1
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,R4
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_12:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_8:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??Duo_Ji_PD_12
        SUBS     R4,R4,#+2
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,R4
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+2
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_13:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_4:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??Duo_Ji_PD_13
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BNE.N    ??Duo_Ji_PD_14
        MOVS     R0,#+3
        BL       LCD_CLS2
        LDR.W    R2,??DataTable35
        MOVS     R1,#+3
        MOVS     R0,#+0
        BL       LCD_P6x8Str
        LDR.W    R0,??DataTable30
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        LDR.W    R0,??DataTable30_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        BL       Mid_Wu
??Duo_Ji_PD_14:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+2
        BNE.N    ??Duo_Ji_PD_15
        MOVS     R0,#+3
        BL       LCD_CLS2
        LDR.W    R2,??DataTable36
        MOVS     R1,#+3
        MOVS     R0,#+0
        BL       LCD_P6x8Str
        LDR.W    R0,??DataTable29
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        LDR.W    R0,??DataTable29_1
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        BL       High_Wu
??Duo_Ji_PD_15:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+3
        BNE.N    ??Duo_Ji_PD_16
        MOVS     R0,#+3
        BL       LCD_CLS2
        LDR.W    R2,??DataTable36_1
        MOVS     R1,#+3
        MOVS     R0,#+0
        BL       LCD_P6x8Str
        LDR.W    R0,??DataTable26_3
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+72
        BL       LCD_P6x8Str_3
        LDR.W    R0,??DataTable26_4
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+3
        MOVS     R0,#+92
        BL       LCD_P6x8Str_3
        BL       High_You
??Duo_Ji_PD_16:
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_17:
        LDR.W    R0,??DataTable37
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Duo_Ji_PD_9:
        LDR.W    R0,??DataTable37
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BEQ.N    ??Duo_Ji_PD_17
        MOVS     R5,#+1
        B.N      ??Duo_Ji_PD_0
??Duo_Ji_PD_3:
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21:
        DC32     KeyCode

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_1:
        DC32     0x40049004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_2:
        DC32     0x40049008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_3:
        DC32     0x4004900c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable21_4:
        DC32     0x40049010

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// __interwork __softfp void Car_Speed(void)
Car_Speed:
        PUSH     {R4,LR}
        MOVS     R4,#+0
        B.N      ??Car_Speed_0
??Car_Speed_1:
        LDR.N    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Car_Speed_2:
        LDR.N    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Car_Speed_1
        LDR.W    R0,??DataTable38
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable38
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable38
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+0
        MOVS     R0,#+36
        BL       LCD_P6x8Str_3
??Car_Speed_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??Car_Speed_3
        BL       CH451_GetKeyValue
        LDR.N    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??Car_Speed_2
        CMP      R0,#+2
        BEQ.N    ??Car_Speed_4
        CMP      R0,#+5
        BEQ.N    ??Car_Speed_5
        B.N      ??Car_Speed_0
??Car_Speed_6:
        LDR.N    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Car_Speed_5:
        LDR.N    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??Car_Speed_6
        LDR.W    R0,??DataTable38
        LDRB     R0,[R0, #+0]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable38
        STRB     R0,[R1, #+0]
        LDR.W    R0,??DataTable38
        LDRB     R2,[R0, #+0]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+0
        MOVS     R0,#+36
        BL       LCD_P6x8Str_3
        B.N      ??Car_Speed_0
??Car_Speed_7:
        LDR.N    R0,??DataTable22
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
        BL       CH451_GetKeyValue
??Car_Speed_4:
        LDR.N    R0,??DataTable22
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??Car_Speed_7
        ADR.N    R2,??DataTable22_1  ;; 0x4F, 0x4B, 0x00, 0x00
        MOVS     R1,#+0
        MOVS     R0,#+60
        BL       LCD_P6x8Str
        MOVS     R4,#+1
        B.N      ??Car_Speed_0
??Car_Speed_3:
        POP      {R4,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable22:
        DC32     KeyValue

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable22_1:
        DC8      0x4F, 0x4B, 0x00, 0x00
//  199 /***********************系统、总线频率设置**********************/
//  200 
//  201 
//  202 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  203 void pllinit180M(void)
//  204 {
//  205 	uint32_t temp_reg;
//  206         //使能IO端口时钟    
//  207     SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
//  208                               | SIM_SCGC5_PORTB_MASK
//  209                               | SIM_SCGC5_PORTC_MASK
//  210                               | SIM_SCGC5_PORTD_MASK
//  211                               | SIM_SCGC5_PORTE_MASK );
pllinit180M:
        LDR.W    R0,??DataTable26_1  ;; 0x40048038
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x3E00
        LDR.W    R1,??DataTable26_1  ;; 0x40048038
        STR      R0,[R1, #+0]
//  212     //这里处在默认的FEI模式
//  213     //首先移动到FBE模式
//  214     MCG_C2 = 0;  
        LDR.N    R0,??DataTable24_7  ;; 0x40064001
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
//  215     //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
//  216     //初始化晶振后释放锁定状态的振荡器和GPIO
//  217     SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
        LDR.W    R0,??DataTable41  ;; 0x40048034
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x10000000
        LDR.W    R1,??DataTable41  ;; 0x40048034
        STR      R0,[R1, #+0]
//  218     LLWU_CS |= LLWU_CS_ACKISO_MASK;
        LDR.W    R0,??DataTable41_1  ;; 0x4007c008
        LDRB     R0,[R0, #+0]
        ORRS     R0,R0,#0x80
        LDR.W    R1,??DataTable41_1  ;; 0x4007c008
        STRB     R0,[R1, #+0]
//  219     
//  220     //选择外部晶振，参考分频器，清IREFS来启动外部晶振
//  221     //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
//  222     MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
        LDR.N    R0,??DataTable24_6  ;; 0x40064000
        MOVS     R1,#+152
        STRB     R1,[R0, #+0]
//  223     
//  224     //等待晶振稳定	    
//  225     //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
//  226     while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
??pllinit180M_0:
        LDR.W    R0,??DataTable46  ;; 0x40064006
        LDRB     R0,[R0, #+0]
        LSLS     R0,R0,#+27
        BMI.N    ??pllinit180M_0
//  227     while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
??pllinit180M_1:
        LDR.W    R0,??DataTable46  ;; 0x40064006
        LDRB     R0,[R0, #+0]
        UBFX     R0,R0,#+2,#+2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+2
        BNE.N    ??pllinit180M_1
//  228     //进入FBE模式,
//  229     MCG_C5 = MCG_C5_PRDIV(0x0e);//分频在2~4MHz之间，分频后频率=晶振频率/(PRDIV+1) 3.3MHz                
        LDR.W    R0,??DataTable41_2  ;; 0x40064004
        MOVS     R1,#+14
        STRB     R1,[R0, #+0]
//  230     MCG_C6 = 0x0;//确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
        LDR.W    R0,??DataTable41_3  ;; 0x40064005
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
//  231     temp_reg = FMC_PFAPR;//保存FMC_PFAPR当前的值
        LDR.W    R0,??DataTable41_4  ;; 0x4001f000
        LDR      R0,[R0, #+0]
//  232     FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
//  233                      | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
//  234                      | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK; //通过M&PFD置位M0PFD来禁止预取功能   
        LDR.W    R1,??DataTable41_4  ;; 0x4001f000
        LDR      R1,[R1, #+0]
        ORRS     R1,R1,#0xFF0000
        LDR.W    R2,??DataTable41_4  ;; 0x4001f000
        STR      R1,[R2, #+0]
//  235     ///设置系统分频器
//  236     //MCG=PLL, core = MCG, bus = MCG/3, FlexBus = MCG/3, Flash clock= MCG/8
//  237     SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(2) 
//  238                  | SIM_CLKDIV1_OUTDIV3(2) | SIM_CLKDIV1_OUTDIV4(7);       
        LDR.W    R1,??DataTable41_5  ;; 0x40048044
        LDR.W    R2,??DataTable41_6  ;; 0x2270000
        STR      R2,[R1, #+0]
//  239     FMC_PFAPR = temp_reg;//从新存FMC_PFAPR的原始值 
        LDR.W    R1,??DataTable41_4  ;; 0x4001f000
        STR      R0,[R1, #+0]
//  240     //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
//  241     MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(30);  //VDIV = 31 (x55)
        LDR.W    R0,??DataTable41_3  ;; 0x40064005
        MOVS     R1,#+94
        STRB     R1,[R0, #+0]
//  242                                                   //VDIV = 26 (x50)
//  243     while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
??pllinit180M_2:
        LDR.W    R0,??DataTable46  ;; 0x40064006
        LDRB     R0,[R0, #+0]
        LSLS     R0,R0,#+26
        BPL.N    ??pllinit180M_2
//  244     while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
??pllinit180M_3:
        LDR.W    R0,??DataTable46  ;; 0x40064006
        LDRB     R0,[R0, #+0]
        LSLS     R0,R0,#+25
        BPL.N    ??pllinit180M_3
//  245     //进入PBE模式    
//  246     //通过清零CLKS位来进入PEE模式
//  247     // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
//  248     MCG_C1 &= ~MCG_C1_CLKS_MASK;
        LDR.N    R0,??DataTable24_6  ;; 0x40064000
        LDRB     R0,[R0, #+0]
        ANDS     R0,R0,#0x3F
        LDR.N    R1,??DataTable24_6  ;; 0x40064000
        STRB     R0,[R1, #+0]
//  249     //等待时钟状态位更新
//  250     while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
??pllinit180M_4:
        LDR.W    R0,??DataTable46  ;; 0x40064006
        LDRB     R0,[R0, #+0]
        UBFX     R0,R0,#+2,#+2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+3
        BNE.N    ??pllinit180M_4
//  251 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable23:
        DC32     receive_flag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable23_1:
        DC32     `data`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable23_2:
        DC32     bianma
//  252 /***********************系统、总线频率设置END**********************/
//  253 
//  254 /************************舵机控制输出PWM模块***********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  255 void hw_FTM1_init(void)
//  256     {      	
//  257       //SIM_SOPT4|=SIM_SOPT4_FTM1FLT0_MASK;        
//  258       /* Turn on all port clocks */
//  259       SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
hw_FTM1_init:
        LDR.N    R0,??DataTable26_1  ;; 0x40048038
        LDR      R0,[R0, #+0]
        MOV      R1,#+512
        ORRS     R0,R1,R0
        LDR.N    R1,??DataTable26_1  ;; 0x40048038
        STR      R0,[R1, #+0]
//  260         
//  261       /* Enable the function on PTA8 */
//  262       PORTA_PCR8 = PORT_PCR_MUX(0x3)| PORT_PCR_DSE_MASK;; // FTM is alt3 function for this pin         
        LDR.W    R0,??DataTable43  ;; 0x40049020
        MOV      R1,#+832
        STR      R1,[R0, #+0]
//  263     
//  264       SIM_SCGC6|=SIM_SCGC6_FTM1_MASK;         //使能FTM1时钟      
        LDR.N    R0,??DataTable25_2  ;; 0x4004803c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x2000000
        LDR.N    R1,??DataTable25_2  ;; 0x4004803c
        STR      R0,[R1, #+0]
//  265       
//  266       //change MSnB = 1  
//  267       FTM1_C0SC |= FTM_CnSC_ELSB_MASK;
        LDR.W    R0,??DataTable43_1  ;; 0x4003900c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x8
        LDR.W    R1,??DataTable43_1  ;; 0x4003900c
        STR      R0,[R1, #+0]
//  268       FTM1_C0SC &= ~FTM_CnSC_ELSA_MASK;
        LDR.W    R0,??DataTable43_1  ;; 0x4003900c
        LDR      R0,[R0, #+0]
        BICS     R0,R0,#0x4
        LDR.W    R1,??DataTable43_1  ;; 0x4003900c
        STR      R0,[R1, #+0]
//  269       FTM1_C0SC |= FTM_CnSC_MSB_MASK;     
        LDR.W    R0,??DataTable43_1  ;; 0x4003900c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x20
        LDR.W    R1,??DataTable43_1  ;; 0x4003900c
        STR      R0,[R1, #+0]
//  270       
//  271       //FTM1_SC = FTM_SC_PS(0) | FTM_SC_CLKS(1);
//  272       //FTM1_SC=0X0F;     
//  273       FTM1_SC = 0xB; //not enable the interrupt mask向上计数模式
        LDR.W    R0,??DataTable43_2  ;; 0x40039000
        MOVS     R1,#+11
        STR      R1,[R0, #+0]
//  274       //FTM1_SC=0X1F;       //BIT5  0 FTM counter operates in up counting mode.
//  275                             //1 FTM counter operates in up-down counting mode.      
//  276       //BIT43 FTM1_SC|=FTM1_SC_CLKS_MASK;
//  277                             //00 No clock selected (This in effect disables the FTM counter.)
//  278                             //01 System clock
//  279                             //10 Fixed frequency clock
//  280                             //11 External clock
//  281       //BIT210 FTM1_SC|=FTM1_SC_PS_MASK; 
//  282                             //100M          MOD=2000;     MOD=4000;   MOD=1000; 
//  283                             //000 Divide by 1---12KHZ     6K          24k
//  284                             //001 Divide by 2--- 6KHZ
//  285                             //010 Divide by 4--- 3K
//  286                             //011 Divide by 8--- 1.5K
//  287                             //100 Divide by 16---750
//  288                             //101 Divide by 32---375
//  289                             //110 Divide by 64---187.5HZ
//  290                             //111 Divide by 128--93.75hz             
//  291       
//  292       FTM1_MODE |= FTM_MODE_WPDIS_MASK;      
        LDR.W    R0,??DataTable43_3  ;; 0x40039054
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x4
        LDR.W    R1,??DataTable43_3  ;; 0x40039054
        STR      R0,[R1, #+0]
//  293        //BIT1   Initialize the Channels Output
//  294       //FTMEN is bit 0, need to set to zero so DECAPEN can be set to 0
//  295       FTM1_MODE &= ~1;
        LDR.W    R0,??DataTable43_3  ;; 0x40039054
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+1
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable43_3  ;; 0x40039054
        STR      R0,[R1, #+0]
//  296        //BIT0   FTM Enable
//  297        //0 Only the TPM-compatible registers (first set of registers) can be used without any restriction. Do not use the FTM-specific registers.
//  298        //1 All registers including the FTM-specific registers (second set of registers) are available for use with no restrictions.
//  299       
//  300       FTM1_OUTMASK=0xFE;   //0 Channel output is not masked. It continues to operate normally.
        LDR.W    R0,??DataTable43_4  ;; 0x40039060
        MOVS     R1,#+254
        STR      R1,[R0, #+0]
//  301                            //1 Channel output is masked. It is forced to its inactive state.
//  302       
//  303       FTM1_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
        LDR.W    R0,??DataTable43_5  ;; 0x40039064
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  304       FTM1_OUTINIT=0;
        LDR.W    R0,??DataTable43_6  ;; 0x4003905c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  305       FTM1_EXTTRIG=0;      //FTM External Trigger (FTMx_EXTTRIG)
        LDR.W    R0,??DataTable43_7  ;; 0x4003906c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  306       FTM1_POL=0;          //Channels Polarity (FTMx_POL)
        LDR.W    R0,??DataTable43_8  ;; 0x40039070
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  307                            //0 The channel polarity is active high.
//  308                            //1 The channel polarity is active low.     
//  309       //Set Edge Aligned PWM
//  310       FTM1_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
        LDR.W    R0,??DataTable43_9  ;; 0x40039080
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+1
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable43_9  ;; 0x40039080
        STR      R0,[R1, #+0]
//  311       //QUADEN is Bit 1, Set Quadrature Decoder Mode (QUADEN) Enable to 0,   (disabled)
//  312       //FTM0_SC = 0x16; //Center Aligned PWM Select = 0, sets FTM Counter to operate in up counting mode,
//  313       //it is field 5 of FTMx_SC (status control) - also setting the pre-scale bits here
//  314       
//  315       FTM1_INVCTRL=0;     //反转控制
        LDR.W    R0,??DataTable43_10  ;; 0x40039090
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  316       FTM1_SWOCTRL=0;     //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
        LDR.W    R0,??DataTable43_11  ;; 0x40039094
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  317       FTM1_PWMLOAD=0;     //FTM PWM Load
        LDR.W    R0,??DataTable43_12  ;; 0x40039098
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  318                           //BIT9: 0 Loading updated values is disabled.
//  319                           //1 Loading updated values is enabled.
//  320       FTM1_CNTIN=0;        //Counter Initial Value      
        LDR.W    R0,??DataTable43_13  ;; 0x4003904c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  321       FTM1_MOD=30000;       //Modulo value,The EPWM period is determined by (MOD - CNTIN + 0x0001) 
        LDR.W    R0,??DataTable43_14  ;; 0x40039008
        MOVW     R1,#+30000
        STR      R1,[R0, #+0]
//  322                            //采用龙丘时钟初始化函数，可以得到4分频的频率，系统60M频率时，PWM频率是15M,以此类推
//  323                            //PMW频率=X系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD
//  324       FTM1_C0V=Servo_Middle;        //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).
        LDR.W    R0,??DataTable43_15  ;; 0x40039010
        LDR.W    R1,??DataTable43_16
        LDRSH    R1,[R1, #+0]
        STR      R1,[R0, #+0]
//  325       FTM1_CNT=0;          //只有低16位可用
        LDR.W    R0,??DataTable48  ;; 0x40039004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  326 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24:
        DC32     bitdata

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_1:
        DC32     startflag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_2:
        DC32     bitnum

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_3:
        DC32     LPTMR_INTERRUPT

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_4:
        DC32     0x40040004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_5:
        DC32     0x40040000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_6:
        DC32     0x40064000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable24_7:
        DC32     0x40064001
//  327 /************************舵机控制输出PWM模块END***********************/
//  328 
//  329 /*********************电机正反转  C1口C3口输出PWM波*************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  330 void hw_FTM0_init(void)
//  331     {      	
//  332       
//  333       SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK | SIM_SCGC5_PORTD_MASK;
hw_FTM0_init:
        LDR.N    R0,??DataTable26_1  ;; 0x40048038
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1800
        LDR.N    R1,??DataTable26_1  ;; 0x40048038
        STR      R0,[R1, #+0]
//  334         
//  335       
//  336       PORTC_PCR1 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK; // FTM is alt4 function for this pin         
        LDR.W    R0,??DataTable44  ;; 0x4004b004
        MOV      R1,#+1088
        STR      R1,[R0, #+0]
//  337       PORTC_PCR4 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;
        LDR.W    R0,??DataTable44_1  ;; 0x4004b010
        MOV      R1,#+1088
        STR      R1,[R0, #+0]
//  338       PORTC_PCR2 = PORT_PCR_MUX(0x4)| PORT_PCR_DSE_MASK;
        LDR.W    R0,??DataTable44_2  ;; 0x4004b008
        MOV      R1,#+1088
        STR      R1,[R0, #+0]
//  339       
//  340       SIM_SCGC6|=SIM_SCGC6_FTM0_MASK;         //使能FTM0时钟      
        LDR.N    R0,??DataTable25_2  ;; 0x4004803c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.N    R1,??DataTable25_2  ;; 0x4004803c
        STR      R0,[R1, #+0]
//  341       
//  342       //C0口 
//  343       FTM0_C0SC |= FTM_CnSC_ELSB_MASK;
        LDR.W    R0,??DataTable44_3  ;; 0x4003800c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x8
        LDR.W    R1,??DataTable44_3  ;; 0x4003800c
        STR      R0,[R1, #+0]
//  344       FTM0_C0SC &= ~FTM_CnSC_ELSA_MASK;
        LDR.W    R0,??DataTable44_3  ;; 0x4003800c
        LDR      R0,[R0, #+0]
        BICS     R0,R0,#0x4
        LDR.W    R1,??DataTable44_3  ;; 0x4003800c
        STR      R0,[R1, #+0]
//  345       FTM0_C0SC |= FTM_CnSC_MSB_MASK;    
        LDR.W    R0,??DataTable44_3  ;; 0x4003800c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x20
        LDR.W    R1,??DataTable44_3  ;; 0x4003800c
        STR      R0,[R1, #+0]
//  346       //C3口
//  347       FTM0_C3SC |= FTM_CnSC_ELSB_MASK;
        LDR.W    R0,??DataTable44_4  ;; 0x40038024
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x8
        LDR.W    R1,??DataTable44_4  ;; 0x40038024
        STR      R0,[R1, #+0]
//  348       FTM0_C3SC &= ~FTM_CnSC_ELSA_MASK;
        LDR.W    R0,??DataTable44_4  ;; 0x40038024
        LDR      R0,[R0, #+0]
        BICS     R0,R0,#0x4
        LDR.W    R1,??DataTable44_4  ;; 0x40038024
        STR      R0,[R1, #+0]
//  349       FTM0_C3SC |= FTM_CnSC_MSB_MASK;
        LDR.W    R0,??DataTable44_4  ;; 0x40038024
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x20
        LDR.W    R1,??DataTable44_4  ;; 0x40038024
        STR      R0,[R1, #+0]
//  350       //C1口 电机控制长期高电压
//  351       FTM0_C1SC |= FTM_CnSC_ELSB_MASK;
        LDR.W    R0,??DataTable44_5  ;; 0x40038014
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x8
        LDR.W    R1,??DataTable44_5  ;; 0x40038014
        STR      R0,[R1, #+0]
//  352       FTM0_C1SC &= ~FTM_CnSC_ELSA_MASK;
        LDR.W    R0,??DataTable44_5  ;; 0x40038014
        LDR      R0,[R0, #+0]
        BICS     R0,R0,#0x4
        LDR.W    R1,??DataTable44_5  ;; 0x40038014
        STR      R0,[R1, #+0]
//  353       FTM0_C1SC |= FTM_CnSC_MSB_MASK;    
        LDR.W    R0,??DataTable44_5  ;; 0x40038014
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x20
        LDR.W    R1,??DataTable44_5  ;; 0x40038014
        STR      R0,[R1, #+0]
//  354       
//  355       
//  356       FTM0_SC = 0xC; //not enable the interrupt mask向上计数模式
        LDR.W    R0,??DataTable44_6  ;; 0x40038000
        MOVS     R1,#+12
        STR      R1,[R0, #+0]
//  357       FTM0_MODE |= FTM_MODE_WPDIS_MASK;      
        LDR.W    R0,??DataTable44_7  ;; 0x40038054
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x4
        LDR.W    R1,??DataTable44_7  ;; 0x40038054
        STR      R0,[R1, #+0]
//  358        //BIT1   Initialize the Channels Output
//  359       //FTMEN is bit 0, need to set to zero so DECAPEN can be set to 0
//  360       FTM0_MODE &= ~1;
        LDR.W    R0,??DataTable44_7  ;; 0x40038054
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+1
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable44_7  ;; 0x40038054
        STR      R0,[R1, #+0]
//  361        //BIT0   FTM Enable
//  362        //0 Only the TPM-compatible registers (first set of registers) can be used without any restriction. Do not use the FTM-specific registers.
//  363        //1 All registers including the FTM-specific registers (second set of registers) are available for use with no restrictions.
//  364       
//  365       FTM0_OUTMASK=0xf4;   //0 Channel output is not masked. It continues to operate normally.
        LDR.W    R0,??DataTable44_8  ;; 0x40038060
        MOVS     R1,#+244
        STR      R1,[R0, #+0]
//  366                            //1 Channel output is masked. It is forced to its inactive state.
//  367       
//  368       FTM0_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
        LDR.W    R0,??DataTable44_9  ;; 0x40038064
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  369       FTM0_OUTINIT=0;
        LDR.W    R0,??DataTable44_10  ;; 0x4003805c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  370       FTM0_EXTTRIG=0;      //FTM External Trigger (FTMx_EXTTRIG)
        LDR.W    R0,??DataTable44_11  ;; 0x4003806c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  371       FTM0_POL=0;          //Channels Polarity (FTMx_POL)
        LDR.W    R0,??DataTable44_12  ;; 0x40038070
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  372                            //0 The channel polarity is active high.
//  373                            //1 The channel polarity is active low.     
//  374       //Set Edge Aligned PWM
//  375       FTM0_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
        LDR.W    R0,??DataTable45  ;; 0x40038080
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+1
        LSLS     R0,R0,#+1
        LDR.W    R1,??DataTable45  ;; 0x40038080
        STR      R0,[R1, #+0]
//  376       //QUADEN is Bit 1, Set Quadrature Decoder Mode (QUADEN) Enable to 0,   (disabled)
//  377       //FTM0_SC = 0x16; //Center Aligned PWM Select = 0, sets FTM Counter to operate in up counting mode,
//  378       //it is field 5 of FTMx_SC (status control) - also setting the pre-scale bits here
//  379       
//  380       FTM0_INVCTRL=0;     //反转控制
        LDR.W    R0,??DataTable45_1  ;; 0x40038090
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  381       FTM0_SWOCTRL=0;     //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
        LDR.W    R0,??DataTable45_2  ;; 0x40038094
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  382       FTM0_PWMLOAD=0;     //FTM PWM Load
        LDR.W    R0,??DataTable45_3  ;; 0x40038098
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  383                           //BIT9: 0 Loading updated values is disabled.
//  384                           //1 Loading updated values is enabled.
//  385       FTM0_CNTIN=0;        //Counter Initial Value      
        LDR.W    R0,??DataTable45_4  ;; 0x4003804c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  386       FTM0_MOD=375;       //375为10K 
        LDR.W    R0,??DataTable45_5  ;; 0x40038008
        MOVW     R1,#+375
        STR      R1,[R0, #+0]
//  387                            //采用龙丘时钟初始化函数，可以得到4分频的频率，系统60M频率时，PWM频率是15M,以此类推
//  388                            //PMW频率=X系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD
//  389       FTM0_C0V=0;        //反转
        LDR.W    R0,??DataTable45_6  ;; 0x40038010
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  390       FTM0_C1V=375;        //持续高电平
        LDR.W    R0,??DataTable45_7  ;; 0x40038018
        MOVW     R1,#+375
        STR      R1,[R0, #+0]
//  391       FTM0_C3V=0;           //正转
        LDR.W    R0,??DataTable45_8  ;; 0x40038028
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  392       
//  393       FTM0_CNT=0;          //只有低16位可用
        LDR.W    R0,??DataTable50  ;; 0x40038004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  394 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25:
        DC32     deal_flag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_1:
        DC32     irkey

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_2:
        DC32     0x4004803c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_3:
        DC32     0x4003d010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable25_4:
        DC32     0x40047000
//  395 /*********************电机正反转  C1口C3口输出PWM波END*************/
//  396 
//  397 /****************FTM正交分解，用于测脉冲数的   A10口*************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  398 void FTM2_QUAD_Init(void)  
//  399 {  
//  400   PORTA_PCR10    =  PORT_PCR_MUX(6);             // 设置引脚A10引脚为FTM2_PHA功能  
FTM2_QUAD_Init:
        LDR.W    R0,??DataTable46_1  ;; 0x40049028
        MOV      R1,#+1536
        STR      R1,[R0, #+0]
//  401   PORTA_PCR11    =  PORT_PCR_MUX(6);             // 设置引脚A11引脚为FTM2_PHB功能  
        LDR.W    R0,??DataTable46_2  ;; 0x4004902c
        MOV      R1,#+1536
        STR      R1,[R0, #+0]
//  402   PORT_PCR_REG(PORTA_BASE_PTR, 10) |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ; //开弱上拉
        LDR.W    R0,??DataTable46_1  ;; 0x40049028
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x3
        LDR.W    R1,??DataTable46_1  ;; 0x40049028
        STR      R0,[R1, #+0]
//  403   PORT_PCR_REG(PORTA_BASE_PTR, 11) |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK ; //开弱上拉
        LDR.W    R0,??DataTable46_2  ;; 0x4004902c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x3
        LDR.W    R1,??DataTable46_2  ;; 0x4004902c
        STR      R0,[R1, #+0]
//  404   SIM_SCGC3     |=  SIM_SCGC3_FTM2_MASK;                // 使能FTM2时钟  
        LDR.W    R0,??DataTable46_3  ;; 0x40048030
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable46_3  ;; 0x40048030
        STR      R0,[R1, #+0]
//  405   FTM2_MODE     |=  FTM_MODE_WPDIS_MASK;                // 写保护禁止  
        LDR.W    R0,??DataTable46_4  ;; 0x400b8054
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x4
        LDR.W    R1,??DataTable46_4  ;; 0x400b8054
        STR      R0,[R1, #+0]
//  406   FTM2_QDCTRL   |=  FTM_QDCTRL_QUADMODE_MASK;          // AB相同时确定方向和计数值  
        LDR.W    R0,??DataTable46_5  ;; 0x400b8080
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x8
        LDR.W    R1,??DataTable46_5  ;; 0x400b8080
        STR      R0,[R1, #+0]
//  407   FTM2_CNTIN     =  0;                                 // FTM0计数器初始值为0  
        LDR.W    R0,??DataTable47  ;; 0x400b804c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  408   FTM2_MOD       =  65535;                                 // 结束值  
        LDR.W    R0,??DataTable47_1  ;; 0x400b8008
        MOVW     R1,#+65535
        STR      R1,[R0, #+0]
//  409   FTM2_QDCTRL   |=  FTM_QDCTRL_QUADEN_MASK;             // 启用FTM2正交解码模式  
        LDR.W    R0,??DataTable46_5  ;; 0x400b8080
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable46_5  ;; 0x400b8080
        STR      R0,[R1, #+0]
//  410   FTM2_MODE     |=  FTM_MODE_FTMEN_MASK;                // FTM2EN=1    
        LDR.W    R0,??DataTable46_4  ;; 0x400b8054
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable46_4  ;; 0x400b8054
        STR      R0,[R1, #+0]
//  411   FTM2_CNT       =  0;  
        LDR.W    R0,??DataTable51  ;; 0x400b8004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  412 }  
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable26:
        DC32     timer

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable26_1:
        DC32     0x40048038

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable26_2:
        DC32     0x4004904c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable26_3:
        DC32     P_High

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable26_4:
        DC32     D_High
//  413 /****************FTM正交分解，用于测脉冲数的   A10口END*************/
//  414 
//  415 
//  416 /**************************IO口初始化***********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  417 void IO_Init()
//  418 {
//  419 	/* 打开各个端口的时钟源 */
//  420 	SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK | SIM_SCGC5_PORTB_MASK | 
//  421 	SIM_SCGC5_PORTC_MASK | SIM_SCGC5_PORTD_MASK | SIM_SCGC5_PORTE_MASK;
IO_Init:
        LDR.W    R0,??DataTable47_2  ;; 0x40048038
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x3E00
        LDR.W    R1,??DataTable47_2  ;; 0x40048038
        STR      R0,[R1, #+0]
//  422 	PORTA_PCR14=PORT_PCR_MUX(1);//A14引脚设置为GPIO模式
        LDR.W    R0,??DataTable47_3  ;; 0x40049038
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  423 	PORTA_PCR15=PORT_PCR_MUX(1);//A15引脚设置为GPIO模式
        LDR.W    R0,??DataTable47_4  ;; 0x4004903c
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  424 	PORTA_PCR16=PORT_PCR_MUX(1);//A16引脚设置为GPIO模式
        LDR.W    R0,??DataTable48_1  ;; 0x40049040
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  425 	PORTA_PCR17=PORT_PCR_MUX(1);//A17引脚设置为GPIO模式
        LDR.W    R0,??DataTable48_2  ;; 0x40049044
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  426 	
//  427 	//B0~B7设为GPIO输入模式，连接ov7260的8位灰度输入
//  428 	PORTB_PCR0=PORT_PCR_MUX(1);//B0引脚设置为GPIO模式
        LDR.W    R0,??DataTable48_3  ;; 0x4004a000
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  429 	PORTB_PCR1=PORT_PCR_MUX(1);//B1引脚设置为GPIO模式
        LDR.W    R0,??DataTable48_4  ;; 0x4004a004
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  430 	PORTB_PCR2=PORT_PCR_MUX(1);//B2引脚设置为GPIO模式
        LDR.W    R0,??DataTable48_5  ;; 0x4004a008
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  431 	PORTB_PCR3=PORT_PCR_MUX(1);//B3引脚设置为GPIO模式
        LDR.W    R0,??DataTable48_6  ;; 0x4004a00c
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  432 	PORTB_PCR4=PORT_PCR_MUX(1);//B4引脚设置为GPIO模式
        LDR.W    R0,??DataTable48_7  ;; 0x4004a010
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  433 	PORTB_PCR5=PORT_PCR_MUX(1);//B5引脚设置为GPIO模式
        LDR.W    R0,??DataTable48_8  ;; 0x4004a014
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  434 	PORTB_PCR6=PORT_PCR_MUX(1);//B6引脚设置为GPIO模式
        LDR.W    R0,??DataTable48_9  ;; 0x4004a018
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  435 	PORTB_PCR7=PORT_PCR_MUX(1);//B7引脚设置为GPIO模式
        LDR.W    R0,??DataTable48_10  ;; 0x4004a01c
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  436 	GPIOB_PDDR&=0XFFFFFF00;//B0~B7设置为输入，数字摄像头8位灰度输入
        LDR.W    R0,??DataTable49  ;; 0x400ff054
        LDR      R0,[R0, #+0]
        LSRS     R0,R0,#+8
        LSLS     R0,R0,#+8
        LDR.W    R1,??DataTable49  ;; 0x400ff054
        STR      R0,[R1, #+0]
//  437 	
//  438 	PORTA_PCR24=PORT_PCR_MUX(1)|PORT_PCR_IRQC(10);//A24引脚设置为GPIO模式，下降沿中断,场中断
        LDR.W    R0,??DataTable49_1  ;; 0x40049060
        LDR.W    R1,??DataTable49_2  ;; 0xa0100
        STR      R1,[R0, #+0]
//  439 	
//  440 	PORTB_PCR10=PORT_PCR_MUX(1)|PORT_PCR_IRQC(9);//B10引脚设置为GPIO模式，上升沿中断,行中断
        LDR.W    R0,??DataTable49_3  ;; 0x4004a028
        LDR.W    R1,??DataTable49_4  ;; 0x90100
        STR      R1,[R0, #+0]
//  441 	
//  442 	PORTB_PCR11=PORT_PCR_MUX(1)|PORT_PCR_IRQC(1);//B11引脚设置为GPIO模式，上升沿触发DMA请求
        LDR.W    R0,??DataTable49_5  ;; 0x4004a02c
        LDR.W    R1,??DataTable49_6  ;; 0x10100
        STR      R1,[R0, #+0]
//  443 	
//  444         PORTC_PCR9=PORT_PCR_MUX(1)|PORT_PCR_IRQC(10);//C9引脚设置为GPIO模式，下降沿中断,红外遥控停车中断
        LDR.W    R0,??DataTable49_7  ;; 0x4004b024
        LDR.W    R1,??DataTable49_2  ;; 0xa0100
        STR      R1,[R0, #+0]
//  445         
//  446         
//  447         
//  448 	GPIOA_PDDR=GPIO_PDDR_PDD(GPIO_PIN(14)|GPIO_PIN(16)|GPIO_PIN(17)|GPIO_PIN(26)|GPIO_PIN(28)); //A14为输出模式  P4灯闪烁证明进入PIT中断给脉冲计时
        LDR.W    R0,??DataTable49_8  ;; 0x400ff014
        LDR.W    R1,??DataTable49_9  ;; 0x14034000
        STR      R1,[R0, #+0]
//  449         
//  450         PORTA_PCR28=PORT_PCR_MUX(1);//A17引脚设置为GPIO模式
        LDR.W    R0,??DataTable49_10  ;; 0x40049070
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  451         PORTA_PCR26=PORT_PCR_MUX(1);//A17引脚设置为GPIO模式
        LDR.W    R0,??DataTable52  ;; 0x40049068
        MOV      R1,#+256
        STR      R1,[R0, #+0]
//  452 	//PORTC_PCR8=PORT_PCR_MUX(1);//C8引脚设置为GPIO模式，液晶命令/数据选择引脚
//  453 	//PORTC_PCR10=PORT_PCR_MUX(1);//C10引脚设置为GPIO模式，液晶复位引脚
//  454 	//GPIOC_PDDR|=0X00000500;//C8,C10设置为输出
//  455 	//GPIOA_PDDR|=0X0003E000;//A14~A17设置为输出
//  456 	//GPIOA_PCOR|=0X0003E000;//初始低电平输出
//  457 	//PORTD_PCR2 = PORT_PCR_MUX(1)|PORT_PCR_IRQC(0x9);//IRQ|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
//  458 	//PORTD_PCR2 = PORT_PCR_MUX(1)|PORT_PCR_IRQC(0x1);//DMA|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
//  459 	//D2口GPIO功能，上升沿中断，PE启用拉电阻，PS上拉电阻
//  460 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable27:
        DC32     0x40040008
//  461 /**************************IO口初始化END***********************/
//  462 
//  463 
//  464 /********************中心线发送**********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  465 void SCI_center(void)
//  466 {
SCI_center:
        PUSH     {R4,LR}
//  467   uint8 a=0;
        MOVS     R4,#+0
//  468   uart_send1(UART0,0xff);
        MOVS     R1,#+255
        LDR.W    R0,??DataTable50_1  ;; 0x4006a000
        BL       uart_send1
//  469   uart_send1(UART0,0xff);
        MOVS     R1,#+255
        LDR.W    R0,??DataTable50_1  ;; 0x4006a000
        BL       uart_send1
//  470   for(a=0;a<H;a++)
        MOVS     R0,#+0
        MOVS     R4,R0
        B.N      ??SCI_center_0
//  471   {
//  472     uart_send1(UART0,center[a]);
??SCI_center_1:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.W    R0,??DataTable50_2
        LDRB     R1,[R4, R0]
        LDR.W    R0,??DataTable50_1  ;; 0x4006a000
        BL       uart_send1
//  473   }
        ADDS     R4,R4,#+1
??SCI_center_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+55
        BCC.N    ??SCI_center_1
//  474 }
        POP      {R4,PC}          ;; return
//  475 /********************中心线发送**********************/
//  476 /******************与上位机相连，用于看图像的*****************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  477 void SCI(void)
//  478 {
SCI:
        PUSH     {R3-R5,LR}
//  479   volatile uint8 *uc_FramePoint;
//  480   uint8 a=0;
        MOVS     R4,#+0
//  481   uint16 b=0;   
        MOVS     R5,#+0
//  482   //uart_send1(UART0,0x00);
//  483   //uart_send1(UART0,0xFF);
//  484   uart_send1(UART0,0x01);
        MOVS     R1,#+1
        LDR.W    R0,??DataTable50_1  ;; 0x4006a000
        BL       uart_send1
//  485   //uart_send1(UART0,0x00);
//  486   for(a=0;a<H;a++)
        MOVS     R0,#+0
        MOVS     R4,R0
        B.N      ??SCI_0
//  487   {
//  488     for(b=0;b<V;b++)
//  489     {
//  490       uc_FramePoint=video[a]+b;
??SCI_1:
        UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R1,??DataTable50_3
        MLA      R0,R0,R4,R1
        ADDS     R0,R5,R0
//  491       uart_send1(UART0,*uc_FramePoint);
        LDRB     R1,[R0, #+0]
        LDR.W    R0,??DataTable50_1  ;; 0x4006a000
        BL       uart_send1
//  492     }
        ADDS     R5,R5,#+1
??SCI_2:
        UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
        CMP      R5,#+160
        BCC.N    ??SCI_1
        ADDS     R4,R4,#+1
??SCI_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+55
        BCS.N    ??SCI_3
        MOVS     R5,#+0
        B.N      ??SCI_2
//  493   }
//  494   uart_send1(UART0,0x01);
??SCI_3:
        MOVS     R1,#+1
        LDR.W    R0,??DataTable50_1  ;; 0x4006a000
        BL       uart_send1
//  495   PORTA_PCR24|=PORT_PCR_ISF_MASK;//清除中断标志
        LDR.W    R0,??DataTable49_1  ;; 0x40049060
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable49_1  ;; 0x40049060
        STR      R0,[R1, #+0]
//  496 }
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable29:
        DC32     P_Mid

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable29_1:
        DC32     D_Mid
//  497 /******************与上位机相连，用于看图像的END*****************/
//  498 
//  499 /********************串口模块波特率的设置*********************/
//  500 //UART0初始化，使用PTD6为UART0_RX,PTD7为UART0_TX   D6接RXD  D7接TXD
//  501 //波特率：115200

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  502 void UART0_Init(void)
//  503 {
UART0_Init:
        PUSH     {R4}
//  504 	unsigned long uartclk_khz=180000;//时钟180MHz
        LDR.W    R0,??DataTable51_1  ;; 0x2bf20
//  505 	unsigned long baud=115200;//波特率256000
        MOVS     R1,#+115200
//  506 	unsigned short sbr,brfa;
//  507 	PORTD_PCR6|=PORT_PCR_MUX(3);//将D6引脚设置为模式3，即UART0_RX
        LDR.W    R2,??DataTable51_2  ;; 0x4004c018
        LDR      R2,[R2, #+0]
        MOV      R3,#+768
        ORRS     R2,R3,R2
        LDR.W    R3,??DataTable51_2  ;; 0x4004c018
        STR      R2,[R3, #+0]
//  508 	PORTD_PCR7|=PORT_PCR_MUX(3);//将D7引脚设置为模式3，即UART0_TX
        LDR.W    R2,??DataTable51_3  ;; 0x4004c01c
        LDR      R2,[R2, #+0]
        MOV      R3,#+768
        ORRS     R2,R3,R2
        LDR.W    R3,??DataTable51_3  ;; 0x4004c01c
        STR      R2,[R3, #+0]
//  509 	SIM_SCGC4|=SIM_SCGC4_UART0_MASK;//开启UART0时钟
        LDR.W    R2,??DataTable41  ;; 0x40048034
        LDR      R2,[R2, #+0]
        ORRS     R2,R2,#0x400
        LDR.W    R3,??DataTable41  ;; 0x40048034
        STR      R2,[R3, #+0]
//  510 	sbr=(unsigned short)((uartclk_khz*1000)/(baud*16));//计算并设置波特率
        MOV      R2,#+1000
        MUL      R2,R2,R0
        LSLS     R3,R1,#+4
        UDIV     R2,R2,R3
//  511 	
//  512 	UART0_BDH=(unsigned char)((sbr&0x1F00)>>8);
        UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
        ASRS     R3,R2,#+8
        ANDS     R3,R3,#0x1F
        LDR.W    R4,??DataTable50_1  ;; 0x4006a000
        STRB     R3,[R4, #+0]
//  513 	UART0_BDL=(unsigned char)(sbr&0x00FF);
        LDR.W    R3,??DataTable51_4  ;; 0x4006a001
        STRB     R2,[R3, #+0]
//  514 	brfa = (((uartclk_khz*32000)/(baud*16))-(sbr*32));
        MOV      R3,#+32000
        MULS     R0,R3,R0
        LSLS     R1,R1,#+4
        UDIV     R0,R0,R1
        UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
        SUBS     R0,R0,R2, LSL #+5
//  515 	UART0_C4 = (unsigned char)(brfa & 0x001F);
        ANDS     R0,R0,#0x1F
        LDR.W    R1,??DataTable52_1  ;; 0x4006a00a
        STRB     R0,[R1, #+0]
//  516 	UART0_C2|=(UART_C2_TE_MASK|UART_C2_RE_MASK);
        LDR.W    R0,??DataTable52_2  ;; 0x4006a003
        LDRB     R0,[R0, #+0]
        ORRS     R0,R0,#0xC
        LDR.W    R1,??DataTable52_2  ;; 0x4006a003
        STRB     R0,[R1, #+0]
//  517 	UART0_C1=0;	
        LDR.W    R0,??DataTable54  ;; 0x4006a002
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
//  518 }
        POP      {R4}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable30:
        DC32     P_Low

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable30_1:
        DC32     D_Low
//  519 /********************串口模块波特率的设置END*********************/
//  520 
//  521 /****************************DMA初始化*****************************/
//  522 //DMA初始化 使用PLCK经过4分频后与B11相连用于DMA外部中断

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  523 void DMA0_Init(void)
//  524 {
//  525 	SIM_SCGC6|=SIM_SCGC6_DMAMUX_MASK;//打开DMA多路复用器时钟
DMA0_Init:
        LDR.W    R0,??DataTable52_3  ;; 0x4004803c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x2
        LDR.W    R1,??DataTable52_3  ;; 0x4004803c
        STR      R0,[R1, #+0]
//  526 	SIM_SCGC7|=SIM_SCGC7_DMA_MASK;//打开DMA模块时钟
        LDR.W    R0,??DataTable52_4  ;; 0x40048040
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x2
        LDR.W    R1,??DataTable52_4  ;; 0x40048040
        STR      R0,[R1, #+0]
//  527 	DMAMUX_CHCFG0=DMAMUX_CHCFG_SOURCE(50);//DMA通道0对应50号DMA请求，即PORTB	
        LDR.W    R0,??DataTable54_1  ;; 0x40021000
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
//  528 	
//  529 	DMA_TCD0_CITER_ELINKNO=DMA_CITER_ELINKNO_CITER(V);//当前主循环次数,采集点数
        LDR.W    R0,??DataTable52_5  ;; 0x40009016
        MOVS     R1,#+160
        STRH     R1,[R0, #+0]
//  530 	DMA_TCD0_BITER_ELINKNO=DMA_BITER_ELINKNO_BITER(V);//起始主循环次数，采集点数
        LDR.W    R0,??DataTable52_6  ;; 0x4000901e
        MOVS     R1,#+160
        STRH     R1,[R0, #+0]
//  531 	DMA_TCD0_SADDR=(uint32)&GPIOB_PDIR;//设置源地址GPIO口，PORTB
        LDR.W    R0,??DataTable52_7  ;; 0x40009000
        LDR.W    R1,??DataTable52_8  ;; 0x400ff050
        STR      R1,[R0, #+0]
//  532 	DMA_TCD0_SOFF=0;//每次传送源地址不变
        LDR.W    R0,??DataTable52_9  ;; 0x40009004
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
//  533 	//DMA_TCD1_NBYTES_MLOFFYES=DMA_NBYTES_MLOFFYES_NBYTES(1)+DMA_NBYTES_MLOFFNO_SMLOE_MASK+DMA_NBYTES_MLOFFYES_MLOFF(-4);//传送4字节
//  534 	DMA_TCD0_NBYTES_MLNO=DMA_NBYTES_MLNO_NBYTES(1);//每次读取一字节
        LDR.W    R0,??DataTable52_10  ;; 0x40009008
        MOVS     R1,#+1
        STR      R1,[R0, #+0]
//  535 	DMA_TCD0_SLAST=0;//主循环结束后源地址0回写tcd
        LDR.W    R0,??DataTable52_11  ;; 0x4000900c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  536 	DMA_TCD0_DLASTSGA=0;//主循环结束后目的地址0回写tcd
        LDR.W    R0,??DataTable52_12  ;; 0x40009018
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  537 	DMA_TCD0_DADDR=(uint32)video;//设置目的地址，video数组第一个元素
        LDR.W    R0,??DataTable52_13  ;; 0x40009010
        LDR.W    R1,??DataTable50_3
        STR      R1,[R0, #+0]
//  538 	DMA_TCD0_DOFF=1;//每次写目的地址加1
        LDR.W    R0,??DataTable52_14  ;; 0x40009014
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
//  539 	DMA_TCD0_ATTR=DMA_ATTR_SSIZE(0)+DMA_ATTR_DSIZE(0);//源数据宽度8bit，目的数据宽度8bit
        LDR.W    R0,??DataTable52_15  ;; 0x40009006
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
//  540 	DMA_TCD0_CSR=DMA_CSR_DREQ_MASK;//DMA通道0主循环结束后停止硬件请求
        LDR.W    R0,??DataTable52_16  ;; 0x4000901c
        MOVS     R1,#+8
        STRH     R1,[R0, #+0]
//  541 	DMA_TCD0_CSR|=DMA_CSR_INTMAJOR_MASK;//使能DMA0中断
        LDR.W    R0,??DataTable52_16  ;; 0x4000901c
        LDRH     R0,[R0, #+0]
        ORRS     R0,R0,#0x2
        LDR.W    R1,??DataTable52_16  ;; 0x4000901c
        STRH     R0,[R1, #+0]
//  542 	DMAMUX_CHCFG0|=DMAMUX_CHCFG_ENBL_MASK;//DMA通道0使能
        LDR.W    R0,??DataTable54_1  ;; 0x40021000
        LDRB     R0,[R0, #+0]
        ORRS     R0,R0,#0x80
        LDR.W    R1,??DataTable54_1  ;; 0x40021000
        STRB     R0,[R1, #+0]
//  543 	
//  544 	//DMA_TCD1_CSR|=DMA_CSR_INTMAJOR_MASK;//使能DMA中断
//  545 	//DMA_TCD0_CSR|=DMA_CSR_startline_MASK;
//  546 }
        BX       LR               ;; return
//  547 /****************************DMA初始化END*****************************/
//  548 
//  549 //==========================================================================
//  550 //函数名称: hw_pit_init                                                         
//  551 //函数返回: 无                                          
//  552 //参数说明: pitno:表示pit通道号。  
//  553 //			timeout:表示定时溢出开始递减的值          
//  554 //功能概要: 设置相关寄存器的值        
//  555 //==========================================================================

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  556     void hw_pit_init(uint8 pitno,uint32 timeout)
//  557     {
//  558       SIM_SCGC6|=SIM_SCGC6_PIT_MASK;              //使能PIT时钟
hw_pit_init:
        LDR.W    R2,??DataTable52_3  ;; 0x4004803c
        LDR      R2,[R2, #+0]
        ORRS     R2,R2,#0x800000
        LDR.W    R3,??DataTable52_3  ;; 0x4004803c
        STR      R2,[R3, #+0]
//  559       PIT_MCR&=~(PIT_MCR_MDIS_MASK);              //调试模式下禁止
        LDR.W    R2,??DataTable53  ;; 0x40037000
        LDR      R2,[R2, #+0]
        BICS     R2,R2,#0x2
        LDR.W    R3,??DataTable53  ;; 0x40037000
        STR      R2,[R3, #+0]
//  560       PIT_MCR|=PIT_MCR_FRZ_MASK;                  //使能PIT模块时钟
        LDR.W    R2,??DataTable53  ;; 0x40037000
        LDR      R2,[R2, #+0]
        ORRS     R2,R2,#0x1
        LDR.W    R3,??DataTable53  ;; 0x40037000
        STR      R2,[R3, #+0]
//  561       PIT_LDVAL(pitno)=timeout;                   //设置周期
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LSLS     R2,R0,#+4
        LDR.W    R3,??DataTable55  ;; 0x40037100
        STR      R1,[R2, R3]
//  562       PIT_TCTRL(pitno)|=PIT_TCTRL_TEN_MASK;       //使能pit模块运行
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R1,??DataTable55  ;; 0x40037100
        ADDS     R1,R1,R0, LSL #+4
        LDR      R1,[R1, #+8]
        ORRS     R1,R1,#0x1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R2,??DataTable55  ;; 0x40037100
        ADDS     R2,R2,R0, LSL #+4
        STR      R1,[R2, #+8]
//  563       PIT_TCTRL(pitno)&=~(PIT_TCTRL_TIE_MASK);    //关pit中断
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R1,??DataTable55  ;; 0x40037100
        ADDS     R1,R1,R0, LSL #+4
        LDR      R1,[R1, #+8]
        BICS     R1,R1,#0x2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R2,??DataTable55  ;; 0x40037100
        ADDS     R0,R2,R0, LSL #+4
        STR      R1,[R0, #+8]
//  564     }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable32:
        DC32     0x4004b014

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable32_1:
        DC32     0x4004000c
//  565     
//  566 //==========================================================================
//  567 //函数名: enable_pit_interrupt                                                     
//  568 //函数返回: 无                                              
//  569 //参数说明: pitno: 表示pit通道号      
//  570 //功能概要: 开接收引脚的IRQ中断                                                                                                     
//  571 //==========================================================================

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  572     void enable_pit_interrupt(uint8 pitno)
//  573     {
enable_pit_interrupt:
        PUSH     {R7,LR}
//  574       PIT_TCTRL(pitno)|=(PIT_TCTRL_TIE_MASK); //开pit中断
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R1,??DataTable55  ;; 0x40037100
        ADDS     R1,R1,R0, LSL #+4
        LDR      R1,[R1, #+8]
        ORRS     R1,R1,#0x2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R2,??DataTable55  ;; 0x40037100
        ADDS     R2,R2,R0, LSL #+4
        STR      R1,[R2, #+8]
//  575       switch(pitno)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.N    ??enable_pit_interrupt_0
        CMP      R0,#+2
        BEQ.N    ??enable_pit_interrupt_1
        BCC.N    ??enable_pit_interrupt_2
        CMP      R0,#+3
        BEQ.N    ??enable_pit_interrupt_3
        B.N      ??enable_pit_interrupt_4
//  576       {
//  577       case 0:
//  578         enable_irq(68);			      //开接收引脚的IRQ中断
??enable_pit_interrupt_0:
        MOVS     R0,#+68
        BL       enable_irq
//  579         break;
        B.N      ??enable_pit_interrupt_4
//  580       case 1:
//  581         enable_irq(69);			      //开接收引脚的IRQ中断
??enable_pit_interrupt_2:
        MOVS     R0,#+69
        BL       enable_irq
//  582         break;
        B.N      ??enable_pit_interrupt_4
//  583       case 2:
//  584         enable_irq(70);			      //开接收引脚的IRQ中断
??enable_pit_interrupt_1:
        MOVS     R0,#+70
        BL       enable_irq
//  585         break;
        B.N      ??enable_pit_interrupt_4
//  586       case 3:
//  587         enable_irq(71);			      //开接收引脚的IRQ中断
??enable_pit_interrupt_3:
        MOVS     R0,#+71
        BL       enable_irq
//  588         break;
//  589       }
//  590     }
??enable_pit_interrupt_4:
        POP      {R0,PC}          ;; return
//  591 
//  592 //==========================================================================
//  593 //函数名: disable_pit_interrupt                                                     
//  594 //函数返回: 无                                              
//  595 //参数说明: pitno: 表示pit通道号      
//  596 //功能概要: 开接收引脚的IRQ中断                                                                                                     
//  597 //==========================================================================

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  598     void disable_pit_interrupt(uint8 pitno)
//  599     {
disable_pit_interrupt:
        PUSH     {R7,LR}
//  600       PIT_TCTRL(pitno)&=~(PIT_TCTRL_TIE_MASK);//关pit中断
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R1,??DataTable55  ;; 0x40037100
        ADDS     R1,R1,R0, LSL #+4
        LDR      R1,[R1, #+8]
        BICS     R1,R1,#0x2
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R2,??DataTable55  ;; 0x40037100
        ADDS     R2,R2,R0, LSL #+4
        STR      R1,[R2, #+8]
//  601       switch(pitno)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.N    ??disable_pit_interrupt_0
        CMP      R0,#+2
        BEQ.N    ??disable_pit_interrupt_1
        BCC.N    ??disable_pit_interrupt_2
        CMP      R0,#+3
        BEQ.N    ??disable_pit_interrupt_3
        B.N      ??disable_pit_interrupt_4
//  602       {
//  603       case 0:
//  604         disable_irq(68);	              //关接收引脚的IRQ中断
??disable_pit_interrupt_0:
        MOVS     R0,#+68
        BL       disable_irq
//  605         break;
        B.N      ??disable_pit_interrupt_4
//  606       case 1:
//  607         disable_irq(69);		      //关接收引脚的IRQ中断
??disable_pit_interrupt_2:
        MOVS     R0,#+69
        BL       disable_irq
//  608         break;
        B.N      ??disable_pit_interrupt_4
//  609       case 2:
//  610         disable_irq(70);		      //关接收引脚的IRQ中断
??disable_pit_interrupt_1:
        MOVS     R0,#+70
        BL       disable_irq
//  611         break;
        B.N      ??disable_pit_interrupt_4
//  612       case 3:
//  613         disable_irq(71);		      //关接收引脚的IRQ中断
??disable_pit_interrupt_3:
        MOVS     R0,#+71
        BL       disable_irq
//  614         break;
//  615       }
//  616     }
??disable_pit_interrupt_4:
        POP      {R0,PC}          ;; return
//  617 
//  618 //*************************中断区*****************************//
//  619 //DMA外部中断   B11口

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//  620 void DMA_CHO_ISR(void)
//  621 {
//  622         DisableInterrupts;
DMA_CHO_ISR:
        CPSID i         
//  623         //DMA_INT&=~(DMA_INT_INT0_MASK);
//  624 	DMA_INT|=DMA_INT_INT0_MASK;//清除通道0中断
        LDR.W    R0,??DataTable55_1  ;; 0x40008024
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable55_1  ;; 0x40008024
        STR      R0,[R1, #+0]
//  625 	//putstr("DMA complete！");
//  626 	//GPIOA_PTOR|=0X0003E000;//A14~A17设置为输出
//  627 	row_F[imagerow]=1;//采集完成标志
        LDR.W    R0,??DataTable55_2
        LDR      R0,[R0, #+0]
        LDR.W    R1,??DataTable55_3
        MOVS     R2,#+1
        STRB     R2,[R0, R1]
//  628 	imagerow++;	
        LDR.W    R0,??DataTable55_2
        LDR      R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable55_2
        STR      R0,[R1, #+0]
//  629         EnableInterrupts;
        CPSIE i         
//  630 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable35:
        DC32     `?<Constant "Mid_Wu">`
//  631 
//  632 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//  633 void porta_isr(void)//场中断，A24，下降沿中断
//  634 { 
porta_isr:
        PUSH     {R7,LR}
//  635   DisableInterrupts;
        CPSID i         
//  636   //PORTA_ISFR = 0xFFFFFFFF;  //Clear Port A ISR flags
//  637   PORTA_PCR24|=PORT_PCR_ISF_MASK;//清除中断标志
        LDR.W    R0,??DataTable49_1  ;; 0x40049060
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable49_1  ;; 0x40049060
        STR      R0,[R1, #+0]
//  638   DMA0_Init();
        BL       DMA0_Init
//  639   enable_irq(0);//使能DMA通道0完成中断
        MOVS     R0,#+0
        BL       enable_irq
//  640   row=0;//初始化行
        LDR.W    R0,??DataTable55_4
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  641   imagerow=0;//初始化采集行
        LDR.W    R0,??DataTable55_2
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  642   enable_irq (88);//使能B口中断 ，B10行中断
        MOVS     R0,#+88
        BL       enable_irq
//  643   EnableInterrupts;
        CPSIE i         
//  644 }
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable36:
        DC32     `?<Constant "High_Wu">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable36_1:
        DC32     `?<Constant "High_You">`
//  645 
//  646 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//  647 void portb_isr(void)//行中断，B10，上升沿中断
//  648 {
portb_isr:
        PUSH     {R7,LR}
//  649   DisableInterrupts;
        CPSID i         
//  650   PORTB_PCR10|=PORT_PCR_ISF_MASK;//清除中断标志位
        LDR.W    R0,??DataTable49_3  ;; 0x4004a028
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable49_3  ;; 0x4004a028
        STR      R0,[R1, #+0]
//  651   row++; //行计数
        LDR.W    R0,??DataTable55_4
        LDR      R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable55_4
        STR      R0,[R1, #+0]
//  652   //DMA_ERQ=0x1;//使能通道0硬件DMA请求    查看整场图像的时候用的
//  653   if(row==data_table[imagerow])//如果当前行数据应该采集
        LDR.W    R0,??DataTable55_4
        LDR      R0,[R0, #+0]
        LDR.W    R1,??DataTable55_2
        LDR      R1,[R1, #+0]
        LDR.W    R2,??DataTable55_5
        LDR      R1,[R2, R1, LSL #+2]
        CMP      R0,R1
        BNE.N    ??portb_isr_0
//  654   {
//  655     DMA_ERQ|=DMA_ERQ_ERQ0_MASK;//使能通道0硬件DMA请求  
        LDR.W    R0,??DataTable55_6  ;; 0x4000800c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable55_6  ;; 0x4000800c
        STR      R0,[R1, #+0]
        B.N      ??portb_isr_1
//  656   } 
//  657    else if(row>=endlineROW) //一场完成，关闭行中断
??portb_isr_0:
        LDR.W    R0,??DataTable55_4
        LDR      R0,[R0, #+0]
        CMP      R0,#+169
        BCC.N    ??portb_isr_1
//  658   {  
//  659     //
//  660     DMA_ERQ=0x00;
        LDR.W    R0,??DataTable55_6  ;; 0x4000800c
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  661     disable_irq(0);
        MOVS     R0,#+0
        BL       disable_irq
//  662     disable_irq(88);
        MOVS     R0,#+88
        BL       disable_irq
//  663     //SCI();
//  664     finish=1;
        LDR.W    R0,??DataTable55_7
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
//  665     GPIOA_PDOR=GPIOA_PDOR^(GPIO_PDOR_PDO(GPIO_PIN(28)));//对引脚某位进行取反操作
        LDR.W    R0,??DataTable55_8  ;; 0x400ff000
        LDR      R0,[R0, #+0]
        EORS     R0,R0,#0x10000000
        LDR.W    R1,??DataTable55_8  ;; 0x400ff000
        STR      R0,[R1, #+0]
//  666   }
//  667   EnableInterrupts;
??portb_isr_1:
        CPSIE i         
//  668 }
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable37:
        DC32     KeyValue
//  669 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  670 void pit1_isr(void)
//  671 {
pit1_isr:
        PUSH     {R7,LR}
//  672   PIT_TFLG(1)|=PIT_TFLG_TIF_MASK;
        LDR.W    R0,??DataTable55_9  ;; 0x4003711c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable55_9  ;; 0x4003711c
        STR      R0,[R1, #+0]
//  673   enable_pit_interrupt(1);
        MOVS     R0,#+1
        BL       enable_pit_interrupt
//  674   timer++;
        LDR.W    R0,??DataTable55_10
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable55_10
        STRH     R0,[R1, #+0]
//  675 }
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable38:
        DC32     car_speed
//  676   
//  677 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
//  678 void portc_isr(void)
//  679 {
portc_isr:
        PUSH     {R7,LR}
//  680   DisableInterrupts;
        CPSID i         
//  681   
//  682   PORTC_PCR9|=PORT_PCR_ISF_MASK;//清除中断标志位
        LDR.W    R0,??DataTable49_7  ;; 0x4004b024
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1000000
        LDR.W    R1,??DataTable49_7  ;; 0x4004b024
        STR      R0,[R1, #+0]
//  683   //light_change(Light_Run_PORT,Light_Run3);
//  684   ir_deal();
        BL       ir_deal
//  685   EnableInterrupts;
        CPSIE i         
//  686 }
        POP      {R0,PC}          ;; return
//  687 
//  688 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  689 void pit0_isr(void)
//  690 {  
pit0_isr:
        PUSH     {R7,LR}
//  691   
//  692   pulse=FTM2_CNT;
        LDR.W    R0,??DataTable55_11
        LDR.W    R1,??DataTable51  ;; 0x400b8004
        LDR      R1,[R1, #+0]
        STRH     R1,[R0, #+0]
//  693   FTM2_CNT=0;
        LDR.W    R0,??DataTable51  ;; 0x400b8004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  694   //if(pulse==0)FTM0_C1V=0;     //如果电机没转那么电机就关掉
//  695   
//  696   PIT_TFLG(0)|=PIT_TFLG_TIF_MASK;       //清标志
        LDR.W    R0,??DataTable55_12  ;; 0x4003710c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable55_12  ;; 0x4003710c
        STR      R0,[R1, #+0]
//  697   
//  698   enable_pit_interrupt(0);
        MOVS     R0,#+0
        BL       enable_pit_interrupt
//  699   
//  700 }
        POP      {R0,PC}          ;; return
//  701 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  702 void pit2_isr(void)
//  703 {
pit2_isr:
        PUSH     {R7,LR}
//  704   P_timer++;
        LDR.W    R0,??DataTable55_13
        LDR      R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable55_13
        STR      R0,[R1, #+0]
//  705   PIT_TFLG(2)|=PIT_TFLG_TIF_MASK;
        LDR.W    R0,??DataTable55_14  ;; 0x4003712c
        LDR      R0,[R0, #+0]
        ORRS     R0,R0,#0x1
        LDR.W    R1,??DataTable55_14  ;; 0x4003712c
        STR      R0,[R1, #+0]
//  706   enable_pit_interrupt(2);
        MOVS     R0,#+2
        BL       enable_pit_interrupt
//  707   
//  708 }
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable41:
        DC32     0x40048034

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable41_1:
        DC32     0x4007c008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable41_2:
        DC32     0x40064004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable41_3:
        DC32     0x40064005

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable41_4:
        DC32     0x4001f000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable41_5:
        DC32     0x40048044

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable41_6:
        DC32     0x2270000
//  709 
//  710 /******************************************************************/
//  711 //***********************中断区结束*********************************
//  712 
//  713 /*****************延时函数1s*****************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  714 void delays(int s)
//  715 {
delays:
        PUSH     {R4}
//  716   int m=0,i=0,j=0;
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
//  717   for(m=0;m<s;m++)
        MOVS     R4,#+0
        MOVS     R1,R4
        B.N      ??delays_0
??delays_1:
        ADDS     R1,R1,#+1
??delays_0:
        CMP      R1,R0
        BGE.N    ??delays_2
//  718   {
//  719     for(i=0;i<20000;i++)
        MOVS     R2,#+0
        B.N      ??delays_3
//  720     {
//  721       for(j=0;j<1000;j++);
??delays_4:
        ADDS     R3,R3,#+1
??delays_5:
        MOV      R4,#+1000
        CMP      R3,R4
        BLT.N    ??delays_4
        ADDS     R2,R2,#+1
??delays_3:
        MOVW     R3,#+20000
        CMP      R2,R3
        BGE.N    ??delays_1
        MOVS     R3,#+0
        B.N      ??delays_5
//  722     }
//  723   }
//  724 }
??delays_2:
        POP      {R4}
        BX       LR               ;; return
//  725 
//  726 
//  727 /************************取绝对值************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  728 int16 abs(int16 a)
//  729 {
//  730   if(a>=0)return a;
abs:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BMI.N    ??abs_0
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        B.N      ??abs_1
//  731   
//  732   else return -a;
??abs_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        RSBS     R0,R0,#+0
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
??abs_1:
        BX       LR               ;; return
//  733   
//  734 }
//  735 
//  736 /******************************************************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  737 int16 limit(int16 value,int16 top,int16 bottom)
//  738 {
//  739   if(value>top) value=top;
limit:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BGE.N    ??limit_0
        MOVS     R0,R1
//  740   if(value<bottom) value=bottom;
??limit_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R0,R2
        BGE.N    ??limit_1
        MOVS     R0,R2
//  741   return value;
??limit_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BX       LR               ;; return
//  742 }
//  743 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  744 int16 max(int16 value1,int16 value2){
//  745   if(value1>value2)
max:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BGE.N    ??max_0
//  746     return value1;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        B.N      ??max_1
//  747   else 
//  748     return value2;
??max_0:
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
??max_1:
        BX       LR               ;; return
//  749 }
//  750 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  751 int16 min(int16 value1,int16 value2){
//  752   if(value1<value2)
min:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R0,R1
        BGE.N    ??min_0
//  753     return value1;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        B.N      ??min_1
//  754   else 
//  755     return value2;
??min_0:
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
??min_1:
        BX       LR               ;; return
//  756 }
//  757 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  758 void set_speed(int16 speed_low)
//  759 {
set_speed:
        PUSH     {R4,LR}
        MOVS     R4,R0
//  760   //int16 i=0; 
//  761   //uart_send1(UART0,0x23);
//  762   //speed_low=65;
//  763   FTM0_C3V=limit(188+speed_low/2,375,0);
        MOVS     R2,#+0
        MOVW     R1,#+375
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R0,#+2
        SDIV     R0,R4,R0
        ADDS     R0,R0,#+188
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       limit
        LDR.N    R1,??DataTable45_8  ;; 0x40038028
        STR      R0,[R1, #+0]
//  764   FTM0_C0V=limit(188-speed_low/2,375,0);
        MOVS     R2,#+0
        MOVW     R1,#+375
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R0,#+2
        SDIV     R0,R4,R0
        RSBS     R0,R0,#+188
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       limit
        LDR.N    R1,??DataTable45_6  ;; 0x40038010
        STR      R0,[R1, #+0]
//  765 }
        POP      {R4,PC}          ;; return
//  766 /************************取绝对值END************************/
//  767 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  768 int16 subjection_k(int16 *f,int16 i)
//  769 {
subjection_k:
        PUSH     {R4,LR}
        MOVS     R4,R0
//  770   int16 value;
//  771   
//  772   if(i>1)
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+2
        BLT.N    ??subjection_k_0
//  773    value=subjection_k(f+1,i-1);
        SUBS     R1,R1,#+1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R0,R4,#+2
        BL       subjection_k
        B.N      ??subjection_k_1
//  774   else
//  775    value=*f; 
??subjection_k_0:
        LDRSH    R0,[R4, #+0]
//  776    value=max(value,*(f+1));
??subjection_k_1:
        LDRSH    R1,[R4, #+2]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       max
//  777   return value;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        POP      {R4,PC}          ;; return
//  778 }
//  779 
//  780 /*************************结构体区***************************/
//  781 
//  782 /*******************point结构体*********************/
//  783 struct point_position{
//  784   volatile byte x;
//  785   volatile byte y;
//  786   volatile byte i;//
//  787   volatile byte j;//

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  788 }point;
point:
        DS8 4
//  789 /*******************point结构体END*********************/
//  790 struct PID_proportion{
//  791   volatile int16 P;
//  792   volatile int16 I;
//  793   volatile int16 D;

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  794 }Servo,Motor;
Servo:
        DS8 8

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
Motor:
        DS8 8
//  795 
//  796 struct range{
//  797   int16 head;
//  798   int16 tail;

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  799 }servo;
servo:
        DS8 4
//  800 
//  801 struct membership_grade{
//  802   int16 s;
//  803   int16 m;
//  804   int16 b;

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
//  805 }sub;
`sub`:
        DS8 8
//  806 /*************************结构体区END***************************/
//  807 
//  808 /************************读取速度************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  809 void get_speed(void)
//  810 {
//  811   pulse=FTM2_CNT;
get_speed:
        LDR.W    R0,??DataTable55_11
        LDR.W    R1,??DataTable55_15  ;; 0x400b8004
        LDR      R1,[R1, #+0]
        STRH     R1,[R0, #+0]
//  812   FTM2_CNT=0;
        LDR.W    R0,??DataTable55_15  ;; 0x400b8004
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
//  813   //if(pulse==0)FTM0_C1V=0;     //如果电机没转那么电机就关掉
//  814   
//  815 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43:
        DC32     0x40049020

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_1:
        DC32     0x4003900c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_2:
        DC32     0x40039000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_3:
        DC32     0x40039054

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_4:
        DC32     0x40039060

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_5:
        DC32     0x40039064

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_6:
        DC32     0x4003905c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_7:
        DC32     0x4003906c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_8:
        DC32     0x40039070

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_9:
        DC32     0x40039080

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_10:
        DC32     0x40039090

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_11:
        DC32     0x40039094

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_12:
        DC32     0x40039098

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_13:
        DC32     0x4003904c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_14:
        DC32     0x40039008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_15:
        DC32     0x40039010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable43_16:
        DC32     Servo_Middle
//  816 /************************读取速度END************************/
//  817 /******************测试000*******************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  818 void ceshi(void)
//  819 {
//  820   uint8 i=0,qingkuang=0;
ceshi:
        MOVS     R1,#+0
        MOVS     R0,#+0
//  821   
//  822   
//  823   if(bianyan2[0][35]>2&&bianyan2[1][35]<V-3){qingkuang=1;left_ceshi=bianyan2[0][35]-2;right_ceshi=V-bianyan2[1][35]-3;}
        LDR.W    R2,??DataTable56
        LDRB     R2,[R2, #+35]
        CMP      R2,#+3
        BCC.N    ??ceshi_0
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+90]
        CMP      R1,#+157
        BCS.N    ??ceshi_0
        MOVS     R0,#+1
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+35]
        SUBS     R1,R1,#+2
        LDR.W    R2,??DataTable56_1
        STRH     R1,[R2, #+0]
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+90]
        RSBS     R1,R1,#+157
        LDR.W    R2,??DataTable56_2
        STRH     R1,[R2, #+0]
//  824   if(bianyan2[0][35]>2&&bianyan2[1][35]>=V-3){qingkuang=2;left_ceshi=bianyan2[0][35]-2;}
??ceshi_0:
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+35]
        CMP      R1,#+3
        BCC.N    ??ceshi_1
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+90]
        CMP      R1,#+157
        BCC.N    ??ceshi_1
        MOVS     R0,#+2
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+35]
        SUBS     R1,R1,#+2
        LDR.W    R2,??DataTable56_1
        STRH     R1,[R2, #+0]
//  825   if(bianyan2[0][35]<=2&&bianyan2[1][35]<V-3){qingkuang=3;right_ceshi=V-bianyan2[1][35]-3;}
??ceshi_1:
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+35]
        CMP      R1,#+3
        BCS.N    ??ceshi_2
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+90]
        CMP      R1,#+157
        BCS.N    ??ceshi_2
        MOVS     R0,#+3
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+90]
        RSBS     R1,R1,#+157
        LDR.W    R2,??DataTable56_2
        STRH     R1,[R2, #+0]
//  826   if(bianyan2[0][35]<=2&&bianyan2[1][35]>=V-3){qingkuang=4;}
??ceshi_2:
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+35]
        CMP      R1,#+3
        BCS.N    ??ceshi_3
        LDR.W    R1,??DataTable56
        LDRB     R1,[R1, #+90]
        CMP      R1,#+157
        BCC.N    ??ceshi_3
        MOVS     R0,#+4
//  827   if(qingkuang==1)
??ceshi_3:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+1
        BNE.N    ??ceshi_4
//  828   {
//  829     position_ceshi=(right_ceshi-left_ceshi)/2;
        LDR.W    R1,??DataTable56_2
        LDRH     R1,[R1, #+0]
        LDR.W    R2,??DataTable56_1
        LDRH     R2,[R2, #+0]
        SUBS     R1,R1,R2
        MOVS     R2,#+2
        SDIV     R1,R1,R2
        LDR.W    R2,??DataTable57
        STRH     R1,[R2, #+0]
//  830   }
//  831   if(qingkuang==2)
??ceshi_4:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+2
        BNE.N    ??ceshi_5
//  832   {
//  833     position_ceshi=40-left_ceshi;
        LDR.W    R1,??DataTable56_1
        LDRSH    R1,[R1, #+0]
        RSBS     R1,R1,#+40
        LDR.W    R2,??DataTable57
        STRH     R1,[R2, #+0]
//  834   }
//  835   if(qingkuang==3)
??ceshi_5:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+3
        BNE.N    ??ceshi_6
//  836   {
//  837     position_ceshi=right_ceshi-40;
        LDR.W    R1,??DataTable56_2
        LDRSH    R1,[R1, #+0]
        SUBS     R1,R1,#+40
        LDR.W    R2,??DataTable57
        STRH     R1,[R2, #+0]
//  838   }
//  839   if(qingkuang==4)
??ceshi_6:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+4
        BNE.N    ??ceshi_7
//  840   {
//  841     position_ceshi=position_old_ceshi;
        LDR.W    R0,??DataTable57
        LDR.W    R1,??DataTable56_3
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
//  842   }
//  843   if(position_ceshi>50)position_ceshi=50;
??ceshi_7:
        LDR.W    R0,??DataTable57
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+51
        BLT.N    ??ceshi_8
        LDR.W    R0,??DataTable57
        MOVS     R1,#+50
        STRH     R1,[R0, #+0]
//  844   if(position_ceshi<-50)position_ceshi=-50;
??ceshi_8:
        LDR.W    R0,??DataTable57
        LDRSH    R0,[R0, #+0]
        MVNS     R1,#+49
        CMP      R0,R1
        BGE.N    ??ceshi_9
        LDR.W    R0,??DataTable57
        MVNS     R1,#+49
        STRH     R1,[R0, #+0]
//  845   
//  846   position_old_ceshi=position_ceshi;
??ceshi_9:
        LDR.W    R0,??DataTable56_3
        LDR.W    R1,??DataTable57
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
//  847   for(i=19;i>0;i--)
        MOVS     R1,#+19
        B.N      ??ceshi_10
//  848   {  
//  849     position_Save[i]=position_Save[i-1];
??ceshi_11:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R0,??DataTable57_1
        ADDS     R0,R0,R1, LSL #+1
        LDRH     R0,[R0, #-2]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable57_1
        STRH     R0,[R2, R1, LSL #+1]
//  850   }
        SUBS     R1,R1,#+1
??ceshi_10:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+1
        BCS.N    ??ceshi_11
//  851   position_Save[0]=position_ceshi;
        LDR.W    R0,??DataTable57_1
        LDR.W    R1,??DataTable57
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
//  852 }
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44:
        DC32     0x4004b004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_1:
        DC32     0x4004b010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_2:
        DC32     0x4004b008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_3:
        DC32     0x4003800c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_4:
        DC32     0x40038024

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_5:
        DC32     0x40038014

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_6:
        DC32     0x40038000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_7:
        DC32     0x40038054

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_8:
        DC32     0x40038060

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_9:
        DC32     0x40038064

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_10:
        DC32     0x4003805c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_11:
        DC32     0x4003806c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable44_12:
        DC32     0x40038070
//  853 
//  854 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  855 void ceshi_duoji(void)
//  856 {
ceshi_duoji:
        PUSH     {R7,LR}
//  857   if(abs(position_ceshi)<10){Servo.P=30;Servo.D=0;}
        LDR.W    R0,??DataTable57
        LDRSH    R0,[R0, #+0]
        BL       abs
        CMP      R0,#+10
        BGE.N    ??ceshi_duoji_0
        LDR.W    R0,??DataTable57_2
        MOVS     R1,#+30
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable57_2
        MOVS     R1,#+0
        STRH     R1,[R0, #+4]
//  858   if(abs(position_ceshi)>=10&&abs(position_ceshi)<20){Servo.P=50;Servo.D=0;}
??ceshi_duoji_0:
        LDR.W    R0,??DataTable57
        LDRSH    R0,[R0, #+0]
        BL       abs
        CMP      R0,#+10
        BLT.N    ??ceshi_duoji_1
        LDR.W    R0,??DataTable57
        LDRSH    R0,[R0, #+0]
        BL       abs
        CMP      R0,#+20
        BGE.N    ??ceshi_duoji_1
        LDR.W    R0,??DataTable57_2
        MOVS     R1,#+50
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable57_2
        MOVS     R1,#+0
        STRH     R1,[R0, #+4]
//  859   if(abs(position_ceshi)>=20&&abs(position_ceshi)<30){Servo.P=60;Servo.D=0;}
??ceshi_duoji_1:
        LDR.W    R0,??DataTable57
        LDRSH    R0,[R0, #+0]
        BL       abs
        CMP      R0,#+20
        BLT.N    ??ceshi_duoji_2
        LDR.W    R0,??DataTable57
        LDRSH    R0,[R0, #+0]
        BL       abs
        CMP      R0,#+30
        BGE.N    ??ceshi_duoji_2
        LDR.W    R0,??DataTable57_2
        MOVS     R1,#+60
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable57_2
        MOVS     R1,#+0
        STRH     R1,[R0, #+4]
//  860   if(abs(position_ceshi)>=30){Servo.P=70;Servo.D=0;}
??ceshi_duoji_2:
        LDR.W    R0,??DataTable57
        LDRSH    R0,[R0, #+0]
        BL       abs
        CMP      R0,#+30
        BLT.N    ??ceshi_duoji_3
        LDR.W    R0,??DataTable57_2
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable57_2
        MOVS     R1,#+0
        STRH     R1,[R0, #+4]
//  861   
//  862   Servo_value=Servo_Middle+Servo.P*position_ceshi+Servo.D*(position_ceshi-position_Save[5]);//PD控制舵机
??ceshi_duoji_3:
        LDR.W    R0,??DataTable58
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable57_2
        LDRSH    R1,[R1, #+0]
        LDR.W    R2,??DataTable57
        LDRSH    R2,[R2, #+0]
        MULS     R1,R2,R1
        ADDS     R0,R1,R0
        LDR.W    R1,??DataTable57_2
        LDRSH    R1,[R1, #+4]
        LDR.W    R2,??DataTable57
        LDRSH    R2,[R2, #+0]
        LDR.W    R3,??DataTable57_1
        LDRSH    R3,[R3, #+10]
        SUBS     R2,R2,R3
        MLA      R0,R2,R1,R0
        LDR.W    R1,??DataTable58_1
        STRH     R0,[R1, #+0]
//  863   Servo_value=limit(Servo_value,Servo_Left,Servo_Right);
        LDR.W    R0,??DataTable58_2
        LDRSH    R2,[R0, #+0]
        LDR.W    R0,??DataTable58_3
        LDRSH    R1,[R0, #+0]
        LDR.W    R0,??DataTable58_1
        LDRSH    R0,[R0, #+0]
        BL       limit
        LDR.W    R1,??DataTable58_1
        STRH     R0,[R1, #+0]
//  864   FTM1_C0V=Servo_value;
        LDR.W    R0,??DataTable58_4  ;; 0x40039010
        LDR.W    R1,??DataTable58_1
        LDRSH    R1,[R1, #+0]
        STR      R1,[R0, #+0]
//  865 }
        POP      {R0,PC}          ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45:
        DC32     0x40038080

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_1:
        DC32     0x40038090

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_2:
        DC32     0x40038094

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_3:
        DC32     0x40038098

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_4:
        DC32     0x4003804c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_5:
        DC32     0x40038008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_6:
        DC32     0x40038010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_7:
        DC32     0x40038018

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable45_8:
        DC32     0x40038028
//  866 
//  867 /*******************测试000END********************/
//  868 /***************************找出中心线的最大值的坐标*************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  869 void find_center_max(void)
//  870 {
//  871 	uint8 Judage_flag_1=V-1;
find_center_max:
        MOVS     R0,#+159
//  872 	uint8 i=0;
        MOVS     R1,#+0
//  873     for(Judage_flag_1=159;Judage_flag_1>10;Judage_flag_1--)
        MOVS     R2,#+159
        MOVS     R0,R2
        B.N      ??find_center_max_0
//  874 	{
//  875 		for(i=53;i>0;i--)
//  876 		{
//  877 			if(center[i]==Judage_flag_1)
??find_center_max_1:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.N    R2,??DataTable50_2
        LDRB     R2,[R1, R2]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R2,R0
        BNE.N    ??find_center_max_2
//  878 			{
//  879 				if(center[i-1]>Judage_flag_1-10||center[i+1]>Judage_flag_1-10)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        SUBS     R2,R0,#+10
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.N    R3,??DataTable50_2
        ADDS     R3,R1,R3
        LDRB     R3,[R3, #-1]
        CMP      R2,R3
        BLT.N    ??find_center_max_3
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        SUBS     R2,R0,#+10
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.N    R3,??DataTable50_2
        ADDS     R3,R1,R3
        LDRB     R3,[R3, #+1]
        CMP      R2,R3
        BGE.N    ??find_center_max_2
//  880 				{
//  881 					Judage_right_hang=i;
??find_center_max_3:
        LDR.W    R2,??DataTable58_5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        STRH     R1,[R2, #+0]
//  882 					Judage_right_lie=Judage_flag_1;
        LDR.W    R2,??DataTable58_6
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        STRH     R0,[R2, #+0]
//  883 					//return ok;
//  884 				   
//  885 				}
//  886 			}
//  887 		}
??find_center_max_2:
        SUBS     R1,R1,#+1
??find_center_max_4:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+1
        BCS.N    ??find_center_max_1
        SUBS     R0,R0,#+1
??find_center_max_0:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+11
        BCC.N    ??find_center_max_5
        MOVS     R1,#+53
        B.N      ??find_center_max_4
//  888 	}
//  889 	//return fail;
//  890 }
??find_center_max_5:
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46:
        DC32     0x40064006

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_1:
        DC32     0x40049028

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_2:
        DC32     0x4004902c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_3:
        DC32     0x40048030

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_4:
        DC32     0x400b8054

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable46_5:
        DC32     0x400b8080
//  891 	/***************************找出中心线的最大值的坐标END*************************/
//  892     /*************************找出中心线最小值的坐标*************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  893 void find_center_min(void)
//  894 {
//  895 	uint8 Judage_flag_0=1;
find_center_min:
        MOVS     R0,#+1
//  896 	uint8 i=0;
        MOVS     R1,#+0
//  897     for(Judage_flag_0=1;Judage_flag_0<V-11;Judage_flag_0++)
        MOVS     R2,#+1
        MOVS     R0,R2
        B.N      ??find_center_min_0
//  898 	{
//  899 		for(i=53;i>0;i--)
//  900 		{
//  901 			if(center[i]==Judage_flag_0)
??find_center_min_1:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.N    R2,??DataTable50_2
        LDRB     R2,[R1, R2]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R2,R0
        BNE.N    ??find_center_min_2
//  902 			{
//  903 				if(center[i-1]<Judage_flag_0+10||center[i+1]<Judage_flag_0+10)
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.N    R2,??DataTable50_2
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #-1]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        ADDS     R3,R0,#+10
        CMP      R2,R3
        BLT.N    ??find_center_min_3
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.N    R2,??DataTable50_2
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #+1]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        ADDS     R3,R0,#+10
        CMP      R2,R3
        BGE.N    ??find_center_min_2
//  904 				{
//  905 					Judage_left_hang=i;
??find_center_min_3:
        LDR.W    R2,??DataTable58_7
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        STRH     R1,[R2, #+0]
//  906 					Judage_left_lie=Judage_flag_0;
        LDR.W    R2,??DataTable58_8
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        STRH     R0,[R2, #+0]
//  907 					//return ok;
//  908 				   
//  909 				}
//  910 			}
//  911 		}
??find_center_min_2:
        SUBS     R1,R1,#+1
??find_center_min_4:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+1
        BCS.N    ??find_center_min_1
        ADDS     R0,R0,#+1
??find_center_min_0:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+149
        BCS.N    ??find_center_min_5
        MOVS     R1,#+53
        B.N      ??find_center_min_4
//  912 	}
//  913 	//return fail;
//  914 }
??find_center_min_5:
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable47:
        DC32     0x400b804c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable47_1:
        DC32     0x400b8008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable47_2:
        DC32     0x40048038

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable47_3:
        DC32     0x40049038

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable47_4:
        DC32     0x4004903c
//  915 
//  916 
//  917 
//  918     /*************************找出中心线最小值的坐标END*************************/
//  919 
//  920 
//  921 
//  922 /******************两断点之间的补线连接算法******************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  923 void LianJie(char i,int16 m,int16 n)
//  924 {
LianJie:
        PUSH     {R3-R7,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
//  925   if(m-n>1)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R5,R6
        CMP      R0,#+2
        BLT.N    ??LianJie_0
//  926   {
//  927     bianyan[i][(m+n)/2]=(bianyan[i][m]+bianyan[i][n])/2;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTAH    R0,R6,R5
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R1,#+55
        LDR.W    R2,??DataTable58_9
        MLA      R1,R1,R4,R2
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R2,#+55
        LDR.W    R3,??DataTable58_9
        MLA      R2,R2,R4,R3
        LDRB     R2,[R5, R2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R3,#+55
        LDR.W    R7,??DataTable58_9
        MLA      R3,R3,R4,R7
        LDRB     R3,[R6, R3]
        UXTAB    R2,R3,R2
        MOVS     R3,#+2
        SDIV     R2,R2,R3
        STRB     R2,[R0, R1]
//  928     LianJie(i,(m+n)/2,n);
        MOVS     R2,R6
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTAH    R0,R6,R5
        MOVS     R1,#+2
        SDIV     R1,R0,R1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       LianJie
//  929     LianJie(i,m,(m+n)/2);
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R6
        MOVS     R1,#+2
        SDIV     R2,R0,R1
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,R5
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       LianJie
//  930   }
//  931 }
??LianJie_0:
        POP      {R0,R4-R7,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48:
        DC32     0x40039004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_1:
        DC32     0x40049040

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_2:
        DC32     0x40049044

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_3:
        DC32     0x4004a000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_4:
        DC32     0x4004a004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_5:
        DC32     0x4004a008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_6:
        DC32     0x4004a00c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_7:
        DC32     0x4004a010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_8:
        DC32     0x4004a014

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_9:
        DC32     0x4004a018

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable48_10:
        DC32     0x4004a01c
//  932 /******************两断点之间的补线连接算法end******************/
//  933 /****************起始线的检测函数****************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  934 void Start_Detection(unsigned char a,unsigned char h1,unsigned char h2,unsigned char r1,unsigned char r2)
//  935 {
Start_Detection:
        PUSH     {R3-R7,LR}
        LDR      R4,[SP, #+24]
//  936 	unsigned char i=0,m=0,n=0;
        MOVS     R5,#+0
        MOVS     R7,#+0
        MOVS     R6,#+0
//  937 	for(i=h1;i>h2;i--)
        MOVS     R5,R1
        B.N      ??Start_Detection_0
//  938 	{
//  939 		if(video[i][r1]==0)m++;
??Start_Detection_1:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable50_3
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+0
        BNE.N    ??Start_Detection_2
        ADDS     R7,R7,#+1
//  940 		if(video[i][r1]==1)n++;
??Start_Detection_2:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable50_3
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+1
        BNE.N    ??Start_Detection_3
        ADDS     R6,R6,#+1
//  941 	}
??Start_Detection_3:
        SUBS     R5,R5,#+1
??Start_Detection_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R2,R5
        BCC.N    ??Start_Detection_1
//  942 	if(m>0)BW[a]=0;
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+1
        BCC.N    ??Start_Detection_4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable58_10
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
//  943 	if(m==0) BW[a]=1;
??Start_Detection_4:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+0
        BNE.N    ??Start_Detection_5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable58_10
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
//  944     if(r1<r2)Start_Detection(a+1,h1,h2,r1+1,r2);
??Start_Detection_5:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R3,R4
        BCS.N    ??Start_Detection_6
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        STR      R4,[SP, #+0]
        ADDS     R3,R3,#+1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        ADDS     R0,R0,#+1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       Start_Detection
//  945 }
??Start_Detection_6:
        POP      {R0,R4-R7,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49:
        DC32     0x400ff054

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_1:
        DC32     0x40049060

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_2:
        DC32     0xa0100

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_3:
        DC32     0x4004a028

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_4:
        DC32     0x90100

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_5:
        DC32     0x4004a02c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_6:
        DC32     0x10100

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_7:
        DC32     0x4004b024

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_8:
        DC32     0x400ff014

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_9:
        DC32     0x14034000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable49_10:
        DC32     0x40049070
//  946 
//  947 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  948 void Start_Detection_2(unsigned char a,unsigned char h1,unsigned char h2,unsigned char r1,unsigned char r2)
//  949 {
Start_Detection_2:
        PUSH     {R3-R7,LR}
        LDR      R4,[SP, #+24]
//  950 	unsigned char i=0,m=0,n=0;
        MOVS     R5,#+0
        MOVS     R7,#+0
        MOVS     R6,#+0
//  951 	
//  952     for(i=h1;i>h2;i--)
        MOVS     R5,R1
        B.N      ??Start_Detection_2_0
//  953 	{
//  954 		if(video[i][r1]==0)m++;
??Start_Detection_2_1:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable50_3
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+0
        BNE.N    ??Start_Detection_2_2
        ADDS     R7,R7,#+1
//  955 		if(video[i][r1]==1)n++;
??Start_Detection_2_2:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable50_3
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+1
        BNE.N    ??Start_Detection_2_3
        ADDS     R6,R6,#+1
//  956 	}
??Start_Detection_2_3:
        SUBS     R5,R5,#+1
??Start_Detection_2_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R2,R5
        BCC.N    ??Start_Detection_2_1
//  957 	if(m>0)BW2[a]=0;
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+1
        BCC.N    ??Start_Detection_2_4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable58_11
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
//  958 	if(m==0) BW2[a]=1;
??Start_Detection_2_4:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+0
        BNE.N    ??Start_Detection_2_5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable58_11
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
//  959 	if(r1<r2)Start_Detection_2(a+1,h1,h2,r1+1,r2);
??Start_Detection_2_5:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R3,R4
        BCS.N    ??Start_Detection_2_6
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        STR      R4,[SP, #+0]
        ADDS     R3,R3,#+1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        ADDS     R0,R0,#+1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       Start_Detection_2
//  960 
//  961 }
??Start_Detection_2_6:
        POP      {R0,R4-R7,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable50:
        DC32     0x40038004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable50_1:
        DC32     0x4006a000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable50_2:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable50_3:
        DC32     video
//  962 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  963 void Start_Detection_3(unsigned char a,unsigned char h1,unsigned char h2,unsigned char r1,unsigned char r2)
//  964 {
Start_Detection_3:
        PUSH     {R3-R7,LR}
        LDR      R4,[SP, #+24]
//  965 	unsigned char i=0,m=0,n=0;
        MOVS     R5,#+0
        MOVS     R7,#+0
        MOVS     R6,#+0
//  966 	
//  967     for(i=h1;i>h2;i--)
        MOVS     R5,R1
        B.N      ??Start_Detection_3_0
//  968 	{
//  969 		if(video[i][r1]==0)m++;
??Start_Detection_3_1:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable58_12
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+0
        BNE.N    ??Start_Detection_3_2
        ADDS     R7,R7,#+1
//  970 		if(video[i][r1]==1)n++;
??Start_Detection_3_2:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable58_12
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+1
        BNE.N    ??Start_Detection_3_3
        ADDS     R6,R6,#+1
//  971 	}
??Start_Detection_3_3:
        SUBS     R5,R5,#+1
??Start_Detection_3_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R2,R5
        BCC.N    ??Start_Detection_3_1
//  972 	if(m>0)BW3[a]=0;
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+1
        BCC.N    ??Start_Detection_3_4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable58_13
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
//  973 	if(m==0) BW3[a]=1;
??Start_Detection_3_4:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+0
        BNE.N    ??Start_Detection_3_5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable58_13
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
//  974 	if(r1<r2)Start_Detection_3(a+1,h1,h2,r1+1,r2);
??Start_Detection_3_5:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R3,R4
        BCS.N    ??Start_Detection_3_6
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        STR      R4,[SP, #+0]
        ADDS     R3,R3,#+1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        ADDS     R0,R0,#+1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       Start_Detection_3
//  975 
//  976 }
??Start_Detection_3_6:
        POP      {R0,R4-R7,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51:
        DC32     0x400b8004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_1:
        DC32     0x2bf20

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_2:
        DC32     0x4004c018

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_3:
        DC32     0x4004c01c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable51_4:
        DC32     0x4006a001
//  977 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
//  978 void Start_Detection_4(unsigned char a,unsigned char h1,unsigned char h2,unsigned char r1,unsigned char r2)
//  979 {
Start_Detection_4:
        PUSH     {R3-R7,LR}
        LDR      R4,[SP, #+24]
//  980 	unsigned char i=0,m=0,n=0;
        MOVS     R5,#+0
        MOVS     R7,#+0
        MOVS     R6,#+0
//  981 	
//  982     for(i=h1;i>h2;i--)
        MOVS     R5,R1
        B.N      ??Start_Detection_4_0
//  983 	{
//  984 		if(video[i][r1]==0)m++;
??Start_Detection_4_1:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable58_12
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+0
        BNE.N    ??Start_Detection_4_2
        ADDS     R7,R7,#+1
//  985 		if(video[i][r1]==1)n++;
??Start_Detection_4_2:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        MOVS     R12,#+160
        LDR.W    LR,??DataTable58_12
        MLA      R12,R12,R5,LR
        LDRB     R12,[R3, R12]
        CMP      R12,#+1
        BNE.N    ??Start_Detection_4_3
        ADDS     R6,R6,#+1
//  986 	}
??Start_Detection_4_3:
        SUBS     R5,R5,#+1
??Start_Detection_4_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R2,R5
        BCC.N    ??Start_Detection_4_1
//  987 	if(m>0)BW4[a]=0;
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+1
        BCC.N    ??Start_Detection_4_4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable58_14
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
//  988 	if(m==0) BW4[a]=1;
??Start_Detection_4_4:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R7,#+0
        BNE.N    ??Start_Detection_4_5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R5,??DataTable58_14
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
//  989 	if(r1<r2)Start_Detection_4(a+1,h1,h2,r1+1,r2);
??Start_Detection_4_5:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R3,R4
        BCS.N    ??Start_Detection_4_6
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        STR      R4,[SP, #+0]
        ADDS     R3,R3,#+1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        ADDS     R0,R0,#+1
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       Start_Detection_4
//  990 
//  991 }
??Start_Detection_4_6:
        POP      {R0,R4-R7,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52:
        DC32     0x40049068

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_1:
        DC32     0x4006a00a

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_2:
        DC32     0x4006a003

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_3:
        DC32     0x4004803c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_4:
        DC32     0x40048040

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_5:
        DC32     0x40009016

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_6:
        DC32     0x4000901e

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_7:
        DC32     0x40009000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_8:
        DC32     0x400ff050

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_9:
        DC32     0x40009004

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_10:
        DC32     0x40009008

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_11:
        DC32     0x4000900c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_12:
        DC32     0x40009018

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_13:
        DC32     0x40009010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_14:
        DC32     0x40009014

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_15:
        DC32     0x40009006

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable52_16:
        DC32     0x4000901c
//  992 
//  993 /*********************************
//  994 *name:BW_filter(char n)
//  995 *function:起始线检测后的滤波
//  996 *method:1，对单独出现的一个点滤波去除
//  997 *       2，对单独出现的两个点要看其左右的情况，如果出现左右连续黑色或者白色
//  998            点数大于1的话可以把其滤去，否则不滤。
//  999 *explain:n表示要滤波的BW数组号
// 1000 *note:2号滤波可能不用。
// 1001 *date:2013.5.3
// 1002 **********************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1003 void BW_filter(char n)
// 1004 {
// 1005   volatile uint8 *p;
// 1006   switch(n)
BW_filter:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.N    ??BW_filter_0
        CMP      R0,#+2
        BEQ.N    ??BW_filter_1
        CMP      R0,#+3
        BEQ.N    ??BW_filter_2
        CMP      R0,#+4
        BEQ.N    ??BW_filter_3
        B.N      ??BW_filter_4
// 1007   {
// 1008   case 0:
// 1009     {
// 1010       p=BW;
??BW_filter_0:
        LDR.W    R0,??DataTable58_10
// 1011       if(*p==0)
        LDRB     R1,[R0, #+0]
        CMP      R1,#+0
        BNE.N    ??BW_filter_1
// 1012       {
// 1013         p+=2;
        ADDS     R0,R0,#+2
        B.N      ??BW_filter_5
// 1014         while(p<&BW[99])
// 1015         {
// 1016           if(*(p-1)!=*p&&*(p+1)!=*p)*p=*(p-1);
??BW_filter_6:
        LDRB     R1,[R0, #-1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_7
        LDRB     R1,[R0, #+1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_7
        LDRB     R1,[R0, #-1]
        STRB     R1,[R0, #+0]
// 1017           p++;
??BW_filter_7:
        ADDS     R0,R0,#+1
// 1018         }
??BW_filter_5:
        LDR.W    R1,??DataTable58_15
        CMP      R0,R1
        BCC.N    ??BW_filter_6
// 1019         /*p=&BW[3];
// 1020         while(p<&BW[99])
// 1021         {
// 1022                 if(*(p-1)==*p&&*p!=*(p-2)&&*p!=*(p-3)&&*p!=*(p+1)&&*p!=*(p+2)){*p=*(p-2);*(p-1)=*p;}
// 1023                 p++;
// 1024         }*/
// 1025       }
// 1026     }
// 1027   case 2:
// 1028     {
// 1029       p=BW2;
??BW_filter_1:
        LDR.W    R0,??DataTable58_11
// 1030       if(*p==0)
        LDRB     R1,[R0, #+0]
        CMP      R1,#+0
        BNE.N    ??BW_filter_2
// 1031       {
// 1032         p+=2;
        ADDS     R0,R0,#+2
        B.N      ??BW_filter_8
// 1033         while(p<&BW2[119])
// 1034         {
// 1035           if(*(p-1)!=*p&&*(p+1)!=*p)*p=*(p-1);
??BW_filter_9:
        LDRB     R1,[R0, #-1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_10
        LDRB     R1,[R0, #+1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_10
        LDRB     R1,[R0, #-1]
        STRB     R1,[R0, #+0]
// 1036           p++;
??BW_filter_10:
        ADDS     R0,R0,#+1
// 1037         }
??BW_filter_8:
        LDR.W    R1,??DataTable59
        CMP      R0,R1
        BCC.N    ??BW_filter_9
// 1038         /*p=&BW2[3];
// 1039         while(p<&BW2[119])
// 1040         {
// 1041                 if(*(p-1)==*p&&*p!=*(p-2)&&*p!=*(p-3)&&*p!=*(p+1)&&*p!=*(p+2)){*p=*(p-2);*(p-1)=*p;}
// 1042                 p++;
// 1043         }*/
// 1044       }
// 1045     }
// 1046   case 3:
// 1047     {
// 1048       p=BW3;
??BW_filter_2:
        LDR.W    R0,??DataTable58_13
// 1049       if(*p==0)
        LDRB     R1,[R0, #+0]
        CMP      R1,#+0
        BNE.N    ??BW_filter_3
// 1050       {
// 1051         p+=2;
        ADDS     R0,R0,#+2
        B.N      ??BW_filter_11
// 1052         while(p<&BW3[79])
// 1053         {
// 1054           if(*(p-1)!=*p&&*(p+1)!=*p)*p=*(p-1);
??BW_filter_12:
        LDRB     R1,[R0, #-1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_13
        LDRB     R1,[R0, #+1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_13
        LDRB     R1,[R0, #-1]
        STRB     R1,[R0, #+0]
// 1055           p++;
??BW_filter_13:
        ADDS     R0,R0,#+1
// 1056         }
??BW_filter_11:
        LDR.W    R1,??DataTable59_1
        CMP      R0,R1
        BCC.N    ??BW_filter_12
// 1057         /*p=&BW3[3];
// 1058         while(p<&BW3[79])
// 1059         {
// 1060                 if(*(p-1)==*p&&*p!=*(p-2)&&*p!=*(p-3)&&*p!=*(p+1)&&*p!=*(p+2)){*p=*(p-2);*(p-1)=*p;}
// 1061                 p++;
// 1062         }*/
// 1063       }
// 1064     }
// 1065   case 4:
// 1066     {
// 1067       p=BW4;
??BW_filter_3:
        LDR.W    R0,??DataTable58_14
// 1068       if(*p==0)
        LDRB     R1,[R0, #+0]
        CMP      R1,#+0
        BNE.N    ??BW_filter_4
// 1069       {
// 1070         p+=2;
        ADDS     R0,R0,#+2
        B.N      ??BW_filter_14
// 1071         while(p<&BW4[139])
// 1072         {
// 1073                 if(*(p-1)!=*p&&*(p+1)!=*p)*p=*(p-1);
??BW_filter_15:
        LDRB     R1,[R0, #-1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_16
        LDRB     R1,[R0, #+1]
        LDRB     R2,[R0, #+0]
        CMP      R1,R2
        BEQ.N    ??BW_filter_16
        LDRB     R1,[R0, #-1]
        STRB     R1,[R0, #+0]
// 1074                 p++;
??BW_filter_16:
        ADDS     R0,R0,#+1
// 1075         }
??BW_filter_14:
        LDR.W    R1,??DataTable59_2
        CMP      R0,R1
        BCC.N    ??BW_filter_15
// 1076         /*p=&BW4[3];
// 1077         while(p<&BW4[139])
// 1078         {
// 1079                 if(*(p-1)==*p&&*p!=*(p-2)&&*p!=*(p-3)&&*p!=*(p+1)&&*p!=*(p+2)){*p=*(p-2);*(p-1)=*p;}
// 1080                 p++;
// 1081         }*/
// 1082         }
// 1083      }
// 1084   }
// 1085 }
??BW_filter_4:
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable53:
        DC32     0x40037000
// 1086 /****************起始线的检测函数END****************/
// 1087 /*******************中心线两点的连接******************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1088 void LianJie_center(int16 m,int16 n)
// 1089 {
LianJie_center:
        PUSH     {R3-R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
// 1090 	if(m-n>1)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SUBS     R0,R4,R5
        CMP      R0,#+2
        BLT.N    ??LianJie_center_0
// 1091 	{
// 1092 		center[(m+n)/2]=(center[m]+center[n])/2;
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable59_3
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R2,??DataTable59_3
        LDRB     R2,[R4, R2]
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        LDR.W    R3,??DataTable59_3
        LDRB     R3,[R5, R3]
        ADDS     R2,R3,R2
        MOVS     R3,#+2
        SDIV     R2,R2,R3
        STRB     R2,[R0, R1]
// 1093 		LianJie_center((m+n)/2,n);
        MOVS     R1,R5
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R2,#+2
        SDIV     R0,R0,R2
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 1094 		LianJie_center(m,(m+n)/2);
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SXTAH    R0,R4,R5
        MOVS     R1,#+2
        SDIV     R1,R0,R1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 1095 	}
// 1096 }
??LianJie_center_0:
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54:
        DC32     0x4006a002

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable54_1:
        DC32     0x40021000
// 1097 /*******************中心线两点的连接END******************/
// 1098 
// 1099 /*************加权平均法对中心线的滤波平滑处理*************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1100 void center_filter(void)
// 1101 {
center_filter:
        PUSH     {R2-R5}
// 1102   char code_coe[5]={1,2,3,3,4};
        ADD      R0,SP,#+0
        LDR.W    R1,??DataTable59_4
        LDM      R1!,{R2,R3}
        STM      R0!,{R2,R3}
        SUBS     R1,R1,#+8
        SUBS     R0,R0,#+8
// 1103   char code_coe_sum=13;
        MOVS     R0,#+13
// 1104   int16 i=0,j=0,center_sum=0;
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
// 1105   for(i=52;i>1;i--)
        MOVS     R4,#+52
        MOVS     R1,R4
        B.N      ??center_filter_0
// 1106   {
// 1107     if(center[i-2]>0)
// 1108     {
// 1109       center_sum=0;
// 1110       for(j=0;j<5;j++)center_sum+=center[j+i-2]*code_coe[j];
??center_filter_1:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTAH    R4,R1,R2
        LDR.W    R5,??DataTable59_3
        ADDS     R4,R4,R5
        LDRB     R4,[R4, #-2]
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        ADD      R5,SP,#+0
        LDRB     R5,[R2, R5]
        MULS     R4,R5,R4
        SXTAH    R3,R4,R3
        ADDS     R2,R2,#+1
??center_filter_2:
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R2,#+5
        BLT.N    ??center_filter_1
// 1111       center[i]=(int)(center_sum/code_coe_sum);
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        SDIV     R2,R3,R0
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.W    R3,??DataTable59_3
        STRB     R2,[R1, R3]
??center_filter_3:
        SUBS     R1,R1,#+1
??center_filter_0:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+2
        BLT.N    ??center_filter_4
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.W    R2,??DataTable59_3
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #-2]
        CMP      R2,#+1
        BCC.N    ??center_filter_3
        MOVS     R3,#+0
        MOVS     R2,#+0
        B.N      ??center_filter_2
// 1112     }
// 1113   }  
// 1114 }
??center_filter_4:
        POP      {R0,R1,R4,R5}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55:
        DC32     0x40037100

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_1:
        DC32     0x40008024

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_2:
        DC32     imagerow

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_3:
        DC32     row_F

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_4:
        DC32     row

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_5:
        DC32     data_table

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_6:
        DC32     0x4000800c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_7:
        DC32     finish

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_8:
        DC32     0x400ff000

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_9:
        DC32     0x4003711c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_10:
        DC32     timer

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_11:
        DC32     pulse

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_12:
        DC32     0x4003710c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_13:
        DC32     P_timer

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_14:
        DC32     0x4003712c

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable55_15:
        DC32     0x400b8004
// 1115 /*************加权平均法对中心线的滤波平滑处理*END************/
// 1116 /*************起始线防抖判断与处理*************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1117 void Start_Line(void)
// 1118 {
Start_Line:
        PUSH     {R4-R8,LR}
        SUB      SP,SP,#+168
// 1119   int16 i=0,j=0,k=0;
        MOVS     R7,#+0
        MOVS     R8,#+0
        MOVS     R4,#+0
// 1120   uint8 num_b1=0,num_b2=0;
        MOVS     R5,#+0
        MOVS     R6,#+0
// 1121   uint8 bianyan3[2][55]={0};//注意这个需要清零
        ADD      R0,SP,#+56
        MOVS     R1,#+112
        BL       __aeabi_memclr4
// 1122   uint8 center3[55]={0};//注意这个需要清零
        ADD      R0,SP,#+0
        MOVS     R1,#+56
        BL       __aeabi_memclr4
// 1123   if(xu_xian2==0)
        LDR.W    R0,??DataTable59_5
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??Start_Line_0
// 1124   {
// 1125     if(END_Line_2>5&&END_Line_2<35)
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BCC.W    ??Start_Line_0
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        CMP      R0,#+35
        BCS.W    ??Start_Line_0
// 1126     {
// 1127       for(i=54;i>35;i--)
        MOVS     R7,#+54
        B.N      ??Start_Line_1
// 1128       {
// 1129         if(bianyan[0][i]!=bianyan2[0][i])num_b1++;
??Start_Line_2:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable58_9
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable56
        LDRB     R1,[R7, R1]
        CMP      R0,R1
        BEQ.N    ??Start_Line_3
        ADDS     R5,R5,#+1
// 1130         if(bianyan[0][i]!=bianyan2[0][i])num_b2++;
??Start_Line_3:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable58_9
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable56
        LDRB     R1,[R7, R1]
        CMP      R0,R1
        BEQ.N    ??Start_Line_4
        ADDS     R6,R6,#+1
// 1131       }
??Start_Line_4:
        SUBS     R7,R7,#+1
??Start_Line_1:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+36
        BGE.N    ??Start_Line_2
// 1132                   
// 1133       if(num_b1==0&&num_b2==0)
        ORRS     R0,R6,R5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BNE.W    ??Start_Line_0
// 1134       {
// 1135               
// 1136         if(abs(center[35]-center[54])<15)
        LDR.W    R0,??DataTable59_3
        LDRB     R0,[R0, #+35]
        LDR.W    R1,??DataTable59_3
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        CMP      R0,#+15
        BGE.W    ??Start_Line_0
// 1137         {
// 1138           for(k=END_Line_2;k<30;k++)
        LDR.W    R0,??DataTable59_6
        LDRB     R4,[R0, #+0]
        B.N      ??Start_Line_5
??Start_Line_6:
        ADDS     R4,R4,#+1
??Start_Line_5:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+30
        BGE.N    ??Start_Line_7
// 1139           {
// 1140                   if(center[k])break;
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable59_3
        LDRB     R0,[R4, R0]
        CMP      R0,#+0
        BEQ.N    ??Start_Line_6
// 1141           }
// 1142           for(j=center[k];j>30;j--)
??Start_Line_7:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable59_3
        LDRB     R8,[R4, R0]
        B.N      ??Start_Line_8
??Start_Line_9:
        SUBS     R8,R8,#+1
??Start_Line_8:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+31
        BLT.N    ??Start_Line_10
// 1143           {
// 1144             if(video[END_Line_2][j]==0&&video[END_Line_2][j-1]==0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        MOVS     R1,#+160
        LDR.W    R2,??DataTable58_12
        MLA      R0,R1,R0,R2
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??Start_Line_9
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        MOVS     R1,#+160
        LDR.W    R2,??DataTable58_12
        MLA      R0,R1,R0,R2
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??Start_Line_9
// 1145             {
// 1146                     bianyan3[0][END_Line_2]=j;
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        ADD      R1,SP,#+56
        STRB     R8,[R0, R1]
// 1147                     break;
// 1148             }
// 1149           }
// 1150           for(j=center[k];j<130;j++)
??Start_Line_10:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable59_3
        LDRB     R8,[R4, R0]
        B.N      ??Start_Line_11
??Start_Line_12:
        ADDS     R8,R8,#+1
??Start_Line_11:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+130
        BGE.N    ??Start_Line_13
// 1151           {
// 1152             if(video[END_Line_2][j]==0&&video[END_Line_2][j+1]==0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        MOVS     R1,#+160
        LDR.W    R2,??DataTable58_12
        MLA      R0,R1,R0,R2
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??Start_Line_12
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        MOVS     R1,#+160
        LDR.W    R2,??DataTable58_12
        MLA      R0,R1,R0,R2
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??Start_Line_12
// 1153             {
// 1154                     bianyan3[1][END_Line_2]=j;
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        ADD      R1,SP,#+56
        ADDS     R0,R0,R1
        STRB     R8,[R0, #+55]
// 1155                     break;
// 1156             }
// 1157           }
// 1158           if(bianyan3[1][END_Line_2]-bianyan3[0][END_Line_2]>20)
??Start_Line_13:
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        ADD      R1,SP,#+56
        ADDS     R0,R0,R1
        LDRB     R0,[R0, #+55]
        LDR.W    R1,??DataTable59_6
        LDRB     R1,[R1, #+0]
        ADD      R2,SP,#+56
        LDRB     R1,[R1, R2]
        SUBS     R0,R0,R1
        CMP      R0,#+21
        BLT.N    ??Start_Line_14
// 1159           {
// 1160                   center3[END_Line_2]=(bianyan3[1][END_Line_2]+bianyan3[0][END_Line_2])/2;
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        ADD      R1,SP,#+56
        ADDS     R0,R0,R1
        LDRB     R0,[R0, #+55]
        LDR.W    R1,??DataTable59_6
        LDRB     R1,[R1, #+0]
        ADD      R2,SP,#+56
        LDRB     R1,[R1, R2]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable59_6
        LDRB     R1,[R1, #+0]
        ADD      R2,SP,#+0
        STRB     R0,[R1, R2]
// 1161           }
// 1162           if(center3[END_Line_2]>30&&center[END_Line_2]<130)
??Start_Line_14:
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        ADD      R1,SP,#+0
        LDRB     R0,[R0, R1]
        CMP      R0,#+31
        BCC.W    ??Start_Line_0
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        LDR.W    R1,??DataTable59_3
        LDRB     R0,[R0, R1]
        CMP      R0,#+130
        BCS.N    ??Start_Line_0
// 1163           {
// 1164             for(i=END_Line_2-1;i>=0;i--)
        LDR.W    R0,??DataTable59_6
        LDRB     R0,[R0, #+0]
        SUBS     R7,R0,#+1
        B.N      ??Start_Line_15
// 1165             {
// 1166               for(j=center3[i+1];j>10;j--)
// 1167               {
// 1168                 if(video[i][j]==0&&video[i][j-1]==0)
// 1169                 {
// 1170                         bianyan3[0][i]=j;
// 1171                         break;
// 1172                 }
// 1173               }
// 1174               for(j=center3[i+1];j<150;j++)
??Start_Line_16:
        ADDS     R8,R8,#+1
??Start_Line_17:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+150
        BGE.N    ??Start_Line_18
// 1175               {
// 1176                 if(video[i][j]==0&&video[i][j+1]==0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable58_12
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??Start_Line_16
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable58_12
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??Start_Line_16
// 1177                 {
// 1178                         bianyan3[1][i]=j;
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+56
        ADDS     R0,R7,R0
        STRB     R8,[R0, #+55]
// 1179                         break;
// 1180                 }
// 1181               }
// 1182               center3[i]=(bianyan3[1][i]+bianyan3[0][i])/2;
??Start_Line_18:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+56
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+56
        LDRB     R1,[R7, R1]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        STRB     R0,[R7, R1]
        SUBS     R7,R7,#+1
??Start_Line_15:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BMI.N    ??Start_Line_19
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        ADDS     R0,R7,R0
        LDRB     R8,[R0, #+1]
        B.N      ??Start_Line_20
??Start_Line_21:
        SUBS     R8,R8,#+1
??Start_Line_20:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+11
        BLT.N    ??Start_Line_22
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable58_12
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??Start_Line_21
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??DataTable58_12
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??Start_Line_21
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+56
        STRB     R8,[R7, R0]
??Start_Line_22:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        ADDS     R0,R7,R0
        LDRB     R8,[R0, #+1]
        B.N      ??Start_Line_17
// 1183               //if((bianyan3[1][i]-bianyan3[0][i])<5)break;
// 1184             }
// 1185             if(i==-1)start_line2=1;
??Start_Line_19:
        MOVS     R0,#-1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,R0
        BNE.N    ??Start_Line_0
        LDR.W    R0,??DataTable59_7
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 1186             /*if(i==-1)
// 1187             {
// 1188                     for(i=END_Line_2;i>=0;i--)center3[i]=(bianyan3[1][i]+bianyan3[0][i])/2;
// 1189   
// 1190             }*/
// 1191     
// 1192           }
// 1193         }
// 1194       }
// 1195     }
// 1196   }
// 1197 	
// 1198   if(start_line2==1)
??Start_Line_0:
        LDR.W    R0,??DataTable59_7
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??Start_Line_23
// 1199   {
// 1200     for(i=END_Line_2;i>=0;i--)center[i]=center3[i];
        LDR.W    R0,??DataTable59_6
        LDRB     R7,[R0, #+0]
        B.N      ??Start_Line_24
??Start_Line_25:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable59_3
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        LDRB     R1,[R7, R1]
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??Start_Line_24:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??Start_Line_25
// 1201     LianJie_center(k,END_Line_2);
        LDR.W    R0,??DataTable59_6
        LDRB     R1,[R0, #+0]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 1202   }
// 1203 }
??Start_Line_23:
        ADD      SP,SP,#+168
        POP      {R4-R8,PC}       ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable56:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable56_1:
        DC32     left_ceshi

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable56_2:
        DC32     right_ceshi

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable56_3:
        DC32     position_old_ceshi
// 1204 /*************起始线防抖判断与处理*END************/
// 1205 /******************虚线找断点算法*****************/
// 1206 //虚线找断点算法只能用于先找进出的断点

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1207 void xu_xian_find(char a,int i,int h)
// 1208 {
xu_xian_find:
        PUSH     {R3-R9,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
// 1209 	int16 f1=0,f2=0;
        MOVS     R7,#+0
        MOVS     R8,#+0
// 1210 	int16 m=0;
        MOVS     R9,#+0
// 1211 	if(a==0)
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??xu_xian_find_0
// 1212 	{
// 1213 		for(m=i;m>h;m--)
        MOV      R9,R5
        B.N      ??xu_xian_find_1
??xu_xian_find_2:
        SUBS     R9,R9,#+1
??xu_xian_find_1:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R6,R9
        BGE.N    ??xu_xian_find_3
// 1214 		{
// 1215 			if((!(bianyan2[a][m]==bianyan[a][m]))||bianyan2[a][m]<2)
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable59_8
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R1,#+55
        LDR.W    R2,??DataTable59_9
        MLA      R1,R1,R4,R2
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BNE.N    ??xu_xian_find_4
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable59_8
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        CMP      R0,#+2
        BCS.N    ??xu_xian_find_2
// 1216 			{
// 1217 				f1=m+1;
??xu_xian_find_4:
        ADDS     R7,R9,#+1
// 1218 				break;
        B.N      ??xu_xian_find_3
// 1219 			}
// 1220 		}
// 1221 		for(;m>h;m--)
??xu_xian_find_5:
        SUBS     R9,R9,#+1
??xu_xian_find_3:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R6,R9
        BGE.N    ??xu_xian_find_6
// 1222 		{
// 1223 			if(bianyan[a][m]>2)
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable59_9
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        CMP      R0,#+3
        BCC.N    ??xu_xian_find_5
// 1224 			{
// 1225 				if(bianyan2[a][m]==bianyan[a][m])
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable59_8
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R1,#+55
        LDR.W    R2,??DataTable59_9
        MLA      R1,R1,R4,R2
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BNE.N    ??xu_xian_find_5
// 1226 				{
// 1227 					f2=m;
        MOV      R8,R9
// 1228 					break;
// 1229 				}
// 1230 			}
// 1231 		}
// 1232 		
// 1233 		if(!(m==h))
??xu_xian_find_6:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,R6
        BEQ.N    ??xu_xian_find_0
// 1234 		{
// 1235 			LianJie(a,f1,f2);
        MOV      R2,R8
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,R7
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       LianJie
// 1236 			xu_xian_find(a,m,h);
        MOVS     R2,R6
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOV      R1,R9
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       xu_xian_find
// 1237 		}
// 1238 	}
// 1239 	if(a==1)
??xu_xian_find_0:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BNE.N    ??xu_xian_find_7
// 1240 	{
// 1241 		for(m=i;m>h;m--)
        MOV      R9,R5
        B.N      ??xu_xian_find_8
??xu_xian_find_9:
        SUBS     R9,R9,#+1
??xu_xian_find_8:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R6,R9
        BGE.N    ??xu_xian_find_10
// 1242 		{
// 1243 			if((!(bianyan2[a][m]==bianyan[a][m]))||bianyan2[a][m]>=V-3)
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable59_8
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R1,#+55
        LDR.W    R2,??DataTable59_9
        MLA      R1,R1,R4,R2
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BNE.N    ??xu_xian_find_11
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable59_8
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        CMP      R0,#+157
        BCC.N    ??xu_xian_find_9
// 1244 			{
// 1245 				f1=m+1;
??xu_xian_find_11:
        ADDS     R7,R9,#+1
// 1246 				break;
        B.N      ??xu_xian_find_10
// 1247 			}
// 1248 		}
// 1249 	
// 1250 		for(;m>h;m--)
??xu_xian_find_12:
        SUBS     R9,R9,#+1
??xu_xian_find_10:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R6,R9
        BGE.N    ??xu_xian_find_13
// 1251 		{
// 1252 			if(bianyan[a][m]<V-3)
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable59_9
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        CMP      R0,#+157
        BCS.N    ??xu_xian_find_12
// 1253 			{
// 1254 				if(bianyan2[a][m]==bianyan[a][m])
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R0,#+55
        LDR.W    R1,??DataTable59_8
        MLA      R0,R0,R4,R1
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        MOVS     R1,#+55
        LDR.W    R2,??DataTable59_9
        MLA      R1,R1,R4,R2
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BNE.N    ??xu_xian_find_12
// 1255 				{
// 1256 					f2=m;
        MOV      R8,R9
// 1257 					break;
// 1258 				}
// 1259 			}
// 1260 		}
// 1261 		
// 1262 		if(!(m==h))
??xu_xian_find_13:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,R6
        BEQ.N    ??xu_xian_find_7
// 1263 		{
// 1264 			LianJie(a,f1,f2);
        MOV      R2,R8
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,R7
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       LianJie
// 1265 			xu_xian_find(a,m,h);
        MOVS     R2,R6
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOV      R1,R9
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       xu_xian_find
// 1266 		}
// 1267 	}
// 1268 
// 1269 }
??xu_xian_find_7:
        POP      {R0,R4-R9,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57:
        DC32     position_ceshi

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_1:
        DC32     position_Save

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable57_2:
        DC32     Servo
// 1270 /******************虚线找断点算法END*****************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1271 void sub_e(uint8 value,uint8 S_end,uint8 M_start,uint8 M_end,uint8 B_start){
sub_e:
        PUSH     {R4-R6}
        LDR      R4,[SP, #+12]
// 1272   if(value<=M_start){
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R2,R0
        BCC.N    ??sub_e_0
// 1273     sub.s=100;
        LDR.W    R5,??DataTable63
        MOVS     R6,#+100
        STRH     R6,[R5, #+0]
// 1274     sub.m=0;
        LDR.W    R5,??DataTable63
        MOVS     R6,#+0
        STRH     R6,[R5, #+2]
// 1275     sub.b=0;
        LDR.W    R5,??DataTable63
        MOVS     R6,#+0
        STRH     R6,[R5, #+4]
// 1276   }
// 1277   if(value<S_end&&value>M_start){
??sub_e_0:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R0,R1
        BCS.N    ??sub_e_1
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R2,R0
        BCS.N    ??sub_e_1
// 1278     sub.s=100*(S_end-value)/(S_end-M_start);
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        SUBS     R5,R1,R0
        MOVS     R6,#+100
        MULS     R5,R6,R5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        SUBS     R6,R1,R2
        SDIV     R5,R5,R6
        LDR.W    R6,??DataTable63
        STRH     R5,[R6, #+0]
// 1279     sub.m=100*(value-M_start)/(S_end-M_start);
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        SUBS     R5,R0,R2
        MOVS     R6,#+100
        MULS     R5,R6,R5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        SUBS     R2,R1,R2
        SDIV     R2,R5,R2
        LDR.W    R5,??DataTable63
        STRH     R2,[R5, #+2]
// 1280     sub.b=0;
        LDR.W    R2,??DataTable63
        MOVS     R5,#+0
        STRH     R5,[R2, #+4]
// 1281   }
// 1282   if(value>=S_end&&value<=B_start){
??sub_e_1:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R0,R1
        BCC.N    ??sub_e_2
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R4,R0
        BCC.N    ??sub_e_2
// 1283     sub.s=0;
        LDR.W    R1,??DataTable63
        MOVS     R2,#+0
        STRH     R2,[R1, #+0]
// 1284     sub.m=100;
        LDR.W    R1,??DataTable63
        MOVS     R2,#+100
        STRH     R2,[R1, #+2]
// 1285     sub.b=0;
        LDR.W    R1,??DataTable63
        MOVS     R2,#+0
        STRH     R2,[R1, #+4]
// 1286   }
// 1287   if(value<M_end&&value>B_start){
??sub_e_2:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R0,R3
        BCS.N    ??sub_e_3
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R4,R0
        BCS.N    ??sub_e_3
// 1288     sub.s=0;
        LDR.W    R1,??DataTable63
        MOVS     R2,#+0
        STRH     R2,[R1, #+0]
// 1289     sub.m=100*(M_end-value)/(M_end-B_start);
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        SUBS     R1,R3,R0
        MOVS     R2,#+100
        MULS     R1,R2,R1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        SUBS     R2,R3,R4
        SDIV     R1,R1,R2
        LDR.W    R2,??DataTable63
        STRH     R1,[R2, #+2]
// 1290     sub.b=100*(value-B_start)/(M_end-B_start);
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        SUBS     R1,R0,R4
        MOVS     R2,#+100
        MULS     R1,R2,R1
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        SUBS     R2,R3,R4
        SDIV     R1,R1,R2
        LDR.W    R2,??DataTable63
        STRH     R1,[R2, #+4]
// 1291   }
// 1292   if(value>=M_end){
??sub_e_3:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R0,R3
        BCC.N    ??sub_e_4
// 1293     sub.s=0;
        LDR.W    R0,??DataTable63
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
// 1294     sub.m=0;
        LDR.W    R0,??DataTable63
        MOVS     R1,#+0
        STRH     R1,[R0, #+2]
// 1295     sub.b=100;
        LDR.W    R0,??DataTable63
        MOVS     R1,#+100
        STRH     R1,[R0, #+4]
// 1296   }
// 1297 }
??sub_e_4:
        POP      {R4-R6}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58:
        DC32     Servo_Middle

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_1:
        DC32     Servo_value

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_2:
        DC32     Servo_Right

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_3:
        DC32     Servo_Left

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_4:
        DC32     0x40039010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_5:
        DC32     Judage_right_hang

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_6:
        DC32     Judage_right_lie

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_7:
        DC32     Judage_left_hang

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_8:
        DC32     Judage_left_lie

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_9:
        DC32     bianyan

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_10:
        DC32     BW

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_11:
        DC32     BW2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_12:
        DC32     video

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_13:
        DC32     BW3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_14:
        DC32     BW4

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable58_15:
        DC32     BW+0x63
// 1298 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1299 int16 motor_fuzzy(int16 e,int16 ec,int16 S_end,int16 M_start,int16 M_end,int16 B_start,int16 Sc_end,int16 Mc_start,int16 Mc_end,int16 Bc_start)
// 1300 {
motor_fuzzy:
        PUSH     {R2-R11,LR}
        SUB      SP,SP,#+84
        MOVS     R4,R0
        MOVS     R5,R1
        LDRSH    R6,[SP, #+128]
        LDRSH    R7,[SP, #+132]
        LDRSH    R8,[SP, #+136]
        LDRSH    R9,[SP, #+140]
        LDRSH    R10,[SP, #+144]
        LDRSH    R11,[SP, #+148]
// 1301   volatile int16 ib=0,im=0,is=0,iz=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+8]
        MOVS     R0,#+0
        STRH     R0,[SP, #+6]
        MOVS     R0,#+0
        STRH     R0,[SP, #+4]
        MOVS     R0,#+0
        STRH     R0,[SP, #+18]
// 1302   volatile int16 Se=0,Me=0,Be=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+16]
        MOVS     R0,#+0
        STRH     R0,[SP, #+14]
        MOVS     R0,#+0
        STRH     R0,[SP, #+12]
// 1303   volatile int16 Sc=0,Mc=0,Bc=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+10]
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 1304   int16 vb[6]={0};
        ADD      R0,SP,#+60
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        STM      R0!,{R1-R3}
        SUBS     R0,R0,#+12
// 1305   int16 vm[6]={0};
        ADD      R0,SP,#+48
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        STM      R0!,{R1-R3}
        SUBS     R0,R0,#+12
// 1306   int16 vs[6]={0};
        ADD      R0,SP,#+36
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        STM      R0!,{R1-R3}
        SUBS     R0,R0,#+12
// 1307   int16 vz[6]={0};
        ADD      R0,SP,#+72
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        STM      R0!,{R1-R3}
        SUBS     R0,R0,#+12
// 1308   volatile long Ks=0,Km=0,Kb=0,Kz=0;
        MOVS     R0,#+0
        STR      R0,[SP, #+28]
        MOVS     R0,#+0
        STR      R0,[SP, #+24]
        MOVS     R0,#+0
        STR      R0,[SP, #+20]
        MOVS     R0,#+0
        STR      R0,[SP, #+32]
// 1309   int16 *f;
// 1310   Motor.P=0;
        LDR.W    R0,??DataTable63_1
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
// 1311   Motor.I=0;
        LDR.W    R0,??DataTable63_1
        MOVS     R1,#+0
        STRH     R1,[R0, #+2]
// 1312 
// 1313   e=abs(e);
        MOVS     R0,R4
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R4,R0
// 1314   ec=abs(ec);
        MOVS     R0,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R5,R0
// 1315   
// 1316   sub_e(e,S_end,M_start,M_end,B_start);
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        STR      R7,[SP, #+0]
        MOVS     R3,R6
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        LDRH     R2,[SP, #+88]
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        LDRH     R1,[SP, #+84]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        MOVS     R0,R4
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       sub_e
// 1317  
// 1318   Se=sub.s;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+0]
        STRH     R0,[SP, #+16]
// 1319   Me=sub.m;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+2]
        STRH     R0,[SP, #+14]
// 1320   Be=sub.b;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+4]
        STRH     R0,[SP, #+12]
// 1321 
// 1322   sub_e(ec,Sc_end,Mc_start,Mc_end,Bc_start);
        UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
        STR      R11,[SP, #+0]
        MOV      R3,R10
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        MOV      R2,R9
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOV      R1,R8
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        MOVS     R0,R5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       sub_e
// 1323  
// 1324   Sc=sub.s;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+0]
        STRH     R0,[SP, #+10]
// 1325   Mc=sub.m;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+2]
        STRH     R0,[SP, #+2]
// 1326   Bc=sub.b;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+4]
        STRH     R0,[SP, #+0]
// 1327 
// 1328 
// 1329   if(Se&&Sc)  {vm[im]=min(Se,Sc);im++;}  //P建表
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_0
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_0
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1330   if(Se&&Mc)  {vs[is]=min(Se,Mc);is++;}  
??motor_fuzzy_0:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_1
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_1
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1331   if(Se&&Bc)  {vs[is]=min(Se,Bc);is++;}
??motor_fuzzy_1:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_2
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_2
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1332   if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
??motor_fuzzy_2:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_3
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_3
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1333   if(Me&&Mc)  {vm[im]=min(Me,Mc);im++;}
??motor_fuzzy_3:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_4
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_4
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1334   if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
??motor_fuzzy_4:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_5
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_5
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1335   if(Be&&Sc)  {vb[ib]=min(Be,Sc);ib++;}
??motor_fuzzy_5:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_6
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_6
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+60
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1336   if(Be&&Mc)  {vb[ib]=min(Be,Mc);ib++;} 
??motor_fuzzy_6:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_7
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_7
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+60
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1337   if(Be&&Bc)  {vm[im]=min(Be,Bc);im++;}
??motor_fuzzy_7:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_8
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_8
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1338 
// 1339 
// 1340   if(vs[0]){
??motor_fuzzy_8:
        LDRSH    R0,[SP, #+36]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_9
// 1341   f=&vs[0];
        ADD      R0,SP,#+36
// 1342   Ks=subjection_k(f,is);
        LDRSH    R1,[SP, #+4]
        BL       subjection_k
        STR      R0,[SP, #+28]
// 1343   }
// 1344   if(vm[0]){
??motor_fuzzy_9:
        LDRSH    R0,[SP, #+48]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_10
// 1345   f=&vm[0];
        ADD      R0,SP,#+48
// 1346   Km=subjection_k(f,im);
        LDRSH    R1,[SP, #+6]
        BL       subjection_k
        STR      R0,[SP, #+24]
// 1347   }
// 1348   if(vb[0]){
??motor_fuzzy_10:
        LDRSH    R0,[SP, #+60]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_11
// 1349   f=&vb[0];
        ADD      R0,SP,#+60
// 1350   Kb=subjection_k(f,ib);
        LDRSH    R1,[SP, #+8]
        BL       subjection_k
        STR      R0,[SP, #+20]
// 1351   }
// 1352 
// 1353   Motor.P=(MP_B*Kb+MP_M*Km+MP_S*Ks)/(Kb+Km+Ks);
??motor_fuzzy_11:
        LDR      R0,[SP, #+20]
        MOV      R1,#+480
        LDR      R2,[SP, #+24]
        MOV      R3,#+440
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR      R1,[SP, #+28]
        MOV      R2,#+400
        MLA      R0,R2,R1,R0
        LDR      R1,[SP, #+20]
        LDR      R2,[SP, #+24]
        ADDS     R1,R2,R1
        LDR      R2,[SP, #+28]
        ADDS     R1,R2,R1
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable63_1
        STRH     R0,[R1, #+0]
// 1354 
// 1355   
// 1356   for(is=0;is<6;is++){
        MOVS     R0,#+0
        STRH     R0,[SP, #+4]
        B.N      ??motor_fuzzy_12
// 1357     vs[is]=0;
??motor_fuzzy_13:
        LDRSH    R0,[SP, #+4]
        ADD      R1,SP,#+36
        MOVS     R2,#+0
        STRH     R2,[R1, R0, LSL #+1]
// 1358     vm[is]=0;
        LDRSH    R0,[SP, #+4]
        ADD      R1,SP,#+48
        MOVS     R2,#+0
        STRH     R2,[R1, R0, LSL #+1]
// 1359     vb[is]=0;
        LDRSH    R0,[SP, #+4]
        ADD      R1,SP,#+60
        MOVS     R2,#+0
        STRH     R2,[R1, R0, LSL #+1]
// 1360   }
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
??motor_fuzzy_12:
        LDRSH    R0,[SP, #+4]
        CMP      R0,#+6
        BLT.N    ??motor_fuzzy_13
// 1361   is=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+4]
// 1362   im=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+6]
// 1363   ib=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+8]
// 1364   Ks=0;Km=0;Kb=0;Kz=0;
        MOVS     R0,#+0
        STR      R0,[SP, #+28]
        MOVS     R0,#+0
        STR      R0,[SP, #+24]
        MOVS     R0,#+0
        STR      R0,[SP, #+20]
        MOVS     R0,#+0
        STR      R0,[SP, #+32]
// 1365   ///////////////////////////////////////I参数
// 1366   if(Se&&Sc)  {vb[ib]=min(Se,Sc);ib++;}  //建表
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_14
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_14
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+60
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1367   if(Se&&Mc)  {vb[ib]=min(Se,Mc);ib++;}
??motor_fuzzy_14:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_15
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_15
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+60
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1368   if(Se&&Bc)  {vm[im]=min(Se,Bc);im++;}
??motor_fuzzy_15:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_16
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_16
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1369   if(Me&&Sc)  {vz[iz]=min(Me,Sc);iz++;}
??motor_fuzzy_16:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_17
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_17
        LDRSH    R4,[SP, #+18]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+72
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+18]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+18]
// 1370   if(Me&&Mc)  {vs[is]=min(Me,Mc);is++;}
??motor_fuzzy_17:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_18
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_18
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1371   if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
??motor_fuzzy_18:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_19
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_19
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+36
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1372   if(Be&&Sc)  {vz[iz]=min(Be,Sc);iz++;}
??motor_fuzzy_19:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_20
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_20
        LDRSH    R4,[SP, #+18]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+72
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+18]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+18]
// 1373   if(Be&&Mc)  {vz[iz]=min(Be,Mc);iz++;} 
??motor_fuzzy_20:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_21
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_21
        LDRSH    R4,[SP, #+18]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+72
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+18]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+18]
// 1374   if(Be&&Bc)  {vz[iz]=min(Be,Bc);iz++;}
??motor_fuzzy_21:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_22
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_22
        LDRSH    R4,[SP, #+18]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+72
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+18]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+18]
// 1375 
// 1376   if(vz[0]){
??motor_fuzzy_22:
        LDRSH    R0,[SP, #+72]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_23
// 1377   f=&vz[0];
        ADD      R0,SP,#+72
// 1378   Kz=subjection_k(f,iz);
        LDRSH    R1,[SP, #+18]
        BL       subjection_k
        STR      R0,[SP, #+32]
// 1379   }
// 1380   if(vs[0]){
??motor_fuzzy_23:
        LDRSH    R0,[SP, #+36]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_24
// 1381   f=&vs[0];
        ADD      R0,SP,#+36
// 1382   Ks=subjection_k(f,is);
        LDRSH    R1,[SP, #+4]
        BL       subjection_k
        STR      R0,[SP, #+28]
// 1383   }
// 1384   if(vm[0]){
??motor_fuzzy_24:
        LDRSH    R0,[SP, #+48]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_25
// 1385   f=&vm[0];
        ADD      R0,SP,#+48
// 1386   Km=subjection_k(f,im);
        LDRSH    R1,[SP, #+6]
        BL       subjection_k
        STR      R0,[SP, #+24]
// 1387   }
// 1388   if(vb[0]){
??motor_fuzzy_25:
        LDRSH    R0,[SP, #+60]
        CMP      R0,#+0
        BEQ.N    ??motor_fuzzy_26
// 1389   f=&vb[0];
        ADD      R0,SP,#+60
// 1390   Kb=subjection_k(f,ib);
        LDRSH    R1,[SP, #+8]
        BL       subjection_k
        STR      R0,[SP, #+20]
// 1391   }
// 1392   
// 1393   Motor.I=(MI_B*Kb+MI_M*Km+MI_S*Ks)/(Kb+Km+Ks+Kz);
??motor_fuzzy_26:
        LDR      R0,[SP, #+20]
        MOVS     R1,#+12
        LDR      R2,[SP, #+24]
        MOVS     R3,#+9
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR      R1,[SP, #+28]
        MOVS     R2,#+6
        MLA      R0,R2,R1,R0
        LDR      R1,[SP, #+20]
        LDR      R2,[SP, #+24]
        ADDS     R1,R2,R1
        LDR      R2,[SP, #+28]
        ADDS     R1,R2,R1
        LDR      R2,[SP, #+32]
        ADDS     R1,R2,R1
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable63_1
        STRH     R0,[R1, #+2]
// 1394 }
        ADD      SP,SP,#+92
        POP      {R4-R11,PC}      ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable59:
        DC32     BW2+0x77

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable59_1:
        DC32     BW3+0x4F

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable59_2:
        DC32     BW4+0x8B

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable59_3:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable59_4:
        DC32     `?<Constant {1, 2, 3, 3, 4}>`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable59_5:
        DC32     xu_xian2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable59_6:
        DC32     END_Line_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable59_7:
        DC32     start_line2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable59_8:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable59_9:
        DC32     bianyan
// 1395 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1396 int16 speed_fuzzy(int16 e,int16 ec,int16 s_end,int16 m_start,int16 b_start,int16 m_end,int16 sc_end,int16 mc_start,int16 bc_start,int16 mc_end)
// 1397 {
speed_fuzzy:
        PUSH     {R0,R2,R4-R11,LR}
        SUB      SP,SP,#+84
        MOVS     R5,R1
        MOVS     R4,R3
        LDRSH    R10,[SP, #+128]
        LDRSH    R11,[SP, #+132]
        LDRSH    R6,[SP, #+136]
        LDRSH    R7,[SP, #+140]
        LDRSH    R8,[SP, #+144]
        LDRSH    R9,[SP, #+148]
// 1398   volatile int16 ib=0,im=0,is=0,exspeed=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+6]
        MOVS     R0,#+0
        STRH     R0,[SP, #+8]
        MOVS     R0,#+0
        STRH     R0,[SP, #+4]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 1399   volatile int16 Se=0,Me=0,Be=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+16]
        MOVS     R0,#+0
        STRH     R0,[SP, #+14]
        MOVS     R0,#+0
        STRH     R0,[SP, #+12]
// 1400   volatile int16 Sc=0,Mc=0,Bc=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+10]
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 1401   int16 vb[8]={0};
        ADD      R0,SP,#+48
        MOVS     R1,#+16
        BL       __aeabi_memclr4
// 1402   int16 vm[8]={0};
        ADD      R0,SP,#+64
        MOVS     R1,#+16
        BL       __aeabi_memclr4
// 1403   int16 vs[8]={0};
        ADD      R0,SP,#+32
        MOVS     R1,#+16
        BL       __aeabi_memclr4
// 1404   volatile long Ks=0,Km=0,Kb=0;
        MOVS     R0,#+0
        STR      R0,[SP, #+28]
        MOVS     R0,#+0
        STR      R0,[SP, #+24]
        MOVS     R0,#+0
        STR      R0,[SP, #+20]
// 1405   int16 *f;
// 1406   
// 1407   sub_e(e,s_end,m_start,b_start,m_end); //变化差
        UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
        STR      R11,[SP, #+0]
        MOV      R3,R10
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        MOVS     R2,R4
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        LDRH     R1,[SP, #+88]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDRH     R0,[SP, #+84]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       sub_e
// 1408   Se=sub.s;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+0]
        STRH     R0,[SP, #+16]
// 1409   Me=sub.m;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+2]
        STRH     R0,[SP, #+14]
// 1410   Be=sub.b;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+4]
        STRH     R0,[SP, #+12]
// 1411   
// 1412   sub_e(abs(ec),sc_end,mc_start,bc_start,mc_end);  //变化率
        MOVS     R0,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
        STR      R9,[SP, #+0]
        MOV      R3,R8
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        MOVS     R2,R7
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R1,R6
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       sub_e
// 1413   Sc=sub.s;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+0]
        STRH     R0,[SP, #+10]
// 1414   Mc=sub.m;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+2]
        STRH     R0,[SP, #+2]
// 1415   Bc=sub.b;
        LDR.W    R0,??DataTable63
        LDRH     R0,[R0, #+4]
        STRH     R0,[SP, #+0]
// 1416   
// 1417   
// 1418   if(ec<0){                             //看到的点数在增加
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BPL.W    ??speed_fuzzy_0
// 1419   /*
// 1420     if(Se&&Sc)  {vm[im]=min(Se,Sc);im++;}  //建表
// 1421     if(Se&&Mc)  {vb[ib]=min(Se,Mc);ib++;}  
// 1422     if(Se&&Bc)  {vb[ib]=min(Se,Bc);ib++;}
// 1423     if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
// 1424     if(Me&&Mc)  {vm[im]=min(Me,Mc);im++;}
// 1425     if(Me&&Bc)  {vb[ib]=min(Me,Bc);ib++;}
// 1426     if(Be&&Sc)  {vm[im]=min(Be,Sc);im++;}
// 1427     if(Be&&Mc)  {vb[ib]=min(Be,Mc);ib++;} 
// 1428     if(Be&&Bc)  {vs[ib]=min(Be,Bc);ib++;}
// 1429    */
// 1430   if(Se&&Sc)  {vs[is]=min(Se,Sc);is++;}  //建表
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_1
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_1
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1431   if(Se&&Mc)  {vm[im]=min(Se,Mc);im++;}  //b
??speed_fuzzy_1:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_2
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_2
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+64
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1432   if(Se&&Bc)  {vb[ib]=min(Se,Bc);ib++;}
??speed_fuzzy_2:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_3
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_3
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1433   if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
??speed_fuzzy_3:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_4
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_4
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+64
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1434   if(Me&&Mc)  {vb[ib]=min(Me,Mc);ib++;}
??speed_fuzzy_4:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_5
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_5
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1435   if(Me&&Bc)  {vb[ib]=min(Me,Bc);ib++;}
??speed_fuzzy_5:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_6
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_6
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1436   if(Be&&Sc)  {vb[ib]=min(Be,Sc);ib++;}
??speed_fuzzy_6:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_7
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_7
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1437   if(Be&&Mc)  {vb[ib]=min(Be,Mc);ib++;} 
??speed_fuzzy_7:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_8
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_8
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1438   if(Be&&Bc)  {vb[ib]=min(Be,Bc);ib++;} 
??speed_fuzzy_8:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_9
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_9
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1439     if(vs[0]){
??speed_fuzzy_9:
        LDRSH    R0,[SP, #+32]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_10
// 1440     f=&vs[0];
        ADD      R0,SP,#+32
// 1441     Ks=subjection_k(f,is);
        LDRSH    R1,[SP, #+4]
        BL       subjection_k
        STR      R0,[SP, #+28]
// 1442     }
// 1443     if(vm[0]){
??speed_fuzzy_10:
        LDRSH    R0,[SP, #+64]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_11
// 1444     f=&vm[0];
        ADD      R0,SP,#+64
// 1445     Km=subjection_k(f,im);
        LDRSH    R1,[SP, #+8]
        BL       subjection_k
        STR      R0,[SP, #+24]
// 1446     }
// 1447     if(vb[0]){
??speed_fuzzy_11:
        LDRSH    R0,[SP, #+48]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_12
// 1448     f=&vb[0];
        ADD      R0,SP,#+48
// 1449     Kb=subjection_k(f,ib);
        LDRSH    R1,[SP, #+6]
        BL       subjection_k
        STR      R0,[SP, #+20]
// 1450     }
// 1451     
// 1452     exspeed=(speed_b*Kb+speed_m*Km+speed_s*Ks)/(Kb+Km+Ks);
??speed_fuzzy_12:
        LDR.N    R0,??DataTable63_2
        LDRSH    R0,[R0, #+0]
        LDR      R1,[SP, #+20]
        LDR.N    R2,??DataTable63_3
        LDRSH    R2,[R2, #+0]
        LDR      R3,[SP, #+24]
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR.N    R1,??DataTable63_4
        LDRSH    R1,[R1, #+0]
        LDR      R2,[SP, #+28]
        MLA      R0,R2,R1,R0
        LDR      R1,[SP, #+20]
        LDR      R2,[SP, #+24]
        ADDS     R1,R2,R1
        LDR      R2,[SP, #+28]
        ADDS     R1,R2,R1
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+0]
        B.N      ??speed_fuzzy_13
// 1453   }else{
// 1454    /*                                        //看到的点数在减少
// 1455     if(Se&&Sc)  {vb[ib]=min(Se,Sc);ib++;}  //建表
// 1456     if(Se&&Mc)  {vm[im]=min(Se,Mc);im++;}
// 1457     if(Se&&Bc)  {vs[is]=min(Se,Bc);is++;}
// 1458     if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
// 1459     if(Me&&Mc)  {vm[im]=min(Me,Mc);im++;}
// 1460     if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
// 1461     if(Be&&Sc)  {vb[ib]=min(Be,Sc);ib++;}
// 1462     if(Be&&Mc)  {vm[im]=min(Be,Mc);im++;} 
// 1463     if(Be&&Bc)  {vs[is]=min(Be,Bc);is++;}
// 1464    */
// 1465   
// 1466   if(Se&&Sc)  {vs[is]=min(Se,Sc);is++;}  //建表 4.10
??speed_fuzzy_0:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_14
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_14
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1467   if(Se&&Mc)  {vs[is]=min(Se,Mc);is++;}
??speed_fuzzy_14:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_15
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_15
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1468   if(Se&&Bc)  {vs[is]=min(Se,Bc);is++;}
??speed_fuzzy_15:
        LDRSH    R0,[SP, #+16]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_16
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_16
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+16]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1469   if(Me&&Sc)  {vm[im]=min(Me,Sc);im++;}
??speed_fuzzy_16:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_17
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_17
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+64
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1470   if(Me&&Mc)  {vs[is]=min(Me,Mc);is++;}
??speed_fuzzy_17:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_18
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_18
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1471   if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
??speed_fuzzy_18:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_19
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_19
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+14]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1472   if(Be&&Sc)  {vb[ib]=min(Be,Sc);ib++;}
??speed_fuzzy_19:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_20
        LDRSH    R0,[SP, #+10]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_20
        LDRSH    R4,[SP, #+6]
        LDRSH    R1,[SP, #+10]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+48
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+6]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+6]
// 1473   if(Be&&Mc)  {vm[im]=min(Be,Mc);im++;}
??speed_fuzzy_20:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_21
        LDRSH    R0,[SP, #+2]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_21
        LDRSH    R4,[SP, #+8]
        LDRSH    R1,[SP, #+2]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+64
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+8]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+8]
// 1474   if(Be&&Bc)  {vs[is]=min(Be,Bc);is++;}
??speed_fuzzy_21:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_22
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_22
        LDRSH    R4,[SP, #+4]
        LDRSH    R1,[SP, #+0]
        LDRSH    R0,[SP, #+12]
        BL       min
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        ADD      R1,SP,#+32
        STRH     R0,[R1, R4, LSL #+1]
        LDRH     R0,[SP, #+4]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+4]
// 1475 /* 
// 1476   if(Se&&Sc)  {vs[is]=min(Se,Sc);is++;}  //建表  6.5
// 1477   if(Se&&Mc)  {vs[is]=min(Se,Mc);is++;}
// 1478   if(Se&&Bc)  {vs[is]=min(Se,Bc);is++;}
// 1479   if(Me&&Sc)  {vs[is]=min(Me,Sc);is++;}
// 1480   if(Me&&Mc)  {vs[is]=min(Me,Mc);is++;}
// 1481   if(Me&&Bc)  {vs[is]=min(Me,Bc);is++;}
// 1482   if(Be&&Sc)  {vm[im]=min(Be,Sc);im++;}
// 1483   if(Be&&Mc)  {vs[is]=min(Be,Mc);is++;} 
// 1484   if(Be&&Bc)  {vs[is]=min(Be,Bc);is++;}
// 1485   */
// 1486     if(vs[0]){
??speed_fuzzy_22:
        LDRSH    R0,[SP, #+32]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_23
// 1487     f=&vs[0];
        ADD      R0,SP,#+32
// 1488     Ks=subjection_k(f,is);
        LDRSH    R1,[SP, #+4]
        BL       subjection_k
        STR      R0,[SP, #+28]
// 1489     }
// 1490     if(vm[0]){
??speed_fuzzy_23:
        LDRSH    R0,[SP, #+64]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_24
// 1491     f=&vm[0];
        ADD      R0,SP,#+64
// 1492     Km=subjection_k(f,im);
        LDRSH    R1,[SP, #+8]
        BL       subjection_k
        STR      R0,[SP, #+24]
// 1493     }
// 1494     if(vb[0]){
??speed_fuzzy_24:
        LDRSH    R0,[SP, #+48]
        CMP      R0,#+0
        BEQ.N    ??speed_fuzzy_25
// 1495     f=&vb[0];
        ADD      R0,SP,#+48
// 1496     Kb=subjection_k(f,ib);
        LDRSH    R1,[SP, #+6]
        BL       subjection_k
        STR      R0,[SP, #+20]
// 1497     }
// 1498     
// 1499 
// 1500     exspeed=(speed_b*Kb+speed_m*Km+speed_s*Ks)/(Kb+Km+Ks);
??speed_fuzzy_25:
        LDR.N    R0,??DataTable63_2
        LDRSH    R0,[R0, #+0]
        LDR      R1,[SP, #+20]
        LDR.N    R2,??DataTable63_3
        LDRSH    R2,[R2, #+0]
        LDR      R3,[SP, #+24]
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR.N    R1,??DataTable63_4
        LDRSH    R1,[R1, #+0]
        LDR      R2,[SP, #+28]
        MLA      R0,R2,R1,R0
        LDR      R1,[SP, #+20]
        LDR      R2,[SP, #+24]
        ADDS     R1,R2,R1
        LDR      R2,[SP, #+28]
        ADDS     R1,R2,R1
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+0]
// 1501   }
// 1502   
// 1503   return exspeed;
??speed_fuzzy_13:
        LDRSH    R0,[SP, #+0]
        ADD      SP,SP,#+92
        POP      {R4-R11,PC}      ;; return
// 1504 }
// 1505 
// 1506 
// 1507 /*****找到莫连续几行的中心线的最大最小值******/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1508 int16 line_min(uint8 *head,uint8 *tail){
line_min:
        PUSH     {R4}
// 1509   uint8 *p=NULL;
        MOVS     R2,#+0
// 1510   point.x=*head;
        LDR.N    R3,??DataTable63_5
        LDRB     R4,[R0, #+0]
        STRB     R4,[R3, #+0]
// 1511   point.y=0;
        LDR.N    R3,??DataTable63_5
        MOVS     R4,#+0
        STRB     R4,[R3, #+1]
// 1512   for(p=head+1;p<=tail;p++){
        ADDS     R3,R0,#+1
        MOVS     R2,R3
        B.N      ??line_min_0
// 1513     if(*p<point.x){
??line_min_1:
        LDRB     R3,[R2, #+0]
        LDR.N    R4,??DataTable63_5
        LDRB     R4,[R4, #+0]
        CMP      R3,R4
        BCS.N    ??line_min_2
// 1514       point.x=*p;
        LDR.N    R3,??DataTable63_5
        LDRB     R4,[R2, #+0]
        STRB     R4,[R3, #+0]
// 1515 
// 1516 
// 1517 
// 1518        point.y=p-head;
        SUBS     R3,R2,R0
        LDR.N    R4,??DataTable63_5
        STRB     R3,[R4, #+1]
// 1519     }  
// 1520   }
??line_min_2:
        ADDS     R2,R2,#+1
??line_min_0:
        CMP      R1,R2
        BCS.N    ??line_min_1
// 1521   return point.x;
        LDR.N    R0,??DataTable63_5
        LDRB     R0,[R0, #+0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        POP      {R4}
        BX       LR               ;; return
// 1522 }                                                                       
// 1523     
// 1524   
// 1525 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1526 int16 line_max(uint8 *head,uint8 *tail){
line_max:
        PUSH     {R4}
// 1527   uint8 *p=NULL;
        MOVS     R2,#+0
// 1528   
// 1529   point.x=*head;
        LDR.N    R3,??DataTable63_5
        LDRB     R4,[R0, #+0]
        STRB     R4,[R3, #+0]
// 1530   point.y=0;
        LDR.N    R3,??DataTable63_5
        MOVS     R4,#+0
        STRB     R4,[R3, #+1]
// 1531   for(p=head+1;p<=tail;p++){
        ADDS     R3,R0,#+1
        MOVS     R2,R3
        B.N      ??line_max_0
// 1532     if(*p>point.x){
??line_max_1:
        LDR.N    R3,??DataTable63_5
        LDRB     R3,[R3, #+0]
        LDRB     R4,[R2, #+0]
        CMP      R3,R4
        BCS.N    ??line_max_2
// 1533       point.x=*p;
        LDR.N    R3,??DataTable63_5
        LDRB     R4,[R2, #+0]
        STRB     R4,[R3, #+0]
// 1534       point.y=p-head;
        SUBS     R3,R2,R0
        LDR.N    R4,??DataTable63_5
        STRB     R3,[R4, #+1]
// 1535     }
// 1536   }
??line_max_2:
        ADDS     R2,R2,#+1
??line_max_0:
        CMP      R1,R2
        BCS.N    ??line_max_1
// 1537   return point.x;
        LDR.N    R0,??DataTable63_5
        LDRB     R0,[R0, #+0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        POP      {R4}
        BX       LR               ;; return
// 1538 }
// 1539 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1540 int16 line(int16 value,int16 lenth){
line:
        PUSH     {R4,R5}
// 1541   static int16 line[30]={0},i=0;               //30
// 1542   int16 sum=0,j=0,k=0;
        MOVS     R2,#+0
        MOVS     R3,#+0
        MOVS     R4,#+0
// 1543   
// 1544   if(i==30) i=0;                                   
        LDR.N    R5,??DataTable63_6
        LDRSH    R5,[R5, #+0]
        CMP      R5,#+30
        BNE.N    ??line_1
        LDR.N    R3,??DataTable63_6
        MOVS     R4,#+0
        STRH     R4,[R3, #+0]
// 1545   line[i]=value;
??line_1:
        LDR.N    R3,??DataTable63_6
        LDRSH    R3,[R3, #+0]
        LDR.N    R4,??DataTable63_7
        STRH     R0,[R4, R3, LSL #+1]
// 1546   k=i++;
        LDR.N    R0,??DataTable63_6
        LDRSH    R4,[R0, #+0]
        LDR.N    R0,??DataTable63_6
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R3,??DataTable63_6
        STRH     R0,[R3, #+0]
// 1547   for(j=0;j<lenth;j++){
        MOVS     R3,#+0
        B.N      ??line_2
// 1548     if(k<0) k=29;
??line_3:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??line_4
        MOVS     R4,#+29
// 1549     sum+=line[k];
??line_4:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??DataTable63_7
        LDRH     R0,[R0, R4, LSL #+1]
        ADDS     R2,R0,R2
// 1550     k--;
        SUBS     R4,R4,#+1
// 1551   }
        ADDS     R3,R3,#+1
??line_2:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R3,R1
        BLT.N    ??line_3
// 1552   return sum;
        MOVS     R0,R2
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        POP      {R4,R5}
        BX       LR               ;; return
// 1553 }

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63:
        DC32     `sub`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_1:
        DC32     Motor

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_2:
        DC32     speed_b

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_3:
        DC32     speed_m

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_4:
        DC32     speed_s

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_5:
        DC32     point

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_6:
        DC32     ??i

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable63_7:
        DC32     ??line

        SECTION `.bss`:DATA:REORDER:NOROOT(2)
??line:
        DS8 60

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
??i:
        DS8 2
// 1554 
// 1555 /*******找到莫连续几行的中心线的最大最小值END********/
// 1556 
// 1557 /******************************************************
// 1558 *function name:int16 stages(int16 value,int16 parameter)
// 1559 *Description:  求出位置值
// 1560 *Imput:        value:算出的当场中心
// 1561                parameter：视场中心
// 1562 *Output:       位置值
// 1563 *Date:         2013.5.6
// 1564 *Name:         潘杰
// 1565 *******************************************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1566 int8 stages_P(int16 value,int16 parameter)
// 1567 {
// 1568   //if(!value) return unclear;
// 1569   if(value<=parameter)
stages_P:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BLT.N    ??stages_P_0
// 1570   {
// 1571     if(value>=(parameter-5)){NULL;return(0);}
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+5
        CMP      R0,R2
        BLT.N    ??stages_P_1
        MOVS     R0,#+0
        B.N      ??stages_P_2
// 1572     else if(value>=(parameter-10)){NULL;return(-1);}  
??stages_P_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+10
        CMP      R0,R2
        BLT.N    ??stages_P_3
        MOVS     R0,#+255
        B.N      ??stages_P_2
// 1573     else if(value>=(parameter-15)){NULL;return(-2);}    
??stages_P_3:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+15
        CMP      R0,R2
        BLT.N    ??stages_P_4
        MOVS     R0,#+254
        B.N      ??stages_P_2
// 1574     else if(value>=(parameter-20)){NULL;return(-3);}
??stages_P_4:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+20
        CMP      R0,R2
        BLT.N    ??stages_P_5
        MOVS     R0,#+253
        B.N      ??stages_P_2
// 1575     else if(value>=(parameter-25)){NULL;return(-4);}
??stages_P_5:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+25
        CMP      R0,R2
        BLT.N    ??stages_P_6
        MOVS     R0,#+252
        B.N      ??stages_P_2
// 1576     else if(value>=(parameter-30)){NULL;return(-5);}
??stages_P_6:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R1,R1,#+30
        CMP      R0,R1
        BLT.N    ??stages_P_7
        MOVS     R0,#+251
        B.N      ??stages_P_2
// 1577     else {NULL;return(-6);}
??stages_P_7:
        MOVS     R0,#+250
        B.N      ??stages_P_2
// 1578   }
// 1579   else
// 1580   {
// 1581     if(value<=(parameter+5)){NULL;return(0);}
??stages_P_0:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_P_8
        MOVS     R0,#+0
        B.N      ??stages_P_2
// 1582     else if(value<=(parameter+10)){NULL;return(1);}  
??stages_P_8:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+10
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_P_9
        MOVS     R0,#+1
        B.N      ??stages_P_2
// 1583     else if(value<=(parameter+15)){NULL;return(2);}    
??stages_P_9:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+15
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_P_10
        MOVS     R0,#+2
        B.N      ??stages_P_2
// 1584     else if(value<=(parameter+20)){NULL;return(3);}
??stages_P_10:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+20
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_P_11
        MOVS     R0,#+3
        B.N      ??stages_P_2
// 1585     else if(value<=(parameter+25)){NULL;return(4);}
??stages_P_11:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+25
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_P_12
        MOVS     R0,#+4
        B.N      ??stages_P_2
// 1586     else if(value<=(parameter+30)){NULL;return(5);}
??stages_P_12:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R1,R1,#+30
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BLT.N    ??stages_P_13
        MOVS     R0,#+5
        B.N      ??stages_P_2
// 1587     else {NULL;return(6);}
??stages_P_13:
        MOVS     R0,#+6
??stages_P_2:
        BX       LR               ;; return
// 1588   }
// 1589 }
// 1590 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1591 int8 stages_low_P(int16 value,int16 parameter)
// 1592 {
// 1593   //if(!value) return unclear;
// 1594   if(value<=parameter)
stages_low_P:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BLT.N    ??stages_low_P_0
// 1595   {
// 1596     if(value>=(parameter-5)){NULL;return(0);}
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+5
        CMP      R0,R2
        BLT.N    ??stages_low_P_1
        MOVS     R0,#+0
        B.N      ??stages_low_P_2
// 1597     else if(value>=(parameter-13)){NULL;return(-1);}  
??stages_low_P_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R1,#+13
        CMP      R0,R2
        BLT.N    ??stages_low_P_3
        MOVS     R0,#+255
        B.N      ??stages_low_P_2
// 1598     else if(value>=(parameter-23)){NULL;return(-2);}    
??stages_low_P_3:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R1,R1,#+23
        CMP      R0,R1
        BLT.N    ??stages_low_P_4
        MOVS     R0,#+254
        B.N      ??stages_low_P_2
// 1599     else {NULL;return(-3);}
??stages_low_P_4:
        MOVS     R0,#+253
        B.N      ??stages_low_P_2
// 1600   }
// 1601   else
// 1602   {
// 1603     if(value<=(parameter+5)){NULL;return(0);}
??stages_low_P_0:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_low_P_5
        MOVS     R0,#+0
        B.N      ??stages_low_P_2
// 1604     else if(value<=(parameter+13)){NULL;return(1);}  
??stages_low_P_5:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R2,R1,#+13
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R2,R0
        BLT.N    ??stages_low_P_6
        MOVS     R0,#+1
        B.N      ??stages_low_P_2
// 1605     else if(value<=(parameter+23)){NULL;return(2);}    
??stages_low_P_6:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R1,R1,#+23
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BLT.N    ??stages_low_P_7
        MOVS     R0,#+2
        B.N      ??stages_low_P_2
// 1606     else {NULL;return(3);}
??stages_low_P_7:
        MOVS     R0,#+3
??stages_low_P_2:
        BX       LR               ;; return
// 1607   }
// 1608 }
// 1609 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 1610 int8 stages_D(int16 value)
// 1611 {
// 1612   if(value<=0)
stages_D:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+1
        BGE.N    ??stages_D_0
// 1613   {
// 1614     if(value>=-5){NULL;return(0);}
        MVNS     R1,#+4
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_1
        MOVS     R0,#+0
        B.N      ??stages_D_2
// 1615     else if(value>=-10){NULL;return(-1);}  
??stages_D_1:
        MVNS     R1,#+9
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_3
        MOVS     R0,#+255
        B.N      ??stages_D_2
// 1616     else if(value>=-15){NULL;return(-2);}    
??stages_D_3:
        MVNS     R1,#+14
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_4
        MOVS     R0,#+254
        B.N      ??stages_D_2
// 1617     else if(value>=-20){NULL;return(-3);}
??stages_D_4:
        MVNS     R1,#+19
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_5
        MOVS     R0,#+253
        B.N      ??stages_D_2
// 1618     else if(value>=-25){NULL;return(-4);}
??stages_D_5:
        MVNS     R1,#+24
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_6
        MOVS     R0,#+252
        B.N      ??stages_D_2
// 1619     else if(value>=-30){NULL;return(-5);}
??stages_D_6:
        MVNS     R1,#+29
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,R1
        BLT.N    ??stages_D_7
        MOVS     R0,#+251
        B.N      ??stages_D_2
// 1620     else {NULL;return(-6);}
??stages_D_7:
        MOVS     R0,#+250
        B.N      ??stages_D_2
// 1621   }
// 1622   else
// 1623   {
// 1624     if(value<=5){NULL;return(0);}
??stages_D_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+6
        BGE.N    ??stages_D_8
        MOVS     R0,#+0
        B.N      ??stages_D_2
// 1625     else if(value<=10){NULL;return(1);}  
??stages_D_8:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+11
        BGE.N    ??stages_D_9
        MOVS     R0,#+1
        B.N      ??stages_D_2
// 1626     else if(value<=15){NULL;return(2);}    
??stages_D_9:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+16
        BGE.N    ??stages_D_10
        MOVS     R0,#+2
        B.N      ??stages_D_2
// 1627     else if(value<=20){NULL;return(3);}
??stages_D_10:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+21
        BGE.N    ??stages_D_11
        MOVS     R0,#+3
        B.N      ??stages_D_2
// 1628     else if(value<=25){NULL;return(4);}
??stages_D_11:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+26
        BGE.N    ??stages_D_12
        MOVS     R0,#+4
        B.N      ??stages_D_2
// 1629     else if(value<=30){NULL;return(5);}
??stages_D_12:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+31
        BGE.N    ??stages_D_13
        MOVS     R0,#+5
        B.N      ??stages_D_2
// 1630     else {NULL;return(6);}
??stages_D_13:
        MOVS     R0,#+6
??stages_D_2:
        BX       LR               ;; return
// 1631   }
// 1632 }
// 1633 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
// 1634 int8 choose_PD()
// 1635 {
choose_PD:
        PUSH     {R3-R11,LR}
// 1636   int16 i=0,num=0;
        MOVS     LR,#+0
        MOVS     R1,#+0
// 1637   uint8 track_form=0;//j=0,
        MOVS     R4,#+0
// 1638   int16 buff1=0;//,buff2=0,buff3=0
        MOVS     R10,#+0
// 1639   int8 position_now_P=0,position_now_low_P=0,position_now_D=0;
        MOVS     R5,#+0
        MOVS     R6,#+0
        MOVS     R0,#+0
// 1640   int16 line_head=0,line_end=54,line_mid=0;//line_head=30
        MOVS     R2,#+0
        MOVS     R3,#+54
        MOVS     R11,#+0
// 1641   int16 line_mid_d=0,line_end_d=0;
        MOVS     R9,#+0
        MOVS     R8,#+0
// 1642   int16 head=0,end=0;
        MOVS     R7,#+0
        MOVS     R12,#+0
        B.N      ??choose_PD_0
// 1643   while(!center[i]&&i<H)i++;
??choose_PD_1:
        ADDS     LR,LR,#+1
??choose_PD_0:
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        LDR.W    R0,??choose_PD_2
        LDRB     R0,[LR, R0]
        CMP      R0,#+0
        BNE.N    ??choose_PD_3
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        CMP      LR,#+55
        BLT.N    ??choose_PD_1
// 1644   topline=i;
??choose_PD_3:
        LDR.W    R0,??choose_PD_2+0x4
        STRH     LR,[R0, #+0]
// 1645 
// 1646   if(i<8)
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        CMP      LR,#+8
        BGE.N    ??choose_PD_4
// 1647   {
// 1648     track_form=3;
        MOVS     R4,#+3
// 1649     Servo.P=P_High;
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R5,??choose_PD_2+0xC
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+0]
// 1650     Servo.D=D_High;
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R5,??choose_PD_2+0x10
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+4]
// 1651     servo.head=H_High;
        LDR.W    R0,??choose_PD_2+0x14
        LDR.W    R5,??choose_PD_2+0x18
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+0]
// 1652     servo.tail=T_High;
        LDR.W    R0,??choose_PD_2+0x14
        LDR.W    R5,??choose_PD_2+0x1C
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+2]
// 1653   }
// 1654   if(i>=8&&i<22)
??choose_PD_4:
        SUBS     R0,LR,#+8
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+14
        BCS.N    ??choose_PD_5
// 1655   {
// 1656     track_form=2;
        MOVS     R4,#+2
// 1657     Servo.P=P_Mid;
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R5,??choose_PD_2+0x20
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+0]
// 1658     Servo.D=D_Mid;
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R5,??choose_PD_2+0x24
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+4]
// 1659     servo.head=H_Mid;
        LDR.W    R0,??choose_PD_2+0x14
        LDR.W    R5,??choose_PD_2+0x28
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+0]
// 1660     servo.tail=T_Mid;
        LDR.W    R0,??choose_PD_2+0x14
        LDR.W    R5,??choose_PD_2+0x2C
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+2]
// 1661   }
// 1662   if(i>=22)
??choose_PD_5:
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        CMP      LR,#+22
        BLT.N    ??choose_PD_6
// 1663   {
// 1664     track_form=1;
        MOVS     R4,#+1
// 1665     Servo.P=P_Low;
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R5,??choose_PD_2+0x30
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+0]
// 1666     Servo.D=D_Low;
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R5,??choose_PD_2+0x34
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+4]
// 1667     servo.head=H_Low;
        LDR.W    R0,??choose_PD_2+0x14
        LDR.W    R5,??choose_PD_2+0x38
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+0]
// 1668     servo.tail=T_Low;
        LDR.W    R0,??choose_PD_2+0x14
        LDR.W    R5,??choose_PD_2+0x3C
        LDRB     R5,[R5, #+0]
        STRH     R5,[R0, #+2]
// 1669   }
// 1670   
// 1671   for(i=servo.head;i<servo.tail;i++)
??choose_PD_6:
        LDR.W    R0,??choose_PD_2+0x14
        LDRSH    LR,[R0, #+0]
        B.N      ??choose_PD_7
// 1672   {
// 1673     if(center[i])
??choose_PD_8:
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        LDR.W    R0,??choose_PD_2
        LDRB     R0,[LR, R0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_9
// 1674     {
// 1675       num++;
        ADDS     R1,R1,#+1
// 1676       position_now+=center[i];
        LDR.W    R0,??choose_PD_2+0x40
        LDRH     R0,[R0, #+0]
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        LDR.W    R5,??choose_PD_2
        LDRB     R5,[LR, R5]
        ADDS     R0,R0,R5
        LDR.W    R5,??choose_PD_2+0x40
        STRH     R0,[R5, #+0]
// 1677     }  
// 1678   }
??choose_PD_9:
        ADDS     LR,LR,#+1
??choose_PD_7:
        LDR.W    R0,??choose_PD_2+0x14
        LDRSH    R0,[R0, #+2]
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        CMP      LR,R0
        BLT.N    ??choose_PD_8
// 1679   position_now=position_now/num;   //算出当场的中心位置
        LDR.W    R0,??choose_PD_2+0x40
        LDRSH    R0,[R0, #+0]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SDIV     R0,R0,R1
        LDR.W    R1,??choose_PD_2+0x40
        STRH     R0,[R1, #+0]
// 1680   num=0;
        MOVS     R1,#+0
// 1681   for(i=50;i<55;i++)
        MOVS     LR,#+50
        B.N      ??choose_PD_10
// 1682   {
// 1683     if(center[i])
??choose_PD_11:
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        LDR.W    R0,??choose_PD_2
        LDRB     R0,[LR, R0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_12
// 1684     {
// 1685       num++;
        ADDS     R1,R1,#+1
// 1686       position_now_low+=center[i];
        LDR.W    R0,??choose_PD_2+0x44
        LDRH     R0,[R0, #+0]
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        LDR.W    R5,??choose_PD_2
        LDRB     R5,[LR, R5]
        ADDS     R0,R0,R5
        LDR.W    R5,??choose_PD_2+0x44
        STRH     R0,[R5, #+0]
// 1687     }  
// 1688   }
??choose_PD_12:
        ADDS     LR,LR,#+1
??choose_PD_10:
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        CMP      LR,#+55
        BLT.N    ??choose_PD_11
// 1689   position_now_low=position_now_low/num;
        LDR.W    R0,??choose_PD_2+0x44
        LDRSH    R0,[R0, #+0]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SDIV     R0,R0,R1
        LDR.W    R1,??choose_PD_2+0x44
        STRH     R0,[R1, #+0]
        B.N      ??choose_PD_13
// 1690   
// 1691   while(center[line_head]==0) line_head++;
??choose_PD_14:
        ADDS     R2,R2,#+1
??choose_PD_13:
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        LDR.W    R0,??choose_PD_2
        LDRB     R0,[R2, R0]
        CMP      R0,#+0
        BEQ.N    ??choose_PD_14
// 1692   while(center[line_end]==0)  line_end--;
??choose_PD_15:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        LDR.W    R0,??choose_PD_2
        LDRB     R0,[R3, R0]
        CMP      R0,#+0
        BNE.N    ??choose_PD_16
        SUBS     R3,R3,#+1
        B.N      ??choose_PD_15
// 1693   line_end_d=(line_head+2*line_end)/3;
??choose_PD_16:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        LSLS     R0,R3,#+1
        SXTAH    R0,R0,R2
        MOVS     R1,#+3
        SDIV     R8,R0,R1
// 1694   line_mid_d=(line_end+2*line_head)/3;
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        LSLS     R0,R2,#+1
        SXTAH    R0,R0,R3
        MOVS     R1,#+3
        SDIV     R9,R0,R1
// 1695   for(i=line_head;i<line_mid_d;i++)head+=center[i];
        MOV      LR,R2
        B.N      ??choose_PD_17
??choose_PD_18:
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        LDR.W    R0,??choose_PD_2
        LDRB     R0,[LR, R0]
        ADDS     R7,R7,R0
        ADDS     LR,LR,#+1
??choose_PD_17:
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      LR,R9
        BLT.N    ??choose_PD_18
// 1696   head=head/(line_mid_d-line_head);
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        SUBS     R0,R9,R2
        SDIV     R7,R7,R0
// 1697   for(i=line_mid_d;i<=line_end_d;i++)end+=center[i];
        MOV      LR,R9
        B.N      ??choose_PD_19
??choose_PD_20:
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        LDR.W    R0,??choose_PD_2
        LDRB     R0,[LR, R0]
        ADDS     R12,R12,R0
        ADDS     LR,LR,#+1
??choose_PD_19:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     LR,LR            ;; SignExt  LR,LR,#+16,#+16
        CMP      R8,LR
        BGE.N    ??choose_PD_20
// 1698   end=end/(line_end_d-line_mid_d+1);
        SXTH     R12,R12          ;; SignExt  R12,R12,#+16,#+16
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SUBS     R0,R8,R9
        ADDS     R0,R0,#+1
        SDIV     R12,R12,R0
// 1699   position_diff=end-head;
        SUBS     R0,R12,R7
        LDR.W    R1,??choose_PD_21
        STRH     R0,[R1, #+0]
// 1700   
// 1701   position_now_low_P=stages_low_P(position_now_low,video_Middle);
        MOVS     R1,#+80
        LDR.W    R0,??choose_PD_2+0x44
        LDRSH    R0,[R0, #+0]
        BL       stages_low_P
        MOVS     R6,R0
// 1702   position_now_P=stages_P(position_now,video_Middle);
        MOVS     R1,#+80
        LDR.W    R0,??choose_PD_2+0x40
        LDRSH    R0,[R0, #+0]
        BL       stages_P
        MOVS     R5,R0
// 1703   position_now_D=stages_D(position_diff);
        LDR.W    R0,??choose_PD_21
        LDRSH    R0,[R0, #+0]
        BL       stages_D
// 1704   switch(position_now_P)
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R5,#+0
        BEQ.N    ??choose_PD_22
        CMP      R5,#+2
        BEQ.W    ??choose_PD_23
        BCC.W    ??choose_PD_24
        CMP      R5,#+4
        BEQ.W    ??choose_PD_25
        BCC.W    ??choose_PD_26
        CMP      R5,#+6
        BEQ.W    ??choose_PD_27
        BCC.W    ??choose_PD_28
        B.W      ??choose_PD_29
// 1705   {
// 1706   case -6:
// 1707     {
// 1708       switch(position_now_D)
// 1709       {
// 1710       case -6:
// 1711         {
// 1712           switch(track_form)
// 1713           {
// 1714           case 1:Servo.P+=5;Servo.D+=1;break;
// 1715           case 2:Servo.P+=5;Servo.D+=1;break;
// 1716           case 3:Servo.P+=5;Servo.D+=1;break;
// 1717           }
// 1718         }break;
// 1719       case -5:
// 1720         {
// 1721           switch(track_form)
// 1722           {
// 1723           case 1:Servo.P+=5;Servo.D+=0;break;
// 1724           case 2:Servo.P+=5;Servo.D+=0;break;
// 1725           case 3:Servo.P+=5;Servo.D+=0;break;
// 1726           }
// 1727         }break;
// 1728       case -4:
// 1729         {
// 1730           switch(track_form)
// 1731           {
// 1732           case 1:Servo.P+=5;Servo.D-=1;break;
// 1733           case 2:Servo.P+=5;Servo.D-=1;break;
// 1734           case 3:Servo.P+=5;Servo.D-=1;break;
// 1735           }
// 1736         }break;
// 1737       case -3:
// 1738         {
// 1739           switch(track_form)
// 1740           {
// 1741           case 1:Servo.P+=5;Servo.D-=2;break;
// 1742           case 2:Servo.P+=5;Servo.D-=2;break;
// 1743           case 3:Servo.P+=5;Servo.D-=2;break;
// 1744           }
// 1745         }break;
// 1746       case -2:
// 1747         {
// 1748           switch(track_form)
// 1749           {
// 1750           case 1:Servo.P+=5;Servo.D-=3;break;
// 1751           case 2:Servo.P+=5;Servo.D-=3;break;
// 1752           case 3:Servo.P+=5;Servo.D-=3;break;
// 1753           }
// 1754         }break;
// 1755       case -1:
// 1756         {
// 1757           switch(track_form)
// 1758           {
// 1759           case 1:Servo.P+=5;Servo.D-=4;break;
// 1760           case 2:Servo.P+=5;Servo.D-=4;break;
// 1761           case 3:Servo.P+=5;Servo.D-=4;break;
// 1762           }
// 1763         }break;
// 1764       case 0:Servo.P+=5;break;
// 1765       case 1:
// 1766         {
// 1767           switch(track_form)
// 1768           {
// 1769           case 1:Servo.P+=5;Servo.D+=1;break;
// 1770           case 2:Servo.P+=5;Servo.D+=1;break;
// 1771           case 3:Servo.P+=5;Servo.D+=1;break;
// 1772           }
// 1773         }break;
// 1774       case 2:
// 1775         {
// 1776           switch(track_form)
// 1777           {
// 1778           case 1:Servo.P+=5;Servo.D+=1;break;
// 1779           case 2:Servo.P+=5;Servo.D+=1;break;
// 1780           case 3:Servo.P+=5;Servo.D+=1;break;
// 1781           }
// 1782         }break;
// 1783       case 3:
// 1784         {
// 1785           switch(track_form)
// 1786           {
// 1787           case 1:Servo.P+=5;Servo.D+=2;break;
// 1788           case 2:Servo.P+=5;Servo.D+=2;break;
// 1789           case 3:Servo.P+=5;Servo.D+=2;break;
// 1790           }
// 1791         }break;
// 1792       case 4:
// 1793         {
// 1794           switch(track_form)
// 1795           {
// 1796           case 1:Servo.P+=5;Servo.D+=2;break;
// 1797           case 2:Servo.P+=5;Servo.D+=2;break;
// 1798           case 3:Servo.P+=5;Servo.D+=2;break;
// 1799           }
// 1800         }break;
// 1801       case 5:
// 1802         {
// 1803           switch(track_form)
// 1804           {
// 1805           case 1:Servo.P+=5;Servo.D+=3;break;
// 1806           case 2:Servo.P+=5;Servo.D+=3;break;
// 1807           case 3:Servo.P+=5;Servo.D+=3;break;
// 1808           }
// 1809         }break;
// 1810       case 6:
// 1811         {
// 1812           switch(track_form)
// 1813           {
// 1814           case 1:Servo.P+=5;Servo.D+=4;break;
// 1815           case 2:Servo.P+=5;Servo.D+=4;break;
// 1816           case 3:Servo.P+=5;Servo.D+=4;break;
// 1817           }
// 1818         }break;
// 1819       }
// 1820     }break;
// 1821   case -5:
// 1822     {
// 1823       switch(position_now_D)
// 1824       {
// 1825       case -6:
// 1826         {
// 1827           switch(track_form)
// 1828           {
// 1829           case 1:Servo.P+=4;Servo.D+=1;break;
// 1830           case 2:Servo.P+=4;Servo.D+=1;break;
// 1831           case 3:Servo.P+=4;Servo.D+=1;break;
// 1832           }
// 1833         }break;
// 1834       case -5:
// 1835         {
// 1836           switch(track_form)
// 1837           {
// 1838           case 1:Servo.P+=4;Servo.D+=0;break;
// 1839           case 2:Servo.P+=4;Servo.D+=0;break;
// 1840           case 3:Servo.P+=4;Servo.D+=0;break;
// 1841           }
// 1842         }break;
// 1843       case -4:
// 1844         {
// 1845           switch(track_form)
// 1846           {
// 1847           case 1:Servo.P+=4;Servo.D-=1;break;
// 1848           case 2:Servo.P+=4;Servo.D-=1;break;
// 1849           case 3:Servo.P+=4;Servo.D-=1;break;
// 1850           }
// 1851         }break;
// 1852       case -3:
// 1853         {
// 1854           switch(track_form)
// 1855           {
// 1856           case 1:Servo.P+=4;Servo.D-=2;break;
// 1857           case 2:Servo.P+=4;Servo.D-=2;break;
// 1858           case 3:Servo.P+=4;Servo.D-=2;break;
// 1859           }
// 1860         }break;
// 1861       case -2:
// 1862         {
// 1863           switch(track_form)
// 1864           {
// 1865           case 1:Servo.P+=4;Servo.D-=3;break;
// 1866           case 2:Servo.P+=4;Servo.D-=3;break;
// 1867           case 3:Servo.P+=4;Servo.D-=3;break;
// 1868           }
// 1869         }break;
// 1870       case -1:
// 1871         {
// 1872           switch(track_form)
// 1873           {
// 1874           case 1:Servo.P+=4;Servo.D-=4;break;
// 1875           case 2:Servo.P+=4;Servo.D-=4;break;
// 1876           case 3:Servo.P+=4;Servo.D-=4;break;
// 1877           }
// 1878         }break;
// 1879       case 0:Servo.P+=4;break;
// 1880       case 1:
// 1881         {
// 1882           switch(track_form)
// 1883           {
// 1884           case 1:Servo.P+=4;Servo.D+=1;break;
// 1885           case 2:Servo.P+=4;Servo.D+=1;break;
// 1886           case 3:Servo.P+=4;Servo.D+=1;break;
// 1887           }
// 1888         }break;
// 1889       case 2:
// 1890         {
// 1891           switch(track_form)
// 1892           {
// 1893           case 1:Servo.P+=4;Servo.D+=1;break;
// 1894           case 2:Servo.P+=4;Servo.D+=1;break;
// 1895           case 3:Servo.P+=4;Servo.D+=1;break;
// 1896           }
// 1897         }break;
// 1898       case 3:
// 1899         {
// 1900           switch(track_form)
// 1901           {
// 1902           case 1:Servo.P+=4;Servo.D+=2;break;
// 1903           case 2:Servo.P+=4;Servo.D+=2;break;
// 1904           case 3:Servo.P+=4;Servo.D+=2;break;
// 1905           }
// 1906         }break;
// 1907       case 4:
// 1908         {
// 1909           switch(track_form)
// 1910           {
// 1911           case 1:Servo.P+=4;Servo.D+=2;break;
// 1912           case 2:Servo.P+=4;Servo.D+=2;break;
// 1913           case 3:Servo.P+=4;Servo.D+=2;break;
// 1914           }
// 1915         }break;
// 1916       case 5:
// 1917         {
// 1918           switch(track_form)
// 1919           {
// 1920           case 1:Servo.P+=4;Servo.D+=3;break;
// 1921           case 2:Servo.P+=4;Servo.D+=3;break;
// 1922           case 3:Servo.P+=4;Servo.D+=3;break;
// 1923           }
// 1924         }break;
// 1925       case 6:
// 1926         {
// 1927           switch(track_form)
// 1928           {
// 1929           case 1:Servo.P+=4;Servo.D+=4;break;
// 1930           case 2:Servo.P+=4;Servo.D+=4;break;
// 1931           case 3:Servo.P+=4;Servo.D+=4;break;
// 1932           }
// 1933         }break;
// 1934       }
// 1935     }break;
// 1936   case -4:
// 1937     {
// 1938       switch(position_now_D)
// 1939       {
// 1940       case -6:
// 1941         {
// 1942           switch(track_form)
// 1943           {
// 1944           case 1:Servo.P+=2;Servo.D+=3;break;
// 1945           case 2:Servo.P+=2;Servo.D+=3;break;
// 1946           case 3:Servo.P+=2;Servo.D+=3;break;
// 1947           }
// 1948         }break;
// 1949       case -5:
// 1950         {
// 1951           switch(track_form)
// 1952           {
// 1953           case 1:Servo.P+=2;Servo.D+=2;break;
// 1954           case 2:Servo.P+=2;Servo.D+=2;break;
// 1955           case 3:Servo.P+=2;Servo.D+=2;break;
// 1956           }
// 1957         }break;
// 1958       case -4:
// 1959         {
// 1960           switch(track_form)
// 1961           {
// 1962           case 1:Servo.P+=2;Servo.D+=1;break;
// 1963           case 2:Servo.P+=2;Servo.D+=1;break;
// 1964           case 3:Servo.P+=2;Servo.D+=1;break;
// 1965           }
// 1966         }break;
// 1967       case -3:
// 1968         {
// 1969           switch(track_form)
// 1970           {
// 1971           case 1:Servo.P+=2;Servo.D-=0;break;
// 1972           case 2:Servo.P+=2;Servo.D-=0;break;
// 1973           case 3:Servo.P+=2;Servo.D-=0;break;
// 1974           }
// 1975         }break;
// 1976       case -2:
// 1977         {
// 1978           switch(track_form)
// 1979           {
// 1980           case 1:Servo.P+=2;Servo.D-=1;break;
// 1981           case 2:Servo.P+=2;Servo.D-=1;break;
// 1982           case 3:Servo.P+=2;Servo.D-=1;break;
// 1983           }
// 1984         }break;
// 1985       case -1:
// 1986         {
// 1987           switch(track_form)
// 1988           {
// 1989           case 1:Servo.P+=2;Servo.D-=2;break;
// 1990           case 2:Servo.P+=2;Servo.D-=2;break;
// 1991           case 3:Servo.P+=2;Servo.D-=2;break;
// 1992           }
// 1993         }break;
// 1994       case 0:Servo.P+=2;break;
// 1995       case 1:
// 1996         {
// 1997           switch(track_form)
// 1998           {
// 1999           case 1:Servo.P+=2;Servo.D+=1;break;
// 2000           case 2:Servo.P+=2;Servo.D+=1;break;
// 2001           case 3:Servo.P+=2;Servo.D+=1;break;
// 2002           }
// 2003         }break;
// 2004       case 2:
// 2005         {
// 2006           switch(track_form)
// 2007           {
// 2008           case 1:Servo.P+=2;Servo.D+=1;break;
// 2009           case 2:Servo.P+=2;Servo.D+=1;break;
// 2010           case 3:Servo.P+=2;Servo.D+=1;break;
// 2011           }
// 2012         }break;
// 2013       case 3:
// 2014         {
// 2015           switch(track_form)
// 2016           {
// 2017           case 1:Servo.P+=2;Servo.D+=2;break;
// 2018           case 2:Servo.P+=2;Servo.D+=2;break;
// 2019           case 3:Servo.P+=2;Servo.D+=2;break;
// 2020           }
// 2021         }break;
// 2022       case 4:
// 2023         {
// 2024           switch(track_form)
// 2025           {
// 2026           case 1:Servo.P+=2;Servo.D+=2;break;
// 2027           case 2:Servo.P+=2;Servo.D+=2;break;
// 2028           case 3:Servo.P+=2;Servo.D+=2;break;
// 2029           }
// 2030         }break;
// 2031       case 5:
// 2032         {
// 2033           switch(track_form)
// 2034           {
// 2035           case 1:Servo.P+=2;Servo.D+=3;break;
// 2036           case 2:Servo.P+=2;Servo.D+=3;break;
// 2037           case 3:Servo.P+=2;Servo.D+=3;break;
// 2038           }
// 2039         }break;
// 2040       case 6:
// 2041         {
// 2042           switch(track_form)
// 2043           {
// 2044           case 1:Servo.P+=2;Servo.D+=4;break;
// 2045           case 2:Servo.P+=2;Servo.D+=4;break;
// 2046           case 3:Servo.P+=2;Servo.D+=4;break;
// 2047           }
// 2048         }break;
// 2049       }
// 2050     }break;
// 2051   case -3:
// 2052     {
// 2053       switch(position_now_D)
// 2054       {
// 2055       case -6:
// 2056         {
// 2057           switch(track_form)
// 2058           {
// 2059           case 1:Servo.P+=2;Servo.D+=1;break;
// 2060           case 2:Servo.P+=2;Servo.D+=1;break;
// 2061           case 3:
// 2062             {
// 2063               switch(position_now_low_P)
// 2064               {
// 2065               case 3:Servo.P+=2;Servo.D+=1;break;
// 2066               case 2:Servo.P+=2;Servo.D+=1;break;
// 2067               case 1:Servo.P+=2;Servo.D+=1;break;
// 2068               case 0:Servo.P+=2;Servo.D+=1;break;
// 2069               case -1:Servo.P+=2;Servo.D+=1;break;
// 2070               case -2:Servo.P+=2;Servo.D+=1;break;
// 2071               case -3:Servo.P+=2;Servo.D+=1;break;
// 2072               }
// 2073             }break;
// 2074           }
// 2075         }break;
// 2076       case -5:
// 2077         {
// 2078           switch(track_form)
// 2079           {
// 2080           case 1:Servo.P+=2;Servo.D+=0;break;
// 2081           case 2:Servo.P+=2;Servo.D+=0;break;
// 2082           case 3:
// 2083             {
// 2084               switch(position_now_low_P)
// 2085               {
// 2086               case 3:Servo.P+=2;Servo.D+=0;break;
// 2087               case 2:Servo.P+=2;Servo.D+=0;break;
// 2088               case 1:Servo.P+=2;Servo.D+=0;break;
// 2089               case 0:Servo.P+=2;Servo.D+=0;break;
// 2090               case -1:Servo.P+=2;Servo.D+=0;break;
// 2091               case -2:Servo.P+=2;Servo.D+=0;break;
// 2092               case -3:Servo.P+=2;Servo.D+=0;break;
// 2093               }
// 2094             }break;
// 2095           }
// 2096         }break;
// 2097       case -4:
// 2098         {
// 2099           switch(track_form)
// 2100           {
// 2101           case 1:Servo.P+=2;Servo.D-=1;break;
// 2102           case 2:Servo.P+=2;Servo.D-=1;break;
// 2103           case 3:
// 2104             {
// 2105               switch(position_now_low_P)
// 2106               {
// 2107               case 3:Servo.P+=2;Servo.D-=1;break;
// 2108               case 2:Servo.P+=2;Servo.D-=1;break;
// 2109               case 1:Servo.P+=2;Servo.D-=1;break;
// 2110               case 0:Servo.P+=2;Servo.D-=1;break;
// 2111               case -1:Servo.P+=2;Servo.D-=1;break;
// 2112               case -2:Servo.P+=2;Servo.D-=1;break;
// 2113               case -3:Servo.P+=2;Servo.D-=1;break;
// 2114               }
// 2115             }break;
// 2116           }
// 2117         }break;
// 2118       case -3:
// 2119         {
// 2120           switch(track_form)
// 2121           {
// 2122           case 1:Servo.P+=2;Servo.D-=2;break;
// 2123           case 2:Servo.P+=2;Servo.D-=2;break;
// 2124           case 3:
// 2125             {
// 2126               switch(position_now_low_P)
// 2127               {
// 2128               case 3:Servo.P+=2;Servo.D-=2;break;
// 2129               case 2:Servo.P+=2;Servo.D-=2;break;
// 2130               case 1:Servo.P+=2;Servo.D-=2;break;
// 2131               case 0:Servo.P+=2;Servo.D-=2;break;
// 2132               case -1:Servo.P+=2;Servo.D-=2;break;
// 2133               case -2:Servo.P+=2;Servo.D-=2;break;
// 2134               case -3:Servo.P+=2;Servo.D-=2;break;
// 2135               }
// 2136             }break;
// 2137           }
// 2138         }break;
// 2139       case -2:
// 2140         {
// 2141           switch(track_form)
// 2142           {
// 2143           case 1:Servo.P+=2;Servo.D-=3;break;
// 2144           case 2:Servo.P+=2;Servo.D-=3;break;
// 2145           case 3:
// 2146             {
// 2147               switch(position_now_low_P)
// 2148               {
// 2149               case 3:Servo.P+=2;Servo.D-=3;break;
// 2150               case 2:Servo.P+=2;Servo.D-=3;break;
// 2151               case 1:Servo.P+=2;Servo.D-=3;break;
// 2152               case 0:Servo.P+=2;Servo.D-=3;break;
// 2153               case -1:Servo.P+=2;Servo.D-=3;break;
// 2154               case -2:Servo.P+=2;Servo.D-=3;break;
// 2155               case -3:Servo.P+=2;Servo.D-=3;break;
// 2156               }
// 2157             }break;
// 2158           }
// 2159         }break;
// 2160       case -1:
// 2161         {
// 2162           switch(track_form)
// 2163           {
// 2164           case 1:Servo.P+=2;Servo.D-=4;break;
// 2165           case 2:Servo.P+=2;Servo.D-=4;break;
// 2166           case 3:
// 2167             {
// 2168               switch(position_now_low_P)
// 2169               {
// 2170               case 3:Servo.P+=2;Servo.D-=4;break;
// 2171               case 2:Servo.P+=2;Servo.D-=4;break;
// 2172               case 1:Servo.P+=2;Servo.D-=4;break;
// 2173               case 0:Servo.P+=2;Servo.D-=4;break;
// 2174               case -1:Servo.P+=2;Servo.D-=4;break;
// 2175               case -2:Servo.P+=2;Servo.D-=4;break;
// 2176               case -3:Servo.P+=2;Servo.D-=4;break;
// 2177               }
// 2178             }break;
// 2179           }
// 2180         }break;
// 2181       case 0:Servo.P+=2;break;
// 2182       case 1:
// 2183         {
// 2184           switch(track_form)
// 2185           {
// 2186           case 1:Servo.P+=2;Servo.D+=1;break;
// 2187           case 2:Servo.P+=2;Servo.D+=1;break;
// 2188           case 3:
// 2189             {
// 2190               switch(position_now_low_P)
// 2191               {
// 2192               case 3:Servo.P+=2;Servo.D+=1;break;
// 2193               case 2:Servo.P+=2;Servo.D+=1;break;
// 2194               case 1:Servo.P+=2;Servo.D+=1;break;
// 2195               case 0:Servo.P+=2;Servo.D+=1;break;
// 2196               case -1:Servo.P+=2;Servo.D+=1;break;
// 2197               case -2:Servo.P+=2;Servo.D+=1;break;
// 2198               case -3:Servo.P+=2;Servo.D+=1;break;
// 2199               }
// 2200             }break;
// 2201           }
// 2202         }break;
// 2203       case 2:
// 2204         {
// 2205           switch(track_form)
// 2206           {
// 2207           case 1:Servo.P+=2;Servo.D+=1;break;
// 2208           case 2:Servo.P+=2;Servo.D+=1;break;
// 2209           case 3:
// 2210             {
// 2211               switch(position_now_low_P)
// 2212               {
// 2213               case 3:Servo.P+=2;Servo.D+=1;break;
// 2214               case 2:Servo.P+=2;Servo.D+=1;break;
// 2215               case 1:Servo.P+=2;Servo.D+=1;break;
// 2216               case 0:Servo.P+=2;Servo.D+=1;break;
// 2217               case -1:Servo.P+=2;Servo.D+=1;break;
// 2218               case -2:Servo.P+=2;Servo.D+=1;break;
// 2219               case -3:Servo.P+=2;Servo.D+=1;break;
// 2220               }
// 2221             }break;
// 2222           }
// 2223         }break;
// 2224       case 3:
// 2225         {
// 2226           switch(track_form)
// 2227           {
// 2228           case 1:Servo.P+=2;Servo.D+=2;break;
// 2229           case 2:Servo.P+=2;Servo.D+=2;break;
// 2230           case 3:
// 2231             {
// 2232               switch(position_now_low_P)
// 2233               {
// 2234               case 3:Servo.P+=2;Servo.D+=2;break;
// 2235               case 2:Servo.P+=2;Servo.D+=2;break;
// 2236               case 1:Servo.P+=2;Servo.D+=2;break;
// 2237               case 0:Servo.P+=2;Servo.D+=2;break;
// 2238               case -1:Servo.P+=2;Servo.D+=2;break;
// 2239               case -2:Servo.P+=2;Servo.D+=2;break;
// 2240               case -3:Servo.P+=2;Servo.D+=2;break;
// 2241               }
// 2242             }break;
// 2243           }
// 2244         }break;
// 2245       case 4:
// 2246         {
// 2247           switch(track_form)
// 2248           {
// 2249           case 1:Servo.P+=2;Servo.D+=2;break;
// 2250           case 2:Servo.P+=2;Servo.D+=2;break;
// 2251           case 3:
// 2252             {
// 2253               switch(position_now_low_P)
// 2254               {
// 2255               case 3:Servo.P+=2;Servo.D+=2;break;
// 2256               case 2:Servo.P+=2;Servo.D+=2;break;
// 2257               case 1:Servo.P+=2;Servo.D+=2;break;
// 2258               case 0:Servo.P+=2;Servo.D+=2;break;
// 2259               case -1:Servo.P+=2;Servo.D+=2;break;
// 2260               case -2:Servo.P+=2;Servo.D+=2;break;
// 2261               case -3:Servo.P+=2;Servo.D+=2;break;
// 2262               }
// 2263             }break;
// 2264           }
// 2265         }break;
// 2266       case 5:
// 2267         {
// 2268           switch(track_form)
// 2269           {
// 2270           case 1:Servo.P+=2;Servo.D+=3;break;
// 2271           case 2:Servo.P+=2;Servo.D+=3;break;
// 2272           case 3:
// 2273             {
// 2274               switch(position_now_low_P)
// 2275               {
// 2276               case 3:Servo.P+=2;Servo.D+=3;break;
// 2277               case 2:Servo.P+=2;Servo.D+=3;break;
// 2278               case 1:Servo.P+=2;Servo.D+=3;break;
// 2279               case 0:Servo.P+=2;Servo.D+=3;break;
// 2280               case -1:Servo.P+=2;Servo.D+=3;break;
// 2281               case -2:Servo.P+=2;Servo.D+=3;break;
// 2282               case -3:Servo.P+=2;Servo.D+=3;break;
// 2283               }
// 2284             }break;
// 2285           }
// 2286         }break;
// 2287       case 6:
// 2288         {
// 2289           switch(track_form)
// 2290           {
// 2291           case 1:Servo.P+=2;Servo.D+=4;break;
// 2292           case 2:Servo.P+=2;Servo.D+=4;break;
// 2293           case 3:
// 2294             {
// 2295               switch(position_now_low_P)
// 2296               {
// 2297               case 3:Servo.P+=2;Servo.D+=4;break;
// 2298               case 2:Servo.P+=2;Servo.D+=4;break;
// 2299               case 1:Servo.P+=2;Servo.D+=4;break;
// 2300               case 0:Servo.P+=2;Servo.D+=4;break;
// 2301               case -1:Servo.P+=2;Servo.D+=4;break;
// 2302               case -2:Servo.P+=2;Servo.D+=4;break;
// 2303               case -3:Servo.P+=2;Servo.D+=4;break;
// 2304               }
// 2305             }break;
// 2306           }
// 2307         }break;
// 2308       }
// 2309     }break;
// 2310   case -2:
// 2311     {
// 2312       switch(position_now_D)
// 2313       {
// 2314       case -6:
// 2315         {
// 2316           switch(track_form)
// 2317           {
// 2318           case 1:Servo.P+=1;Servo.D+=4;break;
// 2319           case 2:Servo.P+=1;Servo.D+=4;break;
// 2320           case 3:
// 2321             {
// 2322               switch(position_now_low_P)
// 2323               {
// 2324               case 3:Servo.P+=1;Servo.D+=4;break;
// 2325               case 2:Servo.P+=1;Servo.D+=4;break;
// 2326               case 1:Servo.P+=1;Servo.D+=4;break;
// 2327               case 0:Servo.P+=1;Servo.D+=4;break;
// 2328               case -1:Servo.P+=1;Servo.D+=4;break;
// 2329               case -2:Servo.P+=1;Servo.D+=4;break;
// 2330               case -3:Servo.P+=1;Servo.D+=4;break;
// 2331               }
// 2332             }break;
// 2333           }
// 2334         }break;
// 2335       case -5:
// 2336         {
// 2337           switch(track_form)
// 2338           {
// 2339           case 1:Servo.P+=1;Servo.D+=3;break;
// 2340           case 2:Servo.P+=1;Servo.D+=3;break;
// 2341           case 3:
// 2342             {
// 2343               switch(position_now_low_P)
// 2344               {
// 2345               case 3:Servo.P+=1;Servo.D+=3;break;
// 2346               case 2:Servo.P+=1;Servo.D+=3;break;
// 2347               case 1:Servo.P+=1;Servo.D+=3;break;
// 2348               case 0:Servo.P+=1;Servo.D+=3;break;
// 2349               case -1:Servo.P+=1;Servo.D+=3;break;
// 2350               case -2:Servo.P+=1;Servo.D+=3;break;
// 2351               case -3:Servo.P+=1;Servo.D+=3;break;
// 2352               }
// 2353             }break;
// 2354           }
// 2355         }break;
// 2356       case -4:
// 2357         {
// 2358           switch(track_form)
// 2359           {
// 2360           case 1:Servo.P+=1;Servo.D+=2;break;
// 2361           case 2:Servo.P+=1;Servo.D+=2;break;
// 2362           case 3:
// 2363             {
// 2364               switch(position_now_low_P)
// 2365               {
// 2366               case 3:Servo.P+=1;Servo.D+=2;break;
// 2367               case 2:Servo.P+=1;Servo.D+=2;break;
// 2368               case 1:Servo.P+=1;Servo.D+=2;break;
// 2369               case 0:Servo.P+=1;Servo.D+=2;break;
// 2370               case -1:Servo.P+=1;Servo.D+=2;break;
// 2371               case -2:Servo.P+=1;Servo.D+=2;break;
// 2372               case -3:Servo.P+=1;Servo.D+=2;break;
// 2373               }
// 2374             }break;
// 2375           }
// 2376         }break;
// 2377       case -3:
// 2378         {
// 2379           switch(track_form)
// 2380           {
// 2381           case 1:Servo.P+=1;Servo.D+=1;break;
// 2382           case 2:Servo.P+=1;Servo.D+=1;break;
// 2383           case 3:
// 2384             {
// 2385               switch(position_now_low_P)
// 2386               {
// 2387               case 3:Servo.P+=1;Servo.D+=1;break;
// 2388               case 2:Servo.P+=1;Servo.D+=1;break;
// 2389               case 1:Servo.P+=1;Servo.D+=1;break;
// 2390               case 0:Servo.P+=1;Servo.D+=1;break;
// 2391               case -1:Servo.P+=1;Servo.D+=1;break;
// 2392               case -2:Servo.P+=1;Servo.D+=1;break;
// 2393               case -3:Servo.P+=1;Servo.D+=1;break;
// 2394               }
// 2395             }break;
// 2396           }
// 2397         }break;
// 2398       case -2:
// 2399         {
// 2400           switch(track_form)
// 2401           {
// 2402           case 1:Servo.P+=1;Servo.D-=0;break;
// 2403           case 2:Servo.P+=1;Servo.D-=0;break;
// 2404           case 3:
// 2405             {
// 2406               switch(position_now_low_P)
// 2407               {
// 2408               case 3:Servo.P+=1;Servo.D+=0;break;
// 2409               case 2:Servo.P+=1;Servo.D+=0;break;
// 2410               case 1:Servo.P+=1;Servo.D+=0;break;
// 2411               case 0:Servo.P+=1;Servo.D+=0;break;
// 2412               case -1:Servo.P+=1;Servo.D+=0;break;
// 2413               case -2:Servo.P+=1;Servo.D+=0;break;
// 2414               case -3:Servo.P+=1;Servo.D+=0;break;
// 2415               }
// 2416             }break;
// 2417           }
// 2418         }break;
// 2419       case -1:
// 2420         {
// 2421           switch(track_form)
// 2422           {
// 2423           case 1:Servo.P+=1;Servo.D-=1;break;
// 2424           case 2:Servo.P+=1;Servo.D-=1;break;
// 2425           case 3:
// 2426             {
// 2427               switch(position_now_low_P)
// 2428               {
// 2429               case 3:Servo.P+=1;Servo.D-=1;break;
// 2430               case 2:Servo.P+=1;Servo.D-=1;break;
// 2431               case 1:Servo.P+=1;Servo.D-=1;break;
// 2432               case 0:Servo.P+=1;Servo.D-=1;break;
// 2433               case -1:Servo.P+=1;Servo.D-=1;break;
// 2434               case -2:Servo.P+=1;Servo.D-=1;break;
// 2435               case -3:Servo.P+=1;Servo.D-=1;break;
// 2436               }
// 2437             }break;
// 2438           }
// 2439         }break;
// 2440       case 0:Servo.P+=1;break;
// 2441       case 1:
// 2442         {
// 2443           switch(track_form)
// 2444           {
// 2445           case 1:Servo.P+=1;Servo.D+=1;break;
// 2446           case 2:Servo.P+=1;Servo.D+=1;break;
// 2447           case 3:
// 2448             {
// 2449               switch(position_now_low_P)
// 2450               {
// 2451               case 3:Servo.P+=1;Servo.D+=1;break;
// 2452               case 2:Servo.P+=1;Servo.D+=1;break;
// 2453               case 1:Servo.P+=1;Servo.D+=1;break;
// 2454               case 0:Servo.P+=1;Servo.D+=1;break;
// 2455               case -1:Servo.P+=1;Servo.D+=1;break;
// 2456               case -2:Servo.P+=1;Servo.D+=1;break;
// 2457               case -3:Servo.P+=1;Servo.D+=1;break;
// 2458               }
// 2459             }break;
// 2460           }
// 2461         }break;
// 2462       case 2:
// 2463         {
// 2464           switch(track_form)
// 2465           {
// 2466           case 1:Servo.P+=1;Servo.D+=1;break;
// 2467           case 2:Servo.P+=1;Servo.D+=1;break;
// 2468           case 3:
// 2469             {
// 2470               switch(position_now_low_P)
// 2471               {
// 2472               case 3:Servo.P+=1;Servo.D+=1;break;
// 2473               case 2:Servo.P+=1;Servo.D+=1;break;
// 2474               case 1:Servo.P+=1;Servo.D+=1;break;
// 2475               case 0:Servo.P+=1;Servo.D+=1;break;
// 2476               case -1:Servo.P+=1;Servo.D+=1;break;
// 2477               case -2:Servo.P+=1;Servo.D+=1;break;
// 2478               case -3:Servo.P+=1;Servo.D+=1;break;
// 2479               }
// 2480             }break;
// 2481           }
// 2482         }break;
// 2483       case 3:
// 2484         {
// 2485           switch(track_form)
// 2486           {
// 2487           case 1:Servo.P+=1;Servo.D+=2;break;
// 2488           case 2:Servo.P+=1;Servo.D+=2;break;
// 2489           case 3:
// 2490             {
// 2491               switch(position_now_low_P)
// 2492               {
// 2493               case 3:Servo.P+=1;Servo.D+=2;break;
// 2494               case 2:Servo.P+=1;Servo.D+=2;break;
// 2495               case 1:Servo.P+=1;Servo.D+=2;break;
// 2496               case 0:Servo.P+=1;Servo.D+=2;break;
// 2497               case -1:Servo.P+=1;Servo.D+=2;break;
// 2498               case -2:Servo.P+=1;Servo.D+=2;break;
// 2499               case -3:Servo.P+=1;Servo.D+=2;break;
// 2500               }
// 2501             }break;
// 2502           }
// 2503         }break;
// 2504       case 4:
// 2505         {
// 2506           switch(track_form)
// 2507           {
// 2508           case 1:Servo.P+=1;Servo.D+=2;break;
// 2509           case 2:Servo.P+=1;Servo.D+=2;break;
// 2510           case 3:
// 2511             {
// 2512               switch(position_now_low_P)
// 2513               {
// 2514               case 3:Servo.P+=1;Servo.D+=2;break;
// 2515               case 2:Servo.P+=1;Servo.D+=2;break;
// 2516               case 1:Servo.P+=1;Servo.D+=2;break;
// 2517               case 0:Servo.P+=1;Servo.D+=2;break;
// 2518               case -1:Servo.P+=1;Servo.D+=2;break;
// 2519               case -2:Servo.P+=1;Servo.D+=2;break;
// 2520               case -3:Servo.P+=1;Servo.D+=2;break;
// 2521               }
// 2522             }break;
// 2523           }
// 2524         }break;
// 2525       case 5:
// 2526         {
// 2527           switch(track_form)
// 2528           {
// 2529           case 1:Servo.P+=1;Servo.D+=3;break;
// 2530           case 2:Servo.P+=1;Servo.D+=3;break;
// 2531           case 3:
// 2532             {
// 2533               switch(position_now_low_P)
// 2534               {
// 2535               case 3:Servo.P+=1;Servo.D+=3;break;
// 2536               case 2:Servo.P+=1;Servo.D+=3;break;
// 2537               case 1:Servo.P+=1;Servo.D+=3;break;
// 2538               case 0:Servo.P+=1;Servo.D+=3;break;
// 2539               case -1:Servo.P+=1;Servo.D+=3;break;
// 2540               case -2:Servo.P+=1;Servo.D+=3;break;
// 2541               case -3:Servo.P+=1;Servo.D+=3;break;
// 2542               }
// 2543             }break;
// 2544           }
// 2545         }break;
// 2546       case 6:
// 2547         {
// 2548           switch(track_form)
// 2549           {
// 2550           case 1:Servo.P+=1;Servo.D+=4;break;
// 2551           case 2:Servo.P+=1;Servo.D+=4;break;
// 2552           case 3:
// 2553             {
// 2554               switch(position_now_low_P)
// 2555               {
// 2556               case 3:Servo.P+=1;Servo.D+=4;break;
// 2557               case 2:Servo.P+=1;Servo.D+=4;break;
// 2558               case 1:Servo.P+=1;Servo.D+=4;break;
// 2559               case 0:Servo.P+=1;Servo.D+=4;break;
// 2560               case -1:Servo.P+=1;Servo.D+=4;break;
// 2561               case -2:Servo.P+=1;Servo.D+=4;break;
// 2562               case -3:Servo.P+=1;Servo.D+=4;break;
// 2563               }
// 2564             }break;
// 2565           }
// 2566         }break;
// 2567       }
// 2568     }break;
// 2569    case -1:
// 2570     {
// 2571       switch(position_now_D)
// 2572       {
// 2573       case -6:
// 2574         {
// 2575           switch(track_form)
// 2576           {
// 2577           case 1:Servo.P+=1;Servo.D+=5;break;
// 2578           case 2:Servo.P+=1;Servo.D+=5;break;
// 2579           case 3:
// 2580             {
// 2581               switch(position_now_low_P)
// 2582               {
// 2583               case 3:Servo.P+=1;Servo.D+=5;break;
// 2584               case 2:Servo.P+=1;Servo.D+=5;break;
// 2585               case 1:Servo.P+=1;Servo.D+=5;break;
// 2586               case 0:Servo.P+=1;Servo.D+=5;break;
// 2587               case -1:Servo.P+=1;Servo.D+=5;break;
// 2588               case -2:Servo.P+=1;Servo.D+=5;break;
// 2589               case -3:Servo.P+=1;Servo.D+=5;break;
// 2590               }
// 2591             }break;
// 2592           }
// 2593         }break;
// 2594       case -5:
// 2595         {
// 2596           switch(track_form)
// 2597           {
// 2598           case 1:Servo.P+=1;Servo.D+=4;break;
// 2599           case 2:Servo.P+=1;Servo.D+=4;break;
// 2600           case 3:
// 2601             {
// 2602               switch(position_now_low_P)
// 2603               {
// 2604               case 3:Servo.P+=1;Servo.D+=4;break;
// 2605               case 2:Servo.P+=1;Servo.D+=4;break;
// 2606               case 1:Servo.P+=1;Servo.D+=4;break;
// 2607               case 0:Servo.P+=1;Servo.D+=4;break;
// 2608               case -1:Servo.P+=1;Servo.D+=4;break;
// 2609               case -2:Servo.P+=1;Servo.D+=4;break;
// 2610               case -3:Servo.P+=1;Servo.D+=4;break;
// 2611               }
// 2612             }break;
// 2613           }
// 2614         }break;
// 2615       case -4:
// 2616         {
// 2617           switch(track_form)
// 2618           {
// 2619           case 1:Servo.P+=1;Servo.D+=3;break;
// 2620           case 2:Servo.P+=1;Servo.D+=3;break;
// 2621           case 3:
// 2622             {
// 2623               switch(position_now_low_P)
// 2624               {
// 2625               case 3:Servo.P+=1;Servo.D+=3;break;
// 2626               case 2:Servo.P+=1;Servo.D+=3;break;
// 2627               case 1:Servo.P+=1;Servo.D+=3;break;
// 2628               case 0:Servo.P+=1;Servo.D+=3;break;
// 2629               case -1:Servo.P+=1;Servo.D+=3;break;
// 2630               case -2:Servo.P+=1;Servo.D+=3;break;
// 2631               case -3:Servo.P+=1;Servo.D+=3;break;
// 2632               }
// 2633             }break;
// 2634           }
// 2635         }break;
// 2636       case -3:
// 2637         {
// 2638           switch(track_form)
// 2639           {
// 2640           case 1:Servo.P+=1;Servo.D+=2;break;
// 2641           case 2:Servo.P+=1;Servo.D+=2;break;
// 2642           case 3:
// 2643             {
// 2644               switch(position_now_low_P)
// 2645               {
// 2646               case 3:Servo.P+=1;Servo.D+=2;break;
// 2647               case 2:Servo.P+=1;Servo.D+=2;break;
// 2648               case 1:Servo.P+=1;Servo.D+=2;break;
// 2649               case 0:Servo.P+=1;Servo.D+=2;break;
// 2650               case -1:Servo.P+=1;Servo.D+=2;break;
// 2651               case -2:Servo.P+=1;Servo.D+=2;break;
// 2652               case -3:Servo.P+=1;Servo.D+=2;break;
// 2653               }
// 2654             }break;
// 2655           }
// 2656         }break;
// 2657       case -2:
// 2658         {
// 2659           switch(track_form)
// 2660           {
// 2661           case 1:Servo.P+=1;Servo.D+=1;break;
// 2662           case 2:Servo.P+=1;Servo.D+=1;break;
// 2663           case 3:
// 2664             {
// 2665               switch(position_now_low_P)
// 2666               {
// 2667               case 3:Servo.P+=1;Servo.D+=1;break;
// 2668               case 2:Servo.P+=1;Servo.D+=1;break;
// 2669               case 1:Servo.P+=1;Servo.D+=1;break;
// 2670               case 0:Servo.P+=1;Servo.D+=1;break;
// 2671               case -1:Servo.P+=1;Servo.D+=1;break;
// 2672               case -2:Servo.P+=1;Servo.D+=1;break;
// 2673               case -3:Servo.P+=1;Servo.D+=1;break;
// 2674               }
// 2675             }break;
// 2676           }
// 2677         }break;
// 2678       case -1:
// 2679         {
// 2680           switch(track_form)
// 2681           {
// 2682           case 1:Servo.P+=1;Servo.D+=0;break;
// 2683           case 2:Servo.P+=1;Servo.D+=0;break;
// 2684           case 3:
// 2685             {
// 2686               switch(position_now_low_P)
// 2687               {
// 2688               case 3:Servo.P+=1;Servo.D+=0;break;
// 2689               case 2:Servo.P+=1;Servo.D+=0;break;
// 2690               case 1:Servo.P+=1;Servo.D+=0;break;
// 2691               case 0:Servo.P+=1;Servo.D+=0;break;
// 2692               case -1:Servo.P+=1;Servo.D+=0;break;
// 2693               case -2:Servo.P+=1;Servo.D+=0;break;
// 2694               case -3:Servo.P+=1;Servo.D+=0;break;
// 2695               }
// 2696             }break;
// 2697           }
// 2698         }break;
// 2699       case 0:Servo.P+=1;break;
// 2700       case 1:
// 2701         {
// 2702           switch(track_form)
// 2703           {
// 2704           case 1:Servo.P+=1;Servo.D+=1;break;
// 2705           case 2:Servo.P+=1;Servo.D+=1;break;
// 2706           case 3:
// 2707             {
// 2708               switch(position_now_low_P)
// 2709               {
// 2710               case 3:Servo.P+=1;Servo.D+=1;break;
// 2711               case 2:Servo.P+=1;Servo.D+=1;break;
// 2712               case 1:Servo.P+=1;Servo.D+=1;break;
// 2713               case 0:Servo.P+=1;Servo.D+=1;break;
// 2714               case -1:Servo.P+=1;Servo.D+=1;break;
// 2715               case -2:Servo.P+=1;Servo.D+=1;break;
// 2716               case -3:Servo.P+=1;Servo.D+=1;break;
// 2717               }
// 2718             }break;
// 2719           }
// 2720         }break;
// 2721       case 2:
// 2722         {
// 2723           switch(track_form)
// 2724           {
// 2725           case 1:Servo.P+=1;Servo.D+=1;break;
// 2726           case 2:Servo.P+=1;Servo.D+=1;break;
// 2727           case 3:
// 2728             {
// 2729               switch(position_now_low_P)
// 2730               {
// 2731               case 3:Servo.P+=1;Servo.D+=1;break;
// 2732               case 2:Servo.P+=1;Servo.D+=1;break;
// 2733               case 1:Servo.P+=1;Servo.D+=1;break;
// 2734               case 0:Servo.P+=1;Servo.D+=1;break;
// 2735               case -1:Servo.P+=1;Servo.D+=1;break;
// 2736               case -2:Servo.P+=1;Servo.D+=1;break;
// 2737               case -3:Servo.P+=1;Servo.D+=1;break;
// 2738               }
// 2739             }break;
// 2740           }
// 2741         }break;
// 2742       case 3:
// 2743         {
// 2744           switch(track_form)
// 2745           {
// 2746           case 1:Servo.P+=1;Servo.D+=2;break;
// 2747           case 2:Servo.P+=1;Servo.D+=2;break;
// 2748           case 3:
// 2749             {
// 2750               switch(position_now_low_P)
// 2751               {
// 2752               case 3:Servo.P+=1;Servo.D+=2;break;
// 2753               case 2:Servo.P+=1;Servo.D+=2;break;
// 2754               case 1:Servo.P+=1;Servo.D+=2;break;
// 2755               case 0:Servo.P+=1;Servo.D+=2;break;
// 2756               case -1:Servo.P+=1;Servo.D+=2;break;
// 2757               case -2:Servo.P+=1;Servo.D+=2;break;
// 2758               case -3:Servo.P+=1;Servo.D+=2;break;
// 2759               }
// 2760             }break;
// 2761           }
// 2762         }break;
// 2763       case 4:
// 2764         {
// 2765           switch(track_form)
// 2766           {
// 2767           case 1:Servo.P+=1;Servo.D+=2;break;
// 2768           case 2:Servo.P+=1;Servo.D+=2;break;
// 2769           case 3:
// 2770             {
// 2771               switch(position_now_low_P)
// 2772               {
// 2773               case 3:Servo.P+=1;Servo.D+=2;break;
// 2774               case 2:Servo.P+=1;Servo.D+=2;break;
// 2775               case 1:Servo.P+=1;Servo.D+=2;break;
// 2776               case 0:Servo.P+=1;Servo.D+=2;break;
// 2777               case -1:Servo.P+=1;Servo.D+=2;break;
// 2778               case -2:Servo.P+=1;Servo.D+=2;break;
// 2779               case -3:Servo.P+=1;Servo.D+=2;break;
// 2780               }
// 2781             }break;
// 2782           }
// 2783         }break;
// 2784       case 5:
// 2785         {
// 2786           switch(track_form)
// 2787           {
// 2788           case 1:Servo.P+=1;Servo.D+=3;break;
// 2789           case 2:Servo.P+=1;Servo.D+=3;break;
// 2790           case 3:
// 2791             {
// 2792               switch(position_now_low_P)
// 2793               {
// 2794               case 3:Servo.P+=1;Servo.D+=3;break;
// 2795               case 2:Servo.P+=1;Servo.D+=3;break;
// 2796               case 1:Servo.P+=1;Servo.D+=3;break;
// 2797               case 0:Servo.P+=1;Servo.D+=3;break;
// 2798               case -1:Servo.P+=1;Servo.D+=3;break;
// 2799               case -2:Servo.P+=1;Servo.D+=3;break;
// 2800               case -3:Servo.P+=1;Servo.D+=3;break;
// 2801               }
// 2802             }break;
// 2803           }
// 2804         }break;
// 2805       case 6:
// 2806         {
// 2807           switch(track_form)
// 2808           {
// 2809           case 1:Servo.P+=1;Servo.D+=4;break;
// 2810           case 2:Servo.P+=1;Servo.D+=4;break;
// 2811           case 3:
// 2812             {
// 2813               switch(position_now_low_P)
// 2814               {
// 2815               case 3:Servo.P+=1;Servo.D+=4;break;
// 2816               case 2:Servo.P+=1;Servo.D+=4;break;
// 2817               case 1:Servo.P+=1;Servo.D+=4;break;
// 2818               case 0:Servo.P+=1;Servo.D+=4;break;
// 2819               case -1:Servo.P+=1;Servo.D+=4;break;
// 2820               case -2:Servo.P+=1;Servo.D+=4;break;
// 2821               case -3:Servo.P+=1;Servo.D+=4;break;
// 2822               }
// 2823             }break;
// 2824           }
// 2825         }break;
// 2826       }
// 2827     }break;
// 2828   case 0:
// 2829     {
// 2830       switch(position_now_D)
??choose_PD_22:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.N    ??choose_PD_30
        CMP      R0,#+2
        BEQ.N    ??choose_PD_31
        BCC.N    ??choose_PD_32
        CMP      R0,#+4
        BEQ.W    ??choose_PD_33
        BCC.W    ??choose_PD_34
        CMP      R0,#+6
        BEQ.W    ??choose_PD_35
        BCC.W    ??choose_PD_36
        B.N      ??choose_PD_37
// 2831       {
// 2832       case -6:
// 2833         {
// 2834           switch(track_form)
// 2835           {
// 2836           case 1:Servo.P+=0;Servo.D+=6;break;
// 2837           case 2:Servo.P+=0;Servo.D+=6;break;
// 2838           case 3:
// 2839             {
// 2840               switch(position_now_low_P)
// 2841               {
// 2842               case 3:Servo.P+=0;Servo.D+=6;break;
// 2843               case 2:Servo.P+=0;Servo.D+=6;break;
// 2844               case 1:Servo.P+=0;Servo.D+=6;break;
// 2845               case 0:Servo.P+=0;Servo.D+=6;break;
// 2846               case -1:Servo.P+=0;Servo.D+=6;break;
// 2847               case -2:Servo.P+=0;Servo.D+=6;break;
// 2848               case -3:Servo.P+=0;Servo.D+=6;break;
// 2849               }
// 2850             }break;
// 2851           }
// 2852         }break;
// 2853       case -5:
// 2854         {
// 2855           switch(track_form)
// 2856           {
// 2857           case 1:Servo.P+=0;Servo.D+=5;break;
// 2858           case 2:Servo.P+=0;Servo.D+=5;break;
// 2859           case 3:
// 2860             {
// 2861               switch(position_now_low_P)
// 2862               {
// 2863               case 3:Servo.P+=0;Servo.D+=5;break;
// 2864               case 2:Servo.P+=0;Servo.D+=5;break;
// 2865               case 1:Servo.P+=0;Servo.D+=5;break;
// 2866               case 0:Servo.P+=0;Servo.D+=5;break;
// 2867               case -1:Servo.P+=0;Servo.D+=5;break;
// 2868               case -2:Servo.P+=0;Servo.D+=5;break;
// 2869               case -3:Servo.P+=0;Servo.D+=5;break;
// 2870               }
// 2871             }break;
// 2872           }
// 2873         }break;
// 2874       case -4:
// 2875         {
// 2876           switch(track_form)
// 2877           {
// 2878           case 1:Servo.P+=0;Servo.D+=4;break;
// 2879           case 2:Servo.P+=0;Servo.D+=4;break;
// 2880           case 3:
// 2881             {
// 2882               switch(position_now_low_P)
// 2883               {
// 2884               case 3:Servo.P+=0;Servo.D+=4;break;
// 2885               case 2:Servo.P+=0;Servo.D+=4;break;
// 2886               case 1:Servo.P+=0;Servo.D+=4;break;
// 2887               case 0:Servo.P+=0;Servo.D+=4;break;
// 2888               case -1:Servo.P+=0;Servo.D+=4;break;
// 2889               case -2:Servo.P+=0;Servo.D+=4;break;
// 2890               case -3:Servo.P+=0;Servo.D+=4;break;
// 2891               }
// 2892             }break;
// 2893           }
// 2894         }break;
// 2895       case -3:
// 2896         {
// 2897           switch(track_form)
// 2898           {
// 2899           case 1:Servo.P+=0;Servo.D+=3;break;
// 2900           case 2:Servo.P+=0;Servo.D+=3;break;
// 2901           case 3:
// 2902             {
// 2903               switch(position_now_low_P)
// 2904               {
// 2905               case 3:Servo.P+=0;Servo.D+=3;break;
// 2906               case 2:Servo.P+=0;Servo.D+=3;break;
// 2907               case 1:Servo.P+=0;Servo.D+=3;break;
// 2908               case 0:Servo.P+=0;Servo.D+=3;break;
// 2909               case -1:Servo.P+=0;Servo.D+=3;break;
// 2910               case -2:Servo.P+=0;Servo.D+=3;break;
// 2911               case -3:Servo.P+=0;Servo.D+=3;break;
// 2912               }
// 2913             }break;
// 2914           }
// 2915         }break;
// 2916       case -2:
// 2917         {
// 2918           switch(track_form)
// 2919           {
// 2920           case 1:Servo.P+=0;Servo.D+=2;break;
// 2921           case 2:Servo.P+=0;Servo.D+=2;break;
// 2922           case 3:
// 2923             {
// 2924               switch(position_now_low_P)
// 2925               {
// 2926               case 3:Servo.P+=0;Servo.D+=2;break;
// 2927               case 2:Servo.P+=0;Servo.D+=2;break;
// 2928               case 1:Servo.P+=0;Servo.D+=2;break;
// 2929               case 0:Servo.P+=0;Servo.D+=2;break;
// 2930               case -1:Servo.P+=0;Servo.D+=2;break;
// 2931               case -2:Servo.P+=0;Servo.D+=2;break;
// 2932               case -3:Servo.P+=0;Servo.D+=2;break;
// 2933               }
// 2934             }break;
// 2935           }
// 2936         }break;
// 2937       case -1:
// 2938         {
// 2939           switch(track_form)
// 2940           {
// 2941           case 1:Servo.P+=0;Servo.D+=1;break;
// 2942           case 2:Servo.P+=0;Servo.D+=1;break;
// 2943           case 3:
// 2944             {
// 2945               switch(position_now_low_P)
// 2946               {
// 2947               case 3:Servo.P+=0;Servo.D+=1;break;
// 2948               case 2:Servo.P+=0;Servo.D+=1;break;
// 2949               case 1:Servo.P+=0;Servo.D+=1;break;
// 2950               case 0:Servo.P+=0;Servo.D+=1;break;
// 2951               case -1:Servo.P+=0;Servo.D+=1;break;
// 2952               case -2:Servo.P+=0;Servo.D+=1;break;
// 2953               case -3:Servo.P+=0;Servo.D+=1;break;
// 2954               }
// 2955             }break;
// 2956           }
// 2957         }break;
// 2958       case 0:Servo.P+=0;break;
??choose_PD_30:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        B.N      ??choose_PD_37
// 2959       case 1:
// 2960         {
// 2961           switch(track_form)
??choose_PD_32:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_38
        BCC.N    ??choose_PD_39
        CMP      R4,#+3
        BEQ.N    ??choose_PD_40
        BCC.N    ??choose_PD_41
        B.N      ??choose_PD_39
// 2962           {
// 2963           case 1:Servo.P+=0;Servo.D+=1;break;
??choose_PD_38:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_39
// 2964           case 2:Servo.P+=0;Servo.D+=1;break;
??choose_PD_41:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_39
// 2965           case 3:
// 2966             {
// 2967               switch(position_now_low_P)
??choose_PD_40:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_42
        CMP      R6,#+2
        BEQ.N    ??choose_PD_43
        BCC.N    ??choose_PD_44
        CMP      R6,#+3
        BNE.N    ??choose_PD_45
// 2968               {
// 2969               case 3:Servo.P+=0;Servo.D+=1;break;
??choose_PD_46:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_45
// 2970               case 2:Servo.P+=0;Servo.D+=1;break;
??choose_PD_43:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_45
// 2971               case 1:Servo.P+=0;Servo.D+=1;break;
??choose_PD_44:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_45
// 2972               case 0:Servo.P+=0;Servo.D+=1;break;
??choose_PD_42:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 2973               case -1:Servo.P+=0;Servo.D+=1;break;
// 2974               case -2:Servo.P+=0;Servo.D+=1;break;
// 2975               case -3:Servo.P+=0;Servo.D+=1;break;
// 2976               }
// 2977             }break;
// 2978           }
// 2979         }break;
??choose_PD_45:
??choose_PD_39:
        B.N      ??choose_PD_37
// 2980       case 2:
// 2981         {
// 2982           switch(track_form)
??choose_PD_31:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_47
        BCC.N    ??choose_PD_48
        CMP      R4,#+3
        BEQ.N    ??choose_PD_49
        BCC.N    ??choose_PD_50
        B.N      ??choose_PD_48
// 2983           {
// 2984           case 1:Servo.P+=0;Servo.D+=2;break;
??choose_PD_47:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_48
// 2985           case 2:Servo.P+=0;Servo.D+=2;break;
??choose_PD_50:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_48
// 2986           case 3:
// 2987             {
// 2988               switch(position_now_low_P)
??choose_PD_49:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_51
        CMP      R6,#+2
        BEQ.N    ??choose_PD_52
        BCC.N    ??choose_PD_53
        CMP      R6,#+3
        BNE.N    ??choose_PD_54
// 2989               {
// 2990               case 3:Servo.P+=0;Servo.D+=2;break;
??choose_PD_55:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_54
// 2991               case 2:Servo.P+=0;Servo.D+=2;break;
??choose_PD_52:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_54
// 2992               case 1:Servo.P+=0;Servo.D+=2;break;
??choose_PD_53:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_54
// 2993               case 0:Servo.P+=0;Servo.D+=2;break;
??choose_PD_51:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.W    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.W    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 2994               case -1:Servo.P+=0;Servo.D+=2;break;
// 2995               case -2:Servo.P+=0;Servo.D+=2;break;
// 2996               case -3:Servo.P+=0;Servo.D+=2;break;
// 2997               }
// 2998             }break;
// 2999           }
// 3000         }break;
??choose_PD_54:
??choose_PD_48:
        B.N      ??choose_PD_37
// 3001       case 3:
// 3002         {
// 3003           switch(track_form)
??choose_PD_34:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_56
        BCC.N    ??choose_PD_57
        CMP      R4,#+3
        BEQ.N    ??choose_PD_58
        BCC.N    ??choose_PD_59
        B.N      ??choose_PD_57
// 3004           {
// 3005           case 1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_56:
        LDR.W    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_57
// 3006           case 2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_59:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_57
// 3007           case 3:
// 3008             {
// 3009               switch(position_now_low_P)
??choose_PD_58:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_60
        CMP      R6,#+2
        BEQ.N    ??choose_PD_61
        BCC.N    ??choose_PD_62
        CMP      R6,#+3
        BNE.N    ??choose_PD_63
// 3010               {
// 3011               case 3:Servo.P+=0;Servo.D+=3;break;
??choose_PD_64:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_63
// 3012               case 2:Servo.P+=0;Servo.D+=3;break;
??choose_PD_61:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_63
// 3013               case 1:Servo.P+=0;Servo.D+=3;break;
??choose_PD_62:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_63
// 3014               case 0:Servo.P+=0;Servo.D+=3;break;
??choose_PD_60:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 3015               case -1:Servo.P+=0;Servo.D+=3;break;
// 3016               case -2:Servo.P+=0;Servo.D+=3;break;
// 3017               case -3:Servo.P+=0;Servo.D+=3;break;
// 3018               }
// 3019             }break;
// 3020           }
// 3021         }break;
??choose_PD_63:
??choose_PD_57:
        B.N      ??choose_PD_37
// 3022       case 4:
// 3023         {
// 3024           switch(track_form)
??choose_PD_33:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_65
        BCC.N    ??choose_PD_66
        CMP      R4,#+3
        BEQ.N    ??choose_PD_67
        BCC.N    ??choose_PD_68
        B.N      ??choose_PD_66
// 3025           {
// 3026           case 1:Servo.P+=0;Servo.D+=4;break;
??choose_PD_65:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_66
// 3027           case 2:Servo.P+=0;Servo.D+=4;break;
??choose_PD_68:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_66
// 3028           case 3:
// 3029             {
// 3030               switch(position_now_low_P)
??choose_PD_67:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_69
        CMP      R6,#+2
        BEQ.N    ??choose_PD_70
        BCC.N    ??choose_PD_71
        CMP      R6,#+3
        BNE.N    ??choose_PD_72
// 3031               {
// 3032               case 3:Servo.P+=0;Servo.D+=4;break;
??choose_PD_73:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_72
// 3033               case 2:Servo.P+=0;Servo.D+=4;break;
??choose_PD_70:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_72
// 3034               case 1:Servo.P+=0;Servo.D+=4;break;
??choose_PD_71:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_72
// 3035               case 0:Servo.P+=0;Servo.D+=4;break;
??choose_PD_69:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 3036               case -1:Servo.P+=0;Servo.D+=4;break;
// 3037               case -2:Servo.P+=0;Servo.D+=4;break;
// 3038               case -3:Servo.P+=0;Servo.D+=4;break;
// 3039               }
// 3040             }break;
// 3041           }
// 3042         }break;
??choose_PD_72:
??choose_PD_66:
        B.N      ??choose_PD_37
// 3043       case 5:
// 3044         {
// 3045           switch(track_form)
??choose_PD_36:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_74
        BCC.N    ??choose_PD_75
        CMP      R4,#+3
        BEQ.N    ??choose_PD_76
        BCC.N    ??choose_PD_77
        B.N      ??choose_PD_75
// 3046           {
// 3047           case 1:Servo.P+=0;Servo.D+=5;break;
??choose_PD_74:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_75
// 3048           case 2:Servo.P+=0;Servo.D+=5;break;
??choose_PD_77:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_75
// 3049           case 3:
// 3050             {
// 3051               switch(position_now_low_P)
??choose_PD_76:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_78
        CMP      R6,#+2
        BEQ.N    ??choose_PD_79
        BCC.N    ??choose_PD_80
        CMP      R6,#+3
        BNE.N    ??choose_PD_81
// 3052               {
// 3053               case 3:Servo.P+=0;Servo.D+=5;break;
??choose_PD_82:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_81
// 3054               case 2:Servo.P+=0;Servo.D+=5;break;
??choose_PD_79:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_81
// 3055               case 1:Servo.P+=0;Servo.D+=5;break;
??choose_PD_80:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_81
// 3056               case 0:Servo.P+=0;Servo.D+=5;break;
??choose_PD_78:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 3057               case -1:Servo.P+=0;Servo.D+=5;break;
// 3058               case -2:Servo.P+=0;Servo.D+=5;break;
// 3059               case -3:Servo.P+=0;Servo.D+=5;break;
// 3060               }
// 3061             }break;
// 3062           }
// 3063         }break;
??choose_PD_81:
??choose_PD_75:
        B.N      ??choose_PD_37
// 3064       case 6:
// 3065         {
// 3066           switch(track_form)
??choose_PD_35:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_83
        BCC.N    ??choose_PD_84
        CMP      R4,#+3
        BEQ.N    ??choose_PD_85
        BCC.N    ??choose_PD_86
        B.N      ??choose_PD_84
// 3067           {
// 3068           case 1:Servo.P+=0;Servo.D+=6;break;
??choose_PD_83:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_84
// 3069           case 2:Servo.P+=0;Servo.D+=6;break;
??choose_PD_86:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_84
// 3070           case 3:
// 3071             {
// 3072               switch(position_now_low_P)
??choose_PD_85:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_87
        CMP      R6,#+2
        BEQ.N    ??choose_PD_88
        BCC.N    ??choose_PD_89
        CMP      R6,#+3
        BNE.N    ??choose_PD_90
// 3073               {
// 3074               case 3:Servo.P+=0;Servo.D+=6;break;
??choose_PD_91:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_90
// 3075               case 2:Servo.P+=0;Servo.D+=6;break;
??choose_PD_88:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_90
// 3076               case 1:Servo.P+=0;Servo.D+=6;break;
??choose_PD_89:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_90
// 3077               case 0:Servo.P+=0;Servo.D+=6;break;
??choose_PD_87:
        LDR.N    R0,??choose_PD_2+0x8
        LDR.N    R1,??choose_PD_2+0x8
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+6
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
// 3078               case -1:Servo.P+=0;Servo.D+=6;break;
// 3079               case -2:Servo.P+=0;Servo.D+=6;break;
// 3080               case -3:Servo.P+=0;Servo.D+=6;break;
// 3081               }
// 3082             }break;
// 3083           }
// 3084         }break;
// 3085       }
// 3086     }break;
??choose_PD_90:
??choose_PD_84:
??choose_PD_37:
        B.W      ??choose_PD_29
// 3087   case 1:
// 3088     {
// 3089       switch(position_now_D)
??choose_PD_24:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.W    ??choose_PD_92
        CMP      R0,#+2
        BEQ.W    ??choose_PD_93
        BCC.W    ??choose_PD_94
        CMP      R0,#+4
        BEQ.W    ??choose_PD_95
        BCC.W    ??choose_PD_96
        CMP      R0,#+6
        BEQ.N    ??choose_PD_97
        BCC.W    ??choose_PD_98
        B.N      ??choose_PD_99
// 3090       {
// 3091       case 6:
// 3092         {
// 3093           switch(track_form)
??choose_PD_97:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_100
        BCC.W    ??choose_PD_101
        CMP      R4,#+3
        BEQ.N    ??choose_PD_102
        BCC.N    ??choose_PD_103
        B.N      ??choose_PD_101
// 3094           {
// 3095           case 1:Servo.P+=1;Servo.D+=5;break;
??choose_PD_100:
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_2+0x8
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.N    R1,??choose_PD_2+0x8
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_101
        DATA
??choose_PD_2:
        DC32     center
        DC32     topline
        DC32     Servo
        DC32     P_High
        DC32     D_High
        DC32     servo
        DC32     H_High
        DC32     T_High
        DC32     P_Mid
        DC32     D_Mid
        DC32     H_Mid
        DC32     T_Mid
        DC32     P_Low
        DC32     D_Low
        DC32     H_Low
        DC32     T_Low
        DC32     position_now
        DC32     position_now_low
        THUMB
// 3096           case 2:Servo.P+=1;Servo.D+=5;break;
??choose_PD_103:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_101
// 3097           case 3:
// 3098             {
// 3099               switch(position_now_low_P)
??choose_PD_102:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_104
        CMP      R6,#+2
        BEQ.N    ??choose_PD_105
        BCC.N    ??choose_PD_106
        CMP      R6,#+3
        BNE.N    ??choose_PD_107
// 3100               {
// 3101               case 3:Servo.P+=1;Servo.D+=5;break;
??choose_PD_108:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_107
// 3102               case 2:Servo.P+=1;Servo.D+=5;break;
??choose_PD_105:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_107
// 3103               case 1:Servo.P+=1;Servo.D+=5;break;
??choose_PD_106:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_107
// 3104               case 0:Servo.P+=1;Servo.D+=5;break;
??choose_PD_104:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+5
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
// 3105               case -1:Servo.P+=1;Servo.D+=5;break;
// 3106               case -2:Servo.P+=1;Servo.D+=5;break;
// 3107               case -3:Servo.P+=1;Servo.D+=5;break;
// 3108               }
// 3109             }break;
// 3110           }
// 3111         }break;
??choose_PD_107:
??choose_PD_101:
        B.N      ??choose_PD_99
// 3112       case 5:
// 3113         {
// 3114           switch(track_form)
??choose_PD_98:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_109
        BCC.N    ??choose_PD_110
        CMP      R4,#+3
        BEQ.N    ??choose_PD_111
        BCC.N    ??choose_PD_112
        B.N      ??choose_PD_110
// 3115           {
// 3116           case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_109:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_110
// 3117           case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_112:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_110
// 3118           case 3:
// 3119             {
// 3120               switch(position_now_low_P)
??choose_PD_111:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_113
        CMP      R6,#+2
        BEQ.N    ??choose_PD_114
        BCC.N    ??choose_PD_115
        CMP      R6,#+3
        BNE.N    ??choose_PD_116
// 3121               {
// 3122               case 3:Servo.P+=1;Servo.D+=4;break;
??choose_PD_117:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_116
// 3123               case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_114:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_116
// 3124               case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_115:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_116
// 3125               case 0:Servo.P+=1;Servo.D+=4;break;
??choose_PD_113:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
// 3126               case -1:Servo.P+=1;Servo.D+=4;break;
// 3127               case -2:Servo.P+=1;Servo.D+=4;break;
// 3128               case -3:Servo.P+=1;Servo.D+=4;break;
// 3129               }
// 3130             }break;
// 3131           }
// 3132         }break;
??choose_PD_116:
??choose_PD_110:
        B.N      ??choose_PD_99
// 3133       case 4:
// 3134         {
// 3135           switch(track_form)
??choose_PD_95:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_118
        BCC.N    ??choose_PD_119
        CMP      R4,#+3
        BEQ.N    ??choose_PD_120
        BCC.N    ??choose_PD_121
        B.N      ??choose_PD_119
// 3136           {
// 3137           case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_118:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_119
// 3138           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_121:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_119
// 3139           case 3:
// 3140             {
// 3141               switch(position_now_low_P)
??choose_PD_120:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_122
        CMP      R6,#+2
        BEQ.N    ??choose_PD_123
        BCC.N    ??choose_PD_124
        CMP      R6,#+3
        BNE.N    ??choose_PD_125
// 3142               {
// 3143               case 3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_126:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_125
// 3144               case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_123:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_125
// 3145               case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_124:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_125
// 3146               case 0:Servo.P+=1;Servo.D+=3;break;
??choose_PD_122:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
// 3147               case -1:Servo.P+=1;Servo.D+=3;break;
// 3148               case -2:Servo.P+=1;Servo.D+=3;break;
// 3149               case -3:Servo.P+=1;Servo.D+=3;break;
// 3150               }
// 3151             }break;
// 3152           }
// 3153         }break;
??choose_PD_125:
??choose_PD_119:
        B.N      ??choose_PD_99
// 3154       case 3:
// 3155         {
// 3156           switch(track_form)
??choose_PD_96:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_127
        BCC.N    ??choose_PD_128
        CMP      R4,#+3
        BEQ.N    ??choose_PD_129
        BCC.N    ??choose_PD_130
        B.N      ??choose_PD_128
// 3157           {
// 3158           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_127:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_128
// 3159           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_130:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_128
// 3160           case 3:
// 3161             {
// 3162               switch(position_now_low_P)
??choose_PD_129:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_131
        CMP      R6,#+2
        BEQ.N    ??choose_PD_132
        BCC.N    ??choose_PD_133
        CMP      R6,#+3
        BNE.N    ??choose_PD_134
// 3163               {
// 3164               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_135:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_134
// 3165               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_132:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_134
// 3166               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_133:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_134
// 3167               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_131:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
// 3168               case -1:Servo.P+=1;Servo.D+=2;break;
// 3169               case -2:Servo.P+=1;Servo.D+=2;break;
// 3170               case -3:Servo.P+=1;Servo.D+=2;break;
// 3171               }
// 3172             }break;
// 3173           }
// 3174         }break;
??choose_PD_134:
??choose_PD_128:
        B.N      ??choose_PD_99
// 3175       case 2:
// 3176         {
// 3177           switch(track_form)
??choose_PD_93:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_136
        BCC.N    ??choose_PD_137
        CMP      R4,#+3
        BEQ.N    ??choose_PD_138
        BCC.N    ??choose_PD_139
        B.N      ??choose_PD_137
// 3178           {
// 3179           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_136:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_137
// 3180           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_139:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_137
// 3181           case 3:
// 3182             {
// 3183               switch(position_now_low_P)
??choose_PD_138:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_140
        CMP      R6,#+2
        BEQ.N    ??choose_PD_141
        BCC.N    ??choose_PD_142
        CMP      R6,#+3
        BNE.N    ??choose_PD_143
// 3184               {
// 3185               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_144:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_143
// 3186               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_141:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_143
// 3187               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_142:
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_143
// 3188               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_140:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
// 3189               case -1:Servo.P+=1;Servo.D+=1;break;
// 3190               case -2:Servo.P+=1;Servo.D+=1;break;
// 3191               case -3:Servo.P+=1;Servo.D+=1;break;
// 3192               }
// 3193             }break;
// 3194           }
// 3195         }break;
??choose_PD_143:
??choose_PD_137:
        B.N      ??choose_PD_99
// 3196       case 1:
// 3197         {
// 3198           switch(track_form)
??choose_PD_94:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_145
        BCC.N    ??choose_PD_146
        CMP      R4,#+3
        BEQ.N    ??choose_PD_147
        BCC.N    ??choose_PD_148
        B.N      ??choose_PD_146
// 3199           {
// 3200           case 1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_145:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDR.N    R1,??choose_PD_21+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_146
// 3201           case 2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_148:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDR.N    R1,??choose_PD_21+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_146
// 3202           case 3:
// 3203             {
// 3204               switch(position_now_low_P)
??choose_PD_147:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_149
        CMP      R6,#+2
        BEQ.N    ??choose_PD_150
        BCC.N    ??choose_PD_151
        CMP      R6,#+3
        BNE.N    ??choose_PD_152
// 3205               {
// 3206               case 3:Servo.P+=1;Servo.D+=0;break;
??choose_PD_153:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDR.N    R1,??choose_PD_21+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_152
// 3207               case 2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_150:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDR.N    R1,??choose_PD_21+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_152
// 3208               case 1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_151:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDR.N    R1,??choose_PD_21+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_152
// 3209               case 0:Servo.P+=1;Servo.D+=0;break;
??choose_PD_149:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDR.N    R1,??choose_PD_21+0x4
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 3210               case -1:Servo.P+=1;Servo.D+=0;break;
// 3211               case -2:Servo.P+=1;Servo.D+=0;break;
// 3212               case -3:Servo.P+=1;Servo.D+=0;break;
// 3213               }
// 3214             }break;
// 3215           }
// 3216         }break;
??choose_PD_152:
??choose_PD_146:
        B.N      ??choose_PD_99
// 3217       case 0:Servo.P+=1;break;
??choose_PD_92:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
// 3218       case -1:
// 3219         {
// 3220           switch(track_form)
// 3221           {
// 3222           case 1:Servo.P+=1;Servo.D+=1;break;
// 3223           case 2:Servo.P+=1;Servo.D+=1;break;
// 3224           case 3:
// 3225             {
// 3226               switch(position_now_low_P)
// 3227               {
// 3228               case 3:Servo.P+=1;Servo.D+=1;break;
// 3229               case 2:Servo.P+=1;Servo.D+=1;break;
// 3230               case 1:Servo.P+=1;Servo.D+=1;break;
// 3231               case 0:Servo.P+=1;Servo.D+=1;break;
// 3232               case -1:Servo.P+=1;Servo.D+=1;break;
// 3233               case -2:Servo.P+=1;Servo.D+=1;break;
// 3234               case -3:Servo.P+=1;Servo.D+=1;break;
// 3235               }
// 3236             }break;
// 3237           }
// 3238         }break;
// 3239       case -2:
// 3240         {
// 3241           switch(track_form)
// 3242           {
// 3243           case 1:Servo.P+=1;Servo.D+=1;break;
// 3244           case 2:Servo.P+=1;Servo.D+=1;break;
// 3245           case 3:
// 3246             {
// 3247               switch(position_now_low_P)
// 3248               {
// 3249               case 3:Servo.P+=1;Servo.D+=1;break;
// 3250               case 2:Servo.P+=1;Servo.D+=1;break;
// 3251               case 1:Servo.P+=1;Servo.D+=1;break;
// 3252               case 0:Servo.P+=1;Servo.D+=1;break;
// 3253               case -1:Servo.P+=1;Servo.D+=1;break;
// 3254               case -2:Servo.P+=1;Servo.D+=1;break;
// 3255               case -3:Servo.P+=1;Servo.D+=1;break;
// 3256               }
// 3257             }break;
// 3258           }
// 3259         }break;
// 3260       case -3:
// 3261         {
// 3262           switch(track_form)
// 3263           {
// 3264           case 1:Servo.P+=1;Servo.D+=2;break;
// 3265           case 2:Servo.P+=1;Servo.D+=2;break;
// 3266           case 3:
// 3267             {
// 3268               switch(position_now_low_P)
// 3269               {
// 3270               case 3:Servo.P+=1;Servo.D+=2;break;
// 3271               case 2:Servo.P+=1;Servo.D+=2;break;
// 3272               case 1:Servo.P+=1;Servo.D+=2;break;
// 3273               case 0:Servo.P+=1;Servo.D+=2;break;
// 3274               case -1:Servo.P+=1;Servo.D+=2;break;
// 3275               case -2:Servo.P+=1;Servo.D+=2;break;
// 3276               case -3:Servo.P+=1;Servo.D+=2;break;
// 3277               }
// 3278             }break;
// 3279           }
// 3280         }break;
// 3281       case -4:
// 3282         {
// 3283           switch(track_form)
// 3284           {
// 3285           case 1:Servo.P+=1;Servo.D+=2;break;
// 3286           case 2:Servo.P+=1;Servo.D+=2;break;
// 3287           case 3:
// 3288             {
// 3289               switch(position_now_low_P)
// 3290               {
// 3291               case 3:Servo.P+=1;Servo.D+=2;break;
// 3292               case 2:Servo.P+=1;Servo.D+=2;break;
// 3293               case 1:Servo.P+=1;Servo.D+=2;break;
// 3294               case 0:Servo.P+=1;Servo.D+=2;break;
// 3295               case -1:Servo.P+=1;Servo.D+=2;break;
// 3296               case -2:Servo.P+=1;Servo.D+=2;break;
// 3297               case -3:Servo.P+=1;Servo.D+=2;break;
// 3298               }
// 3299             }break;
// 3300           }
// 3301         }break;
// 3302       case -5:
// 3303         {
// 3304           switch(track_form)
// 3305           {
// 3306           case 1:Servo.P+=1;Servo.D+=3;break;
// 3307           case 2:Servo.P+=1;Servo.D+=3;break;
// 3308           case 3:
// 3309             {
// 3310               switch(position_now_low_P)
// 3311               {
// 3312               case 3:Servo.P+=1;Servo.D+=3;break;
// 3313               case 2:Servo.P+=1;Servo.D+=3;break;
// 3314               case 1:Servo.P+=1;Servo.D+=3;break;
// 3315               case 0:Servo.P+=1;Servo.D+=3;break;
// 3316               case -1:Servo.P+=1;Servo.D+=3;break;
// 3317               case -2:Servo.P+=1;Servo.D+=3;break;
// 3318               case -3:Servo.P+=1;Servo.D+=3;break;
// 3319               }
// 3320             }break;
// 3321           }
// 3322         }break;
// 3323       case -6:
// 3324         {
// 3325           switch(track_form)
// 3326           {
// 3327           case 1:Servo.P+=1;Servo.D+=4;break;
// 3328           case 2:Servo.P+=1;Servo.D+=4;break;
// 3329           case 3:
// 3330             {
// 3331               switch(position_now_low_P)
// 3332               {
// 3333               case 3:Servo.P+=1;Servo.D+=4;break;
// 3334               case 2:Servo.P+=1;Servo.D+=4;break;
// 3335               case 1:Servo.P+=1;Servo.D+=4;break;
// 3336               case 0:Servo.P+=1;Servo.D+=4;break;
// 3337               case -1:Servo.P+=1;Servo.D+=4;break;
// 3338               case -2:Servo.P+=1;Servo.D+=4;break;
// 3339               case -3:Servo.P+=1;Servo.D+=4;break;
// 3340               }
// 3341             }break;
// 3342           }
// 3343         }break;
// 3344       }
// 3345     }break;
??choose_PD_99:
        B.W      ??choose_PD_29
// 3346   case 2:
// 3347     {
// 3348       switch(position_now_D)
??choose_PD_23:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.W    ??choose_PD_154
        CMP      R0,#+2
        BEQ.W    ??choose_PD_155
        BCC.W    ??choose_PD_156
        CMP      R0,#+4
        BEQ.W    ??choose_PD_157
        BCC.W    ??choose_PD_158
        CMP      R0,#+6
        BEQ.N    ??choose_PD_159
        BCC.N    ??choose_PD_160
        B.N      ??choose_PD_161
// 3349       {
// 3350       case 6:
// 3351         {
// 3352           switch(track_form)
??choose_PD_159:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_162
        BCC.N    ??choose_PD_163
        CMP      R4,#+3
        BEQ.N    ??choose_PD_164
        BCC.N    ??choose_PD_165
        B.N      ??choose_PD_163
// 3353           {
// 3354           case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_162:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_163
// 3355           case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_165:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_163
// 3356           case 3:
// 3357             {
// 3358               switch(position_now_low_P)
??choose_PD_164:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_166
        CMP      R6,#+2
        BEQ.N    ??choose_PD_167
        BCC.N    ??choose_PD_168
        CMP      R6,#+3
        BNE.N    ??choose_PD_169
// 3359               {
// 3360               case 3:Servo.P+=1;Servo.D+=4;break;
??choose_PD_170:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_169
// 3361               case 2:Servo.P+=1;Servo.D+=4;break;
??choose_PD_167:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_169
// 3362               case 1:Servo.P+=1;Servo.D+=4;break;
??choose_PD_168:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_169
// 3363               case 0:Servo.P+=1;Servo.D+=4;break;
??choose_PD_166:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+4
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
// 3364               case -1:Servo.P+=1;Servo.D+=4;break;
// 3365               case -2:Servo.P+=1;Servo.D+=4;break;
// 3366               case -3:Servo.P+=1;Servo.D+=4;break;
// 3367               }
// 3368             }break;
// 3369           }
// 3370         }break;
??choose_PD_169:
??choose_PD_163:
        B.N      ??choose_PD_161
// 3371       case 5:
// 3372         {
// 3373           switch(track_form)
??choose_PD_160:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_171
        BCC.N    ??choose_PD_172
        CMP      R4,#+3
        BEQ.N    ??choose_PD_173
        BCC.N    ??choose_PD_174
        B.N      ??choose_PD_172
// 3374           {
// 3375           case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_171:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_172
// 3376           case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_174:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_172
// 3377           case 3:
// 3378             {
// 3379               switch(position_now_low_P)
??choose_PD_173:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_175
        CMP      R6,#+2
        BEQ.N    ??choose_PD_176
        BCC.N    ??choose_PD_177
        CMP      R6,#+3
        BNE.N    ??choose_PD_178
// 3380               {
// 3381               case 3:Servo.P+=1;Servo.D+=3;break;
??choose_PD_179:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_178
// 3382               case 2:Servo.P+=1;Servo.D+=3;break;
??choose_PD_176:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_178
// 3383               case 1:Servo.P+=1;Servo.D+=3;break;
??choose_PD_177:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_178
// 3384               case 0:Servo.P+=1;Servo.D+=3;break;
??choose_PD_175:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
// 3385               case -1:Servo.P+=1;Servo.D+=3;break;
// 3386               case -2:Servo.P+=1;Servo.D+=3;break;
// 3387               case -3:Servo.P+=1;Servo.D+=3;break;
// 3388               }
// 3389             }break;
// 3390           }
// 3391         }break;
??choose_PD_178:
??choose_PD_172:
        B.N      ??choose_PD_161
// 3392       case 4:
// 3393         {
// 3394           switch(track_form)
??choose_PD_157:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_180
        BCC.N    ??choose_PD_181
        CMP      R4,#+3
        BEQ.N    ??choose_PD_182
        BCC.N    ??choose_PD_183
        B.N      ??choose_PD_181
// 3395           {
// 3396           case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_180:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_181
// 3397           case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_183:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_181
// 3398           case 3:
// 3399             {
// 3400               switch(position_now_low_P)
??choose_PD_182:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_184
        CMP      R6,#+2
        BEQ.N    ??choose_PD_185
        BCC.N    ??choose_PD_186
        CMP      R6,#+3
        BNE.N    ??choose_PD_187
// 3401               {
// 3402               case 3:Servo.P+=1;Servo.D+=2;break;
??choose_PD_188:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_187
// 3403               case 2:Servo.P+=1;Servo.D+=2;break;
??choose_PD_185:
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_21+0x4
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_21+0x4
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_187
        Nop      
        DATA
??choose_PD_21:
        DC32     position_diff
        DC32     Servo
        THUMB
// 3404               case 1:Servo.P+=1;Servo.D+=2;break;
??choose_PD_186:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_187
// 3405               case 0:Servo.P+=1;Servo.D+=2;break;
??choose_PD_184:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
// 3406               case -1:Servo.P+=1;Servo.D+=2;break;
// 3407               case -2:Servo.P+=1;Servo.D+=2;break;
// 3408               case -3:Servo.P+=1;Servo.D+=2;break;
// 3409               }
// 3410             }break;
// 3411           }
// 3412         }break;
??choose_PD_187:
??choose_PD_181:
        B.N      ??choose_PD_161
// 3413       case 3:
// 3414         {
// 3415           switch(track_form)
??choose_PD_158:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_190
        BCC.N    ??choose_PD_191
        CMP      R4,#+3
        BEQ.N    ??choose_PD_192
        BCC.N    ??choose_PD_193
        B.N      ??choose_PD_191
// 3416           {
// 3417           case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_190:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_191
// 3418           case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_193:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_191
// 3419           case 3:
// 3420             {
// 3421               switch(position_now_low_P)
??choose_PD_192:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_194
        CMP      R6,#+2
        BEQ.N    ??choose_PD_195
        BCC.N    ??choose_PD_196
        CMP      R6,#+3
        BNE.N    ??choose_PD_197
// 3422               {
// 3423               case 3:Servo.P+=1;Servo.D+=1;break;
??choose_PD_198:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_197
// 3424               case 2:Servo.P+=1;Servo.D+=1;break;
??choose_PD_195:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_197
// 3425               case 1:Servo.P+=1;Servo.D+=1;break;
??choose_PD_196:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_197
// 3426               case 0:Servo.P+=1;Servo.D+=1;break;
??choose_PD_194:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
// 3427               case -1:Servo.P+=1;Servo.D+=1;break;
// 3428               case -2:Servo.P+=1;Servo.D+=1;break;
// 3429               case -3:Servo.P+=1;Servo.D+=1;break;
// 3430               }
// 3431             }break;
// 3432           }
// 3433         }break;
??choose_PD_197:
??choose_PD_191:
        B.N      ??choose_PD_161
// 3434       case 2:
// 3435         {
// 3436           switch(track_form)
??choose_PD_155:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_199
        BCC.N    ??choose_PD_200
        CMP      R4,#+3
        BEQ.N    ??choose_PD_201
        BCC.N    ??choose_PD_202
        B.N      ??choose_PD_200
// 3437           {
// 3438           case 1:Servo.P+=1;Servo.D-=0;break;
??choose_PD_199:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDR.W    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_200
// 3439           case 2:Servo.P+=1;Servo.D-=0;break;
??choose_PD_202:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDR.W    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_200
// 3440           case 3:
// 3441             {
// 3442               switch(position_now_low_P)
??choose_PD_201:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_203
        CMP      R6,#+2
        BEQ.N    ??choose_PD_204
        BCC.N    ??choose_PD_205
        CMP      R6,#+3
        BNE.N    ??choose_PD_206
// 3443               {
// 3444               case 3:Servo.P+=1;Servo.D+=0;break;
??choose_PD_207:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDR.W    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_206
// 3445               case 2:Servo.P+=1;Servo.D+=0;break;
??choose_PD_204:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDR.W    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_206
// 3446               case 1:Servo.P+=1;Servo.D+=0;break;
??choose_PD_205:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDR.W    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_206
// 3447               case 0:Servo.P+=1;Servo.D+=0;break;
??choose_PD_203:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDR.W    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 3448               case -1:Servo.P+=1;Servo.D+=0;break;
// 3449               case -2:Servo.P+=1;Servo.D+=0;break;
// 3450               case -3:Servo.P+=1;Servo.D+=0;break;
// 3451               }
// 3452             }break;
// 3453           }
// 3454         }break;
??choose_PD_206:
??choose_PD_200:
        B.N      ??choose_PD_161
// 3455       case 1:
// 3456         {
// 3457           switch(track_form)
??choose_PD_156:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_208
        BCC.N    ??choose_PD_209
        CMP      R4,#+3
        BEQ.N    ??choose_PD_210
        BCC.N    ??choose_PD_211
        B.N      ??choose_PD_209
// 3458           {
// 3459           case 1:Servo.P+=1;Servo.D-=1;break;
??choose_PD_208:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_209
// 3460           case 2:Servo.P+=1;Servo.D-=1;break;
??choose_PD_211:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_209
// 3461           case 3:
// 3462             {
// 3463               switch(position_now_low_P)
??choose_PD_210:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_212
        CMP      R6,#+2
        BEQ.N    ??choose_PD_213
        BCC.N    ??choose_PD_214
        CMP      R6,#+3
        BNE.N    ??choose_PD_215
// 3464               {
// 3465               case 3:Servo.P+=1;Servo.D-=1;break;
??choose_PD_216:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_215
// 3466               case 2:Servo.P+=1;Servo.D-=1;break;
??choose_PD_213:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_215
// 3467               case 1:Servo.P+=1;Servo.D-=1;break;
??choose_PD_214:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_215
// 3468               case 0:Servo.P+=1;Servo.D-=1;break;
??choose_PD_212:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
// 3469               case -1:Servo.P+=1;Servo.D-=1;break;
// 3470               case -2:Servo.P+=1;Servo.D-=1;break;
// 3471               case -3:Servo.P+=1;Servo.D-=1;break;
// 3472               }
// 3473             }break;
// 3474           }
// 3475         }break;
??choose_PD_215:
??choose_PD_209:
        B.N      ??choose_PD_161
// 3476       case 0:Servo.P+=1;break;
??choose_PD_154:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
// 3477       case -1:
// 3478         {
// 3479           switch(track_form)
// 3480           {
// 3481           case 1:Servo.P+=1;Servo.D+=1;break;
// 3482           case 2:Servo.P+=1;Servo.D+=1;break;
// 3483           case 3:
// 3484             {
// 3485               switch(position_now_low_P)
// 3486               {
// 3487               case 3:Servo.P+=1;Servo.D+=1;break;
// 3488               case 2:Servo.P+=1;Servo.D+=1;break;
// 3489               case 1:Servo.P+=1;Servo.D+=1;break;
// 3490               case 0:Servo.P+=1;Servo.D+=1;break;
// 3491               case -1:Servo.P+=1;Servo.D+=1;break;
// 3492               case -2:Servo.P+=1;Servo.D+=1;break;
// 3493               case -3:Servo.P+=1;Servo.D+=1;break;
// 3494               }
// 3495             }break;
// 3496           }
// 3497         }break;
// 3498       case -2:
// 3499         {
// 3500           switch(track_form)
// 3501           {
// 3502           case 1:Servo.P+=1;Servo.D+=1;break;
// 3503           case 2:Servo.P+=1;Servo.D+=1;break;
// 3504           case 3:
// 3505             {
// 3506               switch(position_now_low_P)
// 3507               {
// 3508               case 3:Servo.P+=1;Servo.D+=1;break;
// 3509               case 2:Servo.P+=1;Servo.D+=1;break;
// 3510               case 1:Servo.P+=1;Servo.D+=1;break;
// 3511               case 0:Servo.P+=1;Servo.D+=1;break;
// 3512               case -1:Servo.P+=1;Servo.D+=1;break;
// 3513               case -2:Servo.P+=1;Servo.D+=1;break;
// 3514               case -3:Servo.P+=1;Servo.D+=1;break;
// 3515               }
// 3516             }break;
// 3517           }
// 3518         }break;
// 3519       case -3:
// 3520         {
// 3521           switch(track_form)
// 3522           {
// 3523           case 1:Servo.P+=1;Servo.D+=2;break;
// 3524           case 2:Servo.P+=1;Servo.D+=2;break;
// 3525           case 3:
// 3526             {
// 3527               switch(position_now_low_P)
// 3528               {
// 3529               case 3:Servo.P+=1;Servo.D+=2;break;
// 3530               case 2:Servo.P+=1;Servo.D+=2;break;
// 3531               case 1:Servo.P+=1;Servo.D+=2;break;
// 3532               case 0:Servo.P+=1;Servo.D+=2;break;
// 3533               case -1:Servo.P+=1;Servo.D+=2;break;
// 3534               case -2:Servo.P+=1;Servo.D+=2;break;
// 3535               case -3:Servo.P+=1;Servo.D+=2;break;
// 3536               }
// 3537             }break;
// 3538           }
// 3539         }break;
// 3540       case -4:
// 3541         {
// 3542           switch(track_form)
// 3543           {
// 3544           case 1:Servo.P+=1;Servo.D+=2;break;
// 3545           case 2:Servo.P+=1;Servo.D+=2;break;
// 3546           case 3:
// 3547             {
// 3548               switch(position_now_low_P)
// 3549               {
// 3550               case 3:Servo.P+=1;Servo.D+=2;break;
// 3551               case 2:Servo.P+=1;Servo.D+=2;break;
// 3552               case 1:Servo.P+=1;Servo.D+=2;break;
// 3553               case 0:Servo.P+=1;Servo.D+=2;break;
// 3554               case -1:Servo.P+=1;Servo.D+=2;break;
// 3555               case -2:Servo.P+=1;Servo.D+=2;break;
// 3556               case -3:Servo.P+=1;Servo.D+=2;break;
// 3557               }
// 3558             }break;
// 3559           }
// 3560         }break;
// 3561       case -5:
// 3562         {
// 3563           switch(track_form)
// 3564           {
// 3565           case 1:Servo.P+=1;Servo.D+=3;break;
// 3566           case 2:Servo.P+=1;Servo.D+=3;break;
// 3567           case 3:
// 3568             {
// 3569               switch(position_now_low_P)
// 3570               {
// 3571               case 3:Servo.P+=1;Servo.D+=3;break;
// 3572               case 2:Servo.P+=1;Servo.D+=3;break;
// 3573               case 1:Servo.P+=1;Servo.D+=3;break;
// 3574               case 0:Servo.P+=1;Servo.D+=3;break;
// 3575               case -1:Servo.P+=1;Servo.D+=3;break;
// 3576               case -2:Servo.P+=1;Servo.D+=3;break;
// 3577               case -3:Servo.P+=1;Servo.D+=3;break;
// 3578               }
// 3579             }break;
// 3580           }
// 3581         }break;
// 3582       case -6:
// 3583         {
// 3584           switch(track_form)
// 3585           {
// 3586           case 1:Servo.P+=1;Servo.D+=4;break;
// 3587           case 2:Servo.P+=1;Servo.D+=4;break;
// 3588           case 3:
// 3589             {
// 3590               switch(position_now_low_P)
// 3591               {
// 3592               case 3:Servo.P+=1;Servo.D+=4;break;
// 3593               case 2:Servo.P+=1;Servo.D+=4;break;
// 3594               case 1:Servo.P+=1;Servo.D+=4;break;
// 3595               case 0:Servo.P+=1;Servo.D+=4;break;
// 3596               case -1:Servo.P+=1;Servo.D+=4;break;
// 3597               case -2:Servo.P+=1;Servo.D+=4;break;
// 3598               case -3:Servo.P+=1;Servo.D+=4;break;
// 3599               }
// 3600             }break;
// 3601           }
// 3602         }break;
// 3603       }
// 3604     }break;
??choose_PD_161:
        B.W      ??choose_PD_29
// 3605   case 3:
// 3606     {
// 3607       switch(position_now_D)
??choose_PD_26:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.W    ??choose_PD_217
        CMP      R0,#+2
        BEQ.W    ??choose_PD_218
        BCC.W    ??choose_PD_219
        CMP      R0,#+4
        BEQ.W    ??choose_PD_220
        BCC.W    ??choose_PD_221
        CMP      R0,#+6
        BEQ.N    ??choose_PD_222
        BCC.N    ??choose_PD_223
        B.N      ??choose_PD_224
// 3608       {
// 3609       case 6:
// 3610         {
// 3611           switch(track_form)
??choose_PD_222:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_225
        BCC.N    ??choose_PD_226
        CMP      R4,#+3
        BEQ.N    ??choose_PD_227
        BCC.N    ??choose_PD_228
        B.N      ??choose_PD_226
// 3612           {
// 3613           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_225:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_226
// 3614           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_228:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_226
// 3615           case 3:
// 3616             {
// 3617               switch(position_now_low_P)
??choose_PD_227:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_229
        CMP      R6,#+2
        BEQ.N    ??choose_PD_230
        BCC.N    ??choose_PD_231
        CMP      R6,#+3
        BNE.N    ??choose_PD_232
// 3618               {
// 3619               case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_233:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_232
// 3620               case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_230:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_232
// 3621               case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_231:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_232
// 3622               case 0:Servo.P+=2;Servo.D+=1;break;
??choose_PD_229:
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.W    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
// 3623               case -1:Servo.P+=2;Servo.D+=1;break;
// 3624               case -2:Servo.P+=2;Servo.D+=1;break;
// 3625               case -3:Servo.P+=2;Servo.D+=1;break;
// 3626               }
// 3627             }break;
// 3628           }
// 3629         }break;
??choose_PD_232:
??choose_PD_226:
        B.N      ??choose_PD_224
// 3630       case 5:
// 3631         {
// 3632           switch(track_form)
??choose_PD_223:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_234
        BCC.N    ??choose_PD_235
        CMP      R4,#+3
        BEQ.N    ??choose_PD_236
        BCC.N    ??choose_PD_237
        B.N      ??choose_PD_235
// 3633           {
// 3634           case 1:Servo.P+=2;Servo.D+=0;break;
??choose_PD_234:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDR.N    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_235
// 3635           case 2:Servo.P+=2;Servo.D+=0;break;
??choose_PD_237:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDR.N    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_235
// 3636           case 3:
// 3637             {
// 3638               switch(position_now_low_P)
??choose_PD_236:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_238
        CMP      R6,#+2
        BEQ.N    ??choose_PD_239
        BCC.N    ??choose_PD_240
        CMP      R6,#+3
        BNE.N    ??choose_PD_241
// 3639               {
// 3640               case 3:Servo.P+=2;Servo.D+=0;break;
??choose_PD_242:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDR.N    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_241
// 3641               case 2:Servo.P+=2;Servo.D+=0;break;
??choose_PD_239:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDR.N    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_241
// 3642               case 1:Servo.P+=2;Servo.D+=0;break;
??choose_PD_240:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDR.N    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_241
// 3643               case 0:Servo.P+=2;Servo.D+=0;break;
??choose_PD_238:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDR.N    R1,??choose_PD_189
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 3644               case -1:Servo.P+=2;Servo.D+=0;break;
// 3645               case -2:Servo.P+=2;Servo.D+=0;break;
// 3646               case -3:Servo.P+=2;Servo.D+=0;break;
// 3647               }
// 3648             }break;
// 3649           }
// 3650         }break;
??choose_PD_241:
??choose_PD_235:
        B.N      ??choose_PD_224
// 3651       case 4:
// 3652         {
// 3653           switch(track_form)
??choose_PD_220:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_243
        BCC.N    ??choose_PD_244
        CMP      R4,#+3
        BEQ.N    ??choose_PD_245
        BCC.N    ??choose_PD_246
        B.N      ??choose_PD_244
// 3654           {
// 3655           case 1:Servo.P+=2;Servo.D-=1;break;
??choose_PD_243:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_244
// 3656           case 2:Servo.P+=2;Servo.D-=1;break;
??choose_PD_246:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_244
// 3657           case 3:
// 3658             {
// 3659               switch(position_now_low_P)
??choose_PD_245:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_247
        CMP      R6,#+2
        BEQ.N    ??choose_PD_248
        BCC.N    ??choose_PD_249
        CMP      R6,#+3
        BNE.N    ??choose_PD_250
// 3660               {
// 3661               case 3:Servo.P+=2;Servo.D-=1;break;
??choose_PD_251:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_250
// 3662               case 2:Servo.P+=2;Servo.D-=1;break;
??choose_PD_248:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_250
// 3663               case 1:Servo.P+=2;Servo.D-=1;break;
??choose_PD_249:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_250
// 3664               case 0:Servo.P+=2;Servo.D-=1;break;
??choose_PD_247:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
// 3665               case -1:Servo.P+=2;Servo.D-=1;break;
// 3666               case -2:Servo.P+=2;Servo.D-=1;break;
// 3667               case -3:Servo.P+=2;Servo.D-=1;break;
// 3668               }
// 3669             }break;
// 3670           }
// 3671         }break;
??choose_PD_250:
??choose_PD_244:
        B.N      ??choose_PD_224
// 3672       case 3:
// 3673         {
// 3674           switch(track_form)
??choose_PD_221:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_252
        BCC.N    ??choose_PD_253
        CMP      R4,#+3
        BEQ.N    ??choose_PD_254
        BCC.N    ??choose_PD_255
        B.N      ??choose_PD_253
// 3675           {
// 3676           case 1:Servo.P+=2;Servo.D-=2;break;
??choose_PD_252:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_253
// 3677           case 2:Servo.P+=2;Servo.D-=2;break;
??choose_PD_255:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_253
// 3678           case 3:
// 3679             {
// 3680               switch(position_now_low_P)
??choose_PD_254:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_256
        CMP      R6,#+2
        BEQ.N    ??choose_PD_257
        BCC.N    ??choose_PD_258
        CMP      R6,#+3
        BNE.N    ??choose_PD_259
// 3681               {
// 3682               case 3:Servo.P+=2;Servo.D-=2;break;
??choose_PD_260:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_259
// 3683               case 2:Servo.P+=2;Servo.D-=2;break;
??choose_PD_257:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_259
// 3684               case 1:Servo.P+=2;Servo.D-=2;break;
??choose_PD_258:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_259
// 3685               case 0:Servo.P+=2;Servo.D-=2;break;
??choose_PD_256:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
// 3686               case -1:Servo.P+=2;Servo.D-=2;break;
// 3687               case -2:Servo.P+=2;Servo.D-=2;break;
// 3688               case -3:Servo.P+=2;Servo.D-=2;break;
// 3689               }
// 3690             }break;
// 3691           }
// 3692         }break;
??choose_PD_259:
??choose_PD_253:
        B.N      ??choose_PD_224
// 3693       case 2:
// 3694         {
// 3695           switch(track_form)
??choose_PD_218:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_261
        BCC.N    ??choose_PD_262
        CMP      R4,#+3
        BEQ.N    ??choose_PD_263
        BCC.N    ??choose_PD_264
        B.N      ??choose_PD_262
// 3696           {
// 3697           case 1:Servo.P+=2;Servo.D-=3;break;
??choose_PD_261:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_262
// 3698           case 2:Servo.P+=2;Servo.D-=3;break;
??choose_PD_264:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_262
// 3699           case 3:Servo.P+=2;Servo.D-=3;break;
??choose_PD_263:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
// 3700             {
// 3701               switch(position_now_low_P)
// 3702               {
// 3703               case 3:Servo.P+=2;Servo.D-=3;break;
// 3704               case 2:Servo.P+=2;Servo.D-=3;break;
// 3705               case 1:Servo.P+=2;Servo.D-=3;break;
// 3706               case 0:Servo.P+=2;Servo.D-=3;break;
// 3707               case -1:Servo.P+=2;Servo.D-=3;break;
// 3708               case -2:Servo.P+=2;Servo.D-=3;break;
// 3709               case -3:Servo.P+=2;Servo.D-=3;break;
// 3710               }
// 3711             }break;
// 3712           }
// 3713         }break;
??choose_PD_262:
        B.N      ??choose_PD_224
// 3714       case 1:
// 3715         {
// 3716           switch(track_form)
??choose_PD_219:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_265
        BCC.N    ??choose_PD_266
        CMP      R4,#+3
        BEQ.N    ??choose_PD_267
        BCC.N    ??choose_PD_268
        B.N      ??choose_PD_266
// 3717           {
// 3718           case 1:Servo.P+=2;Servo.D-=4;break;
??choose_PD_265:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_266
// 3719           case 2:Servo.P+=2;Servo.D-=4;break;
??choose_PD_268:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_266
// 3720           case 3:
// 3721             {
// 3722               switch(position_now_low_P)
??choose_PD_267:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??choose_PD_269
        CMP      R6,#+2
        BEQ.N    ??choose_PD_270
        BCC.N    ??choose_PD_271
        CMP      R6,#+3
        BNE.N    ??choose_PD_272
// 3723               {
// 3724               case 3:Servo.P+=2;Servo.D-=4;break;
??choose_PD_273:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_272
// 3725               case 2:Servo.P+=2;Servo.D-=4;break;
??choose_PD_270:
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+0]
        LDR.N    R0,??choose_PD_189
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.N    R1,??choose_PD_189
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_272
        DATA
??choose_PD_189:
        DC32     Servo
        THUMB
// 3726               case 1:Servo.P+=2;Servo.D-=4;break;
??choose_PD_271:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_272
// 3727               case 0:Servo.P+=2;Servo.D-=4;break;
??choose_PD_269:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 3728               case -1:Servo.P+=2;Servo.D-=4;break;
// 3729               case -2:Servo.P+=2;Servo.D-=4;break;
// 3730               case -3:Servo.P+=2;Servo.D-=4;break;
// 3731               }
// 3732             }break;
// 3733           }
// 3734         }break;
??choose_PD_272:
??choose_PD_266:
        B.N      ??choose_PD_224
// 3735       case 0:Servo.P+=2;break;
??choose_PD_217:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
// 3736       case -1:
// 3737         {
// 3738           switch(track_form)
// 3739           {
// 3740           case 1:Servo.P+=2;Servo.D+=1;break;
// 3741           case 2:Servo.P+=2;Servo.D+=1;break;
// 3742           case 3:
// 3743             {
// 3744               switch(position_now_low_P)
// 3745               {
// 3746               case 3:Servo.P+=2;Servo.D+=1;break;
// 3747               case 2:Servo.P+=2;Servo.D+=1;break;
// 3748               case 1:Servo.P+=2;Servo.D+=1;break;
// 3749               case 0:Servo.P+=2;Servo.D+=1;break;
// 3750               case -1:Servo.P+=2;Servo.D+=1;break;
// 3751               case -2:Servo.P+=2;Servo.D+=1;break;
// 3752               case -3:Servo.P+=2;Servo.D+=1;break;
// 3753               }
// 3754             }break;
// 3755           }
// 3756         }break;
// 3757       case -2:
// 3758         {
// 3759           switch(track_form)
// 3760           {
// 3761           case 1:Servo.P+=2;Servo.D+=1;break;
// 3762           case 2:Servo.P+=2;Servo.D+=1;break;
// 3763           case 3:
// 3764             {
// 3765               switch(position_now_low_P)
// 3766               {
// 3767               case 3:Servo.P+=2;Servo.D+=1;break;
// 3768               case 2:Servo.P+=2;Servo.D+=1;break;
// 3769               case 1:Servo.P+=2;Servo.D+=1;break;
// 3770               case 0:Servo.P+=2;Servo.D+=1;break;
// 3771               case -1:Servo.P+=2;Servo.D+=1;break;
// 3772               case -2:Servo.P+=2;Servo.D+=1;break;
// 3773               case -3:Servo.P+=2;Servo.D+=1;break;
// 3774               }
// 3775             }break;
// 3776           }
// 3777         }break;
// 3778       case -3:
// 3779         {
// 3780           switch(track_form)
// 3781           {
// 3782           case 1:Servo.P+=2;Servo.D+=2;break;
// 3783           case 2:Servo.P+=2;Servo.D+=2;break;
// 3784           case 3:
// 3785             {
// 3786               switch(position_now_low_P)
// 3787               {
// 3788               case 3:Servo.P+=2;Servo.D+=2;break;
// 3789               case 2:Servo.P+=2;Servo.D+=2;break;
// 3790               case 1:Servo.P+=2;Servo.D+=2;break;
// 3791               case 0:Servo.P+=2;Servo.D+=2;break;
// 3792               case -1:Servo.P+=2;Servo.D+=2;break;
// 3793               case -2:Servo.P+=2;Servo.D+=2;break;
// 3794               case -3:Servo.P+=2;Servo.D+=2;break;
// 3795               }
// 3796             }break;
// 3797           }
// 3798         }break;
// 3799       case -4:
// 3800         {
// 3801           switch(track_form)
// 3802           {
// 3803           case 1:Servo.P+=2;Servo.D+=2;break;
// 3804           case 2:Servo.P+=2;Servo.D+=2;break;
// 3805           case 3:
// 3806             {
// 3807               switch(position_now_low_P)
// 3808               {
// 3809               case 3:Servo.P+=2;Servo.D+=2;break;
// 3810               case 2:Servo.P+=2;Servo.D+=2;break;
// 3811               case 1:Servo.P+=2;Servo.D+=2;break;
// 3812               case 0:Servo.P+=2;Servo.D+=2;break;
// 3813               case -1:Servo.P+=2;Servo.D+=2;break;
// 3814               case -2:Servo.P+=2;Servo.D+=2;break;
// 3815               case -3:Servo.P+=2;Servo.D+=2;break;
// 3816               }
// 3817             }break;
// 3818           }
// 3819         }break;
// 3820       case -5:
// 3821         {
// 3822           switch(track_form)
// 3823           {
// 3824           case 1:Servo.P+=2;Servo.D+=3;break;
// 3825           case 2:Servo.P+=2;Servo.D+=3;break;
// 3826           case 3:
// 3827             {
// 3828               switch(position_now_low_P)
// 3829               {
// 3830               case 3:Servo.P+=2;Servo.D+=3;break;
// 3831               case 2:Servo.P+=2;Servo.D+=3;break;
// 3832               case 1:Servo.P+=2;Servo.D+=3;break;
// 3833               case 0:Servo.P+=2;Servo.D+=3;break;
// 3834               case -1:Servo.P+=2;Servo.D+=3;break;
// 3835               case -2:Servo.P+=2;Servo.D+=3;break;
// 3836               case -3:Servo.P+=2;Servo.D+=3;break;
// 3837               }
// 3838             }break;
// 3839           }
// 3840         }break;
// 3841       case -6:
// 3842         {
// 3843           switch(track_form)
// 3844           {
// 3845           case 1:Servo.P+=2;Servo.D+=4;break;
// 3846           case 2:Servo.P+=2;Servo.D+=4;break;
// 3847           case 3:
// 3848             {
// 3849               switch(position_now_low_P)
// 3850               {
// 3851               case 3:Servo.P+=2;Servo.D+=4;break;
// 3852               case 2:Servo.P+=2;Servo.D+=4;break;
// 3853               case 1:Servo.P+=2;Servo.D+=4;break;
// 3854               case 0:Servo.P+=2;Servo.D+=4;break;
// 3855               case -1:Servo.P+=2;Servo.D+=4;break;
// 3856               case -2:Servo.P+=2;Servo.D+=4;break;
// 3857               case -3:Servo.P+=2;Servo.D+=4;break;
// 3858               }
// 3859             }break;
// 3860           }
// 3861         }break;
// 3862       }
// 3863     }break;
??choose_PD_224:
        B.N      ??choose_PD_29
// 3864   case 4:
// 3865     {
// 3866       switch(position_now_D)
??choose_PD_25:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.W    ??choose_PD_274
        CMP      R0,#+2
        BEQ.W    ??choose_PD_275
        BCC.W    ??choose_PD_276
        CMP      R0,#+4
        BEQ.N    ??choose_PD_277
        BCC.W    ??choose_PD_278
        CMP      R0,#+6
        BEQ.N    ??choose_PD_279
        BCC.N    ??choose_PD_280
        B.N      ??choose_PD_281
// 3867       {
// 3868       case 6:
// 3869         {
// 3870           switch(track_form)
??choose_PD_279:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_282
        BCC.N    ??choose_PD_283
        CMP      R4,#+3
        BEQ.N    ??choose_PD_284
        BCC.N    ??choose_PD_285
        B.N      ??choose_PD_283
// 3871           {
// 3872           case 1:Servo.P+=2;Servo.D+=3;break;
??choose_PD_282:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_283
// 3873           case 2:Servo.P+=2;Servo.D+=3;break;
??choose_PD_285:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_283
// 3874           case 3:Servo.P+=2;Servo.D+=3;break;
??choose_PD_284:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+3
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 3875           }
// 3876         }break;
??choose_PD_283:
        B.N      ??choose_PD_281
// 3877       case 5:
// 3878         {
// 3879           switch(track_form)
??choose_PD_280:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_286
        BCC.N    ??choose_PD_287
        CMP      R4,#+3
        BEQ.N    ??choose_PD_288
        BCC.N    ??choose_PD_289
        B.N      ??choose_PD_287
// 3880           {
// 3881           case 1:Servo.P+=2;Servo.D+=2;break;
??choose_PD_286:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_287
// 3882           case 2:Servo.P+=2;Servo.D+=2;break;
??choose_PD_289:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_287
// 3883           case 3:Servo.P+=2;Servo.D+=2;break;
??choose_PD_288:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 3884           }
// 3885         }break;
??choose_PD_287:
        B.N      ??choose_PD_281
// 3886       case 4:
// 3887         {
// 3888           switch(track_form)
??choose_PD_277:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_290
        BCC.N    ??choose_PD_291
        CMP      R4,#+3
        BEQ.N    ??choose_PD_292
        BCC.N    ??choose_PD_293
        B.N      ??choose_PD_291
// 3889           {
// 3890           case 1:Servo.P+=2;Servo.D+=1;break;
??choose_PD_290:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_291
// 3891           case 2:Servo.P+=2;Servo.D+=1;break;
??choose_PD_293:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_291
// 3892           case 3:Servo.P+=2;Servo.D+=1;break;
??choose_PD_292:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 3893           }
// 3894         }break;
??choose_PD_291:
        B.N      ??choose_PD_281
// 3895       case 3:
// 3896         {
// 3897           switch(track_form)
??choose_PD_278:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_294
        BCC.N    ??choose_PD_295
        CMP      R4,#+3
        BEQ.N    ??choose_PD_296
        BCC.N    ??choose_PD_297
        B.N      ??choose_PD_295
// 3898           {
// 3899           case 1:Servo.P+=2;Servo.D-=0;break;
??choose_PD_294:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDR.W    R1,??DataTable65
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_295
// 3900           case 2:Servo.P+=2;Servo.D-=0;break;
??choose_PD_297:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDR.W    R1,??DataTable65
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_295
// 3901           case 3:Servo.P+=2;Servo.D+=0;break;
??choose_PD_296:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDR.W    R1,??DataTable65
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 3902           }
// 3903         }break;
??choose_PD_295:
        B.N      ??choose_PD_281
// 3904       case 2:
// 3905         {
// 3906           switch(track_form)
??choose_PD_275:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_298
        BCC.N    ??choose_PD_299
        CMP      R4,#+3
        BEQ.N    ??choose_PD_300
        BCC.N    ??choose_PD_301
        B.N      ??choose_PD_299
// 3907           {
// 3908           case 1:Servo.P+=2;Servo.D-=1;break;
??choose_PD_298:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_299
// 3909           case 2:Servo.P+=2;Servo.D-=1;break;
??choose_PD_301:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_299
// 3910           case 3:Servo.P+=2;Servo.D-=1;break;
??choose_PD_300:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 3911           }
// 3912         }break;
??choose_PD_299:
        B.N      ??choose_PD_281
// 3913       case 1:
// 3914         {
// 3915           switch(track_form)
??choose_PD_276:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_302
        BCC.N    ??choose_PD_303
        CMP      R4,#+3
        BEQ.N    ??choose_PD_304
        BCC.N    ??choose_PD_305
        B.N      ??choose_PD_303
// 3916           {
// 3917           case 1:Servo.P+=2;Servo.D-=2;break;
??choose_PD_302:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_303
// 3918           case 2:Servo.P+=2;Servo.D-=2;break;
??choose_PD_305:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_303
// 3919           case 3:Servo.P+=2;Servo.D-=2;break;
??choose_PD_304:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 3920           }
// 3921         }break;
??choose_PD_303:
        B.N      ??choose_PD_281
// 3922       case 0:Servo.P+=2;break;
??choose_PD_274:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
// 3923       case -1:
// 3924         {
// 3925           switch(track_form)
// 3926           {
// 3927           case 1:Servo.P+=2;Servo.D+=1;break;
// 3928           case 2:Servo.P+=2;Servo.D+=1;break;
// 3929           case 3:Servo.P+=2;Servo.D+=1;break;
// 3930           }
// 3931         }break;
// 3932       case -2:
// 3933         {
// 3934           switch(track_form)
// 3935           {
// 3936           case 1:Servo.P+=2;Servo.D+=1;break;
// 3937           case 2:Servo.P+=2;Servo.D+=1;break;
// 3938           case 3:Servo.P+=2;Servo.D+=1;break;
// 3939           }
// 3940         }break;
// 3941       case -3:
// 3942         {
// 3943           switch(track_form)
// 3944           {
// 3945           case 1:Servo.P+=2;Servo.D+=2;break;
// 3946           case 2:Servo.P+=2;Servo.D+=2;break;
// 3947           case 3:Servo.P+=2;Servo.D+=2;break;
// 3948           }
// 3949         }break;
// 3950       case -4:
// 3951         {
// 3952           switch(track_form)
// 3953           {
// 3954           case 1:Servo.P+=2;Servo.D+=2;break;
// 3955           case 2:Servo.P+=2;Servo.D+=2;break;
// 3956           case 3:Servo.P+=2;Servo.D+=2;break;
// 3957           }
// 3958         }break;
// 3959       case -5:
// 3960         {
// 3961           switch(track_form)
// 3962           {
// 3963           case 1:Servo.P+=2;Servo.D+=3;break;
// 3964           case 2:Servo.P+=2;Servo.D+=3;break;
// 3965           case 3:Servo.P+=2;Servo.D+=3;break;
// 3966           }
// 3967         }break;
// 3968       case -6:
// 3969         {
// 3970           switch(track_form)
// 3971           {
// 3972           case 1:Servo.P+=2;Servo.D+=4;break;
// 3973           case 2:Servo.P+=2;Servo.D+=4;break;
// 3974           case 3:Servo.P+=2;Servo.D+=4;break;
// 3975           }
// 3976         }break;
// 3977       }
// 3978     }break;
??choose_PD_281:
        B.N      ??choose_PD_29
// 3979   case 5:
// 3980     {
// 3981       switch(position_now_D)
??choose_PD_28:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.W    ??choose_PD_306
        CMP      R0,#+2
        BEQ.W    ??choose_PD_307
        BCC.W    ??choose_PD_308
        CMP      R0,#+4
        BEQ.N    ??choose_PD_309
        BCC.W    ??choose_PD_310
        CMP      R0,#+6
        BEQ.N    ??choose_PD_311
        BCC.N    ??choose_PD_312
        B.N      ??choose_PD_313
// 3982       {
// 3983       case 6:
// 3984         {
// 3985           switch(track_form)
??choose_PD_311:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_314
        BCC.N    ??choose_PD_315
        CMP      R4,#+3
        BEQ.N    ??choose_PD_316
        BCC.N    ??choose_PD_317
        B.N      ??choose_PD_315
// 3986           {
// 3987           case 1:Servo.P+=4;Servo.D+=1;break;
??choose_PD_314:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_315
// 3988           case 2:Servo.P+=4;Servo.D+=1;break;
??choose_PD_317:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_315
// 3989           case 3:Servo.P+=4;Servo.D+=1;break;
??choose_PD_316:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 3990           }
// 3991         }break;
??choose_PD_315:
        B.N      ??choose_PD_313
// 3992       case 5:
// 3993         {
// 3994           switch(track_form)
??choose_PD_312:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_318
        BCC.N    ??choose_PD_319
        CMP      R4,#+3
        BEQ.N    ??choose_PD_320
        BCC.N    ??choose_PD_321
        B.N      ??choose_PD_319
// 3995           {
// 3996           case 1:Servo.P+=4;Servo.D+=0;break;
??choose_PD_318:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDR.W    R1,??DataTable65
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_319
// 3997           case 2:Servo.P+=4;Servo.D+=0;break;
??choose_PD_321:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDR.W    R1,??DataTable65
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_319
// 3998           case 3:Servo.P+=4;Servo.D+=0;break;
??choose_PD_320:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDR.W    R1,??DataTable65
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 3999           }
// 4000         }break;
??choose_PD_319:
        B.N      ??choose_PD_313
// 4001       case 4:
// 4002         {
// 4003           switch(track_form)
??choose_PD_309:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_322
        BCC.N    ??choose_PD_323
        CMP      R4,#+3
        BEQ.N    ??choose_PD_324
        BCC.N    ??choose_PD_325
        B.N      ??choose_PD_323
// 4004           {
// 4005           case 1:Servo.P+=4;Servo.D-=1;break;
??choose_PD_322:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_323
// 4006           case 2:Servo.P+=4;Servo.D-=1;break;
??choose_PD_325:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_323
// 4007           case 3:Servo.P+=4;Servo.D-=1;break;
??choose_PD_324:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 4008           }
// 4009         }break;
??choose_PD_323:
        B.N      ??choose_PD_313
// 4010       case 3:
// 4011         {
// 4012           switch(track_form)
??choose_PD_310:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_326
        BCC.N    ??choose_PD_327
        CMP      R4,#+3
        BEQ.N    ??choose_PD_328
        BCC.N    ??choose_PD_329
        B.N      ??choose_PD_327
// 4013           {
// 4014           case 1:Servo.P+=4;Servo.D-=2;break;
??choose_PD_326:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_327
// 4015           case 2:Servo.P+=4;Servo.D-=2;break;
??choose_PD_329:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_327
// 4016           case 3:Servo.P+=4;Servo.D-=2;break;
??choose_PD_328:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 4017           }
// 4018         }break;
??choose_PD_327:
        B.N      ??choose_PD_313
// 4019       case 2:
// 4020         {
// 4021           switch(track_form)
??choose_PD_307:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_330
        BCC.N    ??choose_PD_331
        CMP      R4,#+3
        BEQ.N    ??choose_PD_332
        BCC.N    ??choose_PD_333
        B.N      ??choose_PD_331
// 4022           {
// 4023           case 1:Servo.P+=4;Servo.D-=3;break;
??choose_PD_330:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_331
// 4024           case 2:Servo.P+=4;Servo.D-=3;break;
??choose_PD_333:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_331
// 4025           case 3:Servo.P+=4;Servo.D-=3;break;
??choose_PD_332:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 4026           }
// 4027         }break;
??choose_PD_331:
        B.N      ??choose_PD_313
// 4028       case 1:
// 4029         {
// 4030           switch(track_form)
??choose_PD_308:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_334
        BCC.N    ??choose_PD_335
        CMP      R4,#+3
        BEQ.N    ??choose_PD_336
        BCC.N    ??choose_PD_337
        B.N      ??choose_PD_335
// 4031           {
// 4032           case 1:Servo.P+=4;Servo.D-=4;break;
??choose_PD_334:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_335
// 4033           case 2:Servo.P+=4;Servo.D-=4;break;
??choose_PD_337:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_335
// 4034           case 3:Servo.P+=4;Servo.D-=4;break;
??choose_PD_336:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 4035           }
// 4036         }break;
??choose_PD_335:
        B.N      ??choose_PD_313
// 4037       case 0:Servo.P+=4;break;
??choose_PD_306:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
// 4038       case -1:
// 4039         {
// 4040           switch(track_form)
// 4041           {
// 4042           case 1:Servo.P+=4;Servo.D+=1;break;
// 4043           case 2:Servo.P+=4;Servo.D+=1;break;
// 4044           case 3:Servo.P+=4;Servo.D+=1;break;
// 4045           }
// 4046         }break;
// 4047       case -2:
// 4048         {
// 4049           switch(track_form)
// 4050           {
// 4051           case 1:Servo.P+=4;Servo.D+=1;break;
// 4052           case 2:Servo.P+=4;Servo.D+=1;break;
// 4053           case 3:Servo.P+=4;Servo.D+=1;break;
// 4054           }
// 4055         }break;
// 4056       case -3:
// 4057         {
// 4058           switch(track_form)
// 4059           {
// 4060           case 1:Servo.P+=4;Servo.D+=2;break;
// 4061           case 2:Servo.P+=4;Servo.D+=2;break;
// 4062           case 3:Servo.P+=4;Servo.D+=2;break;
// 4063           }
// 4064         }break;
// 4065       case -4:
// 4066         {
// 4067           switch(track_form)
// 4068           {
// 4069           case 1:Servo.P+=4;Servo.D+=2;break;
// 4070           case 2:Servo.P+=4;Servo.D+=2;break;
// 4071           case 3:Servo.P+=4;Servo.D+=2;break;
// 4072           }
// 4073         }break;
// 4074       case -5:
// 4075         {
// 4076           switch(track_form)
// 4077           {
// 4078           case 1:Servo.P+=4;Servo.D+=3;break;
// 4079           case 2:Servo.P+=4;Servo.D+=3;break;
// 4080           case 3:Servo.P+=4;Servo.D+=3;break;
// 4081           }
// 4082         }break;
// 4083       case -6:
// 4084         {
// 4085           switch(track_form)
// 4086           {
// 4087           case 1:Servo.P+=4;Servo.D+=4;break;
// 4088           case 2:Servo.P+=4;Servo.D+=4;break;
// 4089           case 3:Servo.P+=4;Servo.D+=4;break;
// 4090           }
// 4091         }break;
// 4092       }
// 4093     }break;
??choose_PD_313:
        B.N      ??choose_PD_29
// 4094   case 6:
// 4095     {
// 4096       switch(position_now_D)
??choose_PD_27:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BEQ.W    ??choose_PD_338
        CMP      R0,#+2
        BEQ.W    ??choose_PD_339
        BCC.W    ??choose_PD_340
        CMP      R0,#+4
        BEQ.N    ??choose_PD_341
        BCC.W    ??choose_PD_342
        CMP      R0,#+6
        BEQ.N    ??choose_PD_343
        BCC.N    ??choose_PD_344
        B.N      ??choose_PD_345
// 4097       {
// 4098       case 6:
// 4099         {
// 4100           switch(track_form)
??choose_PD_343:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_346
        BCC.N    ??choose_PD_347
        CMP      R4,#+3
        BEQ.N    ??choose_PD_348
        BCC.N    ??choose_PD_349
        B.N      ??choose_PD_347
// 4101           {
// 4102           case 1:Servo.P+=5;Servo.D+=1;break;
??choose_PD_346:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_347
// 4103           case 2:Servo.P+=5;Servo.D+=1;break;
??choose_PD_349:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_347
// 4104           case 3:Servo.P+=5;Servo.D+=1;break;
??choose_PD_348:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        ADDS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 4105           }
// 4106         }break;
??choose_PD_347:
        B.N      ??choose_PD_345
// 4107       case 5:
// 4108         {
// 4109           switch(track_form)
??choose_PD_344:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_350
        BCC.N    ??choose_PD_351
        CMP      R4,#+3
        BEQ.N    ??choose_PD_352
        BCC.N    ??choose_PD_353
        B.N      ??choose_PD_351
// 4110           {
// 4111           case 1:Servo.P+=5;Servo.D+=0;break;
??choose_PD_350:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDR.W    R1,??DataTable65
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_351
// 4112           case 2:Servo.P+=5;Servo.D+=0;break;
??choose_PD_353:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDR.W    R1,??DataTable65
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
        B.N      ??choose_PD_351
// 4113           case 3:Servo.P+=5;Servo.D+=0;break;
??choose_PD_352:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDR.W    R1,??DataTable65
        LDRH     R1,[R1, #+4]
        STRH     R1,[R0, #+4]
// 4114           }
// 4115         }break;
??choose_PD_351:
        B.N      ??choose_PD_345
// 4116       case 4:
// 4117         {
// 4118           switch(track_form)
??choose_PD_341:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_354
        BCC.N    ??choose_PD_355
        CMP      R4,#+3
        BEQ.N    ??choose_PD_356
        BCC.N    ??choose_PD_357
        B.N      ??choose_PD_355
// 4119           {
// 4120           case 1:Servo.P+=5;Servo.D-=1;break;
??choose_PD_354:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_355
// 4121           case 2:Servo.P+=5;Servo.D-=1;break;
??choose_PD_357:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_355
// 4122           case 3:Servo.P+=5;Servo.D-=1;break;
??choose_PD_356:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+1
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 4123           }
// 4124         }break;
??choose_PD_355:
        B.N      ??choose_PD_345
// 4125       case 3:
// 4126         {
// 4127           switch(track_form)
??choose_PD_342:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_358
        BCC.N    ??choose_PD_359
        CMP      R4,#+3
        BEQ.N    ??choose_PD_360
        BCC.N    ??choose_PD_361
        B.N      ??choose_PD_359
// 4128           {
// 4129           case 1:Servo.P+=5;Servo.D-=2;break;
??choose_PD_358:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_359
// 4130           case 2:Servo.P+=5;Servo.D-=2;break;
??choose_PD_361:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_359
// 4131           case 3:Servo.P+=5;Servo.D-=2;break;
??choose_PD_360:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+2
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 4132           }
// 4133         }break;
??choose_PD_359:
        B.N      ??choose_PD_345
// 4134       case 2:
// 4135         {
// 4136           switch(track_form)
??choose_PD_339:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_362
        BCC.N    ??choose_PD_363
        CMP      R4,#+3
        BEQ.N    ??choose_PD_364
        BCC.N    ??choose_PD_365
        B.N      ??choose_PD_363
// 4137           {
// 4138           case 1:Servo.P+=5;Servo.D-=3;break;
??choose_PD_362:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_363
// 4139           case 2:Servo.P+=5;Servo.D-=3;break;
??choose_PD_365:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_363
// 4140           case 3:Servo.P+=5;Servo.D-=3;break;
??choose_PD_364:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+3
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 4141           }
// 4142         }break;
??choose_PD_363:
        B.N      ??choose_PD_345
// 4143       case 1:
// 4144         {
// 4145           switch(track_form)
??choose_PD_340:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??choose_PD_366
        BCC.N    ??choose_PD_367
        CMP      R4,#+3
        BEQ.N    ??choose_PD_368
        BCC.N    ??choose_PD_369
        B.N      ??choose_PD_367
// 4146           {
// 4147           case 1:Servo.P+=5;Servo.D-=4;break;
??choose_PD_366:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_367
// 4148           case 2:Servo.P+=5;Servo.D-=4;break;
??choose_PD_369:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
        B.N      ??choose_PD_367
// 4149           case 3:Servo.P+=5;Servo.D-=4;break;
??choose_PD_368:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+4]
        SUBS     R0,R0,#+4
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+4]
// 4150           }
// 4151         }break;
??choose_PD_367:
        B.N      ??choose_PD_345
// 4152       case 0:Servo.P+=5;break;
??choose_PD_338:
        LDR.W    R0,??DataTable65
        LDRH     R0,[R0, #+0]
        ADDS     R0,R0,#+5
        LDR.W    R1,??DataTable65
        STRH     R0,[R1, #+0]
// 4153       case -1:
// 4154         {
// 4155           switch(track_form)
// 4156           {
// 4157           case 1:Servo.P+=5;Servo.D+=1;break;
// 4158           case 2:Servo.P+=5;Servo.D+=1;break;
// 4159           case 3:Servo.P+=5;Servo.D+=1;break;
// 4160           }
// 4161         }break;
// 4162       case -2:
// 4163         {
// 4164           switch(track_form)
// 4165           {
// 4166           case 1:Servo.P+=5;Servo.D+=1;break;
// 4167           case 2:Servo.P+=5;Servo.D+=1;break;
// 4168           case 3:Servo.P+=5;Servo.D+=1;break;
// 4169           }
// 4170         }break;
// 4171       case -3:
// 4172         {
// 4173           switch(track_form)
// 4174           {
// 4175           case 1:Servo.P+=5;Servo.D+=2;break;
// 4176           case 2:Servo.P+=5;Servo.D+=2;break;
// 4177           case 3:Servo.P+=5;Servo.D+=2;break;
// 4178           }
// 4179         }break;
// 4180       case -4:
// 4181         {
// 4182           switch(track_form)
// 4183           {
// 4184           case 1:Servo.P+=5;Servo.D+=2;break;
// 4185           case 2:Servo.P+=5;Servo.D+=2;break;
// 4186           case 3:Servo.P+=5;Servo.D+=2;break;
// 4187           }
// 4188         }break;
// 4189       case -5:
// 4190         {
// 4191           switch(track_form)
// 4192           {
// 4193           case 1:Servo.P+=5;Servo.D+=3;break;
// 4194           case 2:Servo.P+=5;Servo.D+=3;break;
// 4195           case 3:Servo.P+=5;Servo.D+=3;break;
// 4196           }
// 4197         }break;
// 4198       case -6:
// 4199         {
// 4200           switch(track_form)
// 4201           {
// 4202           case 1:Servo.P+=5;Servo.D+=4;break;
// 4203           case 2:Servo.P+=5;Servo.D+=4;break;
// 4204           case 3:Servo.P+=5;Servo.D+=4;break;
// 4205           }
// 4206         }break;
// 4207       }
// 4208     }break;
// 4209   }
// 4210   //if(sai_dao_lei_xing==12&&abs(position_now_low_P)<2&&abs(position_now_P)<3)Servo.D+=20;
// 4211   //if(track_form==3&&abs(position_now_low_P)<1&&abs(position_now)<2)Servo.D+=25;
// 4212   //if(track_form==3&&abs(position_now_low_P)==1&&abs(position_now)==2)Servo.D+=18;
// 4213   Servo_value=Servo_Middle-Servo.P*(position_mid-position_now)-Servo.D*position_diff;//PD控制舵机
??choose_PD_345:
??choose_PD_29:
        LDR.W    R0,??DataTable69
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable65
        LDRSH    R1,[R1, #+0]
        LDR.W    R2,??DataTable69_1
        LDRSH    R2,[R2, #+0]
        SUBS     R2,R2,#+79
        MULS     R1,R2,R1
        ADDS     R0,R1,R0
        LDR.W    R1,??DataTable65
        LDRSH    R1,[R1, #+4]
        LDR.W    R2,??DataTable69_2
        LDRSH    R2,[R2, #+0]
        MLS      R0,R2,R1,R0
        LDR.W    R1,??DataTable69_3
        STRH     R0,[R1, #+0]
// 4214   Servo_value=limit(Servo_value,Servo_Right,Servo_Left);
        LDR.W    R0,??DataTable69_4
        LDRSH    R2,[R0, #+0]
        LDR.W    R0,??DataTable69_5
        LDRSH    R1,[R0, #+0]
        LDR.W    R0,??DataTable69_3
        LDRSH    R0,[R0, #+0]
        BL       limit
        LDR.W    R1,??DataTable69_3
        STRH     R0,[R1, #+0]
// 4215   //if(abs(Servo_value-Servo_value_old)>2000)Servo_value=Servo_value_old;
// 4216   //Servo_value=0.1*Servo_value_old+0.9*Servo_value;
// 4217   Servo_value_old=Servo_value;
        LDR.W    R0,??DataTable69_6
        LDR.W    R1,??DataTable69_3
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4218   FTM1_C0V=Servo_value;  
        LDR.W    R0,??DataTable69_7  ;; 0x40039010
        LDR.W    R1,??DataTable69_3
        LDRSH    R1,[R1, #+0]
        STR      R1,[R0, #+0]
// 4219   return ok;
        MOVS     R0,#+1
        POP      {R1,R4-R11,PC}   ;; return
// 4220 }
// 4221 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4222 int16 stages3(int16 value,int16 parameter,int16 windage_k)
// 4223 {
// 4224   
// 4225     
// 4226     if(!value) return unclear;
stages3:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BNE.N    ??stages3_0
        MVNS     R0,#+99
        B.N      ??stages3_1
// 4227     if(value<(parameter-windage_k)){
??stages3_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        SUBS     R3,R1,R2
        CMP      R0,R3
        BGE.N    ??stages3_2
// 4228       NULL;
// 4229       return(-1);
        MOVS     R0,#-1
        B.N      ??stages3_1
// 4230     }
// 4231     else if(value>=(parameter+windage_k)){
??stages3_2:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        SXTAH    R1,R2,R1
        CMP      R0,R1
        BLT.N    ??stages3_3
// 4232       NULL;
// 4233       return(1); 
        MOVS     R0,#+1
        B.N      ??stages3_1
// 4234     }
// 4235          else return(0);
??stages3_3:
        MOVS     R0,#+0
??stages3_1:
        BX       LR               ;; return
// 4236 }
// 4237 
// 4238 
// 4239 
// 4240 
// 4241 /*************判断赛道类型0**************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4242 uint8 judge_locus_0(void)
// 4243 {
judge_locus_0:
        PUSH     {R3-R5,LR}
// 4244   int16 i=0,num=0,buff1=0;
        MOVS     R0,#+0
        MOVS     R4,#+0
        MOVS     R1,#+0
// 4245   uint8 sai_dao_lei_xing_0=0;
        MOVS     R5,#+0
// 4246   for(i=54;i>21;i--)      //前段   59~41  33
        MOVS     R2,#+54
        MOVS     R0,R2
        B.N      ??judge_locus_0_0
// 4247     if(center[i]){
??judge_locus_0_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable69_8
        LDRB     R1,[R0, R1]
        CMP      R1,#+0
        BEQ.N    ??judge_locus_0_2
// 4248       low_0+=center[i];
        LDR.W    R1,??DataTable69_9
        LDRH     R1,[R1, #+0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable69_8
        LDRB     R2,[R0, R2]
        ADDS     R1,R1,R2
        LDR.W    R2,??DataTable69_9
        STRH     R1,[R2, #+0]
// 4249         num++;
        ADDS     R4,R4,#+1
// 4250     }
??judge_locus_0_2:
        SUBS     R0,R0,#+1
??judge_locus_0_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+22
        BGE.N    ??judge_locus_0_1
// 4251   if(low_0)
        LDR.W    R1,??DataTable69_9
        LDRSH    R1,[R1, #+0]
        CMP      R1,#+0
        BEQ.N    ??judge_locus_0_3
// 4252     low_0=low_0/num;
        LDR.W    R1,??DataTable69_9
        LDRSH    R1,[R1, #+0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SDIV     R1,R1,R4
        LDR.W    R2,??DataTable69_9
        STRH     R1,[R2, #+0]
// 4253   num=0;
??judge_locus_0_3:
        MOVS     R4,#+0
        B.N      ??judge_locus_0_4
// 4254   
// 4255     
// 4256   for(;i>7;i--)    //中段  40~26    20  15
// 4257     if(center[i]){
??judge_locus_0_5:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable69_8
        LDRB     R1,[R0, R1]
        CMP      R1,#+0
        BEQ.N    ??judge_locus_0_6
// 4258       mid_0+=center[i];
        LDR.W    R1,??DataTable69_10
        LDRH     R1,[R1, #+0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable69_8
        LDRB     R2,[R0, R2]
        ADDS     R1,R1,R2
        LDR.W    R2,??DataTable69_10
        STRH     R1,[R2, #+0]
// 4259       num++;
        ADDS     R4,R4,#+1
// 4260       //j=i;
// 4261     }
??judge_locus_0_6:
        SUBS     R0,R0,#+1
??judge_locus_0_4:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+8
        BGE.N    ??judge_locus_0_5
// 4262   if(mid_0)
        LDR.W    R1,??DataTable69_10
        LDRSH    R1,[R1, #+0]
        CMP      R1,#+0
        BEQ.N    ??judge_locus_0_7
// 4263     mid_0=mid_0/num;
        LDR.W    R1,??DataTable69_10
        LDRSH    R1,[R1, #+0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SDIV     R1,R1,R4
        LDR.W    R2,??DataTable69_10
        STRH     R1,[R2, #+0]
// 4264   num=0;    
??judge_locus_0_7:
        MOVS     R4,#+0
        B.N      ??judge_locus_0_8
// 4265    
// 4266  
// 4267       
// 4268   for(;i>=0;i--)         //远段    25~0
// 4269     if(center[i]){
??judge_locus_0_9:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable69_8
        LDRB     R1,[R0, R1]
        CMP      R1,#+0
        BEQ.N    ??judge_locus_0_10
// 4270       high_0+=center[i];
        LDR.W    R1,??DataTable69_11
        LDRH     R1,[R1, #+0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable69_8
        LDRB     R2,[R0, R2]
        ADDS     R1,R1,R2
        LDR.W    R2,??DataTable69_11
        STRH     R1,[R2, #+0]
// 4271       num++;
        ADDS     R4,R4,#+1
// 4272     }
??judge_locus_0_10:
        SUBS     R0,R0,#+1
??judge_locus_0_8:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BPL.N    ??judge_locus_0_9
// 4273   if(high_0)
        LDR.W    R0,??DataTable69_11
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??judge_locus_0_11
// 4274     high_0=high_0/num;
        LDR.W    R0,??DataTable69_11
        LDRSH    R0,[R0, #+0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SDIV     R0,R0,R4
        LDR.W    R1,??DataTable69_11
        STRH     R0,[R1, #+0]
// 4275    num=0;
??judge_locus_0_11:
        MOVS     R4,#+0
// 4276    
// 4277     low_now_0=low_0;                      //远近中端的坐标位置
        LDR.W    R0,??DataTable69_12
        LDR.W    R1,??DataTable69_9
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4278   mid_now_0=mid_0;
        LDR.W    R0,??DataTable69_13
        LDR.W    R1,??DataTable69_10
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4279   high_now_0=high_0; 
        LDR.W    R0,??DataTable69_14
        LDR.W    R1,??DataTable69_11
        LDRH     R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4280   
// 4281   low_0=stages3(low_0,video_Middle,24);        // 22          low,mid,high就是1，0，-1
        MOVS     R2,#+24
        MOVS     R1,#+80
        LDR.W    R0,??DataTable69_9
        LDRSH    R0,[R0, #+0]
        BL       stages3
        LDR.W    R1,??DataTable69_9
        STRH     R0,[R1, #+0]
// 4282    mid_0=stages3(mid_0,video_Middle,22);        // 19
        MOVS     R2,#+22
        MOVS     R1,#+80
        LDR.W    R0,??DataTable69_10
        LDRSH    R0,[R0, #+0]
        BL       stages3
        LDR.W    R1,??DataTable69_10
        STRH     R0,[R1, #+0]
// 4283    high_0=stages3(high_0,video_Middle,18);     //16
        MOVS     R2,#+18
        MOVS     R1,#+80
        LDR.W    R0,??DataTable69_11
        LDRSH    R0,[R0, #+0]
        BL       stages3
        LDR.W    R1,??DataTable69_11
        STRH     R0,[R1, #+0]
// 4284    if(high_0==unclear)
        LDR.W    R0,??DataTable69_11
        LDRSH    R0,[R0, #+0]
        MVNS     R1,#+99
        CMP      R0,R1
        BNE.N    ??judge_locus_0_12
// 4285    {    
// 4286      buff1=low_0*mid_0;
        LDR.W    R0,??DataTable69_9
        LDRH     R0,[R0, #+0]
        LDR.W    R1,??DataTable69_10
        LDRH     R1,[R1, #+0]
        MUL      R1,R1,R0
// 4287      if(mid_0==unclear)
        LDR.W    R0,??DataTable69_10
        LDRSH    R0,[R0, #+0]
        MVNS     R2,#+99
        CMP      R0,R2
        BNE.N    ??judge_locus_0_13
// 4288      { //超急弯
// 4289        if(low_0==0)
        LDR.W    R0,??DataTable69_9
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_14
// 4290        {      
// 4291          
// 4292          sai_dao_lei_xing_0=0;
        MOVS     R5,#+0
        B.N      ??judge_locus_0_15
// 4293          
// 4294        }
// 4295        else
// 4296        { 
// 4297          
// 4298          sai_dao_lei_xing_0=1;
??judge_locus_0_14:
        MOVS     R5,#+1
        B.N      ??judge_locus_0_15
// 4299          
// 4300        }
// 4301        
// 4302      }
// 4303      else
// 4304      {                                                  
// 4305        if(buff1==1)
??judge_locus_0_13:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+1
        BNE.N    ??judge_locus_0_16
// 4306        {   //急弯
// 4307          
// 4308          sai_dao_lei_xing_0=2;
        MOVS     R5,#+2
        B.N      ??judge_locus_0_15
// 4309          
// 4310          
// 4311        }
// 4312        else
// 4313        if(buff1==0)
??judge_locus_0_16:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+0
        BNE.N    ??judge_locus_0_17
// 4314        {  //急弯
// 4315          if(low_0!=0) 
        LDR.W    R0,??DataTable69_9
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??judge_locus_0_18
// 4316          {
// 4317            
// 4318            sai_dao_lei_xing_0=4;
        MOVS     R5,#+4
        B.N      ??judge_locus_0_15
// 4319            
// 4320          }
// 4321          else
// 4322          {
// 4323            if(mid_0==0&&low_0==0)
??judge_locus_0_18:
        LDR.W    R0,??DataTable69_10
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_19
        LDR.W    R0,??DataTable69_9
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_19
// 4324            {
// 4325             
// 4326              sai_dao_lei_xing_0=5;
        MOVS     R5,#+5
// 4327              
// 4328              
// 4329            } 
// 4330            
// 4331            sai_dao_lei_xing_0=6;
??judge_locus_0_19:
        MOVS     R5,#+6
        B.N      ??judge_locus_0_15
// 4332            
// 4333          }
// 4334            
// 4335        }
// 4336        else if(buff1==-1)
??judge_locus_0_17:
        MOVS     R0,#-1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,R0
        BNE.W    ??judge_locus_0_15
// 4337        { // 超急弯
// 4338          
// 4339          sai_dao_lei_xing_0=8;
        MOVS     R5,#+8
        B.N      ??judge_locus_0_15
// 4340          
// 4341            
// 4342        }
// 4343      }                                         
// 4344    }
// 4345    else
// 4346    {           //high!=unclear时
// 4347      if(mid_0==high_0)
??judge_locus_0_12:
        LDR.W    R0,??DataTable69_10
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable69_11
        LDRSH    R1,[R1, #+0]
        CMP      R0,R1
        BNE.N    ??judge_locus_0_20
// 4348      {
// 4349        if(high_0==0)
        LDR.W    R0,??DataTable69_11
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_21
// 4350        {        //直道         
// 4351          if(high_now_0>70&&high_now_0<90&&mid_now_0>70&&mid_now_0<90&&low_now_0>70&&low_now_0<90)
        LDR.W    R0,??DataTable69_14
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+71
        BLT.N    ??judge_locus_0_22
        LDR.W    R0,??DataTable69_14
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+90
        BGE.N    ??judge_locus_0_22
        LDR.W    R0,??DataTable69_13
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+71
        BLT.N    ??judge_locus_0_22
        LDR.W    R0,??DataTable69_13
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+90
        BGE.N    ??judge_locus_0_22
        LDR.W    R0,??DataTable69_12
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+71
        BLT.N    ??judge_locus_0_22
        LDR.W    R0,??DataTable69_12
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+90
        BGE.N    ??judge_locus_0_22
// 4352          {
// 4353            sai_dao_lei_xing_0=20;
        MOVS     R5,#+20
        B.N      ??judge_locus_0_15
// 4354          }
// 4355          else sai_dao_lei_xing_0=9;
??judge_locus_0_22:
        MOVS     R5,#+9
        B.N      ??judge_locus_0_15
// 4356          
// 4357        
// 4358        }
// 4359        else
// 4360        {           /////////////////////////
// 4361          
// 4362          sai_dao_lei_xing_0=10;
??judge_locus_0_21:
        MOVS     R5,#+10
        B.N      ??judge_locus_0_15
// 4363          
// 4364        
// 4365        }
// 4366      }
// 4367      else
// 4368      {     //mid!=high时
// 4369        if(low_0==0&&mid_0==0)
??judge_locus_0_20:
        LDR.W    R0,??DataTable69_9
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_23
        LDR.W    R0,??DataTable69_10
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_23
// 4370        {         //长大弯
// 4371          
// 4372          sai_dao_lei_xing_0=12;
        MOVS     R5,#+12
// 4373         
// 4374         
// 4375        }//else
// 4376        if(mid_0==0&&(low_0*high_0==-1))
??judge_locus_0_23:
        LDR.W    R0,??DataTable69_10
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_24
        LDR.W    R0,??DataTable69_9
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable69_11
        LDRSH    R1,[R1, #+0]
        MULS     R0,R1,R0
        CMN      R0,#+1
        BNE.N    ??judge_locus_0_24
// 4377        {  //大弯
// 4378          
// 4379          sai_dao_lei_xing_0=13;
        MOVS     R5,#+13
// 4380          
// 4381          
// 4382        }//else
// 4383        if(high_0==low_0&&low_0!=mid_0)
??judge_locus_0_24:
        LDR.W    R0,??DataTable69_11
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable69_9
        LDRSH    R1,[R1, #+0]
        CMP      R0,R1
        BNE.N    ??judge_locus_0_25
        LDR.W    R0,??DataTable69_9
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable69_10
        LDRSH    R1,[R1, #+0]
        CMP      R0,R1
        BEQ.N    ??judge_locus_0_25
// 4384        {    //S弯
// 4385          
// 4386          sai_dao_lei_xing_0=14;
        MOVS     R5,#+14
// 4387          
// 4388        
// 4389        }
// 4390        /////////////////////////////////////////////////////
// 4391        if(high_0==0&&(mid_0*low_0==-1))
??judge_locus_0_25:
        LDR.W    R0,??DataTable69_11
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_26
        LDR.W    R0,??DataTable69_10
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable69_9
        LDRSH    R1,[R1, #+0]
        MULS     R0,R1,R0
        CMN      R0,#+1
        BNE.N    ??judge_locus_0_26
// 4392        {
// 4393          
// 4394          sai_dao_lei_xing_0=15;
        MOVS     R5,#+15
// 4395          
// 4396        
// 4397        }
// 4398        if(high_0==0&&(mid_0*low_0==1))
??judge_locus_0_26:
        LDR.W    R0,??DataTable69_11
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_locus_0_27
        LDR.W    R0,??DataTable69_10
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable69_9
        LDRSH    R1,[R1, #+0]
        MULS     R0,R1,R0
        CMP      R0,#+1
        BNE.N    ??judge_locus_0_27
// 4399        {         //长大弯
// 4400          
// 4401          sai_dao_lei_xing_0=16;
        MOVS     R5,#+16
// 4402          
// 4403         
// 4404        }
// 4405        if((high==-1&&mid==1&&low!=-1)||(high==1&&mid==-1&&low!=1))
??judge_locus_0_27:
        LDR.W    R0,??DataTable69_15
        LDRSH    R0,[R0, #+0]
        MOVS     R1,#-1
        CMP      R0,R1
        BNE.N    ??judge_locus_0_28
        LDR.W    R0,??DataTable69_16
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??judge_locus_0_28
        LDR.W    R0,??DataTable69_17
        LDRSH    R0,[R0, #+0]
        MOVS     R1,#-1
        CMP      R0,R1
        BNE.N    ??judge_locus_0_29
??judge_locus_0_28:
        LDR.W    R0,??DataTable69_15
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??judge_locus_0_15
        LDR.W    R0,??DataTable69_16
        LDRSH    R0,[R0, #+0]
        MOVS     R1,#-1
        CMP      R0,R1
        BNE.N    ??judge_locus_0_15
        LDR.W    R0,??DataTable69_17
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??judge_locus_0_15
// 4406        {         //长急弯
// 4407          
// 4408          sai_dao_lei_xing_0=17;
??judge_locus_0_29:
        MOVS     R5,#+17
// 4409          
// 4410         
// 4411        }
// 4412        /////////////////////////////////////////////////
// 4413      }
// 4414    }
// 4415    return sai_dao_lei_xing_0;
??judge_locus_0_15:
        MOVS     R0,R5
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        POP      {R1,R4,R5,PC}    ;; return
// 4416   
// 4417 }

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable65:
        DC32     Servo
// 4418 /*************判断赛道类型0END**************/
// 4419 
// 4420 
// 4421 
// 4422 /***************很歪的十字交叉连接判断***************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4423 uint8 judage_shizi(void)
// 4424 {
// 4425   uint8 i=54,j_k=0,m=0;
judage_shizi:
        MOVS     R1,#+54
        MOVS     R0,#+0
        MOVS     R2,#+0
// 4426   
// 4427   if(mid_0==1)
        LDR.W    R3,??DataTable69_10
        LDRSH    R3,[R3, #+0]
        CMP      R3,#+1
        BNE.N    ??judage_shizi_0
// 4428   {
// 4429     for(i=54;i>10;i--)
        MOVS     R1,#+54
        B.N      ??judage_shizi_1
??judage_shizi_2:
        SUBS     R1,R1,#+1
??judage_shizi_1:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+11
        BCC.N    ??judage_shizi_3
// 4430     {
// 4431       if(center[i]>center[i-1]&&center[i]>center[i-2]&&center[i]>center[i-3])
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable69_8
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #-1]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable69_8
        LDRB     R3,[R1, R3]
        CMP      R2,R3
        BCS.N    ??judage_shizi_2
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable69_8
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #-2]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable69_8
        LDRB     R3,[R1, R3]
        CMP      R2,R3
        BCS.N    ??judage_shizi_2
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable69_8
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #-3]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable69_8
        LDRB     R3,[R1, R3]
        CMP      R2,R3
        BCS.N    ??judage_shizi_2
// 4432       {
// 4433         j_k=i;
        MOVS     R0,R1
// 4434         break;
        B.N      ??judage_shizi_3
// 4435       }
// 4436     }
// 4437     
// 4438   }
// 4439   else if(mid_0==-1)
??judage_shizi_0:
        LDR.W    R1,??DataTable69_10
        LDRSH    R1,[R1, #+0]
        MOVS     R2,#-1
        CMP      R1,R2
        BNE.N    ??judage_shizi_3
// 4440   {
// 4441     for(i=54;i>10;i--)
        MOVS     R1,#+54
        B.N      ??judage_shizi_4
??judage_shizi_5:
        SUBS     R1,R1,#+1
??judage_shizi_4:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+11
        BCC.N    ??judage_shizi_3
// 4442     {
// 4443       if(center[i]<center[i-1]&&center[i]<center[i-2]&&center[i]<center[i-3])
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable69_8
        LDRB     R2,[R1, R2]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable69_8
        ADDS     R3,R1,R3
        LDRB     R3,[R3, #-1]
        CMP      R2,R3
        BCS.N    ??judage_shizi_5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable69_8
        LDRB     R2,[R1, R2]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable69_8
        ADDS     R3,R1,R3
        LDRB     R3,[R3, #-2]
        CMP      R2,R3
        BCS.N    ??judage_shizi_5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R2,??DataTable69_8
        LDRB     R2,[R1, R2]
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        LDR.W    R3,??DataTable69_8
        ADDS     R3,R1,R3
        LDRB     R3,[R3, #-3]
        CMP      R2,R3
        BCS.N    ??judage_shizi_5
// 4444       {
// 4445         j_k=i;
        MOVS     R0,R1
// 4446         break;
// 4447       }
// 4448     }
// 4449     
// 4450   }
// 4451  
// 4452   return j_k;
??judage_shizi_3:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BX       LR               ;; return
// 4453 }
// 4454 /***************很歪的十字交叉连接判断END***************/
// 4455 
// 4456 
// 4457 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4458 int16 speed_control(void)
// 4459 {
speed_control:
        PUSH     {LR}
        SUB      SP,SP,#+28
// 4460   volatile int16 i=0,E=0,Ec=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
        MOVS     R0,#+0
        STRH     R0,[SP, #+26]
        MOVS     R0,#+0
        STRH     R0,[SP, #+24]
// 4461   volatile int32 exspeed=0;
        MOVS     R0,#+0
        STR      R0,[SP, #+4]
        B.N      ??speed_control_0
// 4462   volatile struct membership_grade S; 
// 4463   static int16 i_old=0;
// 4464   
// 4465   
// 4466   while(!center[i]&&i<55) i++;   //50
??speed_control_1:
        LDRH     R0,[SP, #+0]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+0]
??speed_control_0:
        LDRSH    R0,[SP, #+0]
        LDR.W    R1,??DataTable69_8
        LDRB     R0,[R0, R1]
        CMP      R0,#+0
        BNE.N    ??speed_control_2
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+55
        BLT.N    ??speed_control_1
// 4467   if(i<=5) return speed_top;    //直道全速冲刺  3
??speed_control_2:
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+6
        BGE.N    ??speed_control_3
        LDR.W    R0,??DataTable69_18
        LDRSH    R0,[R0, #+0]
        B.N      ??speed_control_4
// 4468     
// 4469       
// 4470   E=54-i;   //i无效点个数    //49    E为有效的个数
??speed_control_3:
        LDRH     R0,[SP, #+0]
        RSBS     R0,R0,#+54
        STRH     R0,[SP, #+26]
// 4471   Ec=i-i_old; //有效点变化率
        LDRH     R0,[SP, #+0]
        LDR.W    R1,??DataTable69_19
        LDRH     R1,[R1, #+0]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+24]
// 4472   i_old=i;
        LDR.W    R0,??DataTable69_19
        LDRH     R1,[SP, #+0]
        STRH     R1,[R0, #+0]
// 4473   if(i>5)
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+6
        BLT.N    ??speed_control_5
// 4474   {
// 4475     if(!Ec)//变化率为0的时候
        LDRSH    R0,[SP, #+24]
        CMP      R0,#+0
        BNE.N    ??speed_control_6
// 4476     {
// 4477       //sub_e(E,25,20,50,45);//20，15，45，40通过采集到的点数来算出，speed_s,speed_m,speed_b所占的份额
// 4478   //  sub_e(E,24,0,54,24);       //主要决定十字弯道和直到的过弯速度
// 4479       sub_e(E,35,30,50,45);
        MOVS     R0,#+45
        STR      R0,[SP, #+0]
        MOVS     R3,#+50
        MOVS     R2,#+30
        MOVS     R1,#+35
        LDRH     R0,[SP, #+26]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        BL       sub_e
// 4480       S.s=sub.s;
        LDR.W    R0,??DataTable69_20
        LDRH     R0,[R0, #+0]
        STRH     R0,[SP, #+8]
// 4481       S.m=sub.m;
        LDR.W    R0,??DataTable69_20
        LDRH     R0,[R0, #+2]
        STRH     R0,[SP, #+10]
// 4482       S.b=sub.b;
        LDR.W    R0,??DataTable69_20
        LDRH     R0,[R0, #+4]
        STRH     R0,[SP, #+12]
// 4483       exspeed=(sub.s*speed_s+sub.m*speed_m+sub.b*speed_b)/100;
        LDR.W    R0,??DataTable69_20
        LDRSH    R0,[R0, #+0]
        LDR.W    R1,??DataTable69_21
        LDRSH    R1,[R1, #+0]
        LDR.W    R2,??DataTable69_20
        LDRSH    R2,[R2, #+2]
        LDR.W    R3,??DataTable69_22
        LDRSH    R3,[R3, #+0]
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR.W    R1,??DataTable69_20
        LDRSH    R1,[R1, #+4]
        LDR.W    R2,??DataTable69_23
        LDRSH    R2,[R2, #+0]
        MLA      R0,R2,R1,R0
        MOVS     R1,#+100
        SDIV     R0,R0,R1
        STR      R0,[SP, #+4]
        B.N      ??speed_control_7
// 4484     }
// 4485     else //变化率不等于0的时候
// 4486     {
// 4487       //exspeed=speed_fuzzy(E,Ec,35,25,50,45,3,1,7,5); 4.8―10：00
// 4488       exspeed=speed_fuzzy(E,Ec,35,30,50,45,3,1,7,5);
??speed_control_6:
        MOVS     R0,#+5
        STR      R0,[SP, #+20]
        MOVS     R0,#+7
        STR      R0,[SP, #+16]
        MOVS     R0,#+1
        STR      R0,[SP, #+12]
        MOVS     R0,#+3
        STR      R0,[SP, #+8]
        MOVS     R0,#+45
        STR      R0,[SP, #+4]
        MOVS     R0,#+50
        STR      R0,[SP, #+0]
        MOVS     R3,#+30
        MOVS     R2,#+35
        LDRSH    R1,[SP, #+24]
        LDRSH    R0,[SP, #+26]
        BL       speed_fuzzy
        STR      R0,[SP, #+4]
// 4489     }
// 4490     return exspeed;
??speed_control_7:
        LDR      R0,[SP, #+4]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        B.N      ??speed_control_4
// 4491   }
// 4492 }
??speed_control_5:
??speed_control_4:
        ADD      SP,SP,#+28
        POP      {PC}             ;; return

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
??i_old:
        DS8 2
// 4493     
// 4494      
// 4495       

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4496 int16 Motor_control(int16 shift){
Motor_control:
        PUSH     {LR}
        SUB      SP,SP,#+28
// 4497  
// 4498   volatile int32 speed=0;
        MOVS     R1,#+0
        STR      R1,[SP, #+0]
// 4499   volatile int16 motor_e=0,motor_ec=0;
        MOVS     R1,#+0
        STRH     R1,[SP, #+24]
        MOVS     R1,#+0
        STRH     R1,[SP, #+26]
// 4500   static int16 motor_e_old=0,motor_sum=0;
// 4501    
// 4502   motor_e=shift-pulse;             //speed_vari为编码器返回的脉冲数
        LDR.W    R1,??DataTable69_24
        LDRSH    R1,[R1, #+0]
        SUBS     R1,R0,R1
        STRH     R1,[SP, #+24]
// 4503   speed_now=shift;
        LDR.W    R1,??DataTable69_25
        STRH     R0,[R1, #+0]
// 4504   motor_ec=motor_e-motor_e_old;
        LDRH     R0,[SP, #+24]
        LDR.W    R1,??DataTable69_26
        LDRH     R1,[R1, #+0]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+26]
// 4505   /*if(motor_e>0)      //bang-bang加PID调节
// 4506   {
// 4507     if(motor_e>20)speed=370;
// 4508     else
// 4509     {
// 4510       motor_fuzzy(motor_e,motor_ec,16,8,32,24,8,4,16,12);//30  20  50  40  15  10  25  20
// 4511       motor_sum=line(motor_e,Motor.I);
// 4512       speed=(long)s_old*motor_p+Motor.P*(long)motor_e+motor_p*(long)motor_sum/2;
// 4513       speed=speed/100;
// 4514     }
// 4515   }
// 4516   else
// 4517   {
// 4518     if(abs(motor_e)>10)speed=0;
// 4519     else
// 4520     {
// 4521       motor_fuzzy(motor_e,motor_ec,16,8,32,24,8,4,16,12);//30  20  50  40  15  10  25  20
// 4522       motor_sum=line(motor_e,Motor.I);
// 4523       speed=(long)s_old*motor_p+Motor.P*(long)motor_e+motor_p*(long)motor_sum/2;
// 4524       speed=speed/100;
// 4525     }
// 4526   }*/
// 4527   motor_fuzzy(motor_e,motor_ec,16,8,32,24,8,4,16,12);//30  20  50  40  15  10  25  20
        MOVS     R0,#+12
        STR      R0,[SP, #+20]
        MOVS     R0,#+16
        STR      R0,[SP, #+16]
        MOVS     R0,#+4
        STR      R0,[SP, #+12]
        MOVS     R0,#+8
        STR      R0,[SP, #+8]
        MOVS     R0,#+24
        STR      R0,[SP, #+4]
        MOVS     R0,#+32
        STR      R0,[SP, #+0]
        MOVS     R3,#+8
        MOVS     R2,#+16
        LDRSH    R1,[SP, #+26]
        LDRSH    R0,[SP, #+24]
        BL       motor_fuzzy
// 4528   motor_sum=line(motor_e,Motor.I);
        LDR.W    R0,??DataTable69_27
        LDRSH    R1,[R0, #+2]
        LDRSH    R0,[SP, #+24]
        BL       line
        LDR.W    R1,??DataTable69_28
        STRH     R0,[R1, #+0]
// 4529   speed=(long)s_old*motor_p+Motor.P*(long)motor_e+motor_p*(long)motor_sum/2;
        LDR.W    R0,??DataTable69_29
        LDRSH    R0,[R0, #+0]
        MOVS     R1,#+70
        LDR.W    R2,??DataTable69_27
        LDRSH    R2,[R2, #+0]
        LDRSH    R3,[SP, #+24]
        MULS     R2,R3,R2
        MLA      R0,R1,R0,R2
        LDR.W    R1,??DataTable69_28
        LDRSH    R1,[R1, #+0]
        MOVS     R2,#+70
        MULS     R1,R2,R1
        MOVS     R2,#+2
        SDIV     R1,R1,R2
        ADDS     R0,R1,R0
        STR      R0,[SP, #+0]
// 4530   speed=speed/100;
        LDR      R0,[SP, #+0]
        MOVS     R1,#+100
        SDIV     R0,R0,R1
        STR      R0,[SP, #+0]
// 4531   s_old=pulse;
        LDR.W    R0,??DataTable69_29
        LDR.W    R1,??DataTable69_24
        LDRSH    R1,[R1, #+0]
        STRH     R1,[R0, #+0]
// 4532   motor_e_old=motor_e;
        LDR.W    R0,??DataTable69_26
        LDRH     R1,[SP, #+24]
        STRH     R1,[R0, #+0]
// 4533   //if(pulse<50&&speed<0) return 50;
// 4534   return speed;            
        LDR      R0,[SP, #+0]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        ADD      SP,SP,#+28
        POP      {PC}             ;; return
// 4535 }   

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
??motor_e_old:
        DS8 2

        SECTION `.bss`:DATA:REORDER:NOROOT(1)
??motor_sum:
        DS8 2
// 4536 
// 4537 /*****************非动态阈值二值化*****************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4538 void threshold(void)
// 4539 {
threshold:
        PUSH     {R3-R11,LR}
// 4540   uint8 i=0,j=0;
        MOVS     R0,#+0
        MOVS     R1,#+0
// 4541   uint8 black_a1 = 140;
        MOVS     R2,#+140
        STRB     R2,[SP, #+1]
// 4542   uint8 black_a2 = 145;
        MOVS     R2,#+145
        STRB     R2,[SP, #+0]
// 4543   uint8 black_a3 = 140;
        MOVS     R2,#+140
// 4544   uint8 black_b1 = 135;
        MOVS     R3,#+135
// 4545   uint8 black_b2 = 140;
        MOVS     R4,#+140
// 4546   uint8 black_b3 = 135;
        MOVS     R5,#+135
// 4547   uint8 black_c1 = 132;
        MOVS     R6,#+132
// 4548   uint8 black_c2 = 138;
        MOVS     R7,#+138
// 4549   uint8 black_c3 = 132;
        MOVS     R12,#+132
// 4550   uint8 black_d1 = 130;
        MOVS     LR,#+130
// 4551   uint8 black_d2 = 142;
        MOVS     R8,#+142
// 4552   uint8 black_d3 = 130;
        MOVS     R9,#+130
// 4553   for(i=0;i<H;i++)
        MOVS     R10,#+0
        MOV      R0,R10
        B.N      ??threshold_0
??threshold_1:
        ADDS     R0,R0,#+1
??threshold_0:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+55
        BCS.W    ??threshold_2
// 4554   {
// 4555     if(i<8)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+8
        BCS.W    ??threshold_3
// 4556     {
// 4557       for(j=0;j<V;j++)
        MOVS     R1,#+0
        B.N      ??threshold_4
// 4558       {
// 4559         if(j<50)
// 4560         {
// 4561           if(video[i][j]<black_d1)video[i][j]=0;
// 4562           else video[i][j]=1;
// 4563         }
// 4564         else if(j<110)
// 4565         {
// 4566           if(video[i][j]<black_d2)video[i][j]=0;
// 4567           else video[i][j]=1;
// 4568         }
// 4569         else
// 4570         {
// 4571           if(video[i][j]<black_d3)video[i][j]=0;
// 4572           else video[i][j]=1;
??threshold_5:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
??threshold_6:
        ADDS     R1,R1,#+1
??threshold_4:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+160
        BCS.N    ??threshold_1
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+50
        BCS.N    ??threshold_7
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     LR,LR            ;; ZeroExt  LR,LR,#+24,#+24
        CMP      R10,LR
        BCS.N    ??threshold_8
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_6
??threshold_8:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_6
??threshold_7:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+110
        BCS.N    ??threshold_9
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
        CMP      R10,R8
        BCS.N    ??threshold_10
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_6
??threshold_10:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_6
??threshold_9:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
        CMP      R10,R9
        BCS.N    ??threshold_5
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_6
// 4573         }
// 4574       }
// 4575     }
// 4576     else if(i<20)
??threshold_3:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+20
        BCS.W    ??threshold_11
// 4577     {
// 4578       for(j=0;j<V;j++)
        MOVS     R1,#+0
        B.N      ??threshold_12
// 4579       {
// 4580         if(j<50)
// 4581         {
// 4582           if(video[i][j]<black_c1)video[i][j]=0;
// 4583           else video[i][j]=1;
// 4584         }
// 4585         else if(j<110)
// 4586         {
// 4587           if(video[i][j]<black_c2)video[i][j]=0;
// 4588           else video[i][j]=1;
// 4589         }
// 4590         else
// 4591         {
// 4592           if(video[i][j]<black_c3)video[i][j]=0;
// 4593           else video[i][j]=1;
??threshold_13:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
??threshold_14:
        ADDS     R1,R1,#+1
??threshold_12:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+160
        BCS.W    ??threshold_1
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+50
        BCS.N    ??threshold_15
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R10,R6
        BCS.N    ??threshold_16
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_14
??threshold_16:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_14
??threshold_15:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+110
        BCS.N    ??threshold_17
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        CMP      R10,R7
        BCS.N    ??threshold_18
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_14
??threshold_18:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_14
??threshold_17:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R12,R12          ;; ZeroExt  R12,R12,#+24,#+24
        CMP      R10,R12
        BCS.N    ??threshold_13
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_14
// 4594         }
// 4595       }
// 4596     }
// 4597     else if(i<34)
??threshold_11:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+34
        BCS.W    ??threshold_19
// 4598     {
// 4599       for(j=0;j<V;j++)
        MOVS     R1,#+0
        B.N      ??threshold_20
// 4600       {
// 4601         if(j<50)
// 4602         {
// 4603           if(video[i][j]<black_b1)video[i][j]=0;
// 4604           else video[i][j]=1;
// 4605         }
// 4606         else if(j<110)
// 4607         {
// 4608           if(video[i][j]<black_b2)video[i][j]=0;
// 4609           else video[i][j]=1;
// 4610         }
// 4611         else
// 4612         {
// 4613           if(video[i][j]<black_b3)video[i][j]=0;
// 4614           else video[i][j]=1;
??threshold_21:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
??threshold_22:
        ADDS     R1,R1,#+1
??threshold_20:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+160
        BCS.W    ??threshold_1
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+50
        BCS.N    ??threshold_23
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R10,R3
        BCS.N    ??threshold_24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_22
??threshold_24:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_22
??threshold_23:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+110
        BCS.N    ??threshold_25
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R10,R4
        BCS.N    ??threshold_26
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_22
??threshold_26:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_22
??threshold_25:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
        CMP      R10,R5
        BCS.N    ??threshold_21
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_22
// 4615         }
// 4616       }
// 4617     }
// 4618     else
// 4619     {
// 4620       for(j=0;j<V;j++)
??threshold_19:
        MOVS     R1,#+0
        B.N      ??threshold_27
// 4621       {
// 4622         if(j<50)
// 4623         {
// 4624           if(video[i][j]<black_a1)video[i][j]=0;
// 4625           else video[i][j]=1;
// 4626         }
// 4627         else if(j<110)
// 4628         {
// 4629           if(video[i][j]<black_a2)video[i][j]=0;
// 4630           else video[i][j]=1;
// 4631         }
// 4632         else
// 4633         {
// 4634           if(video[i][j]<black_a3)video[i][j]=0;
// 4635           else video[i][j]=1;
??threshold_28:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
??threshold_29:
        ADDS     R1,R1,#+1
??threshold_27:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+160
        BCS.W    ??threshold_1
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+50
        BCS.N    ??threshold_30
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        LDRB     R11,[SP, #+1]
        CMP      R10,R11
        BCS.N    ??threshold_31
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_29
??threshold_31:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_29
??threshold_30:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R1,#+110
        BCS.N    ??threshold_32
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        LDRB     R11,[SP, #+0]
        CMP      R10,R11
        BCS.N    ??threshold_33
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_29
??threshold_33:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+1
        STRB     R11,[R1, R10]
        B.N      ??threshold_29
??threshold_32:
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        LDRB     R10,[R1, R10]
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        CMP      R10,R2
        BCS.N    ??threshold_28
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R10,#+160
        LDR.W    R11,??DataTable70
        MLA      R10,R10,R0,R11
        MOVS     R11,#+0
        STRB     R11,[R1, R10]
        B.N      ??threshold_29
// 4636         }
// 4637       }
// 4638     }
// 4639   }
// 4640 }
??threshold_2:
        POP      {R0,R4-R11,PC}   ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69:
        DC32     Servo_Middle

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_1:
        DC32     position_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_2:
        DC32     position_diff

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_3:
        DC32     Servo_value

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_4:
        DC32     Servo_Left

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_5:
        DC32     Servo_Right

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_6:
        DC32     Servo_value_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_7:
        DC32     0x40039010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_8:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_9:
        DC32     low_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_10:
        DC32     mid_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_11:
        DC32     high_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_12:
        DC32     low_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_13:
        DC32     mid_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_14:
        DC32     high_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_15:
        DC32     `high`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_16:
        DC32     mid

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_17:
        DC32     `low`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_18:
        DC32     speed_top

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_19:
        DC32     ??i_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_20:
        DC32     `sub`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_21:
        DC32     speed_s

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_22:
        DC32     speed_m

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_23:
        DC32     speed_b

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_24:
        DC32     pulse

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_25:
        DC32     speed_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_26:
        DC32     ??motor_e_old

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_27:
        DC32     Motor

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_28:
        DC32     ??motor_sum

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable69_29:
        DC32     s_old
// 4641 /**********************非动态阈值END*********************/
// 4642 /**********************动态阈值***********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4643 void Yu_Zhi(unsigned char x1, unsigned char x2,unsigned char y)
// 4644 {
Yu_Zhi:
        PUSH     {R4-R7}
// 4645 	unsigned char i=0,black_number=0,white_number=0;
        MOVS     R7,#+0
        MOVS     R3,#+0
        MOVS     R6,#+0
// 4646 	int16 black_numbers=0,white_numbers=0;
        MOVS     R4,#+0
        MOVS     R5,#+0
// 4647 	if(y<10)
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        CMP      R2,#+10
        BCS.W    ??Yu_Zhi_0
// 4648 	{
// 4649 		if(x1==0)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BNE.N    ??Yu_Zhi_1
// 4650 		{
// 4651 		    for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_2
// 4652 			{
// 4653 			    if(video[y][i]<=16);
// 4654 			    else if(video[y][i]<black_max_a1){black_numbers=black_numbers+video[y][i];black_number++;}
// 4655                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_3:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_4:
        ADDS     R7,R7,#+1
??Yu_Zhi_2:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_5
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_4
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable72
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_3
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_4
// 4656 			}
// 4657 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_5:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_6
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4658 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_6:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_7
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4659 		    if(white_numbers&&black_numbers)black_max_1=(black_numbers+white_numbers)/2;
??Yu_Zhi_7:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_8
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_8
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable72_1
        STRB     R0,[R1, #+0]
// 4660 		    if(!(white_numbers&&black_numbers))black_max_1=black_max_a1;
??Yu_Zhi_8:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_9
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_9:
        LDR.W    R0,??DataTable72_1
        LDR.W    R1,??DataTable72
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.W      ??Yu_Zhi_10
// 4661 		}
// 4662 		else if(x1==40)
??Yu_Zhi_1:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+40
        BNE.N    ??Yu_Zhi_11
// 4663 		{
// 4664 			for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_12
// 4665 			{
// 4666 			    if(video[y][i]<=16);
// 4667 			    else if(video[y][i]<black_max_a2){black_numbers=black_numbers+video[y][i];black_number++;}
// 4668                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_13:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_14:
        ADDS     R7,R7,#+1
??Yu_Zhi_12:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_15
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_14
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable72_2
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_13
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_14
// 4669 			}
// 4670 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_15:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4671 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_16:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_17
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4672 		    if(white_numbers&&black_numbers)black_max_2=(black_numbers+white_numbers)/2;
??Yu_Zhi_17:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_18
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_18
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable72_3
        STRB     R0,[R1, #+0]
// 4673             if(!(white_numbers&&black_numbers))black_max_2=black_max_a2;
??Yu_Zhi_18:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_19
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_19:
        LDR.W    R0,??DataTable72_3
        LDR.W    R1,??DataTable72_2
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4674 		}
// 4675 		else
// 4676 		{
// 4677 			for(i=x1;i<x2;i++)
??Yu_Zhi_11:
        MOVS     R7,R0
        B.N      ??Yu_Zhi_20
// 4678 			{
// 4679 			    if(video[y][i]<=16);
// 4680 			    else if(video[y][i]<black_max_a3){black_numbers=black_numbers+video[y][i];black_number++;}
// 4681                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_21:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_22:
        ADDS     R7,R7,#+1
??Yu_Zhi_20:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_23
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_22
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable72_4
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_21
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_22
// 4682 			}
// 4683 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_23:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_24
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4684 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_24:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_25
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4685 		    if(white_numbers&&black_numbers)black_max_3=(black_numbers+white_numbers)/2;
??Yu_Zhi_25:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_26
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_26
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable72_5
        STRB     R0,[R1, #+0]
// 4686 		    if(!(white_numbers&&black_numbers))black_max_3=black_max_a3;
??Yu_Zhi_26:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_27
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_27:
        LDR.W    R0,??DataTable72_5
        LDR.W    R1,??DataTable72_4
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4687 		}
// 4688 	}
// 4689 	else if(y<20)
??Yu_Zhi_0:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        CMP      R2,#+20
        BCS.W    ??Yu_Zhi_28
// 4690 	{
// 4691 		if(x1==0)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BNE.N    ??Yu_Zhi_29
// 4692 		{
// 4693 		    for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_30
// 4694 			{
// 4695 			    if(video[y][i]<=16);
// 4696 			    else if(video[y][i]<black_max_b1){black_numbers=black_numbers+video[y][i];black_number++;}
// 4697                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_31:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_32:
        ADDS     R7,R7,#+1
??Yu_Zhi_30:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_33
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_32
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable72_6
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_31
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_32
// 4698 			}
// 4699 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_33:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_34
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4700 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_34:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_35
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4701 		    if(white_numbers&&black_numbers)black_max_1=(black_numbers+white_numbers)/2;
??Yu_Zhi_35:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_36
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_36
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable72_1
        STRB     R0,[R1, #+0]
// 4702 		    if(!(white_numbers&&black_numbers))black_max_1=black_max_b1;
??Yu_Zhi_36:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_37
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_37:
        LDR.W    R0,??DataTable72_1
        LDR.W    R1,??DataTable72_6
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4703 		}
// 4704 		else if(x1==40)
??Yu_Zhi_29:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+40
        BNE.N    ??Yu_Zhi_38
// 4705 		{
// 4706 			for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_39
// 4707 			{
// 4708 			    if(video[y][i]<=16);
// 4709 			    else if(video[y][i]<black_max_b2){black_numbers=black_numbers+video[y][i];black_number++;}
// 4710                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_40:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_41:
        ADDS     R7,R7,#+1
??Yu_Zhi_39:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_42
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_41
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable72_7
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_40
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_41
// 4711 			}
// 4712 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_42:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_43
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4713 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_43:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_44
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4714 		    if(white_numbers&&black_numbers)black_max_2=(black_numbers+white_numbers)/2;
??Yu_Zhi_44:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_45
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_45
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable72_3
        STRB     R0,[R1, #+0]
// 4715             if(!(white_numbers&&black_numbers))black_max_2=black_max_b2;
??Yu_Zhi_45:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_46
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_46:
        LDR.W    R0,??DataTable72_3
        LDR.W    R1,??DataTable72_7
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4716 		}
// 4717 		else
// 4718 		{
// 4719 			for(i=x1;i<x2;i++)
??Yu_Zhi_38:
        MOVS     R7,R0
        B.N      ??Yu_Zhi_47
// 4720 			{
// 4721 			    if(video[y][i]<=16);
// 4722 			    else if(video[y][i]<black_max_b3){black_numbers=black_numbers+video[y][i];black_number++;}
// 4723                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_48:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_49:
        ADDS     R7,R7,#+1
??Yu_Zhi_47:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_50
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_49
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable72_8
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_48
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_49
// 4724 			}
// 4725 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_50:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_51
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4726 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_51:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_52
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4727 		    if(white_numbers&&black_numbers)black_max_3=(black_numbers+white_numbers)/2;
??Yu_Zhi_52:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_53
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_53
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable72_5
        STRB     R0,[R1, #+0]
// 4728 		    if(!(white_numbers&&black_numbers))black_max_3=black_max_b3;
??Yu_Zhi_53:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_54
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_54:
        LDR.W    R0,??DataTable72_5
        LDR.W    R1,??DataTable72_8
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4729 		}
// 4730 	}
// 4731 	else if(y<35)
??Yu_Zhi_28:
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        CMP      R2,#+35
        BCS.W    ??Yu_Zhi_55
// 4732 	{
// 4733 		if(x1==0)
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BNE.N    ??Yu_Zhi_56
// 4734 		{
// 4735 		    for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_57
// 4736 			{
// 4737 			    if(video[y][i]<=16);
// 4738 			    else if(video[y][i]<black_max_c1){black_numbers=black_numbers+video[y][i];black_number++;}
// 4739                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_58:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_59:
        ADDS     R7,R7,#+1
??Yu_Zhi_57:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_60
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_59
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_58
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_59
// 4740 			}
// 4741 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_60:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_61
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4742 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_61:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_62
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4743 		    if(white_numbers&&black_numbers)black_max_1=(black_numbers+white_numbers)/2;
??Yu_Zhi_62:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_63
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_63
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable72_1
        STRB     R0,[R1, #+0]
// 4744 		    if(!(white_numbers&&black_numbers))black_max_1=black_max_c1;
??Yu_Zhi_63:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_64
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_64:
        LDR.W    R0,??DataTable72_1
        LDR.W    R1,??DataTable73
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4745 		}
// 4746 		else if(x1==40)
??Yu_Zhi_56:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+40
        BNE.N    ??Yu_Zhi_65
// 4747 		{
// 4748 			for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_66
// 4749 			{
// 4750 			    if(video[y][i]<=16);
// 4751 			    else if(video[y][i]<black_max_c2){black_numbers=black_numbers+video[y][i];black_number++;}
// 4752                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_67:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_68:
        ADDS     R7,R7,#+1
??Yu_Zhi_66:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_69
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_68
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_1
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_67
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_68
// 4753 			}
// 4754 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_69:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_70
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4755 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_70:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_71
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4756 		    if(white_numbers&&black_numbers)black_max_2=(black_numbers+white_numbers)/2;
??Yu_Zhi_71:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_72
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_72
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable72_3
        STRB     R0,[R1, #+0]
// 4757             if(!(white_numbers&&black_numbers))black_max_2=black_max_c2;
??Yu_Zhi_72:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_73
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_73:
        LDR.W    R0,??DataTable72_3
        LDR.W    R1,??DataTable73_1
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4758 		}
// 4759 		else
// 4760 		{
// 4761 			for(i=x1;i<x2;i++)
??Yu_Zhi_65:
        MOVS     R7,R0
        B.N      ??Yu_Zhi_74
// 4762 			{
// 4763 			    if(video[y][i]<=16);
// 4764 			    else if(video[y][i]<black_max_c3){black_numbers=black_numbers+video[y][i];black_number++;}
// 4765                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_75:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_76:
        ADDS     R7,R7,#+1
??Yu_Zhi_74:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_77
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_76
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_2
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_75
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_76
// 4766 			}
// 4767 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_77:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_78
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4768 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_78:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_79
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4769 		    if(white_numbers&&black_numbers)black_max_3=(black_numbers+white_numbers)/2;
??Yu_Zhi_79:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_80
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_80
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable72_5
        STRB     R0,[R1, #+0]
// 4770 		    if(!(white_numbers&&black_numbers))black_max_3=black_max_c3;
??Yu_Zhi_80:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_81
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_81:
        LDR.W    R0,??DataTable72_5
        LDR.W    R1,??DataTable73_2
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4771 		}
// 4772 	}
// 4773 	else
// 4774 	{
// 4775 		if(x1==0)
??Yu_Zhi_55:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+0
        BNE.N    ??Yu_Zhi_82
// 4776 		{
// 4777 		    for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_83
// 4778 			{
// 4779 			    if(video[y][i]<=16);
// 4780 			    else if(video[y][i]<black_max_d1){black_numbers=black_numbers+video[y][i];black_number++;}
// 4781                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_84:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_85:
        ADDS     R7,R7,#+1
??Yu_Zhi_83:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_86
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_85
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_3
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_84
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_85
// 4782 			}
// 4783 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_86:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_87
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4784 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_87:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_88
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4785 		    if(white_numbers&&black_numbers)black_max_1=(black_numbers+white_numbers)/2;
??Yu_Zhi_88:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_89
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_89
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable72_1
        STRB     R0,[R1, #+0]
// 4786 		    if(!(white_numbers&&black_numbers))black_max_1=black_max_d1;
??Yu_Zhi_89:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_90
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.W    ??Yu_Zhi_10
??Yu_Zhi_90:
        LDR.W    R0,??DataTable72_1
        LDR.W    R1,??DataTable73_3
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4787 		}
// 4788 		else if(x1==40)
??Yu_Zhi_82:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+40
        BNE.N    ??Yu_Zhi_91
// 4789 		{
// 4790 			for(i=x1;i<x2;i++)
        MOVS     R7,R0
        B.N      ??Yu_Zhi_92
// 4791 			{
// 4792 			    if(video[y][i]<=16);
// 4793 			    else if(video[y][i]<black_max_d2){black_numbers=black_numbers+video[y][i];black_number++;}
// 4794                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_93:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_94:
        ADDS     R7,R7,#+1
??Yu_Zhi_92:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_95
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_94
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_4
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_93
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_94
// 4795 			}
// 4796 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_95:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_96
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4797 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_96:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_97
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4798 		    if(white_numbers&&black_numbers)black_max_2=(black_numbers+white_numbers)/2;
??Yu_Zhi_97:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_98
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_98
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.N    R1,??DataTable72_3
        STRB     R0,[R1, #+0]
// 4799             if(!(white_numbers&&black_numbers))black_max_2=black_max_d2;
??Yu_Zhi_98:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_99
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.N    ??Yu_Zhi_10
??Yu_Zhi_99:
        LDR.N    R0,??DataTable72_3
        LDR.W    R1,??DataTable73_4
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
        B.N      ??Yu_Zhi_10
// 4800 		}
// 4801 		else
// 4802 		{
// 4803 			for(i=x1;i<x2;i++)
??Yu_Zhi_91:
        MOVS     R7,R0
        B.N      ??Yu_Zhi_100
// 4804 			{
// 4805 			    if(video[y][i]<=16);
// 4806 			    else if(video[y][i]<black_max_d3){black_numbers=black_numbers+video[y][i];black_number++;}
// 4807                 else {white_numbers=white_numbers+video[y][i];white_number++;}
??Yu_Zhi_101:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R5,R5,R0
        ADDS     R6,R6,#+1
??Yu_Zhi_102:
        ADDS     R7,R7,#+1
??Yu_Zhi_100:
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        CMP      R7,R1
        BCS.N    ??Yu_Zhi_103
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        CMP      R0,#+17
        BCC.N    ??Yu_Zhi_102
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        LDR.W    R12,??DataTable73_5
        LDRB     R12,[R12, #+0]
        CMP      R0,R12
        BCS.N    ??Yu_Zhi_101
        UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
        UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
        MOVS     R0,#+160
        LDR.W    R12,??DataTable70
        MLA      R0,R0,R2,R12
        LDRB     R0,[R7, R0]
        UXTAB    R4,R4,R0
        ADDS     R3,R3,#+1
        B.N      ??Yu_Zhi_102
// 4808 			}
// 4809 		    if(black_number)black_numbers=black_numbers/black_number;
??Yu_Zhi_103:
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        CMP      R3,#+0
        BEQ.N    ??Yu_Zhi_104
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
        SDIV     R4,R4,R3
// 4810 		    if(white_number)white_numbers=white_numbers/white_number;
??Yu_Zhi_104:
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        CMP      R6,#+0
        BEQ.N    ??Yu_Zhi_105
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
        SDIV     R5,R5,R6
// 4811 		    if(white_numbers&&black_numbers)black_max_3=(black_numbers+white_numbers)/2;
??Yu_Zhi_105:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_106
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BEQ.N    ??Yu_Zhi_106
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTAH    R0,R5,R4
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.N    R1,??DataTable72_5
        STRB     R0,[R1, #+0]
// 4812 		    if(!(white_numbers&&black_numbers))black_max_3=black_max_d3;
??Yu_Zhi_106:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+0
        BEQ.N    ??Yu_Zhi_107
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BNE.N    ??Yu_Zhi_10
??Yu_Zhi_107:
        LDR.N    R0,??DataTable72_5
        LDR.W    R1,??DataTable73_5
        LDRB     R1,[R1, #+0]
        STRB     R1,[R0, #+0]
// 4813 		}
// 4814 	}
// 4815 }
??Yu_Zhi_10:
        POP      {R4-R7}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable70:
        DC32     video
// 4816 
// 4817 
// 4818 
// 4819 
// 4820 
// 4821 /**********************虚线的判断***********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4822 void judage_xuxian(void)
// 4823 { 
judage_xuxian:
        PUSH     {R4-R7}
// 4824   //uint8 b1fen[2][H]={0};
// 4825   //uint8 b2fen[2][H]={0};
// 4826   int16 i=0,b2chazhi1=0,b2chazhi3=0;
        MOVS     R0,#+0
        MOVS     R5,#+0
        MOVS     R6,#+0
// 4827   int16 d=0,f=0,m=0,n=0;
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        MOVS     R4,#+0
// 4828   for(i=53;i>=0;i--)
        MOVS     R7,#+53
        MOVS     R0,R7
        B.N      ??judage_xuxian_0
// 4829   {
// 4830     b2chazhi1=bianyan2[0][i]-bianyan2[0][i+1];
??judage_xuxian_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable73_6
        LDRB     R5,[R0, R5]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_6
        ADDS     R6,R0,R6
        LDRB     R6,[R6, #+1]
        SUBS     R5,R5,R6
// 4831     b2chazhi3=bianyan2[1][i]-bianyan2[1][i+1];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_6
        ADDS     R6,R0,R6
        LDRB     R6,[R6, #+55]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable73_6
        ADDS     R7,R0,R7
        LDRB     R7,[R7, #+56]
        SUBS     R6,R6,R7
// 4832 		
// 4833     if(b2chazhi1<-8)
        MVNS     R7,#+7
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,R7
        BGE.N    ??judage_xuxian_2
// 4834     {
// 4835       //b1fen[0][d]=i;
// 4836       d++;
        ADDS     R1,R1,#+1
// 4837     }
// 4838     if(b2chazhi1>8)
??judage_xuxian_2:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+9
        BLT.N    ??judage_xuxian_3
// 4839     {
// 4840       //b2fen[0][m]=i;
// 4841       m++;
        ADDS     R3,R3,#+1
// 4842     }
// 4843     if(b2chazhi3<-8)
??judage_xuxian_3:
        MVNS     R5,#+7
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R5
        BGE.N    ??judage_xuxian_4
// 4844     {
// 4845       //b1fen[1][n]=i;
// 4846       n++;
        ADDS     R4,R4,#+1
// 4847     }
// 4848 	
// 4849     if(b2chazhi3>8)
??judage_xuxian_4:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+9
        BLT.N    ??judage_xuxian_5
// 4850     {
// 4851       //b2fen[1][f]=i;
// 4852       f++;
        ADDS     R2,R2,#+1
// 4853     }
// 4854   }
??judage_xuxian_5:
        SUBS     R0,R0,#+1
??judage_xuxian_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BPL.N    ??judage_xuxian_1
// 4855   if(d>2&&m>2&&n>2&&f>2)
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+3
        BLT.N    ??judage_xuxian_6
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        CMP      R3,#+3
        BLT.N    ??judage_xuxian_6
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+3
        BLT.N    ??judage_xuxian_6
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R2,#+3
        BLT.N    ??judage_xuxian_6
// 4856   {
// 4857     xu_xian2=1;
        LDR.W    R0,??DataTable73_7
        MOVS     R5,#+1
        STRB     R5,[R0, #+0]
// 4858     xu1=d;
        LDR.W    R0,??DataTable73_8
        STRB     R1,[R0, #+0]
// 4859     xu2=m;
        LDR.W    R0,??DataTable73_9
        STRB     R3,[R0, #+0]
// 4860     xu3=n;
        LDR.W    R0,??DataTable73_10
        STRB     R4,[R0, #+0]
// 4861     xu4=f;
        LDR.W    R0,??DataTable73_11
        STRB     R2,[R0, #+0]
// 4862   }
// 4863 
// 4864 
// 4865 }
??judage_xuxian_6:
        POP      {R4-R7}
        BX       LR               ;; return
// 4866 /**********************虚线的判断END***********************/
// 4867 /*********************二次虚线的补线********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4868 void xu_xian_bu(void)
// 4869 {
xu_xian_bu:
        PUSH     {R3-R5,LR}
// 4870   int16 i=H-1,m=0,h=0;
        MOVS     R4,#+54
        MOVS     R0,#+0
        MOVS     R5,#+0
// 4871   for(i=H-1;i>h;i--)
        MOVS     R1,#+54
        MOVS     R4,R1
        B.N      ??xu_xian_bu_0
// 4872   {
// 4873     if(bianyan2[0][54]==0&&i==54)
// 4874     {
// 4875       for(i=54;i>h;i--)
// 4876       {
// 4877               if(bianyan2[0][i]>0)	break;
// 4878               
// 4879               
// 4880       }
// 4881       for(m=i;m<H-1;m++)
// 4882       {
// 4883               bianyan[0][m+1]=bianyan[0][m];
??xu_xian_bu_1:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable73_12
        ADDS     R1,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable73_12
        LDRB     R2,[R0, R2]
        STRB     R2,[R1, #+1]
// 4884               //if((2*bianyan[0][m]-bianyan[0][m-1])>=0)bianyan[0][m+1]=2*bianyan[0][m]-bianyan[0][m-1];
// 4885               //else bianyan[0][m]=0;
// 4886       }
        ADDS     R0,R0,#+1
??xu_xian_bu_2:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+54
        BLT.N    ??xu_xian_bu_1
// 4887       xu_xian_find(0,i,h);
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R2,R5
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R1,R4
        MOVS     R0,#+0
        BL       xu_xian_find
// 4888 
// 4889             
// 4890     }
// 4891     if(bianyan2[0][54]>0) xu_xian_find(0,i,h);
??xu_xian_bu_3:
        LDR.W    R0,??DataTable73_6
        LDRB     R0,[R0, #+54]
        CMP      R0,#+1
        BCC.N    ??xu_xian_bu_4
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R2,R5
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R1,R4
        MOVS     R0,#+0
        BL       xu_xian_find
??xu_xian_bu_4:
        SUBS     R4,R4,#+1
??xu_xian_bu_0:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R5,R4
        BGE.N    ??xu_xian_bu_5
        LDR.W    R0,??DataTable73_6
        LDRB     R0,[R0, #+54]
        CMP      R0,#+0
        BNE.N    ??xu_xian_bu_3
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+54
        BNE.N    ??xu_xian_bu_3
        MOVS     R4,#+54
        B.N      ??xu_xian_bu_6
??xu_xian_bu_7:
        SUBS     R4,R4,#+1
??xu_xian_bu_6:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R5,R4
        BGE.N    ??xu_xian_bu_8
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable73_6
        LDRB     R0,[R4, R0]
        CMP      R0,#+1
        BCC.N    ??xu_xian_bu_7
??xu_xian_bu_8:
        MOVS     R0,R4
        B.N      ??xu_xian_bu_2
// 4892   }
// 4893   for(i=H-1;i>h;i--)
??xu_xian_bu_5:
        MOVS     R4,#+54
        B.N      ??xu_xian_bu_9
// 4894   {
// 4895     if(bianyan2[1][54]>=V-3&&i==54)
// 4896     {
// 4897             for(i=54;i>h;i--)
// 4898             {
// 4899                     if(bianyan2[1][i]<V-3)	break;
// 4900                     
// 4901                     
// 4902             }
// 4903             for(m=i;m<H-1;m++)
// 4904             {
// 4905                     bianyan[1][m+1]=bianyan[1][m];
??xu_xian_bu_10:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable73_12
        ADDS     R1,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable73_12
        ADDS     R2,R0,R2
        LDRB     R2,[R2, #+55]
        STRB     R2,[R1, #+56]
// 4906                     //if((2*bianyan[1][m]-bianyan[1][m-1])<V) bianyan[1][m+1]=2*bianyan[1][m]-bianyan[1][m-1];
// 4907                     //else bianyan[1][m+1]=V-1;
// 4908             }
        ADDS     R0,R0,#+1
??xu_xian_bu_11:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+54
        BLT.N    ??xu_xian_bu_10
// 4909             xu_xian_find(1,i,h);
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R2,R5
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R1,R4
        MOVS     R0,#+1
        BL       xu_xian_find
// 4910 
// 4911             
// 4912     }
// 4913     if(bianyan2[1][54]<V-3) xu_xian_find(1,i,h);
??xu_xian_bu_12:
        LDR.W    R0,??DataTable73_6
        LDRB     R0,[R0, #+109]
        CMP      R0,#+157
        BCS.N    ??xu_xian_bu_13
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        MOVS     R2,R5
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        MOVS     R1,R4
        MOVS     R0,#+1
        BL       xu_xian_find
??xu_xian_bu_13:
        SUBS     R4,R4,#+1
??xu_xian_bu_9:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R5,R4
        BGE.N    ??xu_xian_bu_14
        LDR.W    R0,??DataTable73_6
        LDRB     R0,[R0, #+109]
        CMP      R0,#+157
        BCC.N    ??xu_xian_bu_12
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+54
        BNE.N    ??xu_xian_bu_12
        MOVS     R4,#+54
        B.N      ??xu_xian_bu_15
??xu_xian_bu_16:
        SUBS     R4,R4,#+1
??xu_xian_bu_15:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R5,R4
        BGE.N    ??xu_xian_bu_17
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable73_6
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCS.N    ??xu_xian_bu_16
??xu_xian_bu_17:
        MOVS     R0,R4
        B.N      ??xu_xian_bu_11
// 4914   }
// 4915   for(i=H-1;i>=0;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??xu_xian_bu_14:
        MOVS     R4,#+54
        B.N      ??xu_xian_bu_18
??xu_xian_bu_19:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable73_12
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable73_12
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable73_13
        STRB     R0,[R4, R1]
        SUBS     R4,R4,#+1
??xu_xian_bu_18:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??xu_xian_bu_19
// 4916 
// 4917   
// 4918 }
        POP      {R0,R4,R5,PC}    ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable72:
        DC32     black_max_a1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable72_1:
        DC32     black_max_1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable72_2:
        DC32     black_max_a2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable72_3:
        DC32     black_max_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable72_4:
        DC32     black_max_a3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable72_5:
        DC32     black_max_3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable72_6:
        DC32     black_max_b1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable72_7:
        DC32     black_max_b2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable72_8:
        DC32     black_max_b3
// 4919 /*********************二次虚线的补线END********************/
// 4920 

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 4921 void xu_xian_cai()
// 4922 {
xu_xian_cai:
        PUSH     {R4-R7}
// 4923   int16 i=H-1,j=0,X=0;
        MOVS     R0,#+54
        MOVS     R6,#+0
        MOVS     R5,#+0
// 4924   int16 chazhi1=0,chazhi2=0,chazhi3=0,chazhi4=0;
        MOVS     R1,#+0
        MOVS     R2,#+0
        MOVS     R3,#+0
        MOVS     R4,#+0
// 4925   for(i=H-1;i>=0;i--)
        MOVS     R7,#+54
        MOVS     R0,R7
        B.N      ??xu_xian_cai_0
// 4926   {
// 4927     if(i>=53)
// 4928     {
// 4929       for(j=video_Middle;j>=2;j--)
// 4930       {
// 4931          if(video[i][j]==0)
// 4932          {
// 4933            if(video[i][j-1]==0)
// 4934            {
// 4935              bianyan[0][i]=j;
// 4936              break;
// 4937            }
// 4938            else if(video[i][j-2]==0)
// 4939            {
// 4940              bianyan[0][i]=j;
// 4941              break;
// 4942            }
// 4943          }
// 4944       }
// 4945       if(j==1)
// 4946       {
// 4947         if(video[i][j]==0&&video[i][j-1]==0)
// 4948         {
// 4949              bianyan[0][i]=1;
// 4950         }
// 4951         else
// 4952         {
// 4953              bianyan[0][i]=0;
// 4954         }
// 4955       }
// 4956       for(j=video_Middle;j<=V-2;j++)
// 4957       {
// 4958         if(video[i][j]==0)
// 4959         {
// 4960           if(video[i][j+1]==0)
// 4961           {
// 4962            bianyan[1][i]=j;
// 4963            break;
// 4964           }
// 4965           else if(video[i][j+2]==0)
// 4966           {
// 4967            bianyan[1][i]=j;
// 4968            break;
// 4969           }
// 4970         }
// 4971       }
// 4972       if(j==V-1)
// 4973       {
// 4974         if(video[i][j]==0&&video[i][j+1]==0)
// 4975         {
// 4976              bianyan[1][i]=V-2;
// 4977         }
// 4978         else
// 4979         {
// 4980              bianyan[1][i]=V-1;
// 4981         }
// 4982       }
// 4983   
// 4984     }
// 4985         
// 4986     if(i>=12&&i<H-2)
// 4987     {
// 4988       if(X>=2*windage)
// 4989       {  /********************左边******************************/
// 4990         for(j=bianyan[0][i+1]+windage;j>=2;j--)
// 4991         {
// 4992           if(video[i][j]==0)
// 4993           {
// 4994             if(video[i][j-1]==0)
// 4995             {
// 4996               bianyan[0][i]=j;
// 4997               break;
// 4998             }
// 4999             else if(video[i][j-2]==0)
// 5000             {
// 5001               bianyan[0][i]=j;
// 5002               break;
// 5003             }
// 5004           }
// 5005         }
// 5006         if(j==1)
// 5007         {
// 5008           if(video[i][j]==0&&video[i][j-1]==0)
// 5009           {
// 5010                 bianyan[0][i]=1;
// 5011           }
// 5012           else
// 5013           {
// 5014                 bianyan[0][i]=0;
// 5015           }
// 5016         }
// 5017   
// 5018   /*********************右边*******************************/
// 5019         for(j=bianyan[1][i+1]-windage;j<=V-2;j++)
// 5020         {
// 5021           if(video[i][j]==0)
// 5022           {
// 5023             if(video[i][j+1]==0)
// 5024             {
// 5025                     bianyan[1][i]=j;
// 5026                     break;
// 5027             }
// 5028             else if(video[i][j+2]==0)
// 5029             {
// 5030                     bianyan[1][i]=j;
// 5031                     break;
// 5032             }
// 5033           }
// 5034         }
// 5035         if(j==V-1)
// 5036         {
// 5037           if(video[i][j]==0&&video[i][j+1]==0)
// 5038           {
// 5039                 bianyan[1][i]=V-2;
// 5040           }
// 5041           else
// 5042           {
// 5043                 bianyan[1][i]=V-1;
// 5044           }
// 5045         }
// 5046   
// 5047       }
// 5048       else
// 5049       {
// 5050         for(j=center[i+1];j>=2;j--)
// 5051         {
// 5052           if(video[i][j]==0)
// 5053           {
// 5054             if(video[i][j-1]==0)
// 5055             {
// 5056                     bianyan[0][i]=j;
// 5057                     break;
// 5058             }
// 5059             else if(video[i][j-2]==0)
// 5060             {
// 5061                     bianyan[0][i]=j;
// 5062                     break;
// 5063             }
// 5064           }
// 5065         }
// 5066         if(j==1)
// 5067         {
// 5068           if(video[i][j]==0&&video[i][j-1]==0)
// 5069           {
// 5070             bianyan[0][i]=1;
// 5071           }
// 5072           else
// 5073           {
// 5074                 bianyan[0][i]=0;
// 5075           }
// 5076         }
// 5077   
// 5078   
// 5079   /*********************右边*******************************/
// 5080         for(j=center[i+1];j<=V-2;j++)
// 5081         {
// 5082           if(video[i][j]==0)
// 5083           {
// 5084             if(video[i][j+1]==0)
// 5085             {
// 5086                     bianyan[1][i]=j;
// 5087                     break;
// 5088             }
// 5089             else if(video[i][j+2]==0)
// 5090             {
// 5091                     bianyan[1][i]=j;
// 5092                     break;
// 5093             }
// 5094           }
// 5095         }
// 5096         if(j==V-1)
// 5097         {
// 5098           if(video[i][j]==0&&video[i][j+1]==0)
// 5099           {
// 5100                 bianyan[1][i]=V-2;
// 5101           }
// 5102           else
// 5103           {
// 5104                 bianyan[1][i]=V-1;
// 5105           }
// 5106         }
// 5107       }
// 5108     }
// 5109     if(i<12)
// 5110     {
// 5111       for(j=center[i+1];j>=0;j--)
// 5112       {
// 5113         if(video[i][j]==0)
// 5114         {
// 5115                 bianyan[0][i]=j;
// 5116                 break;
// 5117         }
// 5118                         
// 5119       }
// 5120       for(j=center[i+1];j<=V-1;j++)
??xu_xian_cai_1:
        ADDS     R6,R6,#+1
??xu_xian_cai_2:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+160
        BGE.N    ??xu_xian_cai_3
// 5121       {
// 5122         if(video[i][j]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.W    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_1
// 5123         {
// 5124                 bianyan[1][i]=j;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable73_12
        ADDS     R5,R0,R5
        STRB     R6,[R5, #+55]
// 5125                 break;
// 5126         }
// 5127               
// 5128       }
// 5129     }
// 5130     bianyan2[0][i]=bianyan[0][i];
??xu_xian_cai_3:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable73_6
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_12
        LDRB     R6,[R0, R6]
        STRB     R6,[R0, R5]
// 5131     bianyan2[1][i]=bianyan[1][i];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable73_6
        ADDS     R5,R0,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_12
        ADDS     R6,R0,R6
        LDRB     R6,[R6, #+55]
        STRB     R6,[R5, #+55]
// 5132     if(i<52)
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+52
        BGE.N    ??xu_xian_cai_4
// 5133     {
// 5134       chazhi1=bianyan[0][i]-bianyan[0][i+1];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R1,??DataTable73_12
        LDRB     R1,[R0, R1]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable73_12
        ADDS     R2,R0,R2
        LDRB     R2,[R2, #+1]
        SUBS     R1,R1,R2
// 5135       chazhi2=bianyan[0][i+1]-bianyan[0][i+2];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R2,??DataTable73_12
        ADDS     R2,R0,R2
        LDRB     R2,[R2, #+1]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R3,??DataTable73_12
        ADDS     R3,R0,R3
        LDRB     R3,[R3, #+2]
        SUBS     R2,R2,R3
// 5136       chazhi3=bianyan[1][i]-bianyan[1][i+1];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R3,??DataTable73_12
        ADDS     R3,R0,R3
        LDRB     R3,[R3, #+55]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R4,??DataTable73_12
        ADDS     R4,R0,R4
        LDRB     R4,[R4, #+56]
        SUBS     R3,R3,R4
// 5137       chazhi4=bianyan[1][i+1]-bianyan[1][i+2];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R4,??DataTable73_12
        ADDS     R4,R0,R4
        LDRB     R4,[R4, #+56]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable73_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+57]
        SUBS     R4,R4,R5
// 5138     }
// 5139     if(i>=39&&i<52)
??xu_xian_cai_4:
        SUBS     R5,R0,#+39
        UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
        CMP      R5,#+13
        BCS.N    ??xu_xian_cai_5
// 5140     {
// 5141       if(chazhi1<=-8)
        MVNS     R5,#+6
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,R5
        BGE.N    ??xu_xian_cai_6
// 5142       {
// 5143       //bianyan[0][i+1]=bianyan[0][i+2]+chazhi3;
// 5144               bianyan[0][i]=bianyan[0][i+1]+chazhi2;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable73_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+1]
        ADDS     R5,R2,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_12
        STRB     R5,[R0, R6]
// 5145       }
// 5146       if(chazhi3>=8)
??xu_xian_cai_6:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        CMP      R3,#+8
        BLT.N    ??xu_xian_cai_5
// 5147       {
// 5148               bianyan[1][i]=bianyan[1][i+1]+chazhi4;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable73_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+56]
        ADDS     R5,R4,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_12
        ADDS     R6,R0,R6
        STRB     R5,[R6, #+55]
// 5149       }
// 5150     }
// 5151         
// 5152     if(i<39)
??xu_xian_cai_5:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+39
        BGE.N    ??xu_xian_cai_7
// 5153     {
// 5154       if(chazhi1<=-10)
        MVNS     R5,#+8
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,R5
        BGE.N    ??xu_xian_cai_8
// 5155       {
// 5156               bianyan[0][i]=bianyan[0][i+1];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable73_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+1]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_12
        STRB     R5,[R0, R6]
// 5157       }
// 5158       if(chazhi3>=10)
??xu_xian_cai_8:
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        CMP      R3,#+10
        BLT.N    ??xu_xian_cai_7
// 5159       {
// 5160           bianyan[1][i]=bianyan[1][i+1];
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable73_12
        ADDS     R5,R0,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_12
        ADDS     R6,R0,R6
        LDRB     R6,[R6, #+56]
        STRB     R6,[R5, #+55]
// 5161       }
// 5162     }
// 5163     X=bianyan[1][i]-bianyan[0][i];
??xu_xian_cai_7:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R5,??DataTable73_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+55]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_12
        LDRB     R6,[R0, R6]
        SUBS     R5,R5,R6
// 5164     center[i]=(bianyan[1][i]+bianyan[0][i])/2;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_12
        ADDS     R6,R0,R6
        LDRB     R6,[R6, #+55]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable73_12
        LDRB     R7,[R0, R7]
        UXTAB    R6,R7,R6
        MOVS     R7,#+2
        SDIV     R6,R6,R7
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable73_13
        STRB     R6,[R0, R7]
        SUBS     R0,R0,#+1
??xu_xian_cai_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+0
        BMI.W    ??xu_xian_cai_9
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+53
        BLT.W    ??xu_xian_cai_10
        MOVS     R6,#+80
        B.N      ??xu_xian_cai_11
??xu_xian_cai_12:
        SUBS     R6,R6,#+1
??xu_xian_cai_11:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+2
        BLT.N    ??xu_xian_cai_13
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable73_14
        MLA      R7,R7,R0,R12
        LDRB     R7,[R6, R7]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_12
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable73_14
        MLA      R7,R7,R0,R12
        ADDS     R7,R6,R7
        LDRB     R7,[R7, #-1]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_14
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable73_12
        STRB     R6,[R0, R7]
        B.N      ??xu_xian_cai_13
??xu_xian_cai_14:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable73_14
        MLA      R7,R7,R0,R12
        ADDS     R7,R6,R7
        LDRB     R7,[R7, #-2]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_12
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable73_12
        STRB     R6,[R0, R7]
??xu_xian_cai_13:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BNE.N    ??xu_xian_cai_15
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable73_14
        MLA      R7,R7,R0,R12
        LDRB     R7,[R6, R7]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable73_14
        MLA      R7,R7,R0,R12
        ADDS     R6,R6,R7
        LDRB     R6,[R6, #-1]
        CMP      R6,#+0
        BNE.N    ??xu_xian_cai_16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_12
        MOVS     R7,#+1
        STRB     R7,[R0, R6]
        B.N      ??xu_xian_cai_15
??xu_xian_cai_16:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R6,??DataTable73_12
        MOVS     R7,#+0
        STRB     R7,[R0, R6]
??xu_xian_cai_15:
        MOVS     R6,#+80
        B.N      ??xu_xian_cai_17
??xu_xian_cai_18:
        ADDS     R6,R6,#+1
??xu_xian_cai_17:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BGE.N    ??xu_xian_cai_19
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable73_14
        MLA      R7,R7,R0,R12
        LDRB     R7,[R6, R7]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_18
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable73_14
        MLA      R7,R7,R0,R12
        ADDS     R7,R6,R7
        LDRB     R7,[R7, #+1]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_20
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable73_12
        ADDS     R7,R0,R7
        STRB     R6,[R7, #+55]
        B.N      ??xu_xian_cai_19
??xu_xian_cai_20:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable73_14
        MLA      R7,R7,R0,R12
        ADDS     R7,R6,R7
        LDRB     R7,[R7, #+2]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_18
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.W    R7,??DataTable73_12
        ADDS     R7,R0,R7
        STRB     R6,[R7, #+55]
??xu_xian_cai_19:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BNE.N    ??xu_xian_cai_10
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable73_14
        MLA      R7,R7,R0,R12
        LDRB     R7,[R6, R7]
        CMP      R7,#+0
        BNE.N    ??xu_xian_cai_21
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R7,#+160
        LDR.W    R12,??DataTable73_14
        MLA      R7,R7,R0,R12
        ADDS     R6,R6,R7
        LDRB     R6,[R6, #+1]
        CMP      R6,#+0
        BNE.N    ??xu_xian_cai_21
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R6,??DataTable73_12
        ADDS     R6,R0,R6
        MOVS     R7,#+158
        STRB     R7,[R6, #+55]
        B.N      ??xu_xian_cai_10
??xu_xian_cai_21:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R6,??DataTable73_12
        ADDS     R6,R0,R6
        MOVS     R7,#+159
        STRB     R7,[R6, #+55]
??xu_xian_cai_10:
        SUBS     R6,R0,#+12
        UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
        CMP      R6,#+41
        BCS.W    ??xu_xian_cai_22
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+80
        BLT.W    ??xu_xian_cai_23
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+1]
        ADDS     R6,R5,#+40
        B.N      ??xu_xian_cai_24
??xu_xian_cai_25:
        SUBS     R6,R6,#+1
??xu_xian_cai_24:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+2
        BLT.N    ??xu_xian_cai_26
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_25
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_27
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        STRB     R6,[R0, R5]
        B.N      ??xu_xian_cai_26
??xu_xian_cai_27:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-2]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_25
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        STRB     R6,[R0, R5]
??xu_xian_cai_26:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BNE.N    ??xu_xian_cai_28
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_29
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_29
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
        B.N      ??xu_xian_cai_28
??xu_xian_cai_29:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
??xu_xian_cai_28:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        ADDS     R5,R0,R5
        LDRB     R5,[R5, #+56]
        SUBS     R6,R5,#+40
        B.N      ??xu_xian_cai_30
??xu_xian_cai_31:
        ADDS     R6,R6,#+1
??xu_xian_cai_30:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BGE.N    ??xu_xian_cai_32
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_31
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_33
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        ADDS     R5,R0,R5
        STRB     R6,[R5, #+55]
        B.N      ??xu_xian_cai_32
??xu_xian_cai_33:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+2]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_31
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        ADDS     R5,R0,R5
        STRB     R6,[R5, #+55]
??xu_xian_cai_32:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BNE.W    ??xu_xian_cai_22
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_34
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_34
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        ADDS     R5,R0,R5
        MOVS     R6,#+158
        STRB     R6,[R5, #+55]
        B.N      ??xu_xian_cai_22
??xu_xian_cai_34:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        ADDS     R5,R0,R5
        MOVS     R6,#+159
        STRB     R6,[R5, #+55]
        B.N      ??xu_xian_cai_22
??xu_xian_cai_23:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_13
        ADDS     R5,R0,R5
        LDRB     R6,[R5, #+1]
        B.N      ??xu_xian_cai_35
??xu_xian_cai_36:
        SUBS     R6,R6,#+1
??xu_xian_cai_35:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+2
        BLT.N    ??xu_xian_cai_37
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_36
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_38
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        STRB     R6,[R0, R5]
        B.N      ??xu_xian_cai_37
??xu_xian_cai_38:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-2]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_36
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        STRB     R6,[R0, R5]
??xu_xian_cai_37:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BNE.N    ??xu_xian_cai_39
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_40
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #-1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_40
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        MOVS     R6,#+1
        STRB     R6,[R0, R5]
        B.N      ??xu_xian_cai_39
??xu_xian_cai_40:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        MOVS     R6,#+0
        STRB     R6,[R0, R5]
??xu_xian_cai_39:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_13
        ADDS     R5,R0,R5
        LDRB     R6,[R5, #+1]
        B.N      ??xu_xian_cai_41
??xu_xian_cai_42:
        ADDS     R6,R6,#+1
??xu_xian_cai_41:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BGE.N    ??xu_xian_cai_43
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_42
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_44
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        ADDS     R5,R0,R5
        STRB     R6,[R5, #+55]
        B.N      ??xu_xian_cai_43
??xu_xian_cai_44:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+2]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_42
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        ADDS     R5,R0,R5
        STRB     R6,[R5, #+55]
??xu_xian_cai_43:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+159
        BNE.N    ??xu_xian_cai_22
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_45
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        ADDS     R5,R6,R5
        LDRB     R5,[R5, #+1]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_45
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        ADDS     R5,R0,R5
        MOVS     R6,#+158
        STRB     R6,[R5, #+55]
        B.N      ??xu_xian_cai_22
??xu_xian_cai_45:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        ADDS     R5,R0,R5
        MOVS     R6,#+159
        STRB     R6,[R5, #+55]
??xu_xian_cai_22:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+12
        BGE.W    ??xu_xian_cai_3
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_13
        ADDS     R5,R0,R5
        LDRB     R6,[R5, #+1]
        B.N      ??xu_xian_cai_46
??xu_xian_cai_47:
        SUBS     R6,R6,#+1
??xu_xian_cai_46:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??xu_xian_cai_48
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        MOVS     R5,#+160
        LDR.N    R7,??DataTable73_14
        MLA      R5,R5,R0,R7
        LDRB     R5,[R6, R5]
        CMP      R5,#+0
        BNE.N    ??xu_xian_cai_47
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_12
        STRB     R6,[R0, R5]
??xu_xian_cai_48:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R5,??DataTable73_13
        ADDS     R5,R0,R5
        LDRB     R6,[R5, #+1]
        B.N      ??xu_xian_cai_2
// 5165   
// 5166   
// 5167   }
// 5168 }
??xu_xian_cai_9:
        POP      {R4-R7}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73:
        DC32     black_max_c1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_1:
        DC32     black_max_c2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_2:
        DC32     black_max_c3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_3:
        DC32     black_max_d1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_4:
        DC32     black_max_d2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_5:
        DC32     black_max_d3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_6:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_7:
        DC32     xu_xian2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_8:
        DC32     xu1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_9:
        DC32     xu2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_10:
        DC32     xu3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_11:
        DC32     xu4

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_12:
        DC32     bianyan

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_13:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable73_14:
        DC32     video
// 5169 
// 5170 
// 5171 /*********************十字交叉系统识别与补线********************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 5172 void xie_shizi(void)
// 5173 {
xie_shizi:
        PUSH     {R4-R8,LR}
        SUB      SP,SP,#+112
// 5174   int16 break_point_1=0,break_point_2=0,break_point_3=0;
        MOVS     R4,#+0
        MOVS     R5,#+0
        MOVS     R6,#+0
// 5175   int16 i=0,j=0;
        MOVS     R7,#+0
        MOVS     R8,#+0
// 5176   //int16 xie_shizi_flag_1=0,xie_shizi_flag_2=0;
// 5177   int16 xie_shizi[H]={0};
        ADD      R0,SP,#+0
        MOVS     R1,#+112
        BL       __aeabi_memclr4
// 5178   if((bianyan2[1][45]-bianyan2[1][54])<-10&&(bianyan2[0][45]-bianyan2[0][54])<5)
        LDR.W    R0,??DataTable75
        LDRB     R0,[R0, #+100]
        LDR.W    R1,??DataTable75
        LDRB     R1,[R1, #+109]
        SUBS     R0,R0,R1
        CMN      R0,#+10
        BGE.W    ??xie_shizi_0
        LDR.W    R0,??DataTable75
        LDRB     R0,[R0, #+45]
        LDR.W    R1,??DataTable75
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+5
        BGE.W    ??xie_shizi_0
// 5179   {
// 5180     for(i=40;i>10;i--)
        MOVS     R7,#+40
        B.N      ??xie_shizi_1
??xie_shizi_2:
        SUBS     R7,R7,#+1
??xie_shizi_1:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+11
        BLT.N    ??xie_shizi_3
// 5181     {
// 5182       if((bianyan2[1][i]-bianyan2[1][i-1])<0&&(bianyan2[1][i-1]-bianyan2[1][i-2])<0&&(bianyan2[1][i-2]-bianyan2[1][i-3])<0)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??xie_shizi_2
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+54]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+53]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??xie_shizi_2
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+53]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+52]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??xie_shizi_2
// 5183       {
// 5184               break_point_1=i;
        MOVS     R4,R7
// 5185               break;
// 5186       }
// 5187     }
// 5188     if(i!=10)
??xie_shizi_3:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+10
        BEQ.W    ??xie_shizi_4
// 5189     {
// 5190       if((bianyan2[1][i]-bianyan2[1][i-3])<-2&&(bianyan2[1][i]-bianyan2[1][i+3])<-2)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+52]
        SUBS     R0,R0,R1
        CMN      R0,#+2
        BGE.W    ??xie_shizi_4
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+58]
        SUBS     R0,R0,R1
        CMN      R0,#+2
        BGE.W    ??xie_shizi_4
        B.N      ??xie_shizi_5
// 5191       {
// 5192         for(;i>1;i--)
??xie_shizi_6:
        SUBS     R7,R7,#+1
??xie_shizi_5:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??xie_shizi_7
// 5193         {
// 5194                 if(video[i-1][bianyan2[1][break_point_1]-5]==0&&video[i-2][bianyan2[1][break_point_1]-5]==0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R1,#+160
        LDR.W    R2,??DataTable75_1
        MLA      R1,R1,R7,R2
        ADDS     R0,R0,R1
        LDRB     R0,[R0, #-165]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_6
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R1,#+160
        LDR.W    R2,??DataTable75_1
        MLA      R1,R1,R7,R2
        ADDS     R0,R0,R1
        SUBW     R0,R0,#+325
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_6
// 5195                 {
// 5196                         break_point_3=i;
        MOVS     R6,R7
// 5197                         break;
// 5198                 }
// 5199         }
// 5200               
// 5201         if(i>1)
??xie_shizi_7:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??xie_shizi_4
// 5202         {
// 5203           for(i=break_point_3;i<break_point_1;i++)
        MOVS     R7,R6
        B.N      ??xie_shizi_8
// 5204           {
// 5205                   for(j=bianyan2[1][break_point_1]-5;j>0;j--)
??xie_shizi_9:
        SUBS     R8,R8,#+1
??xie_shizi_10:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.N    ??xie_shizi_11
// 5206                   {
// 5207                           if(video[i][j]==0&&video[i][j-1]==0){xie_shizi[i]=j;break;}
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_9
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_9
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        STRH     R8,[R0, R7, LSL #+1]
// 5208                   }
// 5209                   if(j==0)xie_shizi[i]=0;
??xie_shizi_11:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+0
        BNE.N    ??xie_shizi_12
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        MOVS     R1,#+0
        STRH     R1,[R0, R7, LSL #+1]
??xie_shizi_12:
        ADDS     R7,R7,#+1
??xie_shizi_8:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BGE.N    ??xie_shizi_13
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SUBS     R8,R0,#+5
        B.N      ??xie_shizi_10
// 5210           }
// 5211           for(i=break_point_3;i<break_point_1;i++)
??xie_shizi_13:
        MOVS     R7,R6
        B.N      ??xie_shizi_14
??xie_shizi_15:
        ADDS     R7,R7,#+1
??xie_shizi_14:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BGE.N    ??xie_shizi_16
// 5212           {
// 5213                   if((xie_shizi[i]-xie_shizi[i+1])>10&&(xie_shizi[i]-xie_shizi[i+2])>10)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R7, LSL #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+11
        BLT.N    ??xie_shizi_15
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R7, LSL #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #+4]
        SUBS     R0,R0,R1
        CMP      R0,#+11
        BLT.N    ??xie_shizi_15
// 5214                   {
// 5215                           break_point_2=i;
        MOVS     R5,R7
// 5216                           break;
// 5217                   }
// 5218           }
// 5219           if(i!=break_point_1)//证明存在斜十字
??xie_shizi_16:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BEQ.N    ??xie_shizi_4
// 5220           {
// 5221                   xie_shizi_flag_1=1;
        LDR.W    R0,??DataTable75_2
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
// 5222                   for(i=break_point_1;i>=0;i--)center[i]=0;
        MOVS     R7,R4
        B.N      ??xie_shizi_17
??xie_shizi_18:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_17:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_18
// 5223           }
// 5224         }
// 5225       }
// 5226     }
// 5227     if(xie_shizi_flag_1==0)
??xie_shizi_4:
        LDR.W    R0,??DataTable75_2
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_0
// 5228     {
// 5229       if(abs(bianyan2[1][break_point_1]-bianyan2[1][break_point_1-1])+abs(bianyan2[1][break_point_1]-bianyan2[1][break_point_1+1])>4)xie_shizi_flag_3=1;
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R7,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        SXTAH    R0,R0,R7
        CMP      R0,#+5
        BLT.N    ??xie_shizi_0
        LDR.W    R0,??DataTable75_4
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
// 5230     }
// 5231           
// 5232   }
// 5233   if((bianyan2[1][45]-bianyan2[1][54])>-5&&(bianyan2[0][45]-bianyan2[0][54])>10)
??xie_shizi_0:
        LDR.W    R0,??DataTable75
        LDRB     R0,[R0, #+100]
        LDR.W    R1,??DataTable75
        LDRB     R1,[R1, #+109]
        SUBS     R0,R0,R1
        CMN      R0,#+4
        BLT.W    ??xie_shizi_19
        LDR.W    R0,??DataTable75
        LDRB     R0,[R0, #+45]
        LDR.W    R1,??DataTable75
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+11
        BLT.W    ??xie_shizi_19
// 5234   {
// 5235     for(i=40;i>10;i--)
        MOVS     R7,#+40
        B.N      ??xie_shizi_20
??xie_shizi_21:
        SUBS     R7,R7,#+1
??xie_shizi_20:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+11
        BLT.N    ??xie_shizi_22
// 5236     {
// 5237       if((bianyan2[0][i]-bianyan2[0][i-1])>0&&(bianyan2[0][i-1]-bianyan2[0][i-2])>0&&(bianyan2[0][i-2]-bianyan2[0][i-3])>0)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #-1]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??xie_shizi_21
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #-2]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??xie_shizi_21
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-2]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #-3]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??xie_shizi_21
// 5238       {
// 5239               break_point_1=i;
        MOVS     R4,R7
// 5240               break;
// 5241       }
// 5242     }
// 5243     if(i!=10)
??xie_shizi_22:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+10
        BEQ.W    ??xie_shizi_23
// 5244     {
// 5245       if((bianyan2[0][i]-bianyan2[0][i-3])>2&&(bianyan2[0][i]-bianyan2[0][i+3])>2)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #-3]
        SUBS     R0,R0,R1
        CMP      R0,#+3
        BLT.W    ??xie_shizi_23
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+3]
        SUBS     R0,R0,R1
        CMP      R0,#+3
        BLT.W    ??xie_shizi_23
        B.N      ??xie_shizi_24
// 5246       {
// 5247               
// 5248         for(;i>1;i--)
??xie_shizi_25:
        SUBS     R7,R7,#+1
??xie_shizi_24:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??xie_shizi_26
// 5249         {
// 5250           if(video[i-1][bianyan2[0][break_point_1]+5]==0&&video[i-2][bianyan2[0][break_point_1]+5]==0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75
        LDRB     R0,[R4, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R1,#+160
        LDR.W    R2,??DataTable75_1
        MLA      R1,R1,R7,R2
        ADDS     R0,R0,R1
        LDRB     R0,[R0, #-155]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_25
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75
        LDRB     R0,[R4, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R1,#+160
        LDR.W    R2,??DataTable75_1
        MLA      R1,R1,R7,R2
        ADDS     R0,R0,R1
        SUBW     R0,R0,#+315
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_25
// 5251           {
// 5252                   break_point_3=i;
        MOVS     R6,R7
// 5253                   break;
// 5254           }
// 5255         }
// 5256                           
// 5257         if(i>1)
??xie_shizi_26:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??xie_shizi_23
// 5258         {
// 5259           for(i=break_point_3;i<break_point_1;i++)
        MOVS     R7,R6
        B.N      ??xie_shizi_27
// 5260           {
// 5261             for(j=bianyan2[0][break_point_1]+5;j<159;j++)
??xie_shizi_28:
        ADDS     R8,R8,#+1
??xie_shizi_29:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BGE.N    ??xie_shizi_30
// 5262             {
// 5263                     if(video[i][j]==0&&video[i][j+1]==0){xie_shizi[i]=j;break;}//
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_28
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_28
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        STRH     R8,[R0, R7, LSL #+1]
// 5264 
// 5265             }
// 5266             if(j==159)xie_shizi[i]=159;
??xie_shizi_30:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BNE.N    ??xie_shizi_31
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        MOVS     R1,#+159
        STRH     R1,[R0, R7, LSL #+1]
??xie_shizi_31:
        ADDS     R7,R7,#+1
??xie_shizi_27:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BGE.N    ??xie_shizi_32
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75
        LDRB     R0,[R4, R0]
        ADDS     R8,R0,#+5
        B.N      ??xie_shizi_29
// 5267           }
// 5268           for(i=break_point_3;i<break_point_1;i++)
??xie_shizi_32:
        MOVS     R7,R6
        B.N      ??xie_shizi_33
??xie_shizi_34:
        ADDS     R7,R7,#+1
??xie_shizi_33:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BGE.N    ??xie_shizi_35
// 5269           {
// 5270             if((xie_shizi[i]-xie_shizi[i+1])<-10&&(xie_shizi[i]-xie_shizi[i+2])<-10)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R7, LSL #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMN      R0,#+10
        BGE.N    ??xie_shizi_34
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R7, LSL #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+0
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #+4]
        SUBS     R0,R0,R1
        CMN      R0,#+10
        BGE.N    ??xie_shizi_34
// 5271             {
// 5272                     break_point_2=i;
        MOVS     R5,R7
// 5273                     break;
// 5274             }
// 5275           }
// 5276           if(i!=break_point_1)//证明存在斜十字
??xie_shizi_35:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BEQ.N    ??xie_shizi_23
// 5277           {
// 5278                   xie_shizi_flag_2=1;
        LDR.W    R0,??DataTable75_5
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
// 5279                   for(i=break_point_1;i>=0;i--)center[i]=0;
        MOVS     R7,R4
        B.N      ??xie_shizi_36
??xie_shizi_37:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_36:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_37
// 5280           }
// 5281         }
// 5282       }
// 5283     }
// 5284     if(xie_shizi_flag_2==0)
??xie_shizi_23:
        LDR.W    R0,??DataTable75_5
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_19
// 5285     {
// 5286       if(abs(bianyan2[0][break_point_1]-bianyan2[0][break_point_1-1])+abs(bianyan2[0][break_point_1]-bianyan2[0][break_point_1+1])>4)xie_shizi_flag_3=1;
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #-1]
        SUBS     R0,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R6,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable75
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        SXTAH    R0,R0,R6
        CMP      R0,#+5
        BLT.N    ??xie_shizi_19
        LDR.W    R0,??DataTable75_4
        MOVS     R1,#+1
        STRH     R1,[R0, #+0]
// 5287     }
// 5288   }
// 5289   if(xie_shizi_flag_1==1)
??xie_shizi_19:
        LDR.W    R0,??DataTable75_2
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BNE.W    ??xie_shizi_38
// 5290 	{
// 5291 		//bianyan[1][break_point_2]=xie_shizi[break_point_2];
// 5292 		
// 5293 		for(i=break_point_2;i>0;i--)
        MOVS     R7,R5
        B.N      ??xie_shizi_39
??xie_shizi_40:
        SUBS     R7,R7,#+1
??xie_shizi_39:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BLT.N    ??xie_shizi_41
// 5294 		{
// 5295 			
// 5296 			for(j=xie_shizi[break_point_2]/2;j<xie_shizi[break_point_2];j++)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        MOVS     R1,#+2
        SDIV     R8,R0,R1
        B.N      ??xie_shizi_42
??xie_shizi_43:
        ADDS     R8,R8,#+1
??xie_shizi_42:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,R0
        BGE.N    ??xie_shizi_44
// 5297 			{
// 5298 				if(video[i][j]==0&&video[i][j+1]==0){bianyan[1][i]=j;break;}
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_43
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_43
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        STRB     R8,[R0, #+55]
// 5299 			}
// 5300 			if((bianyan[1][i]-bianyan[1][i+1])>0)bianyan[1][i]=bianyan[1][i+1];
??xie_shizi_44:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??xie_shizi_45
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+56]
        STRB     R1,[R0, #+55]
// 5301 
// 5302 			if(j==xie_shizi[break_point_2]/2)break;
??xie_shizi_45:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        CMP      R8,R0
        BNE.N    ??xie_shizi_40
// 5303 		
// 5304 		}
// 5305         LianJie(1,break_point_1,break_point_2);
??xie_shizi_41:
        MOVS     R2,R5
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,R4
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,#+1
        BL       LianJie
// 5306         END_Line=i;
        LDR.W    R0,??DataTable75_7
        STRH     R7,[R0, #+0]
// 5307 		if(i==0)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BNE.N    ??xie_shizi_46
// 5308 		{
// 5309 			for(j=bianyan[1][2];j>0;j--)
        LDR.W    R0,??DataTable75_6
        LDRB     R8,[R0, #+57]
        B.N      ??xie_shizi_47
??xie_shizi_48:
        SUBS     R8,R8,#+1
??xie_shizi_47:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.N    ??xie_shizi_49
// 5310 			{
// 5311 				if(video[2][j]==0&&video[2][j-1]==0)break;
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable75_1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+320]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_48
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable75_1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+319]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_48
// 5312 			}
// 5313 			center[2]=(j+bianyan[1][2])/2;
??xie_shizi_49:
        LDR.W    R0,??DataTable75_6
        LDRB     R0,[R0, #+57]
        SXTAH    R0,R0,R8
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable75_3
        STRB     R0,[R1, #+2]
// 5314             LianJie_center(break_point_1+1,2);
        MOVS     R1,#+2
        ADDS     R0,R4,#+1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 5315 		}
// 5316 		if(i)
??xie_shizi_46:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BEQ.N    ??xie_shizi_50
// 5317 		{
// 5318 			for(j=xie_shizi[break_point_2]/2;j>0;j++)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        MOVS     R1,#+2
        SDIV     R8,R0,R1
        B.N      ??xie_shizi_51
??xie_shizi_52:
        ADDS     R8,R8,#+1
??xie_shizi_51:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.N    ??xie_shizi_53
// 5319 			{
// 5320 				if(video[i+1][j]==0&&video[i+1][j-1]==0)break;
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+160]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_52
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+159]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_52
// 5321 			}
// 5322 			center[i+1]=(bianyan[1][i+1]+j)/2;
??xie_shizi_53:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+56]
        SXTAH    R0,R0,R8
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75_3
        ADDS     R1,R7,R1
        STRB     R0,[R1, #+1]
// 5323             if(center[break_point_1+1]&&(center[i+1]-center[break_point_1+1])<-9)//
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75_3
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BEQ.N    ??xie_shizi_54
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable75_3
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMN      R0,#+9
        BGE.N    ??xie_shizi_54
// 5324 			{
// 5325 				LianJie_center(break_point_1+1,i+1);
        ADDS     R1,R7,#+1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R0,R4,#+1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 5326 			}
// 5327 			if(center[break_point_1+1]==0||(center[i+1]-center[break_point_1+1])>=-9)center[i+1]=0;
??xie_shizi_54:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75_3
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BEQ.N    ??xie_shizi_55
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable75_3
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMN      R0,#+9
        BLT.N    ??xie_shizi_50
??xie_shizi_55:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_3
        ADDS     R0,R7,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+1]
// 5328         
// 5329 		}
// 5330                 for(i=END_Line;i>=0;i--){bianyan[0][i]=0;bianyan[1][i]=0;}
??xie_shizi_50:
        LDR.W    R0,??DataTable75_7
        LDRSH    R7,[R0, #+0]
        B.N      ??xie_shizi_56
??xie_shizi_57:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+55]
        SUBS     R7,R7,#+1
??xie_shizi_56:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_57
// 5331 		for(i=break_point_2+1;i>=END_Line;i--)
        ADDS     R7,R5,#+1
        B.N      ??xie_shizi_58
// 5332 		{
// 5333             for(j=bianyan[1][i];j>0;j--)
??xie_shizi_59:
        SUBS     R8,R8,#+1
??xie_shizi_60:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.N    ??xie_shizi_61
// 5334 			{
// 5335 				if(video[i][j]==0&&video[i][j-1]==0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_59
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_59
// 5336 				{
// 5337 					bianyan[0][i]=j;
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        STRB     R8,[R7, R0]
// 5338 					break;
// 5339 				}
// 5340 			}
// 5341 			if(j==0)bianyan[1][i]=0;
??xie_shizi_61:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+0
        BNE.N    ??xie_shizi_62
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+55]
// 5342 			if(bianyan[0][i]-bianyan[0][i+1]>3)bianyan[0][i]=bianyan[0][i+1];
??xie_shizi_62:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+4
        BLT.N    ??xie_shizi_63
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75_6
        STRB     R0,[R7, R1]
??xie_shizi_63:
        SUBS     R7,R7,#+1
??xie_shizi_58:
        LDR.W    R0,??DataTable75_7
        LDRSH    R0,[R0, #+0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,R0
        BLT.N    ??xie_shizi_38
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        LDRB     R8,[R0, #+55]
        B.N      ??xie_shizi_60
// 5343 		}
// 5344 
// 5345 	}
// 5346 	if(xie_shizi_flag_2==1)
??xie_shizi_38:
        LDR.W    R0,??DataTable75_5
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BNE.W    ??xie_shizi_64
// 5347 	{
// 5348 		//bianyan[0][break_point_2]=xie_shizi[break_point_2];
// 5349 		
// 5350 		for(i=break_point_2;i>0;i--)
        MOVS     R7,R5
        B.N      ??xie_shizi_65
??xie_shizi_66:
        SUBS     R7,R7,#+1
??xie_shizi_65:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BLT.N    ??xie_shizi_67
// 5351 		{
// 5352 			for(j=(159+xie_shizi[break_point_2])/2;j>xie_shizi[break_point_2];j--)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        ADDS     R0,R0,#+159
        MOVS     R1,#+2
        SDIV     R8,R0,R1
        B.N      ??xie_shizi_68
??xie_shizi_69:
        SUBS     R8,R8,#+1
??xie_shizi_68:
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R0,R8
        BGE.N    ??xie_shizi_70
// 5353 			{
// 5354                 if(video[i][j]==0&&video[i][j-1]==0){bianyan[0][i]=j;break;}
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_69
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_69
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        STRB     R8,[R7, R0]
// 5355 			}
// 5356 			if((bianyan[0][i]-bianyan[0][i+1])<0)bianyan[0][i]=bianyan[0][i+1];
??xie_shizi_70:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        LDRB     R0,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??xie_shizi_71
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75_6
        STRB     R0,[R7, R1]
// 5357 			if(j==(159+xie_shizi[break_point_2])/2)break;
??xie_shizi_71:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        ADDS     R0,R0,#+159
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        CMP      R8,R0
        BNE.N    ??xie_shizi_66
// 5358 		}
// 5359 		LianJie(0,break_point_1,break_point_2);
??xie_shizi_67:
        MOVS     R2,R5
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,R4
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOVS     R0,#+0
        BL       LianJie
// 5360                 END_Line=i;
        LDR.W    R0,??DataTable75_7
        STRH     R7,[R0, #+0]
// 5361 		if(i==0)
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BNE.N    ??xie_shizi_72
// 5362 		{
// 5363 			for(j=bianyan[0][2];j<V-1;j++)
        LDR.W    R0,??DataTable75_6
        LDRB     R8,[R0, #+2]
        B.N      ??xie_shizi_73
??xie_shizi_74:
        ADDS     R8,R8,#+1
??xie_shizi_73:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BGE.N    ??xie_shizi_75
// 5364 			{
// 5365 				if(video[2][j]==0&&video[2][j+1]==0)break;
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable75_1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+320]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_74
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable75_1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+321]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_74
// 5366 			}
// 5367 			center[2]=(j+bianyan[0][2])/2;
??xie_shizi_75:
        LDR.W    R0,??DataTable75_6
        LDRB     R0,[R0, #+2]
        SXTAH    R0,R0,R8
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.W    R1,??DataTable75_3
        STRB     R0,[R1, #+2]
// 5368             LianJie_center(break_point_1+1,2);
        MOVS     R1,#+2
        ADDS     R0,R4,#+1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 5369 		}
// 5370 		if(i)
??xie_shizi_72:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BEQ.N    ??xie_shizi_76
// 5371 		{
// 5372 			for(j=(159+xie_shizi[break_point_2])/2;j<V-1;j++)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        ADD      R0,SP,#+0
        LDRSH    R0,[R0, R5, LSL #+1]
        ADDS     R0,R0,#+159
        MOVS     R1,#+2
        SDIV     R8,R0,R1
        B.N      ??xie_shizi_77
??xie_shizi_78:
        ADDS     R8,R8,#+1
??xie_shizi_77:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BGE.N    ??xie_shizi_79
// 5373 			{
// 5374 				if(video[i+1][j]==0&&video[i+1][j+1]==0)break;
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+160]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_78
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+161]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_78
// 5375 			}
// 5376 			center[i+1]=(bianyan[0][i+1]+j)/2;
??xie_shizi_79:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTAH    R0,R0,R8
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R1,??DataTable75_3
        ADDS     R1,R7,R1
        STRB     R0,[R1, #+1]
// 5377             if(center[break_point_1+1]&&(center[i+1]-center[break_point_1+1])>9)//
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75_3
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BEQ.N    ??xie_shizi_80
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable75_3
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+10
        BLT.N    ??xie_shizi_80
// 5378 			{
// 5379 				LianJie_center(break_point_1+1,i+1);
        ADDS     R1,R7,#+1
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        ADDS     R0,R4,#+1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 5380 			}
// 5381 			if(center[break_point_1+1]==0||(center[i+1]-center[break_point_1+1])<=9)center[i+1]=0;
??xie_shizi_80:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable75_3
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BEQ.N    ??xie_shizi_81
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable75_3
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+10
        BGE.N    ??xie_shizi_76
??xie_shizi_81:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_3
        ADDS     R0,R7,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+1]
// 5382         
// 5383 		}
// 5384                 for(i=END_Line;i>=0;i--){bianyan[0][i]=0;bianyan[1][i]=0;}
??xie_shizi_76:
        LDR.W    R0,??DataTable75_7
        LDRSH    R7,[R0, #+0]
        B.N      ??xie_shizi_82
??xie_shizi_83:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.W    R0,??DataTable75_6
        ADDS     R0,R7,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+55]
        SUBS     R7,R7,#+1
??xie_shizi_82:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_83
// 5385 		for(i=break_point_2;i>=END_Line;i--)
        MOVS     R7,R5
        B.N      ??xie_shizi_84
// 5386 		{
// 5387             for(j=bianyan[0][i];j<V-1;j++)
??xie_shizi_85:
        ADDS     R8,R8,#+1
??xie_shizi_86:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BGE.N    ??xie_shizi_87
// 5388 			{
// 5389 				if(video[i][j]==0&&video[i][j+1]==0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        LDRB     R0,[R8, R0]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_85
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??DataTable75_1
        MLA      R0,R0,R7,R1
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??xie_shizi_85
// 5390 				{
// 5391 					bianyan[1][i]=j;
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_6
        ADDS     R0,R7,R0
        STRB     R8,[R0, #+55]
// 5392 					break;
// 5393 				}
// 5394 			}
// 5395 			if(j==V-1)bianyan[1][i]=V-1;
??xie_shizi_87:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+159
        BNE.N    ??xie_shizi_88
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_6
        ADDS     R0,R7,R0
        MOVS     R1,#+159
        STRB     R1,[R0, #+55]
// 5396 			if(bianyan[1][i]-bianyan[1][i+1]>3)bianyan[1][i]=bianyan[1][i+1];
??xie_shizi_88:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+4
        BLT.N    ??xie_shizi_89
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_6
        ADDS     R0,R7,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+56]
        STRB     R1,[R0, #+55]
??xie_shizi_89:
        SUBS     R7,R7,#+1
??xie_shizi_84:
        LDR.N    R0,??DataTable75_7
        LDRSH    R0,[R0, #+0]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,R0
        BLT.N    ??xie_shizi_64
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_6
        LDRB     R8,[R7, R0]
        B.N      ??xie_shizi_86
// 5397 		}
// 5398 		
// 5399 	}
// 5400   if(xie_shizi_flag_1==0&&xie_shizi_flag_2==0&&break_point_1<35&&break_point_1>18)
??xie_shizi_64:
        LDR.N    R0,??DataTable75_2
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??xie_shizi_90
        LDR.N    R0,??DataTable75_5
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??xie_shizi_90
        SUBS     R0,R4,#+19
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+16
        BCS.W    ??xie_shizi_90
// 5401 	{
// 5402 		if((bianyan[0][break_point_1]-bianyan[0][54])>100)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??DataTable75_6
        LDRB     R0,[R4, R0]
        LDR.N    R1,??DataTable75_6
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+101
        BLT.N    ??xie_shizi_91
// 5403 		{
// 5404 			if((bianyan[0][break_point_1]-bianyan[0][break_point_1+2])>10)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??DataTable75_6
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R1,??DataTable75_6
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+11
        BLT.N    ??xie_shizi_91
// 5405 			{
// 5406 				for(i=53;i>=break_point_1;i--)
        MOVS     R7,#+53
        B.N      ??xie_shizi_92
// 5407 				{
// 5408 					if(bianyan[1][i]>156)
// 5409 					{
// 5410 						if(center[i+1]+bianyan[0][i]-bianyan[0][i+1]<160)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 5411 						else
// 5412 						{
// 5413 							for(;i>=0;i--)center[i]=0;
??xie_shizi_93:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_94:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_93
// 5414 						}
??xie_shizi_95:
        SUBS     R7,R7,#+1
??xie_shizi_92:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BLT.N    ??xie_shizi_96
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_6
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??xie_shizi_95
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_6
        LDRB     R1,[R7, R1]
        UXTAB    R0,R1,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??xie_shizi_94
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_6
        LDRB     R1,[R7, R1]
        ADDS     R0,R1,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_3
        STRB     R0,[R7, R1]
        B.N      ??xie_shizi_95
// 5415 					}
// 5416 				}
// 5417 				for(i=break_point_1;i>=0;i--)center[i]=0;
??xie_shizi_96:
        MOVS     R7,R4
        B.N      ??xie_shizi_97
??xie_shizi_98:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_97:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_98
// 5418 			}
// 5419 		}
// 5420 		if((bianyan[1][break_point_1]-bianyan[1][54])<-100)
??xie_shizi_91:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??DataTable75_6
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        LDR.N    R1,??DataTable75_6
        LDRB     R1,[R1, #+109]
        SUBS     R0,R0,R1
        CMN      R0,#+100
        BGE.N    ??xie_shizi_90
// 5421 		{
// 5422 			if((bianyan[1][break_point_1]-bianyan[1][break_point_1+2])<-10)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??DataTable75_6
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R1,??DataTable75_6
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+57]
        SUBS     R0,R0,R1
        CMN      R0,#+10
        BGE.N    ??xie_shizi_90
// 5423 			{
// 5424 				for(i=53;i>=break_point_1;i--)
        MOVS     R7,#+53
        B.N      ??xie_shizi_99
// 5425 				{
// 5426 					if(bianyan[0][i]<3)
// 5427 					{
// 5428 						if(center[i+1]+bianyan[1][i]-bianyan[1][i+1]>=0)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 5429 						else
// 5430 						{
// 5431 							for(;i>=0;i--)center[i]=0;
??xie_shizi_100:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_101:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_100
// 5432 						}
??xie_shizi_102:
        SUBS     R7,R7,#+1
??xie_shizi_99:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R7,R4
        BLT.N    ??xie_shizi_103
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_6
        LDRB     R0,[R7, R0]
        CMP      R0,#+3
        BCS.N    ??xie_shizi_102
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??xie_shizi_101
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_3
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_6
        LDRB     R1,[R7, R1]
        ADDS     R0,R1,R0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_6
        ADDS     R1,R7,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R1,??DataTable75_3
        STRB     R0,[R7, R1]
        B.N      ??xie_shizi_102
// 5433 					}
// 5434 				}
// 5435 				for(i=break_point_1;i>=0;i--)center[i]=0;
??xie_shizi_103:
        MOVS     R7,R4
        B.N      ??xie_shizi_104
??xie_shizi_105:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        LDR.N    R0,??DataTable75_3
        MOVS     R1,#+0
        STRB     R1,[R7, R0]
        SUBS     R7,R7,#+1
??xie_shizi_104:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+0
        BPL.N    ??xie_shizi_105
// 5436 			}
// 5437 		}
// 5438 	}
// 5439 }
??xie_shizi_90:
        ADD      SP,SP,#+112
        POP      {R4-R8,PC}       ;; return
// 5440 /*********************十字交叉系统识别与补线END********************/
// 5441 /***********************************
// 5442 *function name:X_LineBend()
// 5443 *function:优化图像处理，使急弯更加平滑的过渡到长大弯
// 5444 *date:2013.5.4
// 5445 *潘杰
// 5446 ************************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 5447 void X_LineBend(void)
// 5448 {
X_LineBend:
        PUSH     {R4}
// 5449   int16 k=54,i=0,j=0;
        MOVS     R0,#+54
        MOVS     R1,#+0
        MOVS     R2,#+0
        B.N      ??X_LineBend_0
// 5450   while(center[k]&&k>10)k--;
??X_LineBend_1:
        SUBS     R0,R0,#+1
??X_LineBend_0:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R1,??DataTable75_3
        LDRB     R1,[R0, R1]
        CMP      R1,#+0
        BEQ.N    ??X_LineBend_2
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+11
        BGE.N    ??X_LineBend_1
// 5451   if(k>15)
??X_LineBend_2:
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+16
        BLT.N    ??X_LineBend_3
// 5452   {
// 5453     if((k-END_Line_2)>15)
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R1,??DataTable75_8
        LDRB     R1,[R1, #+0]
        SUBS     R1,R0,R1
        CMP      R1,#+16
        BLT.N    ??X_LineBend_3
// 5454     {
// 5455       if(xie_shizi_flag_3==0)
        LDR.N    R1,??DataTable75_4
        LDRSH    R1,[R1, #+0]
        CMP      R1,#+0
        BNE.N    ??X_LineBend_3
// 5456       {
// 5457         for(i=k;i>=END_Line_2;i--)
        MOVS     R1,R0
        B.N      ??X_LineBend_4
??X_LineBend_5:
        SUBS     R1,R1,#+1
??X_LineBend_4:
        LDR.N    R2,??DataTable75_8
        LDRB     R2,[R2, #+0]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R1,R2
        BLT.N    ??X_LineBend_6
// 5458         {
// 5459           if(bianyan[0][i]>0&&bianyan[1][i]<159){center[i]=(bianyan[1][i]+bianyan[0][i])/2;break;}
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable75_6
        LDRB     R2,[R1, R2]
        CMP      R2,#+1
        BCC.N    ??X_LineBend_5
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable75_6
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #+55]
        CMP      R2,#+159
        BCS.N    ??X_LineBend_5
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable75_6
        ADDS     R2,R1,R2
        LDRB     R2,[R2, #+55]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R3,??DataTable75_6
        LDRB     R3,[R1, R3]
        UXTAB    R2,R3,R2
        MOVS     R3,#+2
        SDIV     R2,R2,R3
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R3,??DataTable75_3
        STRB     R2,[R1, R3]
// 5460         }
// 5461         for(j=k;j>i;j--)center[j]=center[i];
??X_LineBend_6:
        MOVS     R2,R0
        B.N      ??X_LineBend_7
??X_LineBend_8:
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        LDR.N    R3,??DataTable75_3
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R4,??DataTable75_3
        LDRB     R4,[R1, R4]
        STRB     R4,[R2, R3]
        SUBS     R2,R2,#+1
??X_LineBend_7:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R1,R2
        BLT.N    ??X_LineBend_8
// 5462         if((k-i)<3){center[k+1]=center[i];center[k+2]=center[i];}
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SUBS     R2,R0,R1
        CMP      R2,#+3
        BGE.N    ??X_LineBend_9
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R2,??DataTable75_3
        ADDS     R2,R0,R2
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R3,??DataTable75_3
        LDRB     R3,[R1, R3]
        STRB     R3,[R2, #+1]
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        LDR.N    R2,??DataTable75_3
        ADDS     R0,R0,R2
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable75_3
        LDRB     R2,[R1, R2]
        STRB     R2,[R0, #+2]
// 5463         for(i=i-1;i>=END_Line_2;i--)center[i]=(bianyan[1][i]+bianyan[0][i])/2;
??X_LineBend_9:
        SUBS     R1,R1,#+1
        B.N      ??X_LineBend_10
??X_LineBend_11:
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R0,??DataTable75_6
        ADDS     R0,R1,R0
        LDRB     R0,[R0, #+55]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable75_6
        LDRB     R2,[R1, R2]
        UXTAB    R0,R2,R0
        MOVS     R2,#+2
        SDIV     R0,R0,R2
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        LDR.N    R2,??DataTable75_3
        STRB     R0,[R1, R2]
        SUBS     R1,R1,#+1
??X_LineBend_10:
        LDR.N    R0,??DataTable75_8
        LDRB     R0,[R0, #+0]
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R1,R0
        BGE.N    ??X_LineBend_11
// 5464       }
// 5465     }
// 5466   }
// 5467 }
??X_LineBend_3:
        POP      {R4}
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable75:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable75_1:
        DC32     video

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable75_2:
        DC32     xie_shizi_flag_1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable75_3:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable75_4:
        DC32     xie_shizi_flag_3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable75_5:
        DC32     xie_shizi_flag_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable75_6:
        DC32     bianyan

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable75_7:
        DC32     END_Line

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable75_8:
        DC32     END_Line_2
// 5468 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
// 5469 void find_bianyan(void)
// 5470 {
find_bianyan:
        PUSH     {R4-R11,LR}
        SUB      SP,SP,#+132
// 5471   uint8 start_18_25=0,start_25_35=0,start_35_45=0,start_45_55=0;
        MOVS     R0,#+0
        STRB     R0,[SP, #+37]
        MOVS     R0,#+0
        STRB     R0,[SP, #+36]
        MOVS     R0,#+0
        STRB     R0,[SP, #+35]
        MOVS     R0,#+0
        STRB     R0,[SP, #+34]
// 5472   uint8 s1=0,s2=0,s3=0,s4=0,s5=0,s6=0,s7=0;
        MOVS     R0,#+0
        STRB     R0,[SP, #+11]
        MOVS     R0,#+0
        STRB     R0,[SP, #+9]
        MOVS     R0,#+0
        STRB     R0,[SP, #+5]
        MOVS     R0,#+0
        STRB     R0,[SP, #+4]
        MOVS     R0,#+0
        STRB     R0,[SP, #+8]
        MOVS     R0,#+0
        STRB     R0,[SP, #+10]
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
// 5473   int16 quan_bai_num_k=0,shizi2=0,shizi3=0,kk=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
        MOVS     R0,#+0
        STRH     R0,[SP, #+68]
        MOVS     R0,#+0
        STRH     R0,[SP, #+50]
        MOVS     R0,#+0
        STRH     R0,[SP, #+66]
// 5474   int16 n_1=0,num_3=0,num_4=0,num_5=0,num_6=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+22]
        MOVS     R0,#+0
        STRH     R0,[SP, #+62]
        MOVS     R0,#+0
        STRH     R0,[SP, #+60]
        MOVS     R0,#+0
        STRH     R0,[SP, #+32]
        MOVS     R0,#+0
        STRH     R0,[SP, #+30]
// 5475   int16 chazhi_center_1=0,chazhi_center_2=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 5476   int16 num_1=0,num_2=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+48]
        MOVS     R0,#+0
        STRH     R0,[SP, #+46]
// 5477   int16 n=0,numx=0;
        MOVS     R4,#+0
        MOVS     R5,#+0
// 5478   int16 bu1_number=0,bu2_number=0;
        MOVS     R11,#+0
        MOVS     R10,#+0
// 5479   int16 chazhi_5=0,chazhi_6=0;//用于十字交叉的断点与补线
        MOVS     R0,#+0
        STRH     R0,[SP, #+20]
        MOVS     R0,#+0
        STRH     R0,[SP, #+18]
// 5480   int16 i=0,j=0;
        MOVS     R6,#+0
        MOVS     R7,#+0
// 5481   int16 L0=0,L1=0,iii=H-1,iii_end=0,iiii=0,quan_bai_begin=0,quan_bai_end_1=0,quan_bai_end=0,shizi=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
        MOVS     R0,#+54
        STRH     R0,[SP, #+40]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
        MOVS     R0,#+0
        STRH     R0,[SP, #+44]
        MOVS     R0,#+0
        STRH     R0,[SP, #+14]
        MOVS     R0,#+0
        STRH     R0,[SP, #+16]
        MOVS     R0,#+0
        STRH     R0,[SP, #+38]
        MOVS     R0,#+0
        STRH     R0,[SP, #+28]
// 5482   int16 Small_S=0,b1=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+58]
        MOVS     R0,#+0
        STRH     R0,[SP, #+42]
// 5483   int16 X=0,chazhi1=0,chazhi3=0,chazhi1_buxian=0,chazhi3_buxian=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+56]
        MOVS     R0,#+0
        STRH     R0,[SP, #+54]
        MOVS     R0,#+0
        STRH     R0,[SP, #+52]
        MOVS     R0,#+0
        STRH     R0,[SP, #+26]
        MOVS     R0,#+0
        STRH     R0,[SP, #+24]
// 5484   int16 END=0,END1=0;//END2=0,END3=0;
        MOVS     R8,#+0
        MOVS     R0,#+0
        STRH     R0,[SP, #+64]
// 5485   int16 he=0,m=0,cha=0;
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
        MOVS     R9,#+0
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
// 5486   int16 d1_1=0,d1_2=0,d2_1=0,d2_2=0;//十字交叉断点寻找与补线
        MOVS     R0,#+0
        STRH     R0,[SP, #+6]
        MOVS     R0,#+0
        STRH     R0,[SP, #+0]
        MOVS     R0,#+0
        STRH     R0,[SP, #+12]
        MOVS     R0,#+0
        STRH     R0,[SP, #+2]
// 5487   unsigned char quan_bai[H]={0};
        ADD      R0,SP,#+72
        MOVS     R1,#+56
        BL       __aeabi_memclr4
// 5488   threshold();            //非动态阈值二值化
        BL       threshold
// 5489   /***************动态阈值求解****************
// 5490   for(i=0;i<H;i++)
// 5491   {
// 5492     Yu_Zhi(0,40,i);
// 5493     Yu_Zhi(40,120,i);
// 5494     Yu_Zhi(120,V,i);
// 5495  
// 5496     for(j=0;j<V;j++)
// 5497     {
// 5498       if(j<40)
// 5499       {
// 5500         if(video[i][j]<black_max_1)video[i][j]=0;
// 5501         else video[i][j]=1;
// 5502       }
// 5503       else if(j<120)
// 5504       {
// 5505         if(video[i][j]<black_max_2)video[i][j]=0;
// 5506         else video[i][j]=1;
// 5507       }
// 5508       else
// 5509       {
// 5510         if(video[i][j]<black_max_3)video[i][j]=0;
// 5511         else video[i][j]=1;
// 5512       }
// 5513     }
// 5514 	
// 5515   }
// 5516   /***************动态阈值求解END****************/
// 5517   /************起始线检测************/
// 5518   if(P_timer<30||P_timer>170)//P_timer<30||P_timer>200  pit2定时器，设置的是0.1s一次，每次P_timer++,即前3s与后20s进行起始线检测，但只有后20s检测到的起始线才停车
        LDR.W    R0,??find_bianyan_0
        LDR      R0,[R0, #+0]
        CMP      R0,#+30
        BLT.N    ??find_bianyan_1
        LDR.W    R0,??find_bianyan_0
        LDR      R0,[R0, #+0]
        CMP      R0,#+171
        BLT.W    ??find_bianyan_2
// 5519   {
// 5520     Start_Detection_3(0,25,18,40,120);
??find_bianyan_1:
        MOVS     R0,#+120
        STR      R0,[SP, #+0]
        MOVS     R3,#+40
        MOVS     R2,#+18
        MOVS     R1,#+25
        MOVS     R0,#+0
        BL       Start_Detection_3
// 5521     BW_filter(3);
        MOVS     R0,#+3
        BL       BW_filter
// 5522     if(BW3[0]==0)
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_3
// 5523     {
// 5524       for(i=0;i<82;i++)
        MOVS     R6,#+0
        B.N      ??find_bianyan_4
??find_bianyan_5:
        ADDS     R6,R6,#+1
??find_bianyan_4:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_6
// 5525       {
// 5526         if(BW3[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_5
// 5527         {
// 5528                 s1=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+11]
// 5529                 break;
// 5530         }
// 5531       }
// 5532       if(i<82)
??find_bianyan_6:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_8
// 5533       {
// 5534         for(;i<82;i++)
??find_bianyan_9:
        ADDS     R6,R6,#+1
??find_bianyan_8:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_10
// 5535         {
// 5536           if(BW3[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_9
// 5537           {
// 5538                   s2=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+9]
// 5539                   break;
// 5540           }
// 5541         }
// 5542         if(i<82)
??find_bianyan_10:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_11
// 5543         {
// 5544           for(;i<82;i++)
??find_bianyan_12:
        ADDS     R6,R6,#+1
??find_bianyan_11:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_13
// 5545           {
// 5546             if(BW3[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_12
// 5547             {
// 5548                     s3=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+5]
// 5549                     break;
// 5550             }
// 5551           }
// 5552           if(i<82)
??find_bianyan_13:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_14
// 5553           {
// 5554             for(;i<82;i++)
??find_bianyan_15:
        ADDS     R6,R6,#+1
??find_bianyan_14:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_16
// 5555             {
// 5556               if(BW3[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_15
// 5557               {
// 5558                       s4=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+4]
// 5559                       break;
// 5560               }
// 5561             }
// 5562             if(i<82)
??find_bianyan_16:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_17
// 5563             {
// 5564               for(;i<82;i++)
??find_bianyan_18:
        ADDS     R6,R6,#+1
??find_bianyan_17:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_19
// 5565               {
// 5566                 if(BW3[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_18
// 5567                 {
// 5568                   s5=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+8]
// 5569                   break;
// 5570                 }
// 5571               }
// 5572               if(i<82)
??find_bianyan_19:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_20
// 5573               {
// 5574                 for(;i<82;i++)
??find_bianyan_21:
        ADDS     R6,R6,#+1
??find_bianyan_20:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_22
// 5575                 {
// 5576                   if(BW3[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_21
// 5577                   {
// 5578                           s6=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+10]
// 5579                           break;
// 5580                   }
// 5581                 }
// 5582                 if(i<82)
??find_bianyan_22:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_7
        B.N      ??find_bianyan_23
// 5583                 {
// 5584                   for(;i<82;i++)
??find_bianyan_24:
        ADDS     R6,R6,#+1
??find_bianyan_23:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BGE.N    ??find_bianyan_25
// 5585                   {
// 5586                     if(BW3[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_0+0x4
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_24
// 5587                     {
// 5588                             s7=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+0]
// 5589                             break;
// 5590                     }
// 5591                   }
// 5592                   if(i==82)start_xian=1;
??find_bianyan_25:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+82
        BNE.N    ??find_bianyan_7
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5593                 }
// 5594 	      }
// 5595 	    }
// 5596 	  }
// 5597 	}
// 5598 
// 5599       }
// 5600       if(start_xian==1)
??find_bianyan_7:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_3
// 5601       {
// 5602          if((s4-s3)>25||(s2-s1)>7||(s6-s5)>7||(s3-s2)<6||(s5-s4)<6)
        LDRB     R0,[SP, #+4]
        LDRB     R1,[SP, #+5]
        SUBS     R0,R0,R1
        CMP      R0,#+26
        BGE.N    ??find_bianyan_27
        LDRB     R0,[SP, #+9]
        LDRB     R1,[SP, #+11]
        SUBS     R0,R0,R1
        CMP      R0,#+8
        BGE.N    ??find_bianyan_27
        LDRB     R0,[SP, #+10]
        LDRB     R1,[SP, #+8]
        SUBS     R0,R0,R1
        CMP      R0,#+8
        BGE.N    ??find_bianyan_27
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+9]
        SUBS     R0,R0,R1
        CMP      R0,#+6
        BLT.N    ??find_bianyan_27
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+4]
        SUBS     R0,R0,R1
        CMP      R0,#+6
        BGE.N    ??find_bianyan_28
// 5603          {
// 5604                  start_18_25_2=1;
??find_bianyan_27:
        LDR.W    R0,??find_bianyan_26+0x4
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5605                  start_xian=0;
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        B.N      ??find_bianyan_3
// 5606          }
// 5607          else start_18_25=1;
??find_bianyan_28:
        MOVS     R0,#+1
        STRB     R0,[SP, #+37]
// 5608       }
// 5609     }
// 5610 	
// 5611     if(start_xian==0)
??find_bianyan_3:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_29
// 5612     {
// 5613       Start_Detection(0,35,25,30,130);
        MOVS     R0,#+130
        STR      R0,[SP, #+0]
        MOVS     R3,#+30
        MOVS     R2,#+25
        MOVS     R1,#+35
        MOVS     R0,#+0
        BL       Start_Detection
// 5614       BW_filter(0);
        MOVS     R0,#+0
        BL       BW_filter
// 5615       if(BW[0]==0)
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_30
// 5616       {
// 5617         for(i=0;i<102;i++)
        MOVS     R6,#+0
        B.N      ??find_bianyan_31
??find_bianyan_32:
        ADDS     R6,R6,#+1
??find_bianyan_31:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_33
// 5618         {
// 5619           if(BW[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_32
// 5620           {
// 5621                   s1=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+11]
// 5622                   break;
// 5623           }
// 5624         }
// 5625         if(i<102)
??find_bianyan_33:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_34
// 5626         {
// 5627           for(;i<102;i++)
??find_bianyan_35:
        ADDS     R6,R6,#+1
??find_bianyan_34:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_36
// 5628           {
// 5629             if(BW[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_35
// 5630             {
// 5631                     s2=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+9]
// 5632                     break;
// 5633             }
// 5634           }
// 5635           if(i<102)
??find_bianyan_36:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_37
// 5636           {
// 5637             for(;i<102;i++)
??find_bianyan_38:
        ADDS     R6,R6,#+1
??find_bianyan_37:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_39
// 5638             {
// 5639               if(BW[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_38
// 5640               {
// 5641                       s3=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+5]
// 5642                       break;
// 5643               }
// 5644             }
// 5645             if(i<102)
??find_bianyan_39:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_40
// 5646             {
// 5647               for(;i<102;i++)
??find_bianyan_41:
        ADDS     R6,R6,#+1
??find_bianyan_40:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_42
// 5648               {
// 5649                 if(BW[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_41
// 5650                 {
// 5651                         s4=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+4]
// 5652                         break;
// 5653                 }
// 5654               }
// 5655               if(i<102)
??find_bianyan_42:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_43
// 5656               {
// 5657                 for(;i<102;i++)
??find_bianyan_44:
        ADDS     R6,R6,#+1
??find_bianyan_43:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_45
// 5658                 {
// 5659                   if(BW[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_44
// 5660                   {
// 5661                           s5=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+8]
// 5662                           break;
// 5663                   }
// 5664                 }
// 5665                 if(i<102)
??find_bianyan_45:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_46
// 5666                 {
// 5667                   for(;i<102;i++)
??find_bianyan_47:
        ADDS     R6,R6,#+1
??find_bianyan_46:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_48
// 5668                   {
// 5669                     if(BW[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_47
// 5670                     {
// 5671                             s6=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+10]
// 5672                             break;
// 5673                     }
// 5674                   }
// 5675                   if(i<102)
??find_bianyan_48:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_30
        B.N      ??find_bianyan_49
// 5676                   {
// 5677                     for(;i<102;i++)
??find_bianyan_50:
        ADDS     R6,R6,#+1
??find_bianyan_49:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BGE.N    ??find_bianyan_51
// 5678                     {
// 5679                       if(BW[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x8
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_50
// 5680                       {
// 5681                               s7=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+0]
// 5682                               break;
// 5683                       }
// 5684                     }
// 5685                     if(i==102)start_xian=1;
??find_bianyan_51:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+102
        BNE.N    ??find_bianyan_30
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5686 		  }
// 5687 		}
// 5688 	      }
// 5689 	    }
// 5690 	  }
// 5691         }
// 5692       }
// 5693       if(start_xian==1)
??find_bianyan_30:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_52
// 5694       {
// 5695          if((s4-s3)>30||(s2-s1)>12||(s6-s5)>12)//||(s3-s2)<4||(s5-s4)<4
        LDRB     R0,[SP, #+4]
        LDRB     R1,[SP, #+5]
        SUBS     R0,R0,R1
        CMP      R0,#+31
        BGE.N    ??find_bianyan_53
        LDRB     R0,[SP, #+9]
        LDRB     R1,[SP, #+11]
        SUBS     R0,R0,R1
        CMP      R0,#+13
        BGE.N    ??find_bianyan_53
        LDRB     R0,[SP, #+10]
        LDRB     R1,[SP, #+8]
        SUBS     R0,R0,R1
        CMP      R0,#+13
        BLT.N    ??find_bianyan_54
// 5696          {
// 5697                  start_25_35_2=1;
??find_bianyan_53:
        LDR.W    R0,??find_bianyan_26+0xC
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5698                  start_xian=0;
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        B.N      ??find_bianyan_52
// 5699          }
// 5700          else start_25_35=1;
??find_bianyan_54:
        MOVS     R0,#+1
        STRB     R0,[SP, #+36]
// 5701       }
// 5702       if(start_xian==0)
??find_bianyan_52:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_29
// 5703       {
// 5704         Start_Detection_2(0,45,35,20,140);
        MOVS     R0,#+140
        STR      R0,[SP, #+0]
        MOVS     R3,#+20
        MOVS     R2,#+35
        MOVS     R1,#+45
        MOVS     R0,#+0
        BL       Start_Detection_2
// 5705         BW_filter(2);
        MOVS     R0,#+2
        BL       BW_filter
// 5706         if(BW2[0]==0)
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_55
// 5707         {
// 5708           for(i=0;i<122;i++)
        MOVS     R6,#+0
        B.N      ??find_bianyan_56
??find_bianyan_57:
        ADDS     R6,R6,#+1
??find_bianyan_56:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_58
// 5709           {
// 5710             if(BW2[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_57
// 5711             {
// 5712                     s1=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+11]
// 5713                     break;
// 5714             }
// 5715           }
// 5716           if(i<122)
??find_bianyan_58:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_59
// 5717           {
// 5718             for(;i<122;i++)
??find_bianyan_60:
        ADDS     R6,R6,#+1
??find_bianyan_59:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_61
// 5719             {
// 5720               if(BW2[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_60
// 5721               {
// 5722                       s2=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+9]
// 5723                       break;
// 5724               }
// 5725             }
// 5726             if(i<122)
??find_bianyan_61:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_62
// 5727             {
// 5728               for(;i<122;i++)
??find_bianyan_63:
        ADDS     R6,R6,#+1
??find_bianyan_62:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_64
// 5729               {
// 5730                 if(BW2[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_63
// 5731                 {
// 5732                         s3=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+5]
// 5733                         break;
// 5734                 }
// 5735               }
// 5736               if(i<122)
??find_bianyan_64:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_65
// 5737               {
// 5738                 for(;i<122;i++)
??find_bianyan_66:
        ADDS     R6,R6,#+1
??find_bianyan_65:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_67
// 5739                 {
// 5740                   if(BW2[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_66
// 5741                   {
// 5742                           s4=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+4]
// 5743                           break;
// 5744                   }
// 5745                 }
// 5746                 if(i<122)
??find_bianyan_67:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_68
// 5747                 {
// 5748                   for(;i<122;i++)
??find_bianyan_69:
        ADDS     R6,R6,#+1
??find_bianyan_68:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_70
// 5749                   {
// 5750                     if(BW2[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_69
// 5751                     {
// 5752                             s5=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+8]
// 5753                             break;
// 5754                     }
// 5755                   }
// 5756                   if(i<122)
??find_bianyan_70:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_71
// 5757                   {
// 5758                     for(;i<122;i++)
??find_bianyan_72:
        ADDS     R6,R6,#+1
??find_bianyan_71:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_73
// 5759                     {
// 5760                       if(BW2[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_72
// 5761                       {
// 5762                               s6=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+10]
// 5763                               break;
// 5764                       }
// 5765                     }
// 5766                     if(i<122)
??find_bianyan_73:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_55
        B.N      ??find_bianyan_74
// 5767                     {
// 5768                       for(;i<122;i++)
??find_bianyan_75:
        ADDS     R6,R6,#+1
??find_bianyan_74:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BGE.N    ??find_bianyan_76
// 5769                       {
// 5770                         if(BW2[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x10
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_75
// 5771                         {
// 5772                                 s7=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+0]
// 5773                                 break;
// 5774                         }
// 5775                       }
// 5776                       if(i==122)start_xian=1;
??find_bianyan_76:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+122
        BNE.N    ??find_bianyan_55
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5777                     }
// 5778                   }
// 5779                 }
// 5780               }
// 5781             }
// 5782           }
// 5783         }
// 5784         if(start_xian==1)
??find_bianyan_55:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_77
// 5785         {
// 5786           if((s4-s3)>35||(s2-s1)>13||(s6-s5)>13||(s3-s2)<15||(s5-s4)<15)
        LDRB     R0,[SP, #+4]
        LDRB     R1,[SP, #+5]
        SUBS     R0,R0,R1
        CMP      R0,#+36
        BGE.N    ??find_bianyan_78
        LDRB     R0,[SP, #+9]
        LDRB     R1,[SP, #+11]
        SUBS     R0,R0,R1
        CMP      R0,#+14
        BGE.N    ??find_bianyan_78
        LDRB     R0,[SP, #+10]
        LDRB     R1,[SP, #+8]
        SUBS     R0,R0,R1
        CMP      R0,#+14
        BGE.N    ??find_bianyan_78
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+9]
        SUBS     R0,R0,R1
        CMP      R0,#+15
        BLT.N    ??find_bianyan_78
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+4]
        SUBS     R0,R0,R1
        CMP      R0,#+15
        BGE.N    ??find_bianyan_79
// 5787           {
// 5788                   start_35_45_2=1;
??find_bianyan_78:
        LDR.W    R0,??find_bianyan_26+0x14
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5789                   start_xian=0;
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        B.N      ??find_bianyan_77
// 5790           }
// 5791           else start_35_45=1;
??find_bianyan_79:
        MOVS     R0,#+1
        STRB     R0,[SP, #+35]
// 5792         }
// 5793         if(start_xian==0)
??find_bianyan_77:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_29
// 5794         {
// 5795           Start_Detection_4(0,54,45,10,150);
        MOVS     R0,#+150
        STR      R0,[SP, #+0]
        MOVS     R3,#+10
        MOVS     R2,#+45
        MOVS     R1,#+54
        MOVS     R0,#+0
        BL       Start_Detection_4
// 5796           BW_filter(4);
        MOVS     R0,#+4
        BL       BW_filter
// 5797           if(BW4[0]==0)
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_80
// 5798           {
// 5799             for(i=0;i<142;i++)
        MOVS     R6,#+0
        B.N      ??find_bianyan_81
??find_bianyan_82:
        ADDS     R6,R6,#+1
??find_bianyan_81:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_83
// 5800             {
// 5801               if(BW4[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_82
// 5802               {
// 5803                       s1=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+11]
// 5804                       break;
// 5805               }
// 5806             }
// 5807             if(i<142)
??find_bianyan_83:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_84
// 5808             {
// 5809               for(;i<142;i++)
??find_bianyan_85:
        ADDS     R6,R6,#+1
??find_bianyan_84:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_86
// 5810               {
// 5811                 if(BW4[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_85
// 5812                 {
// 5813                         s2=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+9]
// 5814                         break;
// 5815                 }
// 5816               }
// 5817               if(i<142)
??find_bianyan_86:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_87
// 5818               {
// 5819                 for(;i<142;i++)
??find_bianyan_88:
        ADDS     R6,R6,#+1
??find_bianyan_87:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_89
// 5820                 {
// 5821                   if(BW4[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_88
// 5822                   {
// 5823                           s3=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+5]
// 5824                           break;
// 5825                   }
// 5826                 }
// 5827                 if(i<142)
??find_bianyan_89:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_90
// 5828                 {
// 5829                   for(;i<142;i++)
??find_bianyan_91:
        ADDS     R6,R6,#+1
??find_bianyan_90:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_92
// 5830                   {
// 5831                     if(BW4[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_91
// 5832                     {
// 5833                             s4=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+4]
// 5834                             break;
// 5835                     }
// 5836                   }
// 5837                   if(i<142)
??find_bianyan_92:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_93
// 5838                   {
// 5839                     for(;i<142;i++)
??find_bianyan_94:
        ADDS     R6,R6,#+1
??find_bianyan_93:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_95
// 5840                     {
// 5841                       if(BW4[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_94
// 5842                       {
// 5843                               s5=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+8]
// 5844                               break;
// 5845                       }
// 5846                     }
// 5847                     if(i<142)
??find_bianyan_95:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_96
// 5848                     {
// 5849                       for(;i<142;i++)
??find_bianyan_97:
        ADDS     R6,R6,#+1
??find_bianyan_96:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_98
// 5850                       {
// 5851                         if(BW4[i]==0)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_97
// 5852                         {
// 5853                                 s6=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+10]
// 5854                                 break;
// 5855                         }
// 5856                       }
// 5857                       if(i<142)
??find_bianyan_98:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_80
        B.N      ??find_bianyan_99
// 5858                       {
// 5859                         for(;i<142;i++)
??find_bianyan_100:
        ADDS     R6,R6,#+1
??find_bianyan_99:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BGE.N    ??find_bianyan_101
// 5860                         {
// 5861                           if(BW4[i]==1)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_26+0x18
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_100
// 5862                           {
// 5863                                   s7=i;
        MOVS     R0,R6
        STRB     R0,[SP, #+0]
// 5864                                   break;
// 5865                           }
// 5866                         }
// 5867                         if(i==142)start_xian=1;
??find_bianyan_101:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+142
        BNE.N    ??find_bianyan_80
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5868                       }
// 5869                     }
// 5870 		  }
// 5871 		}
// 5872 	      }
// 5873             }
// 5874           }
// 5875           if(start_xian==1)
??find_bianyan_80:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_29
// 5876           {
// 5877             if((s4-s3)>35||(s2-s1)>15||(s6-s5)>15)
        LDRB     R0,[SP, #+4]
        LDRB     R1,[SP, #+5]
        SUBS     R0,R0,R1
        CMP      R0,#+36
        BGE.N    ??find_bianyan_102
        LDRB     R0,[SP, #+9]
        LDRB     R1,[SP, #+11]
        SUBS     R0,R0,R1
        CMP      R0,#+16
        BGE.N    ??find_bianyan_102
        LDRB     R0,[SP, #+10]
        LDRB     R1,[SP, #+8]
        SUBS     R0,R0,R1
        CMP      R0,#+16
        BLT.N    ??find_bianyan_103
// 5878             {
// 5879                     start_45_55_2=1;
??find_bianyan_102:
        LDR.W    R0,??find_bianyan_26+0x1C
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 5880                     start_xian=0;
        LDR.W    R0,??find_bianyan_26
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        B.N      ??find_bianyan_29
// 5881             }
// 5882             else start_45_55=1;
??find_bianyan_103:
        MOVS     R0,#+1
        STRB     R0,[SP, #+34]
// 5883           }
// 5884         }
// 5885       }
// 5886     }
// 5887     //for(i=0;i<102;i++)BW[i]=0;
// 5888 	
// 5889 	/************起始线检测END************/
// 5890   /***************如果检测出起始线就把起始线黑线去掉**************/
// 5891     if(start_xian==1)
??find_bianyan_29:
        LDR.W    R0,??find_bianyan_26
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_2
// 5892 	{
// 5893 		if(start_45_55==1)
        LDRB     R0,[SP, #+34]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_104
// 5894 		{
// 5895              for(i=(s1+s2)/2+10;i<=(s3+s4)/2+10;i++)
        LDRB     R0,[SP, #+11]
        LDRB     R1,[SP, #+9]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+10
        B.N      ??find_bianyan_105
        Nop      
        DATA
??find_bianyan_0:
        DC32     P_timer
        DC32     BW3
        THUMB
// 5896 			 {
// 5897 				 for(j=54;j>45;j--)
// 5898 				 {
// 5899 					 if(video[j][i]==0)break;
// 5900 				 }
// 5901 				 for(;j>40;j--)
// 5902 				 {
// 5903 					 if(video[j][i]==0)video[j][i]=1;
??find_bianyan_106:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_107
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
// 5904 				 }
??find_bianyan_107:
        SUBS     R7,R7,#+1
??find_bianyan_108:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+41
        BGE.N    ??find_bianyan_106
        ADDS     R6,R6,#+1
??find_bianyan_105:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+10
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_109
        MOVS     R7,#+54
        B.N      ??find_bianyan_110
??find_bianyan_111:
        SUBS     R7,R7,#+1
??find_bianyan_110:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+46
        BLT.N    ??find_bianyan_108
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_111
        B.N      ??find_bianyan_108
// 5905 			 }
// 5906 			 for(i=(s3+s4)/2+10;i<=(s5+s6)/2+10;i++)
??find_bianyan_109:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+10
        B.N      ??find_bianyan_112
// 5907 			 {
// 5908 				 for(j=54;j>45;j--)
// 5909 				 {
// 5910 					 if(video[j][i]==0)break;
// 5911 				 }
// 5912 				 for(;j>40;j--)
// 5913 				 {
// 5914 					 if(video[j][i]==0)video[j][i]=1;
??find_bianyan_113:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_114
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
// 5915 				 }
??find_bianyan_114:
        SUBS     R7,R7,#+1
??find_bianyan_115:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+41
        BGE.N    ??find_bianyan_113
        ADDS     R6,R6,#+1
??find_bianyan_112:
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+10]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+10
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_104
        MOVS     R7,#+54
        B.N      ??find_bianyan_116
??find_bianyan_117:
        SUBS     R7,R7,#+1
??find_bianyan_116:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+46
        BLT.N    ??find_bianyan_115
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_117
        B.N      ??find_bianyan_115
// 5916 			 }
// 5917 		}
// 5918 		if(start_35_45==1)
??find_bianyan_104:
        LDRB     R0,[SP, #+35]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_118
// 5919 		{
// 5920              for(i=(s1+s2)/2+20;i<=(s3+s4)/2+20;i++)
        LDRB     R0,[SP, #+11]
        LDRB     R1,[SP, #+9]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+20
        B.N      ??find_bianyan_119
// 5921 			 {
// 5922 				 for(j=47;j>35;j--)
// 5923 				 {
// 5924 					 if(video[j][i]==0)
// 5925 					 {
// 5926 						 m=j;
// 5927 						 break;
// 5928 					 }
// 5929 				 }
// 5930 				 if(j==47)
// 5931 				 {
// 5932 					 m=j+1;
// 5933 					 for(;j>40;j--)
// 5934 					 {
// 5935 						 if(video[j][i]==0)video[j][i]=1;
// 5936 					 }
// 5937 					 for(;m<50;m++)
// 5938 					 {
// 5939 						 if(video[m][i]==0)video[m][i]=1;
// 5940 					 }
// 5941 				 }
// 5942 				 else if(j==35)
// 5943 				 {
// 5944 					 for(;j>31;j--)video[j][i]=1;
// 5945 				 }
// 5946 				 else
// 5947 				 {
// 5948 					 for(;j>31;j--)
// 5949 					 {
// 5950 						 if(video[j][i]==1)break;
// 5951 					 }
// 5952 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_120:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_121:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_120
??find_bianyan_122:
        ADDS     R6,R6,#+1
??find_bianyan_119:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+20
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_123
        MOVS     R7,#+47
        B.N      ??find_bianyan_124
??find_bianyan_125:
        SUBS     R7,R7,#+1
??find_bianyan_124:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+36
        BLT.N    ??find_bianyan_126
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_125
        MOV      R9,R7
??find_bianyan_126:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+47
        BNE.N    ??find_bianyan_127
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_128
??find_bianyan_129:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_130
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_130:
        SUBS     R7,R7,#+1
??find_bianyan_128:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+41
        BGE.N    ??find_bianyan_129
??find_bianyan_131:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+50
        BGE.N    ??find_bianyan_122
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_132
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_132:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_131
??find_bianyan_127:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+35
        BNE.N    ??find_bianyan_133
??find_bianyan_134:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+32
        BLT.N    ??find_bianyan_122
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R7,R7,#+1
        B.N      ??find_bianyan_134
??find_bianyan_135:
        SUBS     R7,R7,#+1
??find_bianyan_133:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+32
        BLT.N    ??find_bianyan_121
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_135
        B.N      ??find_bianyan_121
// 5953 				 }
// 5954 				 
// 5955 			 }
// 5956 			 for(i=(s3+s4)/2+20;i<=(s5+s6)/2+20;i++)
??find_bianyan_123:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+20
        B.N      ??find_bianyan_136
// 5957 			 {
// 5958 				 for(j=47;j>35;j--)
// 5959 				 {
// 5960 					 if(video[j][i]==0)
// 5961 					 {
// 5962 						 m=j;
// 5963 						 break;
// 5964 					 }
// 5965 				 }
// 5966 				 if(j==47)
// 5967 				 {
// 5968 					 m=j+1;
// 5969 					 for(;j>40;j--)
// 5970 					 {
// 5971 						 if(video[j][i]==0)video[j][i]=1;
// 5972 					 }
// 5973 					 for(;m<50;m++)
// 5974 					 {
// 5975 						 if(video[m][i]==0)video[m][i]=1;
// 5976 					 }
// 5977 				 }
// 5978 				 else if(j==35)
// 5979 				 {
// 5980 					 for(;j>31;j--)video[j][i]=1;
// 5981 				 }
// 5982 				 else
// 5983 				 {
// 5984 					 for(;j>31;j--)
// 5985 					 {
// 5986 						 if(video[j][i]==1)break;
// 5987 					 }
// 5988 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_137:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_138:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_137
??find_bianyan_139:
        ADDS     R6,R6,#+1
??find_bianyan_136:
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+10]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+20
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_118
        MOVS     R7,#+47
        B.N      ??find_bianyan_140
??find_bianyan_141:
        SUBS     R7,R7,#+1
??find_bianyan_140:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+36
        BLT.N    ??find_bianyan_142
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_141
        MOV      R9,R7
??find_bianyan_142:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+47
        BNE.N    ??find_bianyan_143
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_144
??find_bianyan_145:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_146
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_146:
        SUBS     R7,R7,#+1
??find_bianyan_144:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+41
        BGE.N    ??find_bianyan_145
??find_bianyan_147:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+50
        BGE.N    ??find_bianyan_139
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_148
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_148:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_147
??find_bianyan_143:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+35
        BNE.N    ??find_bianyan_149
??find_bianyan_150:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+32
        BLT.N    ??find_bianyan_139
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R7,R7,#+1
        B.N      ??find_bianyan_150
??find_bianyan_151:
        SUBS     R7,R7,#+1
??find_bianyan_149:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+32
        BLT.N    ??find_bianyan_138
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_151
        B.N      ??find_bianyan_138
// 5989 				 }
// 5990 				 
// 5991 			 }
// 5992 		}
// 5993 		if(start_25_35==1)
??find_bianyan_118:
        LDRB     R0,[SP, #+36]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_152
// 5994 		{
// 5995              for(i=(s2+s1)/2+30;i<=(s3+s4)/2+30;i++)
        LDRB     R0,[SP, #+9]
        LDRB     R1,[SP, #+11]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+30
        B.N      ??find_bianyan_153
// 5996 			 {
// 5997 				 for(j=37;j>25;j--)
// 5998 				 {
// 5999 					 if(video[j][i]==0)
// 6000 					 {
// 6001 						 m=j;
// 6002 						 break;
// 6003 					 }
// 6004 				 }
// 6005 				 if(j==37)
// 6006 				 {
// 6007 					 m=j+1;
// 6008 					 for(;j>30;j--)
// 6009 					 {
// 6010 						 if(video[j][i]==0)video[j][i]=1;
// 6011 					 }
// 6012 					 for(;m<40;m++)
// 6013 					 {
// 6014 						 if(video[m][i]==0)video[m][i]=1;
// 6015 					 }
// 6016 				 }
// 6017 				 else
// 6018 				 {
// 6019 					 for(;j>22;j--)
// 6020 					 {
// 6021 						 if(video[j][i]==1)break;
// 6022 					 }
// 6023 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_154:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_155:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_154
??find_bianyan_156:
        ADDS     R6,R6,#+1
??find_bianyan_153:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+30
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_157
        MOVS     R7,#+37
        B.N      ??find_bianyan_158
??find_bianyan_159:
        SUBS     R7,R7,#+1
??find_bianyan_158:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+26
        BLT.N    ??find_bianyan_160
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_159
        MOV      R9,R7
??find_bianyan_160:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+37
        BNE.N    ??find_bianyan_161
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_162
??find_bianyan_163:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_164
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_164:
        SUBS     R7,R7,#+1
??find_bianyan_162:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+31
        BGE.N    ??find_bianyan_163
??find_bianyan_165:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+40
        BGE.N    ??find_bianyan_156
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_166
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_166:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_165
??find_bianyan_167:
        SUBS     R7,R7,#+1
??find_bianyan_161:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+23
        BLT.N    ??find_bianyan_155
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_167
        B.N      ??find_bianyan_155
// 6024 				 }
// 6025 				 
// 6026 			 }
// 6027 			 for(i=(s3+s4)/2+30;i<=(s5+s6)/2+30;i++)
??find_bianyan_157:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+30
        B.N      ??find_bianyan_168
// 6028 			 {
// 6029 				 for(j=37;j>25;j--)
// 6030 				 {
// 6031 					 if(video[j][i]==0)
// 6032 					 {
// 6033 						 m=j;
// 6034 						 break;
// 6035 					 }
// 6036 				 }
// 6037 				 if(j==37)
// 6038 				 {
// 6039 					 m=j+1;
// 6040 					 for(;j>30;j--)
// 6041 					 {
// 6042 						 if(video[j][i]==0)video[j][i]=1;
// 6043 					 }
// 6044 					 for(;m<40;m++)
// 6045 					 {
// 6046 						 if(video[m][i]==0)video[m][i]=1;
// 6047 					 }
// 6048 				 }
// 6049 				 else
// 6050 				 {
// 6051 					 for(;j>22;j--)
// 6052 					 {
// 6053 						 if(video[j][i]==1)break;
// 6054 					 }
// 6055 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_169:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_170:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_169
??find_bianyan_171:
        ADDS     R6,R6,#+1
??find_bianyan_168:
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+10]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+30
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_152
        MOVS     R7,#+37
        B.N      ??find_bianyan_172
??find_bianyan_173:
        SUBS     R7,R7,#+1
??find_bianyan_172:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+26
        BLT.N    ??find_bianyan_174
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_173
        MOV      R9,R7
??find_bianyan_174:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+37
        BNE.N    ??find_bianyan_175
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_176
??find_bianyan_177:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_178
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_178:
        SUBS     R7,R7,#+1
??find_bianyan_176:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+31
        BGE.N    ??find_bianyan_177
??find_bianyan_179:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+40
        BGE.N    ??find_bianyan_171
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_180
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_180:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_179
??find_bianyan_181:
        SUBS     R7,R7,#+1
??find_bianyan_175:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+23
        BLT.N    ??find_bianyan_170
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_181
        B.N      ??find_bianyan_170
// 6056 				 }
// 6057 				 
// 6058 			 }
// 6059 		}
// 6060 		if(start_18_25==1)
??find_bianyan_152:
        LDRB     R0,[SP, #+37]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_2
// 6061 		{
// 6062              for(i=(s1+s2)/2+40;i<=(s3+s4)/2+40;i++)
        LDRB     R0,[SP, #+11]
        LDRB     R1,[SP, #+9]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+40
        B.N      ??find_bianyan_182
// 6063 			 {
// 6064 				 for(j=27;j>18;j--)
// 6065 				 {
// 6066 					 if(video[j][i]==0)
// 6067 					 {
// 6068 						 m=j;
// 6069 						 break;
// 6070 					 }
// 6071 				 }
// 6072 				 if(j==27)
// 6073 				 {
// 6074 					 m=j+1;
// 6075 					 for(;j>20;j--)
// 6076 					 {
// 6077 						 if(video[j][i]==0)video[j][i]=1;
// 6078 					 }
// 6079 					 for(;m<30;m++)
// 6080 					 {
// 6081 						 if(video[m][i]==0)video[m][i]=1;
// 6082 					 }
// 6083 				 }
// 6084 				 else
// 6085 				 {
// 6086 					 for(;j>16;j--)
// 6087 					 {
// 6088 						 if(video[j][i]==1)break;
// 6089 					 }
// 6090 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_183:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_184:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_183
??find_bianyan_185:
        ADDS     R6,R6,#+1
??find_bianyan_182:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+40
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_186
        MOVS     R7,#+27
        B.N      ??find_bianyan_187
??find_bianyan_188:
        SUBS     R7,R7,#+1
??find_bianyan_187:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+19
        BLT.N    ??find_bianyan_189
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_188
        MOV      R9,R7
??find_bianyan_189:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+27
        BNE.N    ??find_bianyan_190
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_191
??find_bianyan_192:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_193
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_193:
        SUBS     R7,R7,#+1
??find_bianyan_191:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+21
        BGE.N    ??find_bianyan_192
??find_bianyan_194:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+30
        BGE.N    ??find_bianyan_185
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_195
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_195:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_194
??find_bianyan_196:
        SUBS     R7,R7,#+1
??find_bianyan_190:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+17
        BLT.N    ??find_bianyan_184
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_196
        B.N      ??find_bianyan_184
// 6091 				 }
// 6092 				 
// 6093 			 }
// 6094 			 for(i=(s3+s4)/2+40;i<=(s5+s6)/2+40;i++)
??find_bianyan_186:
        LDRB     R0,[SP, #+5]
        LDRB     R1,[SP, #+4]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R6,R0,#+40
        B.N      ??find_bianyan_197
// 6095 			 {
// 6096 				 for(j=27;j>18;j--)
// 6097 				 {
// 6098 					 if(video[j][i]==0)
// 6099 					 {
// 6100 						 m=j;
// 6101 						 break;
// 6102 					 }
// 6103 				 }
// 6104 				 if(j==27)
// 6105 				 {
// 6106 					 m=j+1;
// 6107 					 for(;j>20;j--)
// 6108 					 {
// 6109 						 if(video[j][i]==0)video[j][i]=1;
// 6110 					 }
// 6111 					 for(;m<30;m++)
// 6112 					 {
// 6113 						 if(video[m][i]==0)video[m][i]=1;
// 6114 					 }
// 6115 				 }
// 6116 				 else
// 6117 				 {
// 6118 					 for(;j>16;j--)
// 6119 					 {
// 6120 						 if(video[j][i]==1)break;
// 6121 					 }
// 6122 					 for(;m>j;m--)video[m][i]=1;
??find_bianyan_198:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        SUBS     R9,R9,#+1
??find_bianyan_199:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R7,R9
        BLT.N    ??find_bianyan_198
??find_bianyan_200:
        ADDS     R6,R6,#+1
??find_bianyan_197:
        LDRB     R0,[SP, #+8]
        LDRB     R1,[SP, #+10]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        ADDS     R0,R0,#+40
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BLT.N    ??find_bianyan_2
        MOVS     R7,#+27
        B.N      ??find_bianyan_201
??find_bianyan_202:
        SUBS     R7,R7,#+1
??find_bianyan_201:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+19
        BLT.N    ??find_bianyan_203
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_202
        MOV      R9,R7
??find_bianyan_203:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+27
        BNE.N    ??find_bianyan_204
        ADDS     R9,R7,#+1
        B.N      ??find_bianyan_205
??find_bianyan_206:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_207
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_207:
        SUBS     R7,R7,#+1
??find_bianyan_205:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+21
        BGE.N    ??find_bianyan_206
??find_bianyan_208:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+30
        BGE.N    ??find_bianyan_200
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_209
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R9,R1
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
??find_bianyan_209:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_208
??find_bianyan_210:
        SUBS     R7,R7,#+1
??find_bianyan_204:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+17
        BLT.N    ??find_bianyan_199
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R7,R1
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_210
        B.N      ??find_bianyan_199
// 6123 				 }
// 6124 				 
// 6125 			 }
// 6126 		}
// 6127 	}
// 6128   }
// 6129 	/***************如果检测出起始线就把起始线黑线去掉END**************/
// 6130  
// 6131   
// 6132     /******************全图扫描******************
// 6133 	/开始对全图扫描一次用来判断赛道的情况
// 6134 	/b1,b2的数目是用来判断全部是白点的行数
// 6135     ********************************************/
// 6136   for(i=H-1;i>10;i--)
??find_bianyan_2:
        MOVS     R6,#+54
        B.N      ??find_bianyan_211
// 6137   {
// 6138     for(j=V/2;j>=1;j--)
// 6139     {
// 6140       if(video[i][j]==0&&video[i][j-1]==0)break;
// 6141     }
// 6142     L0=j;
// 6143     for(j=V/2;j<=V-2;j++)
??find_bianyan_212:
        ADDS     R7,R7,#+1
??find_bianyan_213:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+159
        BGE.N    ??find_bianyan_214
// 6144     {
// 6145       if(video[i][j]==0&&video[i][j+1]==0)break;
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_212
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_212
// 6146     }
// 6147     L1=j;
??find_bianyan_214:
        STRH     R7,[SP, #+0]
// 6148     if(L1-L0>V-20)
        LDRSH    R0,[SP, #+0]
        LDRSH    R1,[SP, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+141
        BLT.N    ??find_bianyan_215
// 6149     {
// 6150       quan_bai[i]=i;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        ADD      R0,SP,#+72
        STRB     R6,[R6, R0]
// 6151       b1++;
        LDRH     R0,[SP, #+42]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+42]
// 6152     }
??find_bianyan_215:
        SUBS     R6,R6,#+1
??find_bianyan_211:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+11
        BLT.N    ??find_bianyan_216
        MOVS     R7,#+80
        B.N      ??find_bianyan_217
??find_bianyan_218:
        SUBS     R7,R7,#+1
??find_bianyan_217:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BLT.N    ??find_bianyan_219
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_218
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.N    R1,??find_bianyan_26+0x20
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_218
??find_bianyan_219:
        STRH     R7,[SP, #+2]
        MOVS     R7,#+80
        B.N      ??find_bianyan_213
        DATA
??find_bianyan_26:
        DC32     start_xian
        DC32     start_18_25_2
        DC32     BW
        DC32     start_25_35_2
        DC32     BW2
        DC32     start_35_45_2
        DC32     BW4
        DC32     start_45_55_2
        DC32     video
        THUMB
// 6153   }
// 6154   if(b1>shi_zi_jiao_cha_number)shizi=1;
??find_bianyan_216:
        LDRSH    R0,[SP, #+42]
        CMP      R0,#+10
        BLT.N    ??find_bianyan_220
        MOVS     R0,#+1
        STRH     R0,[SP, #+28]
// 6155   if(shizi==1)
??find_bianyan_220:
        LDRSH    R0,[SP, #+28]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_221
        B.N      ??find_bianyan_222
// 6156   {
// 6157     while(quan_bai[iii]==0)iii--;
??find_bianyan_223:
        LDRH     R0,[SP, #+40]
        SUBS     R0,R0,#+1
        STRH     R0,[SP, #+40]
??find_bianyan_222:
        LDRSH    R0,[SP, #+40]
        ADD      R1,SP,#+72
        LDRB     R0,[R0, R1]
        CMP      R0,#+0
        BEQ.N    ??find_bianyan_223
// 6158     quan_bai_begin=iii;
        LDRSH    R0,[SP, #+40]
        STRH     R0,[SP, #+14]
// 6159     iii_end=iii;
        LDRSH    R0,[SP, #+40]
        STRH     R0,[SP, #+0]
        B.N      ??find_bianyan_224
// 6160     while(quan_bai[iii_end]>0)iii_end--;
??find_bianyan_225:
        LDRH     R0,[SP, #+0]
        SUBS     R0,R0,#+1
        STRH     R0,[SP, #+0]
??find_bianyan_224:
        LDRSH    R0,[SP, #+0]
        ADD      R1,SP,#+72
        LDRB     R0,[R0, R1]
        CMP      R0,#+1
        BCS.N    ??find_bianyan_225
// 6161     quan_bai_end_1=iii_end;
        LDRSH    R0,[SP, #+0]
        STRH     R0,[SP, #+16]
        B.N      ??find_bianyan_226
// 6162     while(quan_bai[iiii]==0)iiii++;
??find_bianyan_227:
        LDRH     R0,[SP, #+44]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+44]
??find_bianyan_226:
        LDRSH    R0,[SP, #+44]
        ADD      R1,SP,#+72
        LDRB     R0,[R0, R1]
        CMP      R0,#+0
        BEQ.N    ??find_bianyan_227
// 6163     quan_bai_end=iiii;
        LDRSH    R0,[SP, #+44]
        STRH     R0,[SP, #+38]
// 6164     if(quan_bai_begin-quan_bai_end>b1)Small_S=1; 
        LDRSH    R0,[SP, #+42]
        LDRSH    R1,[SP, #+14]
        LDRSH    R2,[SP, #+38]
        SUBS     R1,R1,R2
        CMP      R0,R1
        BGE.N    ??find_bianyan_221
        MOVS     R0,#+1
        STRH     R0,[SP, #+58]
// 6165   }
// 6166   /******************全图扫描END******************/
// 6167   if(Small_S==1)
??find_bianyan_221:
        LDRSH    R0,[SP, #+58]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_228
// 6168   {
// 6169     xu_xian_cai();
        BL       xu_xian_cai
// 6170   }
// 6171   if(Small_S==0)
??find_bianyan_228:
        LDRSH    R0,[SP, #+58]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_229
// 6172   {
// 6173     i=H-1;
        MOVS     R6,#+54
        B.N      ??find_bianyan_230
// 6174     while(i>=0)
// 6175     {
// 6176 		
// 6177     
// 6178     /***********************寻点范围设定***************************/
// 6179       if(i>=53)
// 6180       {
// 6181         for(j=video_Middle;j>=2;j--)
// 6182         {
// 6183           if(video[i][j]==0)
// 6184           {
// 6185             if(video[i][j-1]==0)
// 6186             {
// 6187                     bianyan[0][i]=j;
// 6188                     break;
// 6189             }
// 6190             else if(video[i][j-2]==0)
// 6191             {
// 6192                     bianyan[0][i]=j;
// 6193                     break;
// 6194             }
// 6195           }
// 6196         }
// 6197         if(j==1)
// 6198         {
// 6199           if(video[i][j]==0&&video[i][j-1]==0)
// 6200           {
// 6201                   bianyan[0][i]=1;
// 6202           }
// 6203           else
// 6204           {
// 6205                   bianyan[0][i]=0;
// 6206           }
// 6207         }
// 6208         for(j=video_Middle;j<=V-2;j++)
// 6209         {
// 6210           if(video[i][j]==0)
// 6211           {
// 6212             if(video[i][j+1]==0)
// 6213             {
// 6214                     bianyan[1][i]=j;
// 6215                     break;
// 6216             }
// 6217             else if(video[i][j+2]==0)
// 6218             {
// 6219                     bianyan[1][i]=j;
// 6220                     break;
// 6221             }
// 6222           }
// 6223         }
// 6224         if(j==V-1)
// 6225         {
// 6226           if(video[i][j]==0&&video[i][j+1]==0)
// 6227           {
// 6228                   bianyan[1][i]=V-2;
// 6229           }
// 6230           else
// 6231           {
// 6232                   bianyan[1][i]=V-1;
// 6233           }
// 6234         }
// 6235         bianyan2[0][i]=bianyan[0][i];
// 6236         bianyan2[1][i]=bianyan[1][i];
// 6237       }
// 6238             
// 6239      
// 6240 	
// 6241    
// 6242       else
// 6243       {
// 6244         if(X>=2*windage)
// 6245         {  /********************左边******************************/
// 6246           for(j=bianyan[0][i+1]+windage;j>=2;j--)
// 6247           {
// 6248             if(video[i][j]==0)
// 6249             {
// 6250               if(video[i][j-1]==0)
// 6251               {
// 6252                      bianyan[0][i]=j;
// 6253                      break;
// 6254               }
// 6255               else if(video[i][j-2]==0)
// 6256               {
// 6257                      bianyan[0][i]=j;
// 6258                      break;
// 6259               }
// 6260             }
// 6261           }
// 6262           if(j==1)
// 6263           {
// 6264             if(video[i][j]==0&&video[i][j-1]==0)
// 6265             {
// 6266                bianyan[0][i]=1;
// 6267             }
// 6268             else
// 6269             {
// 6270                bianyan[0][i]=0;
// 6271             }
// 6272           }
// 6273 
// 6274 /*********************右边*******************************/
// 6275           for(j=bianyan[1][i+1]-windage;j<=V-2;j++)
// 6276           {
// 6277             if(video[i][j]==0)
// 6278             {
// 6279               if(video[i][j+1]==0)
// 6280               {
// 6281                       bianyan[1][i]=j;
// 6282                       break;
// 6283               }
// 6284               else if(video[i][j+2]==0)
// 6285               {
// 6286                       bianyan[1][i]=j;
// 6287                       break;
// 6288               }
// 6289             }
// 6290           }
// 6291           if(j==V-1)
// 6292           {
// 6293             if(video[i][j]==0&&video[i][j+1]==0)
// 6294             {
// 6295                    bianyan[1][i]=V-2;
// 6296             }
// 6297             else
// 6298             {
// 6299                    bianyan[1][i]=V-1;
// 6300             }
// 6301           }
// 6302 
// 6303         }
// 6304         else
// 6305         {
// 6306           for(j=center[i+1];j>=2;j--)
// 6307           {
// 6308             if(video[i][j]==0)
// 6309             {
// 6310               if(video[i][j-1]==0)
// 6311               {
// 6312                       bianyan[0][i]=j;
// 6313                       break;
// 6314               }
// 6315               else if(video[i][j-2]==0)
// 6316               {
// 6317                       bianyan[0][i]=j;
// 6318                       break;
// 6319               }
// 6320             }
// 6321           }
// 6322           if(j==1)
// 6323           {
// 6324             if(video[i][j]==0&&video[i][j-1]==0)
// 6325             {
// 6326                     bianyan[0][i]=1;
// 6327             }
// 6328             else
// 6329             {
// 6330                     bianyan[0][i]=0;
// 6331             }
// 6332           }
// 6333      
// 6334       
// 6335 		  /*********************右边*******************************/
// 6336           for(j=center[i+1];j<=V-2;j++)
// 6337           {
// 6338             if(video[i][j]==0)
// 6339             {
// 6340               if(video[i][j+1]==0)
// 6341               {
// 6342                       bianyan[1][i]=j;
// 6343                       break;
// 6344               }
// 6345               else if(video[i][j+2]==0)
// 6346               {
// 6347                       bianyan[1][i]=j;
// 6348                       break;
// 6349               }
// 6350             }
// 6351           }
// 6352           if(j==V-1)
// 6353           {
// 6354             if(video[i][j]==0&&video[i][j+1]==0)
// 6355             {
// 6356                     bianyan[1][i]=V-2;
// 6357             }
// 6358             else
// 6359             {
// 6360                     bianyan[1][i]=V-1;
// 6361             }
// 6362           }
// 6363     
// 6364 
// 6365 	}
// 6366 		
// 6367 		  
// 6368         bianyan2[0][i]=bianyan[0][i];
// 6369         bianyan2[1][i]=bianyan[1][i];
// 6370 
// 6371 
// 6372         chazhi1=bianyan[0][i]-bianyan[0][i+1];
// 6373         chazhi3=bianyan[1][i]-bianyan[1][i+1];
// 6374         if(i>=50)
// 6375         {
// 6376                 chazhi1_buxian=bianyan[0][i+1]-bianyan[0][i+2];
// 6377                 chazhi3_buxian=bianyan[1][i+1]-bianyan[1][i+2];
// 6378         }
// 6379 				
// 6380         if(i<50)
// 6381         {
// 6382                 chazhi1_buxian=bianyan[0][i+2]-bianyan[0][i+5];
// 6383                 chazhi1_buxian=chazhi1_buxian/3;
// 6384                 chazhi3_buxian=bianyan[1][i+2]-bianyan[1][i+5];
// 6385                 chazhi3_buxian=chazhi3_buxian/3;
// 6386         }
// 6387       }
// 6388 		
// 6389 
// 6390 			 /*********************对bianyan[][]的值进行调整***********************/
// 6391    
// 6392     
// 6393       if(chazhi1<=-8)
// 6394       {
// 6395 
// 6396         if(i>30&&chazhi1_buxian>1)
// 6397         {
// 6398                 bianyan[0][i]=bianyan[0][i+1]+1;
// 6399         }
// 6400         else
// 6401         {
// 6402                 bianyan[0][i]=bianyan[0][i+1]+chazhi1_buxian;
// 6403         }
// 6404               
// 6405               
// 6406               
// 6407       }
// 6408 
// 6409       if(chazhi3>=8)
// 6410       {
// 6411         if(i>30&&chazhi3_buxian<-1)
// 6412         {
// 6413                 bianyan[1][i]=bianyan[1][i+1]-1;
// 6414         }
// 6415         else
// 6416         {
// 6417                 bianyan[1][i]=bianyan[1][i+1]+chazhi3_buxian;
// 6418         }
// 6419 
// 6420       }
// 6421     
// 6422 
// 6423 			
// 6424 			
// 6425 
// 6426 			
// 6427       if(shizi==1&&i>=quan_bai_end)
// 6428       {
// 6429         if(chazhi1<=-6||(bianyan[0][i]<3&&i<H-1))
// 6430         {
// 6431                 if(i%2==0)bianyan[0][i]=bianyan[0][i+1]+1;
// 6432                 else bianyan[0][i]=bianyan[0][i+1];
// 6433                 
// 6434         }
// 6435         if(chazhi3>=6||(bianyan[1][i]>=V-4&&i<H-1))
// 6436         {
// 6437                 if(i%2==0)bianyan[1][i]=bianyan[1][i+1]-1;
// 6438                 else bianyan[1][i]=bianyan[1][i+1];
// 6439         }
// 6440       }
// 6441 
// 6442 
// 6443 
// 6444 
// 6445 			/******************十字交叉END********************/
// 6446 			/***********************************************/
// 6447       X=bianyan[1][i]-bianyan[0][i];
// 6448     
// 6449     
// 6450       if(X<=5)
// 6451       {
// 6452               END=i;	
// 6453               break;
// 6454       }//弯道时判断处理结束线的
// 6455 
// 6456 
// 6457       center[i]=(bianyan[1][i]+bianyan[0][i])/2;
??find_bianyan_231:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0x4
        STRB     R0,[R6, R1]
// 6458       i--;
        SUBS     R6,R6,#+1
??find_bianyan_230:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.W    ??find_bianyan_229
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+53
        BLT.W    ??find_bianyan_233
        MOVS     R7,#+80
        B.N      ??find_bianyan_234
??find_bianyan_235:
        SUBS     R7,R7,#+1
??find_bianyan_234:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??find_bianyan_236
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_235
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_237
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
        B.N      ??find_bianyan_236
??find_bianyan_237:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_235
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
??find_bianyan_236:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BNE.N    ??find_bianyan_238
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_239
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_239
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        B.N      ??find_bianyan_238
??find_bianyan_239:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
??find_bianyan_238:
        MOVS     R7,#+80
        B.N      ??find_bianyan_240
??find_bianyan_241:
        ADDS     R7,R7,#+1
??find_bianyan_240:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+159
        BGE.N    ??find_bianyan_242
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_241
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_243
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
        B.N      ??find_bianyan_242
??find_bianyan_243:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_241
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
??find_bianyan_242:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+159
        BNE.N    ??find_bianyan_244
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_245
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_245
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+158
        STRB     R1,[R0, #+55]
        B.N      ??find_bianyan_244
??find_bianyan_245:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+159
        STRB     R1,[R0, #+55]
??find_bianyan_244:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        LDRB     R1,[R6, R1]
        STRB     R1,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        B.N      ??find_bianyan_246
??find_bianyan_233:
        LDRSH    R0,[SP, #+56]
        CMP      R0,#+80
        BLT.W    ??find_bianyan_247
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        ADDS     R7,R0,#+40
        B.N      ??find_bianyan_248
??find_bianyan_249:
        SUBS     R7,R7,#+1
??find_bianyan_248:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??find_bianyan_250
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_249
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_251
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
        B.N      ??find_bianyan_250
??find_bianyan_251:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_249
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
??find_bianyan_250:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BNE.N    ??find_bianyan_252
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_253
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_253
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        B.N      ??find_bianyan_252
??find_bianyan_253:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
??find_bianyan_252:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+56]
        SUBS     R7,R0,#+40
        B.N      ??find_bianyan_254
??find_bianyan_255:
        ADDS     R7,R7,#+1
??find_bianyan_254:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+159
        BGE.N    ??find_bianyan_256
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_255
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_257
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
        B.N      ??find_bianyan_256
??find_bianyan_257:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_255
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
??find_bianyan_256:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+159
        BNE.W    ??find_bianyan_258
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_259
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_259
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+158
        STRB     R1,[R0, #+55]
        B.N      ??find_bianyan_258
??find_bianyan_259:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+159
        STRB     R1,[R0, #+55]
        B.N      ??find_bianyan_258
??find_bianyan_247:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0x4
        ADDS     R0,R6,R0
        LDRB     R7,[R0, #+1]
        B.N      ??find_bianyan_260
??find_bianyan_261:
        SUBS     R7,R7,#+1
??find_bianyan_260:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BLT.N    ??find_bianyan_262
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_261
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_263
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
        B.N      ??find_bianyan_262
??find_bianyan_263:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_261
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        STRB     R7,[R6, R0]
??find_bianyan_262:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BNE.N    ??find_bianyan_264
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_265
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #-1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_265
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+1
        STRB     R1,[R6, R0]
        B.N      ??find_bianyan_264
??find_bianyan_265:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
??find_bianyan_264:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0x4
        ADDS     R0,R6,R0
        LDRB     R7,[R0, #+1]
        B.N      ??find_bianyan_266
??find_bianyan_267:
        ADDS     R7,R7,#+1
??find_bianyan_266:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+159
        BGE.N    ??find_bianyan_268
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_267
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_269
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
        B.N      ??find_bianyan_268
??find_bianyan_269:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+2]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_267
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        STRB     R7,[R0, #+55]
??find_bianyan_268:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+159
        BNE.N    ??find_bianyan_258
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        LDRB     R0,[R7, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_270
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+160
        LDR.W    R1,??find_bianyan_232+0x8
        MLA      R0,R0,R6,R1
        ADDS     R0,R7,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_270
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+158
        STRB     R1,[R0, #+55]
        B.N      ??find_bianyan_258
??find_bianyan_270:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        MOVS     R1,#+159
        STRB     R1,[R0, #+55]
??find_bianyan_258:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        LDRB     R1,[R6, R1]
        STRB     R1,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+54]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+52]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+50
        BLT.N    ??find_bianyan_271
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+26]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+56]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+57]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+24]
??find_bianyan_271:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+50
        BGE.N    ??find_bianyan_246
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+5]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+26]
        LDRSH    R0,[SP, #+26]
        MOVS     R1,#+3
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+26]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+57]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+60]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+24]
        LDRSH    R0,[SP, #+24]
        MOVS     R1,#+3
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+24]
??find_bianyan_246:
        LDRSH    R0,[SP, #+54]
        MVNS     R1,#+6
        CMP      R0,R1
        BGE.N    ??find_bianyan_272
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+31
        BLT.N    ??find_bianyan_273
        LDRSH    R0,[SP, #+26]
        CMP      R0,#+2
        BLT.N    ??find_bianyan_273
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        ADDS     R0,R0,#+1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_272
??find_bianyan_273:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        LDRH     R1,[SP, #+26]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        STRB     R0,[R6, R1]
??find_bianyan_272:
        LDRSH    R0,[SP, #+52]
        CMP      R0,#+8
        BLT.N    ??find_bianyan_274
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+31
        BLT.N    ??find_bianyan_275
        LDRSH    R0,[SP, #+24]
        MOVS     R1,#-1
        CMP      R0,R1
        BGE.N    ??find_bianyan_275
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+56]
        SUBS     R0,R0,#+1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+55]
        B.N      ??find_bianyan_274
??find_bianyan_275:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+56]
        LDRH     R1,[SP, #+24]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+55]
??find_bianyan_274:
        LDRSH    R0,[SP, #+28]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_276
        LDRSH    R0,[SP, #+38]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_276
        LDRSH    R0,[SP, #+54]
        MVNS     R1,#+4
        CMP      R0,R1
        BLT.N    ??find_bianyan_277
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        CMP      R0,#+3
        BCS.N    ??find_bianyan_278
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_278
??find_bianyan_277:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+2
        SDIV     R1,R6,R0
        MLS      R1,R1,R0,R6
        CMP      R1,#+0
        BNE.N    ??find_bianyan_279
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        ADDS     R0,R0,#+1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_278
??find_bianyan_279:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        STRB     R0,[R6, R1]
??find_bianyan_278:
        LDRSH    R0,[SP, #+52]
        CMP      R0,#+6
        BGE.N    ??find_bianyan_280
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_276
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_276
??find_bianyan_280:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        MOVS     R0,#+2
        SDIV     R1,R6,R0
        MLS      R1,R1,R0,R6
        CMP      R1,#+0
        BNE.N    ??find_bianyan_281
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+56]
        SUBS     R0,R0,#+1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+55]
        B.N      ??find_bianyan_276
??find_bianyan_281:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        STRB     R1,[R0, #+55]
??find_bianyan_276:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232
        LDRB     R1,[R6, R1]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+56]
        LDRSH    R0,[SP, #+56]
        CMP      R0,#+6
        BGE.W    ??find_bianyan_231
        MOV      R8,R6
// 6459     }
// 6460   }
// 6461   END_Line_2=END;
??find_bianyan_229:
        LDR.W    R0,??find_bianyan_282
        STRB     R8,[R0, #+0]
// 6462   /**************中心优化1***************/
// 6463   if(END>0)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.N    ??find_bianyan_283
// 6464   {
// 6465     he=center[END+1]+center[END+2]+center[END+3];
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0x4
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0x4
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #+2]
        UXTAB    R0,R1,R0
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0x4
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #+3]
        UXTAB    R0,R0,R1
        STRH     R0,[SP, #+2]
// 6466     he=he/3;
        LDRSH    R0,[SP, #+2]
        MOVS     R1,#+3
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+2]
// 6467     for(m=END+1;m<H-3;m++)
        ADDS     R9,R8,#+1
        B.N      ??find_bianyan_284
??find_bianyan_285:
        ADDS     R9,R9,#+1
??find_bianyan_284:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+52
        BGE.N    ??find_bianyan_283
// 6468     {
// 6469       cha=center[m]-he;
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0x4
        LDRB     R0,[R9, R0]
        LDRH     R1,[SP, #+2]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+0]
// 6470       cha=abs(cha);
        LDRSH    R0,[SP, #+0]
        BL       abs
        STRH     R0,[SP, #+0]
// 6471       if(cha>2)
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+3
        BLT.N    ??find_bianyan_285
// 6472       {
// 6473         END1=m;
        STRH     R9,[SP, #+64]
// 6474         break;
// 6475       }
// 6476     }
// 6477   }
// 6478   for(m=END1-1;m>=0;m--)
??find_bianyan_283:
        LDRH     R0,[SP, #+64]
        SUBS     R9,R0,#+1
        B.N      ??find_bianyan_286
// 6479   {
// 6480           center[m]=0;
??find_bianyan_287:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0x4
        MOVS     R1,#+0
        STRB     R1,[R9, R0]
// 6481   }
        SUBS     R9,R9,#+1
??find_bianyan_286:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+0
        BPL.N    ??find_bianyan_287
// 6482   judage_xuxian();
        BL       judage_xuxian
// 6483   /*********************十字交叉断点的寻找与补线***********************/
// 6484   if(shizi==1&&xu_xian2==0)
        LDRSH    R0,[SP, #+28]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_288
        LDR.W    R0,??find_bianyan_282+0x4
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_288
// 6485   {
// 6486     int16 d1_chazhi1=0,d1_chazhi2=0,d2_chazhi1=0,d2_chazhi2=0;
        MOVS     R1,#+0
        MOVS     R3,#+0
        MOVS     R0,#+0
        MOVS     R2,#+0
// 6487     if(quan_bai_begin<H-1)
        LDRSH    R6,[SP, #+14]
        CMP      R6,#+54
        BGE.N    ??find_bianyan_289
// 6488     {
// 6489       for(i=quan_bai_begin;i<H-1;i++)
        LDRSH    R6,[SP, #+14]
        B.N      ??find_bianyan_290
??find_bianyan_291:
        ADDS     R6,R6,#+1
??find_bianyan_290:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_292
// 6490       {
// 6491         if(bianyan2[0][i]>3)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        LDRB     R0,[R6, R0]
        CMP      R0,#+4
        BCC.N    ??find_bianyan_291
// 6492         {
// 6493           d1_chazhi1=bianyan2[0][i]-bianyan2[0][i+1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R1,R0,R1
// 6494           d1_chazhi1=abs(d1_chazhi1);
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R1,R0
// 6495           if(d1_chazhi1<3)break;
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+3
        BGE.N    ??find_bianyan_291
// 6496         }
// 6497       }
// 6498       d1_1=i;
??find_bianyan_292:
        STRH     R6,[SP, #+6]
// 6499       for(i=quan_bai_begin;i<H-1;i++)
        LDRSH    R6,[SP, #+14]
        B.N      ??find_bianyan_293
??find_bianyan_294:
        ADDS     R6,R6,#+1
??find_bianyan_293:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_295
// 6500       {
// 6501         if(bianyan2[1][i]<V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCS.N    ??find_bianyan_294
// 6502         {
// 6503           d2_chazhi1=bianyan2[1][i]-bianyan2[1][i+1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
// 6504           d2_chazhi1=abs(d2_chazhi1);
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
// 6505           if(d2_chazhi1<3)break;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+3
        BGE.N    ??find_bianyan_294
// 6506         }
// 6507       }
// 6508       d2_1=i;
??find_bianyan_295:
        STRH     R6,[SP, #+12]
// 6509     }
// 6510     if(quan_bai_begin==H-1){d1_1=H;d2_1=H;}
??find_bianyan_289:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+54
        BNE.N    ??find_bianyan_296
        MOVS     R0,#+55
        STRH     R0,[SP, #+6]
        MOVS     R0,#+55
        STRH     R0,[SP, #+12]
// 6511 	
// 6512     for(i=quan_bai_end_1;i>0;i--)
??find_bianyan_296:
        LDRSH    R6,[SP, #+16]
        B.N      ??find_bianyan_297
??find_bianyan_298:
        SUBS     R6,R6,#+1
??find_bianyan_297:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BLT.N    ??find_bianyan_299
// 6513     {   
// 6514       if(bianyan2[0][i]>3)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        LDRB     R0,[R6, R0]
        CMP      R0,#+4
        BCC.N    ??find_bianyan_298
// 6515       {
// 6516          d1_chazhi2=bianyan2[0][i]-bianyan2[0][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_232+0xC
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R3,R0,R1
// 6517          d1_chazhi2=abs(d1_chazhi2);
        MOVS     R0,R3
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R3,R0
// 6518          if(d1_chazhi2<3)break;
        SXTH     R3,R3            ;; SignExt  R3,R3,#+16,#+16
        CMP      R3,#+3
        BGE.N    ??find_bianyan_298
// 6519       }
// 6520   
// 6521     }
// 6522     d1_2=i;
??find_bianyan_299:
        STRH     R6,[SP, #+0]
// 6523     for(i=quan_bai_end_1;i>0;i--)
        LDRSH    R6,[SP, #+16]
        B.N      ??find_bianyan_300
??find_bianyan_301:
        SUBS     R6,R6,#+1
??find_bianyan_300:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BLT.N    ??find_bianyan_302
// 6524     {
// 6525       if(bianyan2[1][i]<V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCS.N    ??find_bianyan_301
// 6526       {
// 6527          d2_chazhi2=bianyan2[1][i]-bianyan2[1][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R2,R0,R1
// 6528          d2_chazhi2=abs(d2_chazhi2);
        MOVS     R0,R2
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R2,R0
// 6529          if(d2_chazhi2<3)break;
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        CMP      R2,#+3
        BGE.N    ??find_bianyan_301
// 6530       }
// 6531   
// 6532     }
// 6533     d2_2=i;
??find_bianyan_302:
        STRH     R6,[SP, #+2]
// 6534     if(d1_1==quan_bai_begin)
        LDRSH    R0,[SP, #+6]
        LDRSH    R1,[SP, #+14]
        CMP      R0,R1
        BNE.N    ??find_bianyan_303
// 6535     {
// 6536       for(i=quan_bai_begin-1;i>quan_bai_end_1;i--)
        LDRH     R0,[SP, #+14]
        SUBS     R6,R0,#+1
        B.N      ??find_bianyan_304
??find_bianyan_305:
        SUBS     R6,R6,#+1
??find_bianyan_304:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_306
// 6537       {
// 6538             
// 6539           d1_chazhi1=bianyan2[0][i]-bianyan2[0][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232+0xC
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R1,R0,R1
// 6540           d1_chazhi1=abs(d1_chazhi1);
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R1,R0
// 6541           if(d1_chazhi1>3)break;
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        CMP      R1,#+4
        BLT.N    ??find_bianyan_305
// 6542     
// 6543       }
// 6544       d1_1=i;
??find_bianyan_306:
        STRH     R6,[SP, #+6]
// 6545     }
// 6546     if(d2_1==quan_bai_begin)
??find_bianyan_303:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+14]
        CMP      R0,R1
        BNE.N    ??find_bianyan_307
// 6547     {
// 6548       for(i=quan_bai_begin-1;i>quan_bai_end_1;i--)
        LDRH     R0,[SP, #+14]
        SUBS     R6,R0,#+1
        B.N      ??find_bianyan_308
??find_bianyan_309:
        SUBS     R6,R6,#+1
??find_bianyan_308:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_310
// 6549       {
// 6550             
// 6551           d2_chazhi1=bianyan2[1][i]-bianyan2[1][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232+0xC
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0xC
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
// 6552           d2_chazhi1=abs(d2_chazhi1);
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
// 6553           if(d2_chazhi1>3)break;
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        CMP      R0,#+4
        BLT.N    ??find_bianyan_309
// 6554     
// 6555   
// 6556       }
// 6557       d2_1=i;
??find_bianyan_310:
        STRH     R6,[SP, #+12]
// 6558     }
// 6559     if(d1_1<H){bianyan[0][d1_1]=bianyan2[0][d1_1];bianyan[0][d1_2]=bianyan2[0][d1_2];LianJie(0,d1_1,d1_2);}
??find_bianyan_307:
        LDRSH    R0,[SP, #+6]
        CMP      R0,#+55
        BGE.N    ??find_bianyan_311
        LDRSH    R0,[SP, #+6]
        LDR.N    R1,??find_bianyan_232
        LDRSH    R2,[SP, #+6]
        LDR.N    R3,??find_bianyan_232+0xC
        LDRB     R2,[R2, R3]
        STRB     R2,[R0, R1]
        LDRSH    R0,[SP, #+0]
        LDR.N    R1,??find_bianyan_232
        LDRSH    R2,[SP, #+0]
        LDR.N    R3,??find_bianyan_232+0xC
        LDRB     R2,[R2, R3]
        STRB     R2,[R0, R1]
        LDRSH    R2,[SP, #+0]
        LDRSH    R1,[SP, #+6]
        MOVS     R0,#+0
        BL       LianJie
// 6560     if(d2_1<H){bianyan[1][d1_1]=bianyan2[1][d1_1];bianyan[1][d1_2]=bianyan2[1][d1_2];LianJie(1,d2_1,d2_2);}
??find_bianyan_311:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+55
        BGE.N    ??find_bianyan_312
        LDRSH    R0,[SP, #+6]
        LDR.N    R1,??find_bianyan_232
        ADDS     R0,R0,R1
        LDRSH    R1,[SP, #+6]
        LDR.N    R2,??find_bianyan_232+0xC
        ADDS     R1,R1,R2
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        LDRSH    R0,[SP, #+0]
        LDR.N    R1,??find_bianyan_232
        ADDS     R0,R0,R1
        LDRSH    R1,[SP, #+0]
        LDR.N    R2,??find_bianyan_232+0xC
        ADDS     R1,R1,R2
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        LDRSH    R2,[SP, #+2]
        LDRSH    R1,[SP, #+12]
        MOVS     R0,#+1
        BL       LianJie
// 6561     if(d1_1==H)
??find_bianyan_312:
        LDRSH    R0,[SP, #+6]
        CMP      R0,#+55
        BNE.N    ??find_bianyan_313
// 6562     {
// 6563       for(i=d1_2-9;i<d1_2;i++)
        LDRH     R0,[SP, #+0]
        SUBS     R6,R0,#+9
        B.N      ??find_bianyan_314
// 6564       {
// 6565              chazhi_5=chazhi_5+bianyan[0][i]-bianyan[0][i-1];
??find_bianyan_315:
        LDRH     R0,[SP, #+20]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        LDRB     R1,[R6, R1]
        ADDS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+20]
// 6566              
// 6567       }
        ADDS     R6,R6,#+1
??find_bianyan_314:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_315
// 6568       chazhi_5=chazhi_5/9;
        LDRSH    R0,[SP, #+20]
        MOVS     R1,#+9
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+20]
// 6569       for(i=d1_2;i<H-1;i++)bianyan[0][i+1]=bianyan[0][i]+chazhi_5;
        LDRSH    R6,[SP, #+0]
        B.N      ??find_bianyan_316
??find_bianyan_317:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        LDRH     R1,[SP, #+20]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+1]
        ADDS     R6,R6,#+1
??find_bianyan_316:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BLT.N    ??find_bianyan_317
// 6570     }
// 6571     if(d2_1==H)
??find_bianyan_313:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+55
        BNE.N    ??find_bianyan_318
// 6572     {
// 6573       for(i=d2_2-9;i<d2_2;i++)
        LDRH     R0,[SP, #+2]
        SUBS     R6,R0,#+9
        B.N      ??find_bianyan_319
// 6574       {
// 6575              chazhi_6=chazhi_6+bianyan[1][i]-bianyan[1][i-1];
??find_bianyan_320:
        LDRH     R0,[SP, #+18]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+18]
// 6576               
// 6577       }
        ADDS     R6,R6,#+1
??find_bianyan_319:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_320
// 6578       chazhi_6=chazhi_6/9;
        LDRSH    R0,[SP, #+18]
        MOVS     R1,#+9
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+18]
// 6579       for(i=d2_2;i<H-1;i++)bianyan[1][i+1]=bianyan[1][i]+chazhi_6;
        LDRSH    R6,[SP, #+2]
        B.N      ??find_bianyan_321
??find_bianyan_322:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        LDRH     R1,[SP, #+18]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+56]
        ADDS     R6,R6,#+1
??find_bianyan_321:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BLT.N    ??find_bianyan_322
// 6580     }
// 6581 
// 6582 	   
// 6583     if(d1_1>d2_1)
??find_bianyan_318:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+6]
        CMP      R0,R1
        BGE.N    ??find_bianyan_323
// 6584     {
// 6585       if(d1_2>d2_2)
        LDRSH    R0,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        CMP      R0,R1
        BGE.N    ??find_bianyan_324
// 6586       {
// 6587              for(i=d1_1;i>=d2_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
        LDRSH    R6,[SP, #+6]
??find_bianyan_325:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_323
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0x4
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_325
// 6588       }
// 6589       else
// 6590       {
// 6591          for(i=d1_1;i>=d1_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_324:
        LDRSH    R6,[SP, #+6]
        B.N      ??find_bianyan_326
??find_bianyan_327:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0x4
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
??find_bianyan_326:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BGE.N    ??find_bianyan_327
// 6592       }
// 6593   
// 6594     }
// 6595     if(d1_1<=d2_1)
??find_bianyan_323:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+6]
        CMP      R0,R1
        BLT.N    ??find_bianyan_288
// 6596     {
// 6597       if(d1_2>d2_2)
        LDRSH    R0,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        CMP      R0,R1
        BGE.N    ??find_bianyan_328
// 6598       {
// 6599          for(i=d2_1;i>=d2_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
        LDRSH    R6,[SP, #+12]
??find_bianyan_329:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_288
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0x4
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_329
// 6600       }
// 6601       else
// 6602       {
// 6603          for(i=d2_1;i>=d1_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_328:
        LDRSH    R6,[SP, #+12]
        B.N      ??find_bianyan_330
??find_bianyan_331:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_232
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_232+0x4
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
??find_bianyan_330:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BGE.N    ??find_bianyan_331
// 6604       }
// 6605     }
// 6606   }
// 6607   /*********************十字交叉断点的寻找与补线END***********************/
// 6608   if(xu_xian2==1)
??find_bianyan_288:
        LDR.W    R0,??find_bianyan_282+0x4
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_332
// 6609   {  
// 6610     for(i=quan_bai_begin;i>quan_bai_end_1;i--)
        LDRSH    R6,[SP, #+14]
        B.N      ??find_bianyan_333
        DATA
??find_bianyan_232:
        DC32     bianyan
        DC32     center
        DC32     video
        DC32     bianyan2
        THUMB
??find_bianyan_334:
        SUBS     R6,R6,#+1
??find_bianyan_333:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_335
// 6611 		{
// 6612 			
// 6613 			if((bianyan2[1][i]-bianyan2[0][i])>V-5)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        LDRB     R1,[R6, R1]
        SUBS     R0,R0,R1
        CMP      R0,#+156
        BLT.N    ??find_bianyan_334
// 6614 			{
// 6615 				m=i;
        MOV      R9,R6
// 6616 				break;
        B.N      ??find_bianyan_335
// 6617 			}
// 6618 		}
// 6619 		for(;i>quan_bai_end_1;i--)
??find_bianyan_337:
        SUBS     R6,R6,#+1
??find_bianyan_335:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_338
// 6620 		{
// 6621 			if((bianyan2[1][i]-bianyan2[0][i])<=V-5)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        LDRB     R1,[R6, R1]
        SUBS     R0,R0,R1
        CMP      R0,#+156
        BGE.N    ??find_bianyan_337
// 6622 		}
// 6623 		quan_bai_num_k=m-i;
??find_bianyan_338:
        SUBS     R0,R9,R6
        STRH     R0,[SP, #+0]
// 6624 		if(quan_bai_num_k>((quan_bai_begin-quan_bai_end_1)/2))shizi2=1;
        LDRSH    R0,[SP, #+14]
        LDRSH    R1,[SP, #+16]
        SUBS     R0,R0,R1
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDRSH    R1,[SP, #+0]
        CMP      R0,R1
        BGE.N    ??find_bianyan_339
        MOVS     R0,#+1
        STRH     R0,[SP, #+68]
// 6625 		if(shizi2==1)
??find_bianyan_339:
        LDRSH    R0,[SP, #+68]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_340
// 6626 		{
// 6627 			if(quan_bai_num_k>16)shizi3=1;
        LDRSH    R0,[SP, #+0]
        CMP      R0,#+17
        BLT.N    ??find_bianyan_341
        MOVS     R0,#+1
        STRH     R0,[SP, #+50]
        B.N      ??find_bianyan_340
// 6628 			else
// 6629 			{
// 6630 				for(;i>=quan_bai_end;i--)
??find_bianyan_342:
        SUBS     R6,R6,#+1
??find_bianyan_341:
        LDRSH    R0,[SP, #+38]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_343
// 6631 				{
// 6632 					if(bianyan[0][i]==bianyan2[0][i]&&bianyan[1][i]==bianyan2[1][i])
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_342
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_342
// 6633 					{
// 6634 						kk=i;
        STRH     R6,[SP, #+66]
// 6635 						break;
        B.N      ??find_bianyan_343
// 6636 					}
// 6637 					
// 6638 				}
// 6639 				for(;i>=quan_bai_end;i--)
??find_bianyan_345:
        SUBS     R6,R6,#+1
??find_bianyan_343:
        LDRSH    R0,[SP, #+38]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_346
// 6640 				{
// 6641 					if(!(bianyan[0][i]==bianyan2[0][i]&&bianyan[1][i]==bianyan2[1][i]))break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_347
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_345
// 6642 				}
// 6643 				if((kk-i)>=10)shizi3=1;
??find_bianyan_347:
??find_bianyan_346:
        LDRSH    R0,[SP, #+66]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R0,R6
        CMP      R0,#+10
        BLT.N    ??find_bianyan_340
        MOVS     R0,#+1
        STRH     R0,[SP, #+50]
// 6644 			}
// 6645 			
// 6646 		}
// 6647 		if(shizi3==0)	xu_xian_bu();
??find_bianyan_340:
        LDRSH    R0,[SP, #+50]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_348
        BL       xu_xian_bu
// 6648 		if(shizi3==1)
??find_bianyan_348:
        LDRSH    R0,[SP, #+50]
        CMP      R0,#+1
        BNE.W    ??find_bianyan_332
// 6649 		{
// 6650 			int d1_chazhi1=0,d1_chazhi2=0,d2_chazhi1=0,d2_chazhi2=0;
        MOVS     R1,#+0
        MOVS     R3,#+0
        MOVS     R0,#+0
        MOVS     R2,#+0
// 6651    	   if(quan_bai_begin<H-1)
        LDRSH    R6,[SP, #+14]
        CMP      R6,#+54
        BGE.N    ??find_bianyan_349
// 6652 	   {
// 6653 	   	  for(i=quan_bai_begin;i<H-1;i++)
        LDRSH    R6,[SP, #+14]
        B.N      ??find_bianyan_350
??find_bianyan_351:
        ADDS     R6,R6,#+1
??find_bianyan_350:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_352
// 6654 		  {
// 6655 		     if(bianyan2[0][i]>3)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+4
        BCC.N    ??find_bianyan_351
// 6656 			 {
// 6657 		        d1_chazhi1=bianyan2[0][i]-bianyan2[0][i+1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R1,R0,R1
// 6658 		        d1_chazhi1=abs(d1_chazhi1);
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R1,R0
// 6659 		        if(d1_chazhi1<3)break;
        CMP      R1,#+3
        BGE.N    ??find_bianyan_351
// 6660 			 }
// 6661 		  }
// 6662           d1_1=i;
??find_bianyan_352:
        STRH     R6,[SP, #+6]
// 6663 	      for(i=quan_bai_begin;i<H-1;i++)
        LDRSH    R6,[SP, #+14]
        B.N      ??find_bianyan_353
??find_bianyan_354:
        ADDS     R6,R6,#+1
??find_bianyan_353:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BGE.N    ??find_bianyan_355
// 6664 		  {
// 6665 	      	 if(bianyan2[1][i]<V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCS.N    ??find_bianyan_354
// 6666 			 {
// 6667 		        d2_chazhi1=bianyan2[1][i]-bianyan2[1][i+1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
// 6668 		        d2_chazhi1=abs(d2_chazhi1);
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
// 6669 		        if(d2_chazhi1<3)break;
        CMP      R0,#+3
        BGE.N    ??find_bianyan_354
// 6670 			 }
// 6671 		  }
// 6672     	  d2_1=i;
??find_bianyan_355:
        STRH     R6,[SP, #+12]
// 6673 	   }
// 6674 	   if(quan_bai_begin==H-1){d1_1=H;d2_1=H;}
??find_bianyan_349:
        LDRSH    R0,[SP, #+14]
        CMP      R0,#+54
        BNE.N    ??find_bianyan_356
        MOVS     R0,#+55
        STRH     R0,[SP, #+6]
        MOVS     R0,#+55
        STRH     R0,[SP, #+12]
// 6675 	
// 6676 	   for(i=quan_bai_end_1;i>0;i--)
??find_bianyan_356:
        LDRSH    R6,[SP, #+16]
        B.N      ??find_bianyan_357
??find_bianyan_358:
        SUBS     R6,R6,#+1
??find_bianyan_357:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BLT.N    ??find_bianyan_359
// 6677 	   {   
// 6678 		  if(bianyan2[0][i]>3)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+4
        BCC.N    ??find_bianyan_358
// 6679 		  {
// 6680 		     d1_chazhi2=bianyan2[0][i]-bianyan2[0][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R3,R0,R1
// 6681 		     d1_chazhi2=abs(d1_chazhi2);
        MOVS     R0,R3
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R3,R0
// 6682 		     if(d1_chazhi2<3)break;
        CMP      R3,#+3
        BGE.N    ??find_bianyan_358
// 6683 		  }
// 6684 
// 6685 	   }
// 6686        d1_2=i;
??find_bianyan_359:
        STRH     R6,[SP, #+0]
// 6687 	   for(i=quan_bai_end_1;i>0;i--)
        LDRSH    R6,[SP, #+16]
        B.N      ??find_bianyan_360
??find_bianyan_361:
        SUBS     R6,R6,#+1
??find_bianyan_360:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+1
        BLT.N    ??find_bianyan_362
// 6688 	   {
// 6689 		  if(bianyan2[1][i]<V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCS.N    ??find_bianyan_361
// 6690 		  {
// 6691 		     d2_chazhi2=bianyan2[1][i]-bianyan2[1][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R2,R0,R1
// 6692 		     d2_chazhi2=abs(d2_chazhi2);
        MOVS     R0,R2
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R2,R0
// 6693 		     if(d2_chazhi2<3)break;
        CMP      R2,#+3
        BGE.N    ??find_bianyan_361
// 6694 		  }
// 6695 
// 6696 	   }
// 6697 	   d2_2=i;
??find_bianyan_362:
        STRH     R6,[SP, #+2]
// 6698        if(d1_1==quan_bai_begin)
        LDRSH    R0,[SP, #+6]
        LDRSH    R1,[SP, #+14]
        CMP      R0,R1
        BNE.N    ??find_bianyan_363
// 6699 	   {
// 6700 		  for(i=quan_bai_begin-1;i>quan_bai_end_1;i--)
        LDRH     R0,[SP, #+14]
        SUBS     R6,R0,#+1
        B.N      ??find_bianyan_364
??find_bianyan_365:
        SUBS     R6,R6,#+1
??find_bianyan_364:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_366
// 6701 		  {
// 6702 			
// 6703 		      d1_chazhi1=bianyan2[0][i]-bianyan2[0][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R1,R0,R1
// 6704 		      d1_chazhi1=abs(d1_chazhi1);
        MOVS     R0,R1
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
        MOVS     R1,R0
// 6705 		      if(d1_chazhi1>3)break;
        CMP      R1,#+4
        BLT.N    ??find_bianyan_365
// 6706 		
// 6707 		  }
// 6708 		  d1_1=i;
??find_bianyan_366:
        STRH     R6,[SP, #+6]
// 6709 	   }
// 6710 	   if(d2_1==quan_bai_begin)
??find_bianyan_363:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+14]
        CMP      R0,R1
        BNE.N    ??find_bianyan_367
// 6711 	   {
// 6712 		  for(i=quan_bai_begin-1;i>quan_bai_end_1;i--)
        LDRH     R0,[SP, #+14]
        SUBS     R6,R0,#+1
        B.N      ??find_bianyan_368
??find_bianyan_369:
        SUBS     R6,R6,#+1
??find_bianyan_368:
        LDRSH    R0,[SP, #+16]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R0,R6
        BGE.N    ??find_bianyan_370
// 6713 		  {
// 6714 			
// 6715 		      d2_chazhi1=bianyan2[1][i]-bianyan2[1][i-1];
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_336
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
// 6716 		      d2_chazhi1=abs(d2_chazhi1);
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       abs
// 6717 		      if(d2_chazhi1>3)break;
        CMP      R0,#+4
        BLT.N    ??find_bianyan_369
// 6718 		
// 6719             
// 6720 		  }
// 6721 		  d2_1=i;
??find_bianyan_370:
        STRH     R6,[SP, #+12]
// 6722 	   }
// 6723 	   if(d1_1<H){bianyan[0][d1_1]=bianyan2[0][d1_1];bianyan[0][d1_2]=bianyan2[0][d1_2];LianJie(0,d1_1,d1_2);}
??find_bianyan_367:
        LDRSH    R0,[SP, #+6]
        CMP      R0,#+55
        BGE.N    ??find_bianyan_371
        LDRSH    R0,[SP, #+6]
        LDR.W    R1,??find_bianyan_344
        LDRSH    R2,[SP, #+6]
        LDR.W    R3,??find_bianyan_336
        LDRB     R2,[R2, R3]
        STRB     R2,[R0, R1]
        LDRSH    R0,[SP, #+0]
        LDR.W    R1,??find_bianyan_344
        LDRSH    R2,[SP, #+0]
        LDR.W    R3,??find_bianyan_336
        LDRB     R2,[R2, R3]
        STRB     R2,[R0, R1]
        LDRSH    R2,[SP, #+0]
        LDRSH    R1,[SP, #+6]
        MOVS     R0,#+0
        BL       LianJie
// 6724 	   if(d2_1<H){bianyan[1][d1_1]=bianyan2[1][d1_1];bianyan[1][d1_2]=bianyan2[1][d1_2];LianJie(1,d2_1,d2_2);}
??find_bianyan_371:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+55
        BGE.N    ??find_bianyan_372
        LDRSH    R0,[SP, #+6]
        LDR.W    R1,??find_bianyan_344
        ADDS     R0,R0,R1
        LDRSH    R1,[SP, #+6]
        LDR.W    R2,??find_bianyan_336
        ADDS     R1,R1,R2
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        LDRSH    R0,[SP, #+0]
        LDR.W    R1,??find_bianyan_344
        ADDS     R0,R0,R1
        LDRSH    R1,[SP, #+0]
        LDR.W    R2,??find_bianyan_336
        ADDS     R1,R1,R2
        LDRB     R1,[R1, #+55]
        STRB     R1,[R0, #+55]
        LDRSH    R2,[SP, #+2]
        LDRSH    R1,[SP, #+12]
        MOVS     R0,#+1
        BL       LianJie
// 6725 	   if(d1_1==H)
??find_bianyan_372:
        LDRSH    R0,[SP, #+6]
        CMP      R0,#+55
        BNE.N    ??find_bianyan_373
// 6726 	   {
// 6727 		   for(i=d1_2-9;i<d1_2;i++)
        LDRH     R0,[SP, #+0]
        SUBS     R6,R0,#+9
        B.N      ??find_bianyan_374
// 6728 		   {
// 6729 			   chazhi_5=chazhi_5+bianyan[0][i]-bianyan[0][i-1];
??find_bianyan_375:
        LDRH     R0,[SP, #+20]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        ADDS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #-1]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+20]
// 6730 			   
// 6731 		   }
        ADDS     R6,R6,#+1
??find_bianyan_374:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_375
// 6732            chazhi_5=chazhi_5/9;
        LDRSH    R0,[SP, #+20]
        MOVS     R1,#+9
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+20]
// 6733 		   for(i=d1_2;i<H-1;i++)bianyan[0][i+1]=bianyan[0][i]+chazhi_5;
        LDRSH    R6,[SP, #+0]
        B.N      ??find_bianyan_376
??find_bianyan_377:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        LDRH     R1,[SP, #+20]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+1]
        ADDS     R6,R6,#+1
??find_bianyan_376:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BLT.N    ??find_bianyan_377
// 6734 	   }
// 6735 	   if(d2_1==H)
??find_bianyan_373:
        LDRSH    R0,[SP, #+12]
        CMP      R0,#+55
        BNE.N    ??find_bianyan_378
// 6736 	   {
// 6737 		   for(i=d2_2-9;i<d2_2;i++)
        LDRH     R0,[SP, #+2]
        SUBS     R6,R0,#+9
        B.N      ??find_bianyan_379
// 6738 		   {
// 6739 			   chazhi_6=chazhi_6+bianyan[1][i]-bianyan[1][i-1];
??find_bianyan_380:
        LDRH     R0,[SP, #+18]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+18]
// 6740 			   
// 6741 		   }
        ADDS     R6,R6,#+1
??find_bianyan_379:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_380
// 6742            chazhi_6=chazhi_6/9;
        LDRSH    R0,[SP, #+18]
        MOVS     R1,#+9
        SDIV     R0,R0,R1
        STRH     R0,[SP, #+18]
// 6743 		   for(i=d2_2;i<H-1;i++)bianyan[1][i+1]=bianyan[1][i]+chazhi_6;
        LDRSH    R6,[SP, #+2]
        B.N      ??find_bianyan_381
??find_bianyan_382:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        LDRH     R1,[SP, #+18]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        STRB     R0,[R1, #+56]
        ADDS     R6,R6,#+1
??find_bianyan_381:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+54
        BLT.N    ??find_bianyan_382
// 6744 	   }
// 6745 
// 6746 	   
// 6747 	   if(d1_1>d2_1)
??find_bianyan_378:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+6]
        CMP      R0,R1
        BGE.N    ??find_bianyan_383
// 6748 	   {
// 6749 		  if(d1_2>d2_2)
        LDRSH    R0,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        CMP      R0,R1
        BGE.N    ??find_bianyan_384
// 6750 		  {
// 6751 			 for(i=d1_1;i>=d2_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
        LDRSH    R6,[SP, #+6]
??find_bianyan_385:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_383
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_385
// 6752 		  }
// 6753 		  else
// 6754 		  {
// 6755 		     for(i=d1_1;i>=d1_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_384:
        LDRSH    R6,[SP, #+6]
        B.N      ??find_bianyan_387
??find_bianyan_388:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
??find_bianyan_387:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BGE.N    ??find_bianyan_388
// 6756 		  }
// 6757 
// 6758 	   }
// 6759 	   if(d1_1<=d2_1)
??find_bianyan_383:
        LDRSH    R0,[SP, #+12]
        LDRSH    R1,[SP, #+6]
        CMP      R0,R1
        BLT.N    ??find_bianyan_332
// 6760 	   {
// 6761           if(d1_2>d2_2)
        LDRSH    R0,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        CMP      R0,R1
        BGE.N    ??find_bianyan_389
// 6762 		  {
// 6763 		     for(i=d2_1;i>=d2_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
        LDRSH    R6,[SP, #+12]
??find_bianyan_390:
        LDRSH    R0,[SP, #+2]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BLT.N    ??find_bianyan_332
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_390
        DATA
??find_bianyan_282:
        DC32     END_Line_2
        DC32     xu_xian2
        THUMB
// 6764 		  }
// 6765 		  else
// 6766 		  {
// 6767 		     for(i=d2_1;i>=d1_2;i--)center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_389:
        LDRSH    R6,[SP, #+12]
        B.N      ??find_bianyan_391
??find_bianyan_392:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_344
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        SUBS     R6,R6,#+1
??find_bianyan_391:
        LDRSH    R0,[SP, #+0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,R0
        BGE.N    ??find_bianyan_392
// 6768 		  }
// 6769 	   }
// 6770 		}
// 6771 
// 6772   }
// 6773   /*****************弯道的处理*****************/
// 6774   if(xu_xian2==0&&END>0)//shizi==0
??find_bianyan_332:
        LDR.W    R0,??find_bianyan_393
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_394
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+1
        BLT.W    ??find_bianyan_394
// 6775   {
// 6776     if(END<6)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+6
        BGE.N    ??find_bianyan_395
// 6777     {
// 6778       for(i=END+15;i>END;i--)
        ADDS     R6,R8,#+15
??find_bianyan_396:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_394
// 6779       {
// 6780          if(!(bianyan2[0][i]==bianyan[0][i]))bu1_number++;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_397
        ADDS     R11,R11,#+1
// 6781          if(!(bianyan2[1][i]==bianyan[1][i]))bu2_number++;
??find_bianyan_397:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_398
        ADDS     R10,R10,#+1
// 6782       }
??find_bianyan_398:
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_396
// 6783             
// 6784     }
// 6785     else if(END<15)
??find_bianyan_395:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+15
        BGE.N    ??find_bianyan_399
// 6786     {
// 6787       for(i=END+20;i>END;i--)
        ADDS     R6,R8,#+20
??find_bianyan_400:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_394
// 6788       {
// 6789         if((!(bianyan2[0][i]==bianyan[0][i]))||bianyan2[0][i]<2)bu1_number++;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_401
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_402
??find_bianyan_401:
        ADDS     R11,R11,#+1
// 6790         if((!(bianyan2[1][i]==bianyan[1][i]))||bianyan2[1][i]>V-5)bu2_number++;
??find_bianyan_402:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_403
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_404
??find_bianyan_403:
        ADDS     R10,R10,#+1
// 6791       }
??find_bianyan_404:
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_400
// 6792     }
// 6793     else if(END<20)
??find_bianyan_399:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+20
        BGE.N    ??find_bianyan_405
// 6794     {
// 6795       for(i=END+25;i>END;i--)
        ADDS     R6,R8,#+25
??find_bianyan_406:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_394
// 6796       {
// 6797          if((!(bianyan2[0][i]==bianyan[0][i]))||bianyan2[0][i]<2)bu1_number++;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_407
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_408
??find_bianyan_407:
        ADDS     R11,R11,#+1
// 6798          if((!(bianyan2[1][i]==bianyan[1][i]))||bianyan2[1][i]>V-5)bu2_number++;
??find_bianyan_408:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_409
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_410
??find_bianyan_409:
        ADDS     R10,R10,#+1
// 6799       }
??find_bianyan_410:
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_406
// 6800     }
// 6801     else
// 6802     {
// 6803       for(i=H-1;i>END;i--)
??find_bianyan_405:
        MOVS     R6,#+54
        B.N      ??find_bianyan_411
// 6804       {
// 6805               if(bianyan2[0][i]<2)num_1++;
??find_bianyan_412:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_413
        LDRH     R0,[SP, #+48]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+48]
// 6806               if(bianyan2[1][i]>V-5)num_2++;
??find_bianyan_413:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_414
        LDRH     R0,[SP, #+46]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+46]
// 6807       }
??find_bianyan_414:
        SUBS     R6,R6,#+1
??find_bianyan_411:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_412
// 6808       if(num_1>num_2)
        LDRSH    R0,[SP, #+46]
        LDRSH    R1,[SP, #+48]
        CMP      R0,R1
        BGE.W    ??find_bianyan_415
// 6809       {
// 6810         
// 6811         if(bianyan2[0][54]<2&&bianyan2[0][53]<2&&bianyan2[0][52]<2)
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+54]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_416
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+53]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_416
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+52]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_416
// 6812         {
// 6813                 if(END>23&&END<55)
        SUBS     R0,R8,#+24
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+31
        BCS.N    ??find_bianyan_416
// 6814                 {
// 6815                         if((bianyan2[1][54]-mo_hu[END-24])>=0)center[54]=bianyan2[1][54]-mo_hu[END-24];
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+109]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_417
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #-24]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_416
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+109]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_417
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #-24]
        SUBS     R0,R0,R1
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R1, #+54]
// 6816                 }
// 6817         }
// 6818         for(i=H-2;i>END;i--)
??find_bianyan_416:
        MOVS     R6,#+53
        B.N      ??find_bianyan_418
??find_bianyan_419:
        SUBS     R6,R6,#+1
??find_bianyan_418:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_420
// 6819          {
// 6820                 if(bianyan2[0][i]<1)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BCS.N    ??find_bianyan_419
        B.N      ??find_bianyan_420
// 6821                  
// 6822          }
// 6823         for(;i>END;i--)
// 6824         {
// 6825                 if((center[i+1]+bianyan[1][i]-bianyan[1][i+1])>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 6826             else 
// 6827                 {
// 6828                    for(;i>END;i--)center[i]=0;
??find_bianyan_421:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_422:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_421
// 6829                 }
??find_bianyan_423:
        SUBS     R6,R6,#+1
??find_bianyan_420:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_415
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_422
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_423
// 6830 
// 6831         }
// 6832       }
// 6833       if(num_1<num_2)
??find_bianyan_415:
        LDRSH    R0,[SP, #+48]
        LDRSH    R1,[SP, #+46]
        CMP      R0,R1
        BGE.W    ??find_bianyan_394
// 6834       {
// 6835          if(bianyan2[1][54]>V-3&&bianyan2[1][53]>V-3&&bianyan2[1][52]>V-3)
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+109]
        CMP      R0,#+158
        BCC.N    ??find_bianyan_424
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+108]
        CMP      R0,#+158
        BCC.N    ??find_bianyan_424
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+107]
        CMP      R0,#+158
        BCC.N    ??find_bianyan_424
// 6836         {
// 6837                 if(END>23&&END<55)
        SUBS     R0,R8,#+24
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+31
        BCS.N    ??find_bianyan_424
// 6838                 {
// 6839                         if((bianyan2[0][54]+mo_hu[END-24])<V-1)center[54]=bianyan2[0][54]+mo_hu[END-24];
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+54]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_417
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #-24]
        ADDS     R0,R1,R0
        UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
        CMP      R0,#+159
        BCS.N    ??find_bianyan_424
        LDR.W    R0,??find_bianyan_336
        LDRB     R0,[R0, #+54]
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R1,??find_bianyan_417
        ADDS     R1,R8,R1
        LDRB     R1,[R1, #-24]
        ADDS     R0,R1,R0
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R1, #+54]
// 6840                 }
// 6841         }
// 6842          for(i=H-2;i>END;i--)
??find_bianyan_424:
        MOVS     R6,#+53
        B.N      ??find_bianyan_425
??find_bianyan_426:
        SUBS     R6,R6,#+1
??find_bianyan_425:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_427
// 6843          {
// 6844                  if(bianyan2[1][i]>=V-4)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_426
        B.N      ??find_bianyan_427
// 6845                  
// 6846          }
// 6847          for(;i>END;i--)
// 6848          {
// 6849                  if((center[i+1]+bianyan[0][i]-bianyan[0][i+1])<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 6850                  else 
// 6851                  {
// 6852                          for(;i>END;i--)center[i]=0;
??find_bianyan_428:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_429:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_428
// 6853                  }
??find_bianyan_430:
        SUBS     R6,R6,#+1
??find_bianyan_427:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_394
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_429
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_430
// 6854          }
// 6855       }
// 6856       
// 6857     }
// 6858   }
// 6859   if(bu1_number>0&&(bu2_number==0||(bu1_number-bu2_number)>15))
??find_bianyan_394:
        SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
        CMP      R11,#+1
        BLT.W    ??find_bianyan_431
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        CMP      R10,#+0
        BEQ.N    ??find_bianyan_432
        SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SUBS     R0,R11,R10
        CMP      R0,#+16
        BLT.W    ??find_bianyan_431
// 6860   {
// 6861     if(END<6)
??find_bianyan_432:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+6
        BGE.N    ??find_bianyan_433
// 6862     {
// 6863       for(i=END+15;i>END;i--)
        ADDS     R6,R8,#+15
        B.N      ??find_bianyan_434
??find_bianyan_435:
        SUBS     R6,R6,#+1
??find_bianyan_434:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_436
// 6864       {
// 6865         if(!(bianyan2[0][i]==bianyan[0][i]))break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_435
        B.N      ??find_bianyan_436
// 6866       }
// 6867       for(;i>END;i--)
// 6868       {
// 6869         if((center[i+1]+bianyan[1][i]-bianyan[1][i+1])>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 6870         else 
// 6871         {
// 6872           for(;i>END;i--)center[i]=0;
??find_bianyan_437:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_438:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_437
// 6873         }
??find_bianyan_439:
        SUBS     R6,R6,#+1
??find_bianyan_436:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_431
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_438
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_439
// 6874       }
// 6875     }
// 6876     else if(END<15)
??find_bianyan_433:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+15
        BGE.N    ??find_bianyan_440
// 6877     {
// 6878       for(i=END+20;i>END;i--)
        ADDS     R6,R8,#+20
        B.N      ??find_bianyan_441
??find_bianyan_442:
        SUBS     R6,R6,#+1
??find_bianyan_441:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_443
// 6879       {
// 6880         if((!(bianyan2[0][i]==bianyan[0][i]))||bianyan2[0][i]<2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_444
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_442
??find_bianyan_444:
        B.N      ??find_bianyan_443
// 6881       }
// 6882       for(;i>END;i--)
// 6883       {
// 6884         if((center[i+1]+bianyan[1][i]-bianyan[1][i+1])>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 6885         else 
// 6886         {
// 6887                 for(;i>END;i--)center[i]=0;
??find_bianyan_445:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_446:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_445
// 6888         }
??find_bianyan_447:
        SUBS     R6,R6,#+1
??find_bianyan_443:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_431
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_446
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_447
// 6889       }
// 6890     }
// 6891     else if(END<20)
??find_bianyan_440:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+20
        BGE.N    ??find_bianyan_448
// 6892     {
// 6893       for(i=END+25;i>END;i--)
        ADDS     R6,R8,#+25
        B.N      ??find_bianyan_449
??find_bianyan_450:
        SUBS     R6,R6,#+1
??find_bianyan_449:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_451
// 6894       {
// 6895         if((!(bianyan2[0][i]==bianyan[0][i]))||bianyan2[0][i]<2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_452
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_450
??find_bianyan_452:
        B.N      ??find_bianyan_451
// 6896       }
// 6897       for(;i>END;i--)
// 6898       {
// 6899         if((center[i+1]+bianyan[1][i]-bianyan[1][i+1])>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 6900         else 
// 6901         {
// 6902                 for(;i>END;i--)center[i]=0;
??find_bianyan_453:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_454:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_453
// 6903         }
??find_bianyan_455:
        SUBS     R6,R6,#+1
??find_bianyan_451:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_431
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_454
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_455
// 6904       }
// 6905     }
// 6906     else 
// 6907     {
// 6908       for(i=H-2;i>END;i--)
??find_bianyan_448:
        MOVS     R6,#+53
        B.N      ??find_bianyan_456
??find_bianyan_457:
        SUBS     R6,R6,#+1
??find_bianyan_456:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_458
// 6909       {
// 6910         if((!(bianyan2[0][i]==bianyan[0][i]))||bianyan2[0][i]<2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_459
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_457
??find_bianyan_459:
        B.N      ??find_bianyan_458
// 6911       }
// 6912       for(;i>END;i--)
// 6913       {
// 6914         if((center[i+1]+bianyan[1][i]-bianyan[1][i+1])>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 6915         else 
// 6916         {
// 6917                 for(;i>END;i--)center[i]=0;
??find_bianyan_460:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_461:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_460
// 6918         }
??find_bianyan_462:
        SUBS     R6,R6,#+1
??find_bianyan_458:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_431
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_461
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_462
// 6919       }
// 6920     }
// 6921   }
// 6922 	
// 6923   if((bu1_number==0||(bu2_number-bu1_number)>15)&&bu2_number>0)
??find_bianyan_431:
        SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
        CMP      R11,#+0
        BEQ.N    ??find_bianyan_463
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
        SUBS     R0,R10,R11
        CMP      R0,#+16
        BLT.W    ??find_bianyan_464
??find_bianyan_463:
        SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
        CMP      R10,#+1
        BLT.W    ??find_bianyan_464
// 6924   {
// 6925     if(END<6)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+6
        BGE.N    ??find_bianyan_465
// 6926     {
// 6927       for(i=END+15;i>END;i--)
        ADDS     R6,R8,#+15
        B.N      ??find_bianyan_466
??find_bianyan_467:
        SUBS     R6,R6,#+1
??find_bianyan_466:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_468
// 6928       {
// 6929         if(!(bianyan2[1][i]==bianyan[1][i]))break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_336
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_467
        B.N      ??find_bianyan_468
        DATA
??find_bianyan_336:
        DC32     bianyan2
        THUMB
// 6930       }
// 6931       for(;i>END;i--)
// 6932       {
// 6933         if((center[i+1]+bianyan[0][i]-bianyan[0][i+1])<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 6934         else 
// 6935         {
// 6936                 for(;i>END;i--)center[i]=0;
??find_bianyan_469:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_470:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_469
// 6937         }
??find_bianyan_471:
        SUBS     R6,R6,#+1
??find_bianyan_468:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_464
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_470
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_471
// 6938       }
// 6939     }
// 6940     else if(END<15)
??find_bianyan_465:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+15
        BGE.N    ??find_bianyan_472
// 6941     {
// 6942       for(i=END+20;i>END;i--)
        ADDS     R6,R8,#+20
        B.N      ??find_bianyan_473
??find_bianyan_474:
        SUBS     R6,R6,#+1
??find_bianyan_473:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_475
// 6943       {
// 6944         if((!(bianyan2[1][i]==bianyan[1][i]))||bianyan2[1][i]>V-5)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_477
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_474
??find_bianyan_477:
        B.N      ??find_bianyan_475
// 6945       }
// 6946       for(;i>END;i--)
// 6947       {
// 6948         if((center[i+1]+bianyan[0][i]-bianyan[0][i+1])<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 6949         else 
// 6950         {
// 6951                 for(;i>END;i--)center[i]=0;
??find_bianyan_478:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_479:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_478
// 6952         }
??find_bianyan_480:
        SUBS     R6,R6,#+1
??find_bianyan_475:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_464
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_479
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_480
// 6953       }
// 6954     }
// 6955     else if(END<20)
??find_bianyan_472:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+20
        BGE.N    ??find_bianyan_481
// 6956     {
// 6957       for(i=END+25;i>END;i--)
        ADDS     R6,R8,#+25
        B.N      ??find_bianyan_482
??find_bianyan_483:
        SUBS     R6,R6,#+1
??find_bianyan_482:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_484
// 6958       {
// 6959         if((!(bianyan2[1][i]==bianyan[1][i]))||bianyan2[1][i]>V-5)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_485
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_483
??find_bianyan_485:
        B.N      ??find_bianyan_484
// 6960       }
// 6961       for(;i>END;i--)
// 6962       {
// 6963         if((center[i+1]+bianyan[0][i]-bianyan[0][i+1])<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 6964         else 
// 6965         {
// 6966                 for(;i>END;i--)center[i]=0;
??find_bianyan_486:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_487:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_486
// 6967         }
??find_bianyan_488:
        SUBS     R6,R6,#+1
??find_bianyan_484:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.W    ??find_bianyan_464
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_487
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??find_bianyan_386
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_344
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??find_bianyan_386
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_488
        DATA
??find_bianyan_344:
        DC32     bianyan
        THUMB
// 6968       }
// 6969     }
// 6970     else 
// 6971     {
// 6972       for(i=H-2;i>END;i--)
??find_bianyan_481:
        MOVS     R6,#+53
        B.N      ??find_bianyan_489
??find_bianyan_490:
        SUBS     R6,R6,#+1
??find_bianyan_489:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_491
// 6973       {
// 6974         if((!(bianyan2[1][i]==bianyan[1][i]))||bianyan2[1][i]>V-5)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_492
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+156
        BCC.N    ??find_bianyan_490
??find_bianyan_492:
        B.N      ??find_bianyan_491
        Nop      
        DATA
??find_bianyan_386:
        DC32     center
        THUMB
// 6975       }
// 6976       for(;i>END;i--)
// 6977       {
// 6978         if((center[i+1]+bianyan[0][i]-bianyan[0][i+1])<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 6979         else 
// 6980         {
// 6981                 for(;i>END;i--)center[i]=0;
??find_bianyan_493:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
??find_bianyan_494:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BLT.N    ??find_bianyan_493
// 6982         }
??find_bianyan_495:
        SUBS     R6,R6,#+1
??find_bianyan_491:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R8,R6
        BGE.N    ??find_bianyan_464
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable76
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_494
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable76
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable77
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_495
// 6983       }
// 6984     }
// 6985   }
// 6986   /*****************弯道的处理END*****************/
// 6987   /*****************长直弯与十字交叉快要出弯的识别与补线****************/
// 6988   m=0;
??find_bianyan_464:
        MOVS     R9,#+0
// 6989   if(shizi==0&&xu_xian2==0&&END<6)
        LDRSH    R0,[SP, #+28]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_496
        LDR.N    R0,??find_bianyan_393
        B.N      ??find_bianyan_497
        DATA
??find_bianyan_393:
        DC32     xu_xian2
        THUMB
??find_bianyan_497:
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.W    ??find_bianyan_496
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+6
        BGE.W    ??find_bianyan_496
// 6990   {
// 6991     if(bianyan[0][54]<2)
        LDR.W    R0,??DataTable76
        LDRB     R0,[R0, #+54]
        CMP      R0,#+2
        BCS.W    ??find_bianyan_498
// 6992     {
// 6993       for(i=H-1;i>=0;i--)
        MOVS     R6,#+54
        B.N      ??find_bianyan_499
??find_bianyan_500:
        SUBS     R6,R6,#+1
??find_bianyan_499:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_501
// 6994       {
// 6995               if(bianyan[0][i]>=2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCC.N    ??find_bianyan_500
        B.N      ??find_bianyan_501
// 6996       }
// 6997       for(;i>=0;i--)
??find_bianyan_502:
        SUBS     R6,R6,#+1
??find_bianyan_501:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_503
// 6998       {
// 6999               if(bianyan[0][i]<2)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_502
// 7000               {
// 7001                       m=i;
        MOV      R9,R6
// 7002                       break;
        B.N      ??find_bianyan_503
// 7003               }
// 7004       }
// 7005       for(;i>=0;i--)
??find_bianyan_504:
        SUBS     R6,R6,#+1
??find_bianyan_503:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_505
// 7006       {
// 7007               if(bianyan[0][i]>=2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCC.N    ??find_bianyan_504
// 7008       }
// 7009       if(m-i>15)
??find_bianyan_505:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R9,R6
        CMP      R0,#+16
        BLT.N    ??find_bianyan_498
// 7010       {
// 7011         for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_506
// 7012         {
// 7013                 if(!(bianyan2[1][n]==bianyan[1][n]))numx++;
??find_bianyan_507:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_508
        ADDS     R5,R5,#+1
// 7014         }
??find_bianyan_508:
        SUBS     R4,R4,#+1
??find_bianyan_506:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BLT.N    ??find_bianyan_507
// 7015         if(numx<5)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+5
        BGE.N    ??find_bianyan_498
// 7016         {
// 7017           for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_509
??find_bianyan_510:
        SUBS     R4,R4,#+1
??find_bianyan_509:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_498
// 7018           {
// 7019                   if(bianyan[1][n]-bianyan[1][n+1]<0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??find_bianyan_511
// 7020                   {
// 7021                      if(center[n+1]+bianyan[1][n]-bianyan[1][n+1]>=0)center[n]=center[n+1]+bianyan[1][n]-bianyan[1][n+1];
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_512
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_510
// 7022                      else
// 7023                      {
// 7024                              for(;n>=0;n--)center[n]=0;
??find_bianyan_513:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_512:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_513
// 7025                              break;
// 7026                      }
// 7027                   }
// 7028                   else
// 7029                   {
// 7030                     for(;n>=0;n--)
// 7031                     {
// 7032                       if(center[n+1]+center[n+1]-center[n+2]>=0)center[n]=center[n+1]+center[n+1]-center[n+2];
// 7033                       else
// 7034                       {
// 7035                               for(;n>=0;n--)center[n]=0;
// 7036                               
// 7037                       }
// 7038                     }
// 7039                }
// 7040           }
// 7041         }
// 7042       }
// 7043     }
// 7044     if(bianyan[0][54]>=2)
??find_bianyan_498:
        LDR.W    R0,??DataTable76
        LDRB     R0,[R0, #+54]
        CMP      R0,#+2
        BCC.W    ??find_bianyan_514
// 7045     {
// 7046       for(i=H-1;i>=0;i--)
        MOVS     R6,#+54
        B.N      ??find_bianyan_515
??find_bianyan_516:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_517:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_516
??find_bianyan_518:
        SUBS     R4,R4,#+1
??find_bianyan_511:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BMI.N    ??find_bianyan_510
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_517
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_518
??find_bianyan_519:
        SUBS     R6,R6,#+1
??find_bianyan_515:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_520
// 7047       {
// 7048               if(bianyan[0][i]<2)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_519
// 7049               {
// 7050                       m=i;
        MOV      R9,R6
// 7051                       break;
        B.N      ??find_bianyan_520
// 7052               }
// 7053       }
// 7054       for(;i>=0;i--)
??find_bianyan_521:
        SUBS     R6,R6,#+1
??find_bianyan_520:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_522
// 7055       {
// 7056               if(bianyan[0][i]>=2)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCC.N    ??find_bianyan_521
// 7057       }
// 7058       if(m-i>15)
??find_bianyan_522:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R9,R6
        CMP      R0,#+16
        BLT.N    ??find_bianyan_514
// 7059       {
// 7060         for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_523
// 7061         {
// 7062                 if(!(bianyan2[1][n]==bianyan[1][n]))numx++;
??find_bianyan_524:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_525
        ADDS     R5,R5,#+1
// 7063         }
??find_bianyan_525:
        SUBS     R4,R4,#+1
??find_bianyan_523:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BLT.N    ??find_bianyan_524
// 7064         if(numx<5)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+5
        BGE.N    ??find_bianyan_514
// 7065         {
// 7066           for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_526
??find_bianyan_527:
        SUBS     R4,R4,#+1
??find_bianyan_526:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_514
// 7067           {
// 7068             if(bianyan[1][n]-bianyan[1][n+1]<0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BPL.N    ??find_bianyan_528
// 7069             {
// 7070                if(center[n+1]+bianyan[1][n]-bianyan[1][n+1]>=0)center[n]=center[n+1]+bianyan[1][n]-bianyan[1][n+1];
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_529
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_527
// 7071            else
// 7072                {
// 7073                        for(;n>=0;n--)center[n]=0;
??find_bianyan_530:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_529:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_530
// 7074                        break;
// 7075                }
// 7076             }
// 7077             else
// 7078             {
// 7079                     for(;n>=0;n--)
// 7080                     {
// 7081                             if(center[n+1]+center[n+1]-center[n+2]>=0)center[n]=center[n+1]+center[n+1]-center[n+2];
// 7082                             else
// 7083                             {
// 7084                                     for(;n>=0;n--)center[n]=0;
// 7085                                     
// 7086                             }
// 7087                     }
// 7088             }
// 7089           }
// 7090         }
// 7091       }
// 7092     }
// 7093     m=0;
??find_bianyan_514:
        MOVS     R9,#+0
// 7094     numx=0;
        MOVS     R5,#+0
// 7095     if(bianyan[1][54]>V-4)
        LDR.W    R0,??DataTable76
        LDRB     R0,[R0, #+109]
        CMP      R0,#+157
        BCC.W    ??find_bianyan_531
// 7096     {
// 7097       for(i=H-1;i>=0;i--)
        MOVS     R6,#+54
        B.N      ??find_bianyan_532
??find_bianyan_533:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_534:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_533
??find_bianyan_535:
        SUBS     R4,R4,#+1
??find_bianyan_528:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BMI.N    ??find_bianyan_527
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_534
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_535
??find_bianyan_536:
        SUBS     R6,R6,#+1
??find_bianyan_532:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_537
// 7098       {
// 7099               if(bianyan[1][i]<=V-4)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCS.N    ??find_bianyan_536
        B.N      ??find_bianyan_537
// 7100       }
// 7101       for(;i>=0;i--)
??find_bianyan_538:
        SUBS     R6,R6,#+1
??find_bianyan_537:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_539
// 7102       {
// 7103               if(bianyan[1][i]>V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??find_bianyan_538
// 7104               {
// 7105                       m=i;
        MOV      R9,R6
// 7106                       break;
        B.N      ??find_bianyan_539
// 7107               }
// 7108       }
// 7109       for(;i>=0;i--)
??find_bianyan_540:
        SUBS     R6,R6,#+1
??find_bianyan_539:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_541
// 7110       {
// 7111               if(bianyan[1][i]<=V-4)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCS.N    ??find_bianyan_540
// 7112       }
// 7113       if(m-i>15)
??find_bianyan_541:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R9,R6
        CMP      R0,#+16
        BLT.N    ??find_bianyan_531
// 7114       {
// 7115         for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_542
// 7116         {
// 7117                 if(!(bianyan2[0][n]==bianyan[0][n]))numx++;
??find_bianyan_543:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??find_bianyan_476
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        LDRB     R1,[R4, R1]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_544
        ADDS     R5,R5,#+1
// 7118         }
??find_bianyan_544:
        SUBS     R4,R4,#+1
??find_bianyan_542:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BLT.N    ??find_bianyan_543
// 7119         if(numx<5)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+5
        BGE.N    ??find_bianyan_531
// 7120         {
// 7121                 for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_545
??find_bianyan_546:
        SUBS     R4,R4,#+1
??find_bianyan_545:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_531
// 7122                 {
// 7123                         if(bianyan[0][n]-bianyan[0][n+1]>0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??find_bianyan_547
// 7124                         {
// 7125                            if(center[n+1]+bianyan[0][n]-bianyan[0][n+1]<V)center[n]=center[n+1]+bianyan[0][n]-bianyan[0][n+1];
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        LDRB     R1,[R4, R1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_548
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        LDRB     R1,[R4, R1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_546
// 7126                            else
// 7127                            {
// 7128                                    for(;n>=0;n--)center[n]=0;
??find_bianyan_549:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_548:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_549
// 7129                                    break;
// 7130                            }
// 7131                         }
// 7132                         else
// 7133                         {
// 7134                                 for(;n>=0;n--)
// 7135                                 {
// 7136                                         if(center[n+1]+center[n+1]-center[n+2]<V)center[n]=center[n+1]+center[n+1]-center[n+2];
// 7137                                         else
// 7138                                         {
// 7139                                                 for(;n>=0;n--)center[n]=0;
// 7140                                                 
// 7141                                         }
// 7142                                 }
// 7143                         }
// 7144                 }
// 7145         }
// 7146       }
// 7147     }
// 7148     if(bianyan[1][54]<=V-4)
??find_bianyan_531:
        LDR.W    R0,??DataTable76
        LDRB     R0,[R0, #+109]
        CMP      R0,#+157
        BCS.W    ??find_bianyan_496
// 7149     {
// 7150       for(i=H-1;i>=0;i--)
        MOVS     R6,#+54
        B.N      ??find_bianyan_550
??find_bianyan_551:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_552:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_551
??find_bianyan_553:
        SUBS     R4,R4,#+1
??find_bianyan_547:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BMI.N    ??find_bianyan_546
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_552
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_553
??find_bianyan_554:
        SUBS     R6,R6,#+1
??find_bianyan_550:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_555
// 7151       {
// 7152               if(bianyan[1][i]>V-4)
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??find_bianyan_554
// 7153               {
// 7154                       m=i;
        MOV      R9,R6
// 7155                       break;
        B.N      ??find_bianyan_555
// 7156               }
// 7157       }
// 7158       for(;i>=0;i--)
??find_bianyan_556:
        SUBS     R6,R6,#+1
??find_bianyan_555:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_557
// 7159       {
// 7160               if(bianyan[0][i]<=V-4)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R6, R0]
        CMP      R0,#+157
        BCS.N    ??find_bianyan_556
// 7161       }
// 7162         if(m-i>15)
??find_bianyan_557:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SUBS     R0,R9,R6
        CMP      R0,#+16
        BLT.N    ??find_bianyan_496
// 7163         {
// 7164           for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_558
// 7165           {
// 7166                   if(!(bianyan2[0][n]==bianyan[0][n]))numx++;
??find_bianyan_559:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R0,??find_bianyan_476
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        LDRB     R1,[R4, R1]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_560
        ADDS     R5,R5,#+1
// 7167           }
??find_bianyan_560:
        SUBS     R4,R4,#+1
??find_bianyan_558:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BLT.N    ??find_bianyan_559
// 7168             if(numx<5)
        SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
        CMP      R5,#+5
        BGE.N    ??find_bianyan_496
// 7169             {
// 7170               for(n=m;n>i;n--)
        MOV      R4,R9
        B.N      ??find_bianyan_561
        Nop      
        DATA
??find_bianyan_417:
        DC32     mo_hu
        THUMB
??find_bianyan_562:
        SUBS     R4,R4,#+1
??find_bianyan_561:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_496
// 7171               {
// 7172                       if(bianyan[0][n]-bianyan[0][n+1]>0)
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+1
        BLT.N    ??find_bianyan_563
// 7173                       {
// 7174                          if(center[n+1]+bianyan[0][n]-bianyan[0][n+1]<V)center[n]=center[n+1]+bianyan[0][n]-bianyan[0][n+1];
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        LDRB     R1,[R4, R1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_564
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        LDRB     R1,[R4, R1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_562
// 7175                          else
// 7176                          {
// 7177                                  for(;n>=0;n--)center[n]=0;
??find_bianyan_565:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_564:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_565
// 7178                                  break;
// 7179                          }
// 7180                       }
// 7181                       else
// 7182                       {
// 7183                               for(;n>=0;n--)
// 7184                               {
// 7185                                       if(center[n+1]+center[n+1]-center[n+2]<V)center[n]=center[n+1]+center[n+1]-center[n+2];
// 7186                                       else
// 7187                                       {
// 7188                                               for(;n>=0;n--)center[n]=0;
// 7189                                               
// 7190                                       }
// 7191                               }
// 7192                       }
// 7193               }
// 7194             }
// 7195         }
// 7196       }
// 7197   }
// 7198     /*****************长直弯与十字交叉快要出弯的识别与补线END****************/
// 7199   if(END<8)
??find_bianyan_496:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+8
        BGE.W    ??find_bianyan_566
// 7200 	{
// 7201 		for(i=0;i<H;i++)
        MOVS     R6,#+0
        B.N      ??find_bianyan_567
??find_bianyan_568:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        SUBS     R4,R4,#+1
??find_bianyan_569:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BPL.N    ??find_bianyan_568
??find_bianyan_570:
        SUBS     R4,R4,#+1
??find_bianyan_563:
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R4,#+0
        BMI.N    ??find_bianyan_562
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        UXTAB    R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_569
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+1]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+1]
        ADDS     R0,R1,R0
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R1,??DataTable77
        STRB     R0,[R4, R1]
        B.N      ??find_bianyan_570
??find_bianyan_571:
        ADDS     R6,R6,#+1
??find_bianyan_567:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+55
        BGE.N    ??find_bianyan_572
// 7202 		{
// 7203 			if(center[i]>0)break;
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R6, R0]
        CMP      R0,#+1
        BCC.N    ??find_bianyan_571
// 7204 		}
// 7205 		for(m=H-3;m>i;m--)
??find_bianyan_572:
        MOVS     R9,#+52
        B.N      ??find_bianyan_573
??find_bianyan_574:
        SUBS     R9,R9,#+1
??find_bianyan_573:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R6,R9
        BGE.W    ??find_bianyan_575
// 7206 		{
// 7207 			chazhi_center_1=center[m]-center[m+1];
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable77
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R9,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+2]
// 7208 			chazhi_center_2=center[m+1]-center[m+2];
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R9,R0
        LDRB     R0,[R0, #+1]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R1,??DataTable77
        ADDS     R1,R9,R1
        LDRB     R1,[R1, #+2]
        SUBS     R0,R0,R1
        STRH     R0,[SP, #+0]
// 7209 			chazhi_center_1=abs(chazhi_center_1);
        LDRSH    R0,[SP, #+2]
        BL       abs
        STRH     R0,[SP, #+2]
// 7210 			chazhi_center_2=abs(chazhi_center_2);
        LDRSH    R0,[SP, #+0]
        BL       abs
        STRH     R0,[SP, #+0]
// 7211 			if((chazhi_center_1-chazhi_center_2)>8)
        LDRSH    R0,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        SUBS     R0,R0,R1
        CMP      R0,#+9
        BLT.N    ??find_bianyan_574
// 7212 			{
// 7213 				n_1=m;
        STRH     R9,[SP, #+22]
// 7214 				n=m;
        MOV      R4,R9
        B.N      ??find_bianyan_576
// 7215 				for(;n>i;n--)
??find_bianyan_577:
        SUBS     R4,R4,#+1
??find_bianyan_576:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_578
// 7216 				{
// 7217 					if((bianyan[0][n]==bianyan2[0][n])&&(bianyan[1][n]==bianyan2[1][n]))break;
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R4, R0]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R1,??find_bianyan_476
        LDRB     R1,[R4, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_577
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R4,R0
        LDRB     R0,[R0, #+55]
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        LDR.N    R1,??find_bianyan_476
        ADDS     R1,R4,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_577
// 7218 				}
// 7219 				for(m=m+1;m<H;m++)
??find_bianyan_578:
        ADDS     R9,R9,#+1
        B.N      ??find_bianyan_579
??find_bianyan_580:
        ADDS     R9,R9,#+1
??find_bianyan_579:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+55
        BGE.N    ??find_bianyan_581
// 7220 				{
// 7221 					if((bianyan[0][m]==bianyan2[0][m])&&(bianyan[1][m]==bianyan2[1][m]))break;
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.N    R1,??find_bianyan_476
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BNE.N    ??find_bianyan_580
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R9,R0
        LDRB     R0,[R0, #+55]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.N    R1,??find_bianyan_476
        ADDS     R1,R9,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BNE.N    ??find_bianyan_580
// 7222 				}
// 7223 				if(n>i&&(m-n)>1){LianJie_center(m,n);break;}
??find_bianyan_581:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        CMP      R6,R4
        BGE.N    ??find_bianyan_582
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SUBS     R0,R9,R4
        CMP      R0,#+2
        BLT.N    ??find_bianyan_582
        MOVS     R1,R4
        SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
        MOV      R0,R9
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
        B.N      ??find_bianyan_575
        Nop      
        DATA
??find_bianyan_476:
        DC32     bianyan2
        THUMB
// 7224 				else break;
// 7225 			}
// 7226 		}
// 7227 		if(n_1&&(m-n)==1)
??find_bianyan_582:
??find_bianyan_575:
        LDRSH    R0,[SP, #+22]
        CMP      R0,#+0
        BEQ.W    ??find_bianyan_566
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
        SUBS     R0,R9,R4
        CMP      R0,#+1
        BNE.W    ??find_bianyan_566
        B.N      ??find_bianyan_583
// 7228 		{
// 7229 			for(;m<H;m++)
// 7230 			{
// 7231 				if(!(bianyan2[0][m]==bianyan[0][m]))num_3++;
??find_bianyan_584:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable77_1
        LDRB     R0,[R9, R0]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R1,??DataTable76
        LDRB     R1,[R9, R1]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_585
        LDRH     R0,[SP, #+62]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+62]
// 7232                 if(!(bianyan2[1][m]==bianyan[1][m]))num_4++;
??find_bianyan_585:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R0,??DataTable77_1
        ADDS     R0,R9,R0
        LDRB     R0,[R0, #+55]
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        LDR.W    R1,??DataTable76
        ADDS     R1,R9,R1
        LDRB     R1,[R1, #+55]
        CMP      R0,R1
        BEQ.N    ??find_bianyan_586
        LDRH     R0,[SP, #+60]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+60]
// 7233 				
// 7234 			}
??find_bianyan_586:
        ADDS     R9,R9,#+1
??find_bianyan_583:
        SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
        CMP      R9,#+55
        BLT.N    ??find_bianyan_584
// 7235 			if(num_3<5&&num_4<5)
        LDRSH    R0,[SP, #+62]
        CMP      R0,#+5
        BGE.N    ??find_bianyan_566
        LDRSH    R0,[SP, #+60]
        CMP      R0,#+5
        BGE.N    ??find_bianyan_566
// 7236 			{
// 7237 				for(i=n_1;i<H;i++)
        LDRSH    R6,[SP, #+22]
        B.N      ??find_bianyan_587
// 7238 				{
// 7239                     if(bianyan[0][i]==0)num_5++;
??find_bianyan_588:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        LDRB     R0,[R6, R0]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_589
        LDRH     R0,[SP, #+32]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+32]
// 7240 					if(bianyan[1][i]>V-4)num_6++;
??find_bianyan_589:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??find_bianyan_590
        LDRH     R0,[SP, #+30]
        ADDS     R0,R0,#+1
        STRH     R0,[SP, #+30]
// 7241 				}
??find_bianyan_590:
        ADDS     R6,R6,#+1
??find_bianyan_587:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+55
        BLT.N    ??find_bianyan_588
// 7242 				if(num_5<num_6)
        LDRSH    R0,[SP, #+32]
        LDRSH    R1,[SP, #+30]
        CMP      R0,R1
        BGE.N    ??find_bianyan_591
// 7243 				{
// 7244 					if(num_6>6)
        LDRSH    R0,[SP, #+30]
        CMP      R0,#+7
        BLT.N    ??find_bianyan_591
// 7245 					{
// 7246 						LianJie_center((n_1+num_6/3),n_1);
        LDRSH    R1,[SP, #+22]
        LDRH     R0,[SP, #+22]
        LDRSH    R2,[SP, #+30]
        MOVS     R3,#+3
        SDIV     R2,R2,R3
        ADDS     R0,R2,R0
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 7247 					}
// 7248 				}
// 7249 				if(num_5>num_6)
??find_bianyan_591:
        LDRSH    R0,[SP, #+30]
        LDRSH    R1,[SP, #+32]
        CMP      R0,R1
        BGE.N    ??find_bianyan_566
// 7250 				{
// 7251 					if(num_5>6)
        LDRSH    R0,[SP, #+32]
        CMP      R0,#+7
        BLT.N    ??find_bianyan_566
// 7252 					{
// 7253                         LianJie_center((n_1+num_5/3),n_1);
        LDRSH    R1,[SP, #+22]
        LDRH     R0,[SP, #+22]
        LDRSH    R2,[SP, #+32]
        MOVS     R3,#+3
        SDIV     R2,R2,R3
        ADDS     R0,R2,R0
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       LianJie_center
// 7254 					}
// 7255 				}
// 7256 			}
// 7257 		}
// 7258 		
// 7259 	}
// 7260   END_0=END;
??find_bianyan_566:
        LDR.W    R0,??DataTable77_2
        STRH     R8,[R0, #+0]
// 7261   /*************十字交叉系统识别*************/
// 7262   if(shizi==0&&END<15)
        LDRSH    R0,[SP, #+28]
        CMP      R0,#+0
        BNE.N    ??find_bianyan_592
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+15
        BGE.N    ??find_bianyan_592
// 7263   {
// 7264     xie_shizi();
        BL       xie_shizi
// 7265     if(xie_shizi_flag_1==1||xie_shizi_flag_2==1)
        LDR.W    R0,??DataTable77_3
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??find_bianyan_593
        LDR.W    R0,??DataTable77_4
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??find_bianyan_592
// 7266     {
// 7267       END=END_Line;
??find_bianyan_593:
        LDR.W    R0,??DataTable77_5
        LDRSH    R8,[R0, #+0]
// 7268       END_0=END;
        LDR.W    R0,??DataTable77_2
        STRH     R8,[R0, #+0]
// 7269       xie_shizi_flag_1=0;
        LDR.W    R0,??DataTable77_3
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
// 7270       xie_shizi_flag_2=0;
        LDR.W    R0,??DataTable77_4
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
// 7271       END_Line=0;
        LDR.W    R0,??DataTable77_5
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
// 7272     }
// 7273   }
// 7274   /*************十字交叉系统识别END*************/
// 7275   /***************边沿倾斜过于严重的情况***************/
// 7276 	
// 7277   if(END<18)
??find_bianyan_592:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+18
        BGE.W    ??find_bianyan_594
// 7278   {
// 7279     if(END>12)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        CMP      R8,#+13
        BLT.W    ??find_bianyan_595
// 7280     {
// 7281       if(bianyan[0][END+1]>130)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        CMP      R0,#+131
        BCC.N    ??find_bianyan_596
// 7282       {
// 7283         if((bianyan[0][END+1]-bianyan[0][54])>100)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.W    R0,??DataTable76
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        LDR.N    R1,??DataTable76
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+101
        BLT.N    ??find_bianyan_596
// 7284         {
// 7285           for(i=53;i>=0;i--)
        MOVS     R6,#+53
        B.N      ??find_bianyan_597
// 7286           {
// 7287             if(bianyan[1][i]>V-4)
// 7288             {
// 7289               if(center[i+1]+bianyan[0][i]-bianyan[0][i+1]<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 7290               else
// 7291               {
// 7292                 for(;i>=0;i--)center[i]=0;
// 7293               }
// 7294             }
// 7295             else
// 7296             {
// 7297                     center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_598:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable76
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R1,??DataTable77
        STRB     R0,[R6, R1]
// 7298             }
??find_bianyan_599:
        SUBS     R6,R6,#+1
??find_bianyan_597:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_596
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable76
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??find_bianyan_598
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.W    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_600
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_599
??find_bianyan_600:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_599
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_600
// 7299           }
// 7300         }
// 7301       }
// 7302       if(bianyan[1][END+1]<30)
??find_bianyan_596:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.N    R0,??DataTable76
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+56]
        CMP      R0,#+30
        BCS.W    ??find_bianyan_594
// 7303       {
// 7304         if((bianyan[1][END+1]-bianyan[1][54])<-100)
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.N    R0,??DataTable76
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+56]
        LDR.N    R1,??DataTable76
        LDRB     R1,[R1, #+109]
        SUBS     R0,R0,R1
        CMN      R0,#+100
        BGE.W    ??find_bianyan_594
// 7305         {
// 7306           for(i=53;i>=0;i--)
        MOVS     R6,#+53
        B.N      ??find_bianyan_601
// 7307           {
// 7308             if(bianyan[0][i]<2)
// 7309             {
// 7310               if(center[i+1]+bianyan[1][i]-bianyan[1][i+1]>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 7311               else
// 7312               {
// 7313                 for(;i>=0;i--)center[i]=0;
// 7314               }
// 7315             }
// 7316             else
// 7317             {
// 7318                     center[i]=(bianyan[1][i]+bianyan[0][i])/2;
??find_bianyan_602:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable76
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        STRB     R0,[R6, R1]
// 7319             }
??find_bianyan_603:
        SUBS     R6,R6,#+1
??find_bianyan_601:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.W    ??find_bianyan_594
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable76
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_602
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_604
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_603
??find_bianyan_604:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_603
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_604
// 7320           }
// 7321         }
// 7322       }
// 7323     }
// 7324     else
// 7325     {
// 7326       if((bianyan[0][END+1]-bianyan[0][54])>100)
??find_bianyan_595:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.N    R0,??DataTable76
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+1]
        LDR.N    R1,??DataTable76
        LDRB     R1,[R1, #+54]
        SUBS     R0,R0,R1
        CMP      R0,#+101
        BLT.N    ??find_bianyan_605
// 7327       {
// 7328         for(i=53;i>=0;i--)
        MOVS     R6,#+53
        B.N      ??find_bianyan_606
// 7329         {
// 7330           if(bianyan[1][i]>V-4)
// 7331           {
// 7332             if(center[i+1]+bianyan[0][i]-bianyan[0][i+1]<V)center[i]=center[i+1]+bianyan[0][i]-bianyan[0][i+1];
// 7333             else
// 7334             {
// 7335                     for(;i>=0;i--)center[i]=0;
// 7336             }
// 7337           }
// 7338           else
// 7339           {
// 7340                   center[i]=(bianyan[0][i]+bianyan[1][i])/2;
??find_bianyan_607:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable76
        LDRB     R0,[R6, R0]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        STRB     R0,[R6, R1]
// 7341           }
??find_bianyan_608:
        SUBS     R6,R6,#+1
??find_bianyan_606:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_605
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable76
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        CMP      R0,#+157
        BCC.N    ??find_bianyan_607
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+160
        BGE.N    ??find_bianyan_609
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        LDRB     R1,[R6, R1]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_608
??find_bianyan_609:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_608
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_609
// 7342         }
// 7343       }
// 7344       if((bianyan[1][END+1]-bianyan[1][54])<-100)
??find_bianyan_605:
        SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
        LDR.N    R0,??DataTable76
        ADDS     R0,R8,R0
        LDRB     R0,[R0, #+56]
        LDR.N    R1,??DataTable76
        LDRB     R1,[R1, #+109]
        SUBS     R0,R0,R1
        CMN      R0,#+100
        BGE.N    ??find_bianyan_594
// 7345       {
// 7346         for(i=53;i>=0;i--)
        MOVS     R6,#+53
        B.N      ??find_bianyan_610
// 7347         {
// 7348           if(bianyan[0][i]<2)
// 7349           {
// 7350             if(center[i+1]+bianyan[1][i]-bianyan[1][i+1]>=0)center[i]=center[i+1]+bianyan[1][i]-bianyan[1][i+1];
// 7351             else
// 7352             {
// 7353                     for(;i>=0;i--)center[i]=0;
// 7354             }
// 7355           }
// 7356           else
// 7357           {
// 7358                   center[i]=(bianyan[1][i]+bianyan[0][i])/2;
??find_bianyan_611:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable76
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+55]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        LDRB     R1,[R6, R1]
        UXTAB    R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        STRB     R0,[R6, R1]
// 7359           }
??find_bianyan_612:
        SUBS     R6,R6,#+1
??find_bianyan_610:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_594
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable76
        LDRB     R0,[R6, R0]
        CMP      R0,#+2
        BCS.N    ??find_bianyan_611
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        UXTAB    R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        CMP      R0,#+0
        BMI.N    ??find_bianyan_613
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        ADDS     R0,R6,R0
        LDRB     R0,[R0, #+1]
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+55]
        ADDS     R0,R1,R0
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable76
        ADDS     R1,R6,R1
        LDRB     R1,[R1, #+56]
        SUBS     R0,R0,R1
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R1,??DataTable77
        STRB     R0,[R6, R1]
        B.N      ??find_bianyan_612
??find_bianyan_613:
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        CMP      R6,#+0
        BMI.N    ??find_bianyan_612
        SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
        LDR.N    R0,??DataTable77
        MOVS     R1,#+0
        STRB     R1,[R6, R0]
        SUBS     R6,R6,#+1
        B.N      ??find_bianyan_613
// 7360         }
// 7361       }
// 7362     }
// 7363   }
// 7364   /***************边沿倾斜过于严重的情况END***************/
// 7365   /********************************************
// 7366   *踩线补线有漏洞导致最后一个点center[0]被漏掉了
// 7367   *故在这里补上,为避免麻烦这里我们就使用上一次的
// 7368   *边沿位置值
// 7369   
// 7370   *********************************************/
// 7371   if(center[1])
??find_bianyan_594:
        LDR.N    R0,??DataTable77
        LDRB     R0,[R0, #+1]
        CMP      R0,#+0
        BEQ.N    ??find_bianyan_614
// 7372   {
// 7373     if(bianyan[0][0]&&bianyan[1][0])
        LDR.N    R0,??DataTable76
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??find_bianyan_614
        LDR.N    R0,??DataTable76
        LDRB     R0,[R0, #+55]
        CMP      R0,#+0
        BEQ.N    ??find_bianyan_614
// 7374     {
// 7375       bianyan[1][0]=bianyan[1][1];
        LDR.N    R0,??DataTable76
        LDR.N    R1,??DataTable76
        LDRB     R1,[R1, #+56]
        STRB     R1,[R0, #+55]
// 7376       bianyan[0][0]=bianyan[0][1];
        LDR.N    R0,??DataTable76
        LDRB     R0,[R0, #+1]
        LDR.N    R1,??DataTable76
        STRB     R0,[R1, #+0]
// 7377       bianyan2[1][0]=bianyan[1][1];
        LDR.N    R0,??DataTable77_1
        LDR.N    R1,??DataTable76
        LDRB     R1,[R1, #+56]
        STRB     R1,[R0, #+55]
// 7378       bianyan2[0][0]=bianyan[0][1];
        LDR.N    R0,??DataTable76
        LDRB     R0,[R0, #+1]
        LDR.N    R1,??DataTable77_1
        STRB     R0,[R1, #+0]
// 7379       center[0]=(bianyan[1][0]+bianyan[0][0])/2;
        LDR.N    R0,??DataTable76
        LDRB     R0,[R0, #+55]
        LDR.N    R1,??DataTable76
        LDRB     R1,[R1, #+0]
        ADDS     R0,R1,R0
        MOVS     R1,#+2
        SDIV     R0,R0,R1
        LDR.N    R1,??DataTable77
        STRB     R0,[R1, #+0]
// 7380     }
// 7381   }
// 7382 }
??find_bianyan_614:
        ADD      SP,SP,#+132
        POP      {R4-R11,PC}      ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable76:
        DC32     bianyan
// 7383 
// 7384 
// 7385 /********************************************************
// 7386 *坡道的判断
// 7387 *2013.3.24
// 7388 *name：潘杰
// 7389 *********************************************************/

        SECTION `.text`:CODE:NOROOT(1)
        THUMB
// 7390 void judge_ramp(uint8 k)
// 7391 {
// 7392   if(k==20&&topline==0)//(k==9||k==20)
judge_ramp:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+20
        BNE.N    ??judge_ramp_0
        LDR.N    R0,??DataTable77_6
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??judge_ramp_0
// 7393   {
// 7394     
// 7395     if((bianyan[1][0]-bianyan[0][0])>35&&(bianyan[1][0]-bianyan[0][0])<60)
        LDR.N    R0,??DataTable77_7
        LDRB     R0,[R0, #+55]
        LDR.N    R1,??DataTable77_7
        LDRB     R1,[R1, #+0]
        SUBS     R0,R0,R1
        CMP      R0,#+36
        BLT.N    ??judge_ramp_0
        LDR.N    R0,??DataTable77_7
        LDRB     R0,[R0, #+55]
        LDR.N    R1,??DataTable77_7
        LDRB     R1,[R1, #+0]
        SUBS     R0,R0,R1
        CMP      R0,#+60
        BGE.N    ??judge_ramp_0
// 7396     {
// 7397       if((bianyan[1][1]-bianyan[0][1])>35&&(bianyan[1][1]-bianyan[0][1])<60)
        LDR.N    R0,??DataTable77_7
        LDRB     R0,[R0, #+56]
        LDR.N    R1,??DataTable77_7
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+36
        BLT.N    ??judge_ramp_0
        LDR.N    R0,??DataTable77_7
        LDRB     R0,[R0, #+56]
        LDR.N    R1,??DataTable77_7
        LDRB     R1,[R1, #+1]
        SUBS     R0,R0,R1
        CMP      R0,#+60
        BGE.N    ??judge_ramp_0
// 7398       {
// 7399         ramp_flag=1;
        LDR.W    R0,??DataTable78
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
// 7400       }
// 7401     }
// 7402   }
// 7403   
// 7404 }
??judge_ramp_0:
        BX       LR               ;; return

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable77:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable77_1:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable77_2:
        DC32     END_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable77_3:
        DC32     xie_shizi_flag_1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable77_4:
        DC32     xie_shizi_flag_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable77_5:
        DC32     END_Line

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable77_6:
        DC32     topline

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable77_7:
        DC32     bianyan
// 7405 
// 7406 /************************主函数****************************/
// 7407 

        SECTION `.text`:CODE:NOROOT(2)
        THUMB
// 7408 void main(void)
// 7409 {  
main:
        PUSH     {R4-R11,LR}
        SUB      SP,SP,#+124
// 7410   uint8 start_xian_3=0;
        MOVS     R4,#+0
// 7411   int16 track[30]={-1},track_2[30]={0},track_number=0;
        ADD      R0,SP,#+64
        LDR.W    R1,??DataTable78_1
        MOVS     R2,#+60
        BL       __aeabi_memcpy4
        ADD      R0,SP,#+4
        MOVS     R1,#+60
        BL       __aeabi_memclr4
        MOVS     R7,#+0
// 7412   uint8 j=0,j_num=0;
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
// 7413   uint8 m=0;
        MOVS     R9,#+0
// 7414   uint8 P_stop=0;//停车关速度控制标志位
        MOVS     R0,#+0
        STRB     R0,[SP, #+2]
// 7415   int park=-100,xu_xian2_P=-100;
        MVNS     R8,#+99
        MVNS     R6,#+99
// 7416   uint8 i,Hong_Wai=0,direct=0,LCD_begin=0;
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
        MOVS     R0,#+0
        STRB     R0,[SP, #+1]
        MOVS     R0,#+0
        STRB     R0,[SP, #+3]
// 7417   int8 judge=0,set=0;       
        MOVS     R0,#+0
        STRB     R0,[SP, #+0]
        MOVS     R10,#+0
// 7418   int16  exspeed=0,pwm_speed=0;
        MOVS     R5,#+0
        MOVS     R11,#+0
// 7419   DisableInterrupts;
        CPSID i         
// 7420   pllinit180M();
        BL       pllinit180M
// 7421   IO_Init();
        BL       IO_Init
// 7422   LCD_Init();  
        BL       LCD_Init
// 7423   hw_FTM1_init();
        BL       hw_FTM1_init
// 7424   hw_FTM0_init();
        BL       hw_FTM0_init
// 7425   FTM2_QUAD_Init();
        BL       FTM2_QUAD_Init
// 7426   JIANPAN_ini();
        BL       JIANPAN_ini
// 7427   CH451_ini();
        BL       CH451_ini
// 7428   CH451_WriteCommand(CH451_BCD);
        MOV      R0,#+1408
        BL       CH451_WriteCommand
// 7429   speed_Very_straight=70;speed_top=60;speed_b=50;speed_m=40;speed_s=30 ;speed_ms=80;
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+60
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+50
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+40
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+30
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+80
        STRH     R1,[R0, #+0]
// 7430   LCD_P6x8Str(0,0,"speed");     //英文字符串显示
        LDR.W    R2,??DataTable78_8
        MOVS     R1,#+0
        MOVS     R0,#+0
        BL       LCD_P6x8Str
// 7431   Car_Speed();
        BL       Car_Speed
// 7432   switch(car_speed)
        LDR.W    R0,??DataTable78_9
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??main_0
        CMP      R0,#+2
        BEQ.N    ??main_1
        BCC.N    ??main_2
        CMP      R0,#+4
        BEQ.W    ??main_3
        BCC.N    ??main_4
        CMP      R0,#+6
        BEQ.W    ??main_5
        BCC.W    ??main_6
        CMP      R0,#+8
        BEQ.W    ??main_7
        BCC.W    ??main_8
        CMP      R0,#+10
        BEQ.W    ??main_9
        BCC.W    ??main_10
        CMP      R0,#+12
        BEQ.W    ??main_11
        BCC.W    ??main_12
        CMP      R0,#+14
        BEQ.W    ??main_13
        BCC.W    ??main_14
        CMP      R0,#+16
        BEQ.W    ??main_15
        BCC.W    ??main_16
        CMP      R0,#+18
        BEQ.W    ??main_17
        BCC.W    ??main_18
        CMP      R0,#+19
        BEQ.W    ??main_19
        B.N      ??main_20
// 7433   {
// 7434   case 0:speed_Very_straight=90;speed_top=90;speed_b=90;speed_m=90;speed_s=90; speed_ms=70;break;
??main_0:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7435   case 1:speed_Very_straight=110;speed_top=100;speed_b=90;speed_m=80;speed_s=75; speed_ms=70 ;break;
??main_2:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+110
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+80
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+75
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7436   case 2:speed_Very_straight=113;speed_top=103;speed_b=93;speed_m=83;speed_s=78; speed_ms=70 ;break;
??main_1:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+113
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+103
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+93
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+83
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+78
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7437   case 3:speed_Very_straight=115;speed_top=105;speed_b=95;speed_m=85;speed_s=80; speed_ms=70 ;break;
??main_4:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+115
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+105
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+85
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+80
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7438   case 4:speed_Very_straight=118;speed_top=108;speed_b=98;speed_m=88;speed_s=82; speed_ms=70 ;break;
??main_3:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+118
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+108
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+98
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+88
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+82
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7439   case 5:speed_Very_straight=122;speed_top=108;speed_b=98;speed_m=88;speed_s=82; speed_ms=70 ;break;
??main_6:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+122
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+108
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+98
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+88
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+82
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7440   case 6:speed_Very_straight=124;speed_top=110;speed_b=100;speed_m=90;speed_s=84; speed_ms=70 ;break;
??main_5:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+124
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+110
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+84
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7441   case 7:speed_Very_straight=124;speed_top=110;speed_b=102;speed_m=92;speed_s=86; speed_ms=70 ;break;
??main_8:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+124
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+110
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+102
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+92
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+86
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7442   case 8:speed_Very_straight=125;speed_top=112;speed_b=104;speed_m=94;speed_s=88; speed_ms=70 ;break;
??main_7:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+125
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+112
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+104
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+94
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+88
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7443   case 9:speed_Very_straight=125;speed_top=114;speed_b=106;speed_m=96;speed_s=90; speed_ms=70 ;break;
??main_10:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+125
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+114
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+106
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+96
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+90
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7444   case 10:speed_Very_straight=125;speed_top=116;speed_b=108;speed_m=94;speed_s=88; speed_ms=70 ;break;
??main_9:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+125
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+116
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+108
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+94
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+88
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7445   case 11:speed_Very_straight=125;speed_top=112;speed_b=102;speed_m=92;speed_s=86; speed_ms=70 ;break;
??main_12:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+125
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+112
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+102
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+92
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+86
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7446   case 12:speed_Very_straight=115;speed_top=112;speed_b=102;speed_m=92;speed_s=86; speed_ms=70 ;break;
??main_11:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+115
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+112
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+102
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+92
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+86
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7447   case 13:speed_Very_straight=93;speed_top=93;speed_b=93;speed_m=93;speed_s=93; speed_ms=70;break;
??main_14:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+93
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+93
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+93
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+93
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+93
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7448   case 14:speed_Very_straight=103;speed_top=99;speed_b=97;speed_m=95;speed_s=93; speed_ms=70;break;
??main_13:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+103
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+99
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+97
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+93
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7449   case 15:speed_Very_straight=103;speed_top=100;speed_b=98;speed_m=96;speed_s=94; speed_ms=70;break;
??main_16:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+103
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+98
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+96
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+94
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7450   case 16:speed_Very_straight=106;speed_top=103;speed_b=101;speed_m=99;speed_s=97; speed_ms=70;break;
??main_15:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+106
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+103
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+101
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+99
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+97
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7451   case 17:speed_Very_straight=110;speed_top=106;speed_b=103;speed_m=100;speed_s=97; speed_ms=70;break;
??main_18:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+110
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+106
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+103
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+97
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7452   case 18:speed_Very_straight=95;speed_top=95;speed_b=95;speed_m=95;speed_s=95; speed_ms=70;break;
??main_17:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+95
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7453   case 19:speed_Very_straight=100;speed_top=100;speed_b=100;speed_m=100;speed_s=100; speed_ms=70;break;
??main_19:
        LDR.W    R0,??DataTable78_2
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_3
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_4
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_5
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_6
        MOVS     R1,#+100
        STRH     R1,[R0, #+0]
        LDR.W    R0,??DataTable78_7
        MOVS     R1,#+70
        STRH     R1,[R0, #+0]
        B.N      ??main_20
// 7454   }
// 7455   while(KeyValue!=50)
// 7456   {
// 7457     KeyValue=50;
??main_21:
        LDR.W    R0,??DataTable78_10
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
// 7458     CH451_GetKeyValue();
        BL       CH451_GetKeyValue
// 7459   }
??main_20:
        LDR.W    R0,??DataTable78_10
        LDRB     R0,[R0, #+0]
        CMP      R0,#+50
        BNE.N    ??main_21
// 7460   /****************1直接发车，不调节PD，，，2调节PD后发车*******************/
// 7461   while(!direct)
??main_22:
        LDRB     R0,[SP, #+1]
        CMP      R0,#+0
        BNE.N    ??main_23
// 7462   {
// 7463     LCD_P6x8Str(0,1,"TJorFC");     //英文字符串显示      
        LDR.W    R2,??DataTable78_11
        MOVS     R1,#+1
        MOVS     R0,#+0
        BL       LCD_P6x8Str
// 7464     CH451_GetKeyValue();
        BL       CH451_GetKeyValue
// 7465     switch(KeyValue)
        LDR.W    R0,??DataTable78_10
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_24
        CMP      R0,#+2
        BEQ.N    ??main_25
        CMP      R0,#+5
        BEQ.N    ??main_26
        B.N      ??main_22
// 7466     {
// 7467     case 1:
// 7468       LCD_P6x8Str(40,1,"FC");     //英文字符串显示      
??main_24:
        ADR.N    R2,??main_27     ;; 0x46, 0x43, 0x00, 0x00
        MOVS     R1,#+1
        MOVS     R0,#+40
        BL       LCD_P6x8Str
        B.N      ??main_28
// 7469       while(KeyValue==1)
// 7470       {
// 7471         KeyValue=50;
??main_29:
        LDR.W    R0,??DataTable78_10
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
// 7472         CH451_GetKeyValue();
        BL       CH451_GetKeyValue
// 7473       }
??main_28:
        LDR.W    R0,??DataTable78_10
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_29
// 7474       direct=1;
        MOVS     R0,#+1
        STRB     R0,[SP, #+1]
// 7475       break;
        B.N      ??main_22
// 7476     case 2:
// 7477       LCD_P6x8Str(40,1,"TJ");     //英文字符串显示      
??main_25:
        ADR.N    R2,??main_27+0x4  ;; 0x54, 0x4A, 0x00, 0x00
        MOVS     R1,#+1
        MOVS     R0,#+40
        BL       LCD_P6x8Str
        B.N      ??main_30
// 7478       while(KeyValue==2)
// 7479       {
// 7480         KeyValue=50;
??main_31:
        LDR.W    R0,??DataTable78_10
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
// 7481         CH451_GetKeyValue();
        BL       CH451_GetKeyValue
// 7482       }
??main_30:
        LDR.W    R0,??DataTable78_10
        LDRB     R0,[R0, #+0]
        CMP      R0,#+2
        BEQ.N    ??main_31
// 7483       LCD_P6x8Str(0,2,"sai_dao_number");     //英文字符串显示  
        LDR.W    R2,??DataTable78_12
        MOVS     R1,#+2
        MOVS     R0,#+0
        BL       LCD_P6x8Str
// 7484       Duo_Ji_PD();
        BL       Duo_Ji_PD
// 7485       LCD_P6x8Str(58,1,"FC");     //英文字符串显示  
        ADR.N    R2,??main_27     ;; 0x46, 0x43, 0x00, 0x00
        MOVS     R1,#+1
        MOVS     R0,#+58
        BL       LCD_P6x8Str
// 7486       direct=1;
        MOVS     R0,#+1
        STRB     R0,[SP, #+1]
// 7487       break;
        B.N      ??main_22
// 7488     case 5:
// 7489       LCD_P6x8Str(76,0,"LCDgo_on");     //英文字符串显示      
??main_26:
        LDR.W    R2,??DataTable78_13
        MOVS     R1,#+0
        MOVS     R0,#+76
        BL       LCD_P6x8Str
        B.N      ??main_32
// 7490       while(KeyValue==5)
// 7491       {
// 7492         KeyValue=50;
??main_33:
        LDR.W    R0,??DataTable78_10
        MOVS     R1,#+50
        STRB     R1,[R0, #+0]
// 7493         CH451_GetKeyValue();
        BL       CH451_GetKeyValue
// 7494       }
??main_32:
        LDR.W    R0,??DataTable78_10
        LDRB     R0,[R0, #+0]
        CMP      R0,#+5
        BEQ.N    ??main_33
// 7495       LCD_begin=1;
        MOVS     R0,#+1
        STRB     R0,[SP, #+3]
// 7496       break;
        B.N      ??main_22
// 7497        
// 7498     }
// 7499   }
// 7500   /****************1直接发车，不调节PD，，，2调节PD后发车end*******************/
// 7501         
// 7502        
// 7503   enable_irq (87);//使能A口中断 ，A24场中断
??main_23:
        MOVS     R0,#+87
        BL       enable_irq
// 7504   UART0_Init();
        BL       UART0_Init
// 7505   DMA0_Init();
        BL       DMA0_Init
// 7506   //hw_pit_init(1,16000);         //pit1中断初始化
// 7507   //enable_irq(89);             //开c9口红外遥控停车中断
// 7508   //enable_pit_interrupt(1);    //使能PIT1中断，，，用于红外计数
// 7509   delays(2);              //延时发车
        MOVS     R0,#+2
        BL       delays
// 7510   LCD_CLS();
        BL       LCD_CLS
// 7511   
// 7512   hw_pit_init(PIT2,5000000);//100ms
        LDR.W    R1,??DataTable78_14  ;; 0x4c4b40
        MOVS     R0,#+2
        BL       hw_pit_init
// 7513   enable_pit_interrupt(PIT2);
        MOVS     R0,#+2
        BL       enable_pit_interrupt
// 7514   
// 7515   EnableInterrupts;
        CPSIE i         
        B.N      ??main_34
// 7516   for(;;) 
// 7517   {	
// 7518     //GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(26));
// 7519     //GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(28));//用于观看处理时间的 
// 7520     /*if(T_P28==250)T_P28=0;
// 7521     //秒加1
// 7522     if(++T_P28%2) GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(28));//IO口输出高电平，灭	;//秒数加1
// 7523     else      GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(28));//LED亮*/
// 7524     
// 7525     //GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(28));//用于观看处理时间的 
// 7526     //GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(26));
// 7527     //GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(28));
// 7528     
// 7529     if(finish==1)
// 7530     { //GPIOA_PDOR=GPIOA_PDOR^(GPIO_PDOR_PDO(GPIO_PIN(26)));//对引脚某位进行取反操作
// 7531       //GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(28));//用于观看处理时间的
// 7532       //GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(26));
// 7533       find_bianyan();  //找两边黑线
// 7534       if(P_timer<30||P_timer>170)Start_Line();
// 7535       X_LineBend();
// 7536       //m=judge_locus_0();
// 7537       //if(m!=20)center_filter();//加权平均法使中心线变得平滑
// 7538       center_filter();
// 7539       m=judge_locus_0();
// 7540       sai_dao_lei_xing=m;
// 7541       //judge_ramp(m);//检测坡道
// 7542       /************再次检测起始线以免是起始线误判成不是*************/
// 7543       if(start_18_25_2==1||start_25_35_2==1||start_35_45_2==1||start_45_55_2==1)
// 7544       {
// 7545         if(m==20)
// 7546         {
// 7547           start_xian_3=1;
// 7548         }
// 7549       }
// 7550       if(start_xian_3==0)
// 7551       {
// 7552         if(start_line2==1&&sai_dao_lei_xing==20)start_xian_3=1;
// 7553       }
// 7554       if(start_xian==1&&m!=20)start_xian=0;
// 7555 	/************再次检测起始线以免是起始线误判成不是*END************/
// 7556       /****************停车控制***************/
// 7557       if(xu_xian2_P==-100)          //如果检测到虚线，那么在检测到虚线后的1s内不让车停车
// 7558       {
// 7559         if(xu_xian2==1)
// 7560         {
// 7561           xu_xian2_P=P_timer;
// 7562         }
// 7563       }
// 7564       if(P_timer==xu_xian2_P+10)xu_xian2_P=-100;
// 7565       if(P_timer<30||xu_xian2_P!=-100){start_xian=0;start_xian_3=0;}//发车，只检测，不停车||m!=9||m!=20
// 7566       /*************记录最近30场的赛道类型*************/
// 7567       if(track_number==30)track_number=0;
// 7568       if(ramp_flag==1)track_2[track_number]=40;                    //40在这里代表坡道
// 7569       if(start_xian==1) track_2[track_number]=100;             //100在这里表示采集到了起始线
// 7570       if(start_xian!=1&&start_xian_3==1) track_2[track_number]=80;//80代表有可能是起始线
// 7571       if(xu_xian2==1)track_2[track_number]=60;                     //60代表是虚线
// 7572       
// 7573       if(start_xian!=1&&start_xian_3!=1&&xu_xian2!=1&&ramp_flag!=1)track_2[track_number]=0;
// 7574       track[track_number]=m;
// 7575       track_number++;
// 7576       
// 7577       /*************记录最近30场的赛道类型END*************/
// 7578       /*************是否停车的判断**************
// 7579       *我的停车判断方法：看最近5场的图像类型  肯定是起始线100，可能是起始线80
// 7580       *1,一场肯定是起始线的，就判定为起始线
// 7581       *2，两场以上可能是起始线的，就判定为起始线
// 7582       *3，
// 7583       *4，
// 7584       *****************************************/
// 7585       if(park==-100)
// 7586       {
// 7587         if(track_2[track_number-1]==100)
// 7588         {
// 7589           start_xian==0;
// 7590           park=P_timer;
// 7591         }
// 7592         if(track_2[track_number-1]==80)
// 7593         {
// 7594           uint8 start_num_3=0;
// 7595           if(track_number==1)
// 7596           {
// 7597             if(track_2[29]==80)start_num_3++;
// 7598             if(track_2[28]==80)start_num_3++;
// 7599             if(track_2[27]==80)start_num_3++;
// 7600             if(track_2[26]==80)start_num_3++;
// 7601           }
// 7602           if(track_number==2)
// 7603           {
// 7604             if(track_2[0]==80)start_num_3++;
// 7605             if(track_2[29]==80)start_num_3++;
// 7606             if(track_2[28]==80)start_num_3++;
// 7607             if(track_2[27]==80)start_num_3++;
// 7608           }
// 7609           if(track_number==3)
// 7610           {
// 7611             if(track_2[1]==80)start_num_3++;
// 7612             if(track_2[0]==80)start_num_3++;
// 7613             if(track_2[29]==80)start_num_3++;
// 7614             if(track_2[28]==80)start_num_3++;
// 7615           }
// 7616           if(track_number==4)
// 7617           {
// 7618             if(track_2[2]==80)start_num_3++;
// 7619             if(track_2[1]==80)start_num_3++;
// 7620             if(track_2[0]==80)start_num_3++;
// 7621             if(track_2[29]==80)start_num_3++;
// 7622           }
// 7623           if(track_number>4)
// 7624           {
// 7625             if(track_2[track_number-2]==80)start_num_3++;
// 7626             if(track_2[track_number-3]==80)start_num_3++;
// 7627             if(track_2[track_number-4]==80)start_num_3++;
// 7628             if(track_2[track_number-5]==80)start_num_3++;
// 7629           }
// 7630           if(start_num_3>=1)
// 7631           {
// 7632             park=P_timer;
// 7633           }
// 7634         }
// 7635       }
// 7636     
// 7637       if(P_timer==park+3)
// 7638       {
// 7639         P_stop=1;
// 7640         //park=-100;
// 7641       }
// 7642       if(P_stop==1)
// 7643       {
// 7644         //FTM0_C3V=0;
// 7645         if(pulse>20)
// 7646         {
// 7647           FTM0_C0V=375;          //300   停车倒转
// 7648           FTM0_C3V=0;
// 7649         }
// 7650         else
// 7651         {
// 7652           FTM0_C3V=0;
// 7653           FTM0_C0V=0;
// 7654           FTM0_C1V=0;
// 7655         }
// 7656       }
// 7657       
// 7658       if(P_timer==park+13)    //    停车倒转
// 7659       {
// 7660         FTM0_C3V=0;
// 7661         FTM0_C0V=0;
// 7662         FTM0_C1V=0;
// 7663         park=-100;
// 7664       }
// 7665       
// 7666       /*************是否停车的判断*END*************/
// 7667       /****************停车控制END***************/
// 7668       /**************稳定在很直的长直道判断***************/
// 7669       if(track[track_number-1]==20)
// 7670       {
// 7671         if(track_number==1)
// 7672         {
// 7673           if(track[29]==20&&track[28]==20)Very_straight=1;
// 7674           
// 7675         }
// 7676         else if(track_number==2)
// 7677         {
// 7678           if(track[0]==20&&track[29]==20)Very_straight=1;
// 7679         }
// 7680         else 
// 7681         {
// 7682           if(track[track_number-2]==20&&track[track_number-3]==20&&track[track_number-4]==20)Very_straight=1;;
// 7683         }
// 7684       }
// 7685       /**************稳定在很直的长直道判断***************/            
// 7686     set=choose_PD();  
// 7687     //judge=Judge_Locus();
// 7688     //ceshi_duoji();
// 7689     //set=Set_Direction();
// 7690     
// 7691     
// 7692     //if(set==1)get_speed();
// 7693     
// 7694     if(P_stop==0)
// 7695     {
// 7696       if(P_timer<10)pwm_speed=50;//发车前1.3s给满占空比，使其快速发车
// 7697       else
// 7698       {
// 7699         if(Very_straight==0)
// 7700         {
// 7701           exspeed=speed_control();
// 7702         }
// 7703         if(Very_straight==1)
// 7704         {
// 7705           Very_straight=0;
// 7706           exspeed=speed_Very_straight;
// 7707         }
// 7708         pwm_speed=Motor_control(exspeed);
// 7709       }
// 7710       //if(duo_ji_ok) pwm_speed=80;
// 7711       //FTM0_C3V=100;
// 7712       //FTM0_C0V=0;
// 7713       set_speed(pwm_speed);
// 7714     }
// 7715     //GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(26));
// 7716     hw_pit_init(PIT0,800000);//20ms,1200000,30ms,1800000  注意这个初始化一定要放在大的for循环里面，使用定时器，这样才是在固定的时间里面得到的脉冲数
// 7717     enable_pit_interrupt(PIT0);
// 7718     //uart_send1(UART0,55-topline);
// 7719     //uart_send1(UART0,Servo_value);
// 7720     //uart_send1(UART0,track_2[track_number-1]);
// 7721     //uart_send1(UART0,pulse);
// 7722     //uart_send1(UART0,exspeed);
// 7723     //get_irkey();                 //红外停车
// 7724     //if(irkey==1)FTM0_C1V=0;
// 7725     
// 7726     /********************LCD数据显示模块*********************/
// 7727     CH451_GetKeyValue();
// 7728     if(KeyValue==10||LCD_begin==1)           //LCD_begin==1
// 7729     {
// 7730       if(LCD_P1==250)LCD_P1=0;
// 7731                     //秒加1
// 7732                   
// 7733       if(++LCD_P1%10)
// 7734       {
// 7735         LCD_CLS();                     
// 7736         LCD_P6x8Str(1,0,"low_0");     //英文字符串显示
// 7737         LCD_P6x8Str_3(45,0,low_now_0);
// 7738         if(low_now)LCD_P6x8Str_1(70,0,low_0);    //如果存在的话就显示，不存在的话就不显示
// 7739         LCD_P6x8Str_3(90,0,m);//显示赛道类型
// 7740         LCD_P6x8Str(1,1,"mid_0");     //英文字符串显示
// 7741         LCD_P6x8Str_3(45,1,mid_now_0);
// 7742         if(mid_now)LCD_P6x8Str_1(70,1,mid_0);
// 7743         LCD_P6x8Str(1,2,"high_0");     //英文字符串显示
// 7744         LCD_P6x8Str_3(45,2,high_now_0);
// 7745         if(high_now)LCD_P6x8Str_1(70,2,high_0);
// 7746         LCD_P6x8Str(1,3,"position_now");     //英文字符串显示
// 7747         LCD_P6x8Str_3(75,3,position_now);
// 7748         LCD_P6x8Str(1,4,"position_diff");     //英文字符串显示
// 7749         LCD_P6x8Str_FuHao_3(88,4,position_diff);
// 7750         LCD_P6x8Str(1,5,"position_now_low");     //英文字符串显示
// 7751         LCD_P6x8Str_FuHao_3(100,5,position_now_low);
// 7752         //LCD_P6x8Str(1,5,"Servo_value");     //英文字符串显示Servo_value
// 7753         //LCD_P6x8Str_5(70,5,Servo_value);
// 7754         //LCD_P6x8Str_3(1,6,start_xian);
// 7755         //LCD_P6x8Str_3(20,6,start_xian_3);
// 7756         //LCD_P6x8Str_3(40,6,ramp_flag);
// 7757         
// 7758         //LCD_P6x8Str_3(60,6,topline);
// 7759         //LCD_P6x8Str(1,7,"pwm_speed");     //英文字符串显示
// 7760         //LCD_P6x8Str_3(58,7,pwm_speed);
// 7761         //LCD_P6x8Str_3(80,7,pulse);
// 7762       }
// 7763     }
// 7764     if(KeyValue==6)
// 7765     {
// 7766       if(LCD_P3==250)LCD_P3=0;
// 7767       if(++LCD_P3%10)
// 7768       {
// 7769         LCD_CLS();
// 7770         //LCD_P6x8Str_3(1,2,d1_1);
// 7771         //LCD_P6x8Str_3(1,3,d1_2);
// 7772         //LCD_P6x8Str_3(1,4,d2_1);
// 7773         //LCD_P6x8Str_3(1,5,d2_2);
// 7774         for(i=0;i<H-1;i++)
// 7775         {
// 7776            LCD_PutPixel(center[i],i);
// 7777         }
// 7778        }
// 7779      }
// 7780                   
// 7781       /***************对一些变量进行清零****************/
// 7782       position_now_low=0;
// 7783       position_now=0;
// 7784       position_diff=0;
// 7785       xie_shizi_flag_1=0;
// 7786       xie_shizi_flag_2=0;
// 7787       xie_shizi_flag_3=0;   //用来表示只找到一个拐点的
// 7788       xu_xian2=0;
// 7789       xu1=0;
// 7790       xu2=0;
// 7791       xu3=0;
// 7792       xu4=0;   
// 7793       for(i=0;i<H;i++)
// 7794       {
// 7795         bianyan2[0][i]=0;
// 7796         bianyan[0][i]=0;
// 7797         bianyan2[1][i]=0;
// 7798         bianyan[1][i]=0;
// 7799         center[i]=0;
// 7800       }
// 7801       for(i=0;i<142;i++)BW4[i]=0;
// 7802       for(i=0;i<82;i++)BW3[i]=0;
// 7803       for(i=0;i<122;i++)BW2[i]=0;
// 7804       for(i=0;i<102;i++)BW[i]=0;
??main_35:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.W    R0,??DataTable78_15
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        ADDS     R4,R4,#+1
??main_36:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+102
        BCC.N    ??main_35
// 7805       start_18_25_2=0;
        LDR.W    R0,??DataTable78_16
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7806       start_25_35_2=0;
        LDR.W    R0,??DataTable78_17
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7807       start_35_45_2=0;
        LDR.W    R0,??DataTable78_18
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7808       start_45_55_2=0;
        LDR.W    R0,??DataTable78_19
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7809       start_xian_3=0;
        MOVS     R4,#+0
// 7810       start_line2=0;
        LDR.W    R0,??DataTable78_20
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7811       ramp_flag=0;
        LDR.W    R0,??DataTable78
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
// 7812       finish=0;
        LDR.W    R0,??DataTable78_21
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
??main_34:
        LDR.W    R0,??DataTable78_21
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_34
        BL       find_bianyan
        LDR.W    R0,??DataTable78_22
        LDR      R0,[R0, #+0]
        CMP      R0,#+30
        BLT.N    ??main_37
        LDR.W    R0,??DataTable78_22
        LDR      R0,[R0, #+0]
        CMP      R0,#+171
        BLT.N    ??main_38
??main_37:
        BL       Start_Line
??main_38:
        BL       X_LineBend
        BL       center_filter
        BL       judge_locus_0
        MOV      R9,R0
        LDR.W    R0,??DataTable78_23
        STRB     R9,[R0, #+0]
        LDR.W    R0,??DataTable78_16
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_39
        LDR.W    R0,??DataTable78_17
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_39
        LDR.W    R0,??DataTable78_18
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_39
        LDR.W    R0,??DataTable78_19
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_40
??main_39:
        UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
        CMP      R9,#+20
        BNE.N    ??main_40
        MOVS     R4,#+1
??main_40:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+0
        BNE.N    ??main_41
        LDR.W    R0,??DataTable78_20
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_41
        LDR.W    R0,??DataTable78_23
        LDRB     R0,[R0, #+0]
        CMP      R0,#+20
        BNE.N    ??main_41
        MOVS     R4,#+1
??main_41:
        LDR.W    R0,??DataTable78_24
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_42
        UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
        CMP      R9,#+20
        BEQ.N    ??main_42
        LDR.W    R0,??DataTable78_24
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
??main_42:
        CMN      R6,#+100
        BNE.N    ??main_43
        LDR.W    R0,??DataTable78_25
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_43
        LDR.W    R0,??DataTable78_22
        LDR      R6,[R0, #+0]
??main_43:
        LDR.W    R0,??DataTable78_22
        LDR      R0,[R0, #+0]
        ADDS     R1,R6,#+10
        CMP      R0,R1
        BNE.N    ??main_44
        MVNS     R6,#+99
??main_44:
        LDR.W    R0,??DataTable78_22
        LDR      R0,[R0, #+0]
        CMP      R0,#+30
        BLT.N    ??main_45
        CMN      R6,#+100
        BEQ.N    ??main_46
??main_45:
        LDR.W    R0,??DataTable78_24
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        MOVS     R4,#+0
??main_46:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+30
        BNE.N    ??main_47
        MOVS     R7,#+0
??main_47:
        LDR.W    R0,??DataTable78
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_48
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+4
        MOVS     R1,#+40
        STRH     R1,[R0, R7, LSL #+1]
??main_48:
        LDR.W    R0,??DataTable78_24
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_49
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+4
        MOVS     R1,#+100
        STRH     R1,[R0, R7, LSL #+1]
??main_49:
        LDR.W    R0,??DataTable78_24
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_50
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BNE.N    ??main_50
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+4
        MOVS     R1,#+80
        STRH     R1,[R0, R7, LSL #+1]
??main_50:
        LDR.W    R0,??DataTable78_25
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_51
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+4
        MOVS     R1,#+60
        STRH     R1,[R0, R7, LSL #+1]
??main_51:
        LDR.W    R0,??DataTable78_24
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_52
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+1
        BEQ.N    ??main_52
        LDR.W    R0,??DataTable78_25
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_52
        LDR.W    R0,??DataTable78
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BEQ.N    ??main_52
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+4
        MOVS     R1,#+0
        STRH     R1,[R0, R7, LSL #+1]
??main_52:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+64
        UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
        STRH     R9,[R0, R7, LSL #+1]
        ADDS     R7,R7,#+1
        CMN      R8,#+100
        BNE.W    ??main_53
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+4
        ADDS     R0,R0,R7, LSL #+1
        LDRSH    R0,[R0, #-2]
        CMP      R0,#+100
        BNE.N    ??main_54
        LDR.W    R0,??DataTable78_24
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??main_55
        MOVS     R0,#+1
        B.N      ??main_56
        DATA
??main_27:
        DC8      0x46, 0x43, 0x00, 0x00
        DC8      0x54, 0x4A, 0x00, 0x00
        THUMB
??main_55:
        MOVS     R0,#+0
??main_56:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        LDR.W    R0,??DataTable78_22
        LDR      R8,[R0, #+0]
??main_54:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+4
        ADDS     R0,R0,R7, LSL #+1
        LDRSH    R0,[R0, #-2]
        CMP      R0,#+80
        BNE.W    ??main_53
        MOVS     R0,#+0
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BNE.N    ??main_57
        LDRSH    R1,[SP, #+62]
        CMP      R1,#+80
        BNE.N    ??main_58
        ADDS     R0,R0,#+1
??main_58:
        LDRSH    R1,[SP, #+60]
        CMP      R1,#+80
        BNE.N    ??main_59
        ADDS     R0,R0,#+1
??main_59:
        LDRSH    R1,[SP, #+58]
        CMP      R1,#+80
        BNE.N    ??main_60
        ADDS     R0,R0,#+1
??main_60:
        LDRSH    R1,[SP, #+56]
        CMP      R1,#+80
        BNE.N    ??main_57
        ADDS     R0,R0,#+1
??main_57:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BNE.N    ??main_61
        LDRSH    R1,[SP, #+4]
        CMP      R1,#+80
        BNE.N    ??main_62
        ADDS     R0,R0,#+1
??main_62:
        LDRSH    R1,[SP, #+62]
        CMP      R1,#+80
        BNE.N    ??main_63
        ADDS     R0,R0,#+1
??main_63:
        LDRSH    R1,[SP, #+60]
        CMP      R1,#+80
        BNE.N    ??main_64
        ADDS     R0,R0,#+1
??main_64:
        LDRSH    R1,[SP, #+58]
        CMP      R1,#+80
        BNE.N    ??main_61
        ADDS     R0,R0,#+1
??main_61:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+3
        BNE.N    ??main_65
        LDRSH    R1,[SP, #+6]
        CMP      R1,#+80
        BNE.N    ??main_66
        ADDS     R0,R0,#+1
??main_66:
        LDRSH    R1,[SP, #+4]
        CMP      R1,#+80
        BNE.N    ??main_67
        ADDS     R0,R0,#+1
??main_67:
        LDRSH    R1,[SP, #+62]
        CMP      R1,#+80
        BNE.N    ??main_68
        ADDS     R0,R0,#+1
??main_68:
        LDRSH    R1,[SP, #+60]
        CMP      R1,#+80
        BNE.N    ??main_65
        ADDS     R0,R0,#+1
??main_65:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+4
        BNE.N    ??main_69
        LDRSH    R1,[SP, #+8]
        CMP      R1,#+80
        BNE.N    ??main_70
        ADDS     R0,R0,#+1
??main_70:
        LDRSH    R1,[SP, #+6]
        CMP      R1,#+80
        BNE.N    ??main_71
        ADDS     R0,R0,#+1
??main_71:
        LDRSH    R1,[SP, #+4]
        CMP      R1,#+80
        BNE.N    ??main_72
        ADDS     R0,R0,#+1
??main_72:
        LDRSH    R1,[SP, #+62]
        CMP      R1,#+80
        BNE.N    ??main_69
        ADDS     R0,R0,#+1
??main_69:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+5
        BLT.N    ??main_73
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+4
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #-4]
        CMP      R1,#+80
        BNE.N    ??main_74
        ADDS     R0,R0,#+1
??main_74:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+4
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #-6]
        CMP      R1,#+80
        BNE.N    ??main_75
        ADDS     R0,R0,#+1
??main_75:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+4
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #-8]
        CMP      R1,#+80
        BNE.N    ??main_76
        ADDS     R0,R0,#+1
??main_76:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R1,SP,#+4
        ADDS     R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #-10]
        CMP      R1,#+80
        BNE.N    ??main_73
        ADDS     R0,R0,#+1
??main_73:
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        CMP      R0,#+1
        BCC.N    ??main_53
        LDR.W    R0,??DataTable78_22
        LDR      R8,[R0, #+0]
??main_53:
        LDR.W    R0,??DataTable78_22
        LDR      R0,[R0, #+0]
        ADDS     R1,R8,#+3
        CMP      R0,R1
        BNE.N    ??main_77
        MOVS     R0,#+1
        STRB     R0,[SP, #+2]
??main_77:
        LDRB     R0,[SP, #+2]
        CMP      R0,#+1
        BNE.N    ??main_78
        LDR.W    R0,??DataTable78_26
        LDRH     R0,[R0, #+0]
        CMP      R0,#+21
        BCC.N    ??main_79
        LDR.W    R0,??DataTable78_27  ;; 0x40038010
        MOVW     R1,#+375
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable78_28  ;; 0x40038028
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        B.N      ??main_78
??main_79:
        LDR.W    R0,??DataTable78_28  ;; 0x40038028
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable78_27  ;; 0x40038010
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable78_29  ;; 0x40038018
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
??main_78:
        LDR.W    R0,??DataTable78_22
        LDR      R0,[R0, #+0]
        ADDS     R1,R8,#+13
        CMP      R0,R1
        BNE.N    ??main_80
        LDR.W    R0,??DataTable78_28  ;; 0x40038028
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable78_27  ;; 0x40038010
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.W    R0,??DataTable78_29  ;; 0x40038018
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        MVNS     R8,#+99
??main_80:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+64
        ADDS     R0,R0,R7, LSL #+1
        LDRSH    R0,[R0, #-2]
        CMP      R0,#+20
        BNE.N    ??main_81
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+1
        BNE.N    ??main_82
        LDRSH    R0,[SP, #+122]
        CMP      R0,#+20
        BNE.N    ??main_81
        LDRSH    R0,[SP, #+120]
        CMP      R0,#+20
        BNE.N    ??main_81
        LDR.W    R0,??DataTable78_30
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
        B.N      ??main_81
??main_82:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        CMP      R7,#+2
        BNE.N    ??main_83
        LDRSH    R0,[SP, #+64]
        CMP      R0,#+20
        BNE.N    ??main_81
        LDRSH    R0,[SP, #+122]
        CMP      R0,#+20
        BNE.N    ??main_81
        LDR.W    R0,??DataTable78_30
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
        B.N      ??main_81
??main_83:
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+64
        ADDS     R0,R0,R7, LSL #+1
        LDRSH    R0,[R0, #-4]
        CMP      R0,#+20
        BNE.N    ??main_81
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+64
        ADDS     R0,R0,R7, LSL #+1
        LDRSH    R0,[R0, #-6]
        CMP      R0,#+20
        BNE.N    ??main_81
        SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
        ADD      R0,SP,#+64
        ADDS     R0,R0,R7, LSL #+1
        LDRSH    R0,[R0, #-8]
        CMP      R0,#+20
        BNE.N    ??main_81
        LDR.N    R0,??DataTable78_30
        MOVS     R1,#+1
        STRB     R1,[R0, #+0]
??main_81:
        BL       choose_PD
        MOV      R10,R0
        LDRB     R0,[SP, #+2]
        CMP      R0,#+0
        BNE.N    ??main_84
        LDR.N    R0,??DataTable78_22
        LDR      R0,[R0, #+0]
        CMP      R0,#+10
        BGE.N    ??main_85
        MOVS     R11,#+50
        B.N      ??main_86
??main_85:
        LDR.N    R0,??DataTable78_30
        LDRB     R0,[R0, #+0]
        CMP      R0,#+0
        BNE.N    ??main_87
        BL       speed_control
        MOVS     R5,R0
??main_87:
        LDR.N    R0,??DataTable78_30
        LDRB     R0,[R0, #+0]
        CMP      R0,#+1
        BNE.N    ??main_88
        LDR.N    R0,??DataTable78_30
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_2
        LDRSH    R5,[R0, #+0]
??main_88:
        MOVS     R0,R5
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       Motor_control
        MOV      R11,R0
??main_86:
        MOV      R0,R11
        SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
        BL       set_speed
??main_84:
        LDR.N    R1,??DataTable78_31  ;; 0xc3500
        MOVS     R0,#+0
        BL       hw_pit_init
        MOVS     R0,#+0
        BL       enable_pit_interrupt
        BL       CH451_GetKeyValue
        LDR.N    R0,??DataTable78_10
        LDRB     R0,[R0, #+0]
        CMP      R0,#+10
        BEQ.N    ??main_89
        LDRB     R0,[SP, #+3]
        CMP      R0,#+1
        BNE.W    ??main_90
??main_89:
        LDR.N    R0,??DataTable78_32
        LDRB     R0,[R0, #+0]
        CMP      R0,#+250
        BNE.N    ??main_91
        LDR.N    R0,??DataTable78_32
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
??main_91:
        LDR.N    R0,??DataTable78_32
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??DataTable78_32
        STRB     R0,[R1, #+0]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R1,#+10
        SDIV     R2,R0,R1
        MLS      R0,R1,R2,R0
        CMP      R0,#+0
        BEQ.N    ??main_90
        BL       LCD_CLS
        LDR.N    R2,??DataTable78_33
        MOVS     R1,#+0
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable78_34
        LDRSH    R2,[R0, #+0]
        MOVS     R1,#+0
        MOVS     R0,#+45
        BL       LCD_P6x8Str_3
        LDR.N    R0,??DataTable78_35
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??main_92
        LDR.N    R0,??DataTable78_36
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+0
        MOVS     R0,#+70
        BL       LCD_P6x8Str_1
??main_92:
        UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
        MOV      R2,R9
        SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
        MOVS     R1,#+0
        MOVS     R0,#+90
        BL       LCD_P6x8Str_3
        LDR.N    R2,??DataTable78_37
        MOVS     R1,#+1
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable78_38
        LDRSH    R2,[R0, #+0]
        MOVS     R1,#+1
        MOVS     R0,#+45
        BL       LCD_P6x8Str_3
        LDR.N    R0,??DataTable78_39
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??main_93
        LDR.N    R0,??DataTable78_40
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+1
        MOVS     R0,#+70
        BL       LCD_P6x8Str_1
??main_93:
        LDR.N    R2,??DataTable78_41
        MOVS     R1,#+2
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable78_42
        LDRSH    R2,[R0, #+0]
        MOVS     R1,#+2
        MOVS     R0,#+45
        BL       LCD_P6x8Str_3
        LDR.N    R0,??DataTable78_43
        LDRSH    R0,[R0, #+0]
        CMP      R0,#+0
        BEQ.N    ??main_94
        LDR.N    R0,??DataTable78_44
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+2
        MOVS     R0,#+70
        BL       LCD_P6x8Str_1
??main_94:
        LDR.N    R2,??DataTable78_45
        MOVS     R1,#+3
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable78_46
        LDRSH    R2,[R0, #+0]
        MOVS     R1,#+3
        MOVS     R0,#+75
        BL       LCD_P6x8Str_3
        LDR.N    R2,??DataTable78_47
        MOVS     R1,#+4
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable78_48
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+4
        MOVS     R0,#+88
        BL       LCD_P6x8Str_FuHao_3
        LDR.N    R2,??DataTable78_49
        MOVS     R1,#+5
        MOVS     R0,#+1
        BL       LCD_P6x8Str
        LDR.N    R0,??DataTable78_50
        LDRH     R2,[R0, #+0]
        SXTB     R2,R2            ;; SignExt  R2,R2,#+24,#+24
        MOVS     R1,#+5
        MOVS     R0,#+100
        BL       LCD_P6x8Str_FuHao_3
??main_90:
        LDR.N    R0,??DataTable78_10
        LDRB     R0,[R0, #+0]
        CMP      R0,#+6
        BNE.N    ??main_95
        LDR.N    R0,??DataTable78_51
        LDRB     R0,[R0, #+0]
        CMP      R0,#+250
        BNE.N    ??main_96
        LDR.N    R0,??DataTable78_51
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
??main_96:
        LDR.N    R0,??DataTable78_51
        LDRB     R0,[R0, #+0]
        ADDS     R0,R0,#+1
        LDR.N    R1,??DataTable78_51
        STRB     R0,[R1, #+0]
        UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
        MOVS     R1,#+10
        SDIV     R2,R0,R1
        MLS      R0,R1,R2,R0
        CMP      R0,#+0
        BEQ.N    ??main_95
        BL       LCD_CLS
        MOVS     R4,#+0
        B.N      ??main_97
??main_98:
        MOVS     R1,R4
        UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable78_52
        LDRB     R0,[R4, R0]
        BL       LCD_PutPixel
        ADDS     R4,R4,#+1
??main_97:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+54
        BCC.N    ??main_98
??main_95:
        LDR.N    R0,??DataTable78_50
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_46
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_48
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_53
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_54
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_55
        MOVS     R1,#+0
        STRH     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_25
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_56
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_57
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_58
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        LDR.N    R0,??DataTable78_59
        MOVS     R1,#+0
        STRB     R1,[R0, #+0]
        MOVS     R4,#+0
        B.N      ??main_99
??main_100:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable78_60
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable78_61
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable78_60
        ADDS     R0,R4,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+55]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable78_61
        ADDS     R0,R4,R0
        MOVS     R1,#+0
        STRB     R1,[R0, #+55]
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable78_52
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        ADDS     R4,R4,#+1
??main_99:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+55
        BCC.N    ??main_100
        MOVS     R4,#+0
        B.N      ??main_101
??main_102:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable78_62
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        ADDS     R4,R4,#+1
??main_101:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+142
        BCC.N    ??main_102
        MOVS     R4,#+0
        B.N      ??main_103
??main_104:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable78_63
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        ADDS     R4,R4,#+1
??main_103:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+82
        BCC.N    ??main_104
        MOVS     R4,#+0
        B.N      ??main_105
??main_106:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        LDR.N    R0,??DataTable78_64
        MOVS     R1,#+0
        STRB     R1,[R4, R0]
        ADDS     R4,R4,#+1
??main_105:
        UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
        CMP      R4,#+122
        BCC.N    ??main_106
        MOVS     R4,#+0
        B.N      ??main_36
// 7813       /***************对一些变量进行清零END****************/
// 7814     // GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(28));
// 7815       /********************LCD数据显示模块end*********************/
// 7816       
// 7817     }
// 7818   }	
// 7819 	//return 0;
// 7820 }

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78:
        DC32     ramp_flag

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_1:
        DC32     `?<Constant {-1}>`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_2:
        DC32     speed_Very_straight

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_3:
        DC32     speed_top

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_4:
        DC32     speed_b

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_5:
        DC32     speed_m

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_6:
        DC32     speed_s

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_7:
        DC32     speed_ms

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_8:
        DC32     `?<Constant "speed">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_9:
        DC32     car_speed

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_10:
        DC32     KeyValue

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_11:
        DC32     `?<Constant "TJorFC">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_12:
        DC32     `?<Constant "sai_dao_number">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_13:
        DC32     `?<Constant "LCDgo_on">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_14:
        DC32     0x4c4b40

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_15:
        DC32     BW

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_16:
        DC32     start_18_25_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_17:
        DC32     start_25_35_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_18:
        DC32     start_35_45_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_19:
        DC32     start_45_55_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_20:
        DC32     start_line2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_21:
        DC32     finish

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_22:
        DC32     P_timer

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_23:
        DC32     sai_dao_lei_xing

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_24:
        DC32     start_xian

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_25:
        DC32     xu_xian2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_26:
        DC32     pulse

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_27:
        DC32     0x40038010

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_28:
        DC32     0x40038028

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_29:
        DC32     0x40038018

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_30:
        DC32     Very_straight

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_31:
        DC32     0xc3500

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_32:
        DC32     LCD_P1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_33:
        DC32     `?<Constant "low_0">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_34:
        DC32     low_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_35:
        DC32     low_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_36:
        DC32     low_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_37:
        DC32     `?<Constant "mid_0">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_38:
        DC32     mid_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_39:
        DC32     mid_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_40:
        DC32     mid_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_41:
        DC32     `?<Constant "high_0">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_42:
        DC32     high_now_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_43:
        DC32     high_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_44:
        DC32     high_0

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_45:
        DC32     `?<Constant "position_now">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_46:
        DC32     position_now

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_47:
        DC32     `?<Constant "position_diff">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_48:
        DC32     position_diff

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_49:
        DC32     `?<Constant "position_now_low">`

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_50:
        DC32     position_now_low

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_51:
        DC32     LCD_P3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_52:
        DC32     center

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_53:
        DC32     xie_shizi_flag_1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_54:
        DC32     xie_shizi_flag_2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_55:
        DC32     xie_shizi_flag_3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_56:
        DC32     xu1

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_57:
        DC32     xu2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_58:
        DC32     xu3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_59:
        DC32     xu4

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_60:
        DC32     bianyan2

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_61:
        DC32     bianyan

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_62:
        DC32     BW4

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_63:
        DC32     BW3

        SECTION `.text`:CODE:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
??DataTable78_64:
        DC32     BW2

        SECTION `.iar_vfe_header`:DATA:REORDER:NOALLOC:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
        DC32 0

        SECTION __DLIB_PERTHREAD:DATA:REORDER:NOROOT(0)
        SECTION_TYPE SHT_PROGBITS, 0

        SECTION __DLIB_PERTHREAD_init:DATA:REORDER:NOROOT(0)
        SECTION_TYPE SHT_PROGBITS, 0

        END
// 7821 /************************主函数END****************************/
// 7822 
// 
// 10 116 bytes in section .bss
//    101 bytes in section .data
//  1 052 bytes in section .rodata
// 50 622 bytes in section .text
// 
// 50 622 bytes of CODE  memory
//  1 052 bytes of CONST memory
// 10 217 bytes of DATA  memory
//
//Errors: none
//Warnings: 255
